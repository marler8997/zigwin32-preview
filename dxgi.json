{
"constants": [
     {
         "name": "DXGI_USAGE_SHADER_INPUT"
        ,"type": {"kind":"UInt32"}
        ,"value": 16
    }
    ,{
         "name": "DXGI_USAGE_RENDER_TARGET_OUTPUT"
        ,"type": {"kind":"UInt32"}
        ,"value": 32
    }
    ,{
         "name": "DXGI_USAGE_BACK_BUFFER"
        ,"type": {"kind":"UInt32"}
        ,"value": 64
    }
    ,{
         "name": "DXGI_USAGE_SHARED"
        ,"type": {"kind":"UInt32"}
        ,"value": 128
    }
    ,{
         "name": "DXGI_USAGE_READ_ONLY"
        ,"type": {"kind":"UInt32"}
        ,"value": 256
    }
    ,{
         "name": "DXGI_USAGE_DISCARD_ON_PRESENT"
        ,"type": {"kind":"UInt32"}
        ,"value": 512
    }
    ,{
         "name": "DXGI_USAGE_UNORDERED_ACCESS"
        ,"type": {"kind":"UInt32"}
        ,"value": 1024
    }
    ,{
         "name": "DXGI_RESOURCE_PRIORITY_MINIMUM"
        ,"type": {"kind":"UInt32"}
        ,"value": 671088640
    }
    ,{
         "name": "DXGI_RESOURCE_PRIORITY_LOW"
        ,"type": {"kind":"UInt32"}
        ,"value": 1342177280
    }
    ,{
         "name": "DXGI_RESOURCE_PRIORITY_NORMAL"
        ,"type": {"kind":"UInt32"}
        ,"value": 2013265920
    }
    ,{
         "name": "DXGI_RESOURCE_PRIORITY_HIGH"
        ,"type": {"kind":"UInt32"}
        ,"value": 2684354560
    }
    ,{
         "name": "DXGI_RESOURCE_PRIORITY_MAXIMUM"
        ,"type": {"kind":"UInt32"}
        ,"value": 3355443200
    }
    ,{
         "name": "DXGI_MAP_READ"
        ,"type": {"kind":"UInt32"}
        ,"value": 1
    }
    ,{
         "name": "DXGI_MAP_WRITE"
        ,"type": {"kind":"UInt32"}
        ,"value": 2
    }
    ,{
         "name": "DXGI_MAP_DISCARD"
        ,"type": {"kind":"UInt32"}
        ,"value": 4
    }
    ,{
         "name": "DXGI_ENUM_MODES_INTERLACED"
        ,"type": {"kind":"UInt32"}
        ,"value": 1
    }
    ,{
         "name": "DXGI_ENUM_MODES_SCALING"
        ,"type": {"kind":"UInt32"}
        ,"value": 2
    }
    ,{
         "name": "DXGI_MAX_SWAP_CHAIN_BUFFERS"
        ,"type": {"kind":"UInt32"}
        ,"value": 16
    }
    ,{
         "name": "DXGI_PRESENT_TEST"
        ,"type": {"kind":"UInt32"}
        ,"value": 1
    }
    ,{
         "name": "DXGI_PRESENT_DO_NOT_SEQUENCE"
        ,"type": {"kind":"UInt32"}
        ,"value": 2
    }
    ,{
         "name": "DXGI_PRESENT_RESTART"
        ,"type": {"kind":"UInt32"}
        ,"value": 4
    }
    ,{
         "name": "DXGI_PRESENT_DO_NOT_WAIT"
        ,"type": {"kind":"UInt32"}
        ,"value": 8
    }
    ,{
         "name": "DXGI_PRESENT_STEREO_PREFER_RIGHT"
        ,"type": {"kind":"UInt32"}
        ,"value": 16
    }
    ,{
         "name": "DXGI_PRESENT_STEREO_TEMPORARY_MONO"
        ,"type": {"kind":"UInt32"}
        ,"value": 32
    }
    ,{
         "name": "DXGI_PRESENT_RESTRICT_TO_OUTPUT"
        ,"type": {"kind":"UInt32"}
        ,"value": 64
    }
    ,{
         "name": "DXGI_PRESENT_USE_DURATION"
        ,"type": {"kind":"UInt32"}
        ,"value": 256
    }
    ,{
         "name": "DXGI_PRESENT_ALLOW_TEARING"
        ,"type": {"kind":"UInt32"}
        ,"value": 512
    }
    ,{
         "name": "DXGI_MWA_NO_WINDOW_CHANGES"
        ,"type": {"kind":"UInt32"}
        ,"value": 1
    }
    ,{
         "name": "DXGI_MWA_NO_ALT_ENTER"
        ,"type": {"kind":"UInt32"}
        ,"value": 2
    }
    ,{
         "name": "DXGI_MWA_NO_PRINT_SCREEN"
        ,"type": {"kind":"UInt32"}
        ,"value": 4
    }
    ,{
         "name": "DXGI_MWA_VALID"
        ,"type": {"kind":"UInt32"}
        ,"value": 7
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: DXGI_RATIONAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_RATIONAL = extern struct {
    Numerator: {"kind":"UInt32"},
    Denominator: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DXGI_SAMPLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_SAMPLE_DESC = extern struct {
    Count: {"kind":"UInt32"},
    Quality: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DXGI_COLOR_SPACE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_COLOR_SPACE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_RGB
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_RGB = extern struct {
    Red: {"kind":"Single"},
    Green: {"kind":"Single"},
    Blue: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: DXGI_RGBA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_RGBA = extern struct {
    r: {"kind":"Single"},
    g: {"kind":"Single"},
    b: {"kind":"Single"},
    a: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: DXGI_GAMMA_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_GAMMA_CONTROL = extern struct {
    Scale: Windows.Win32.Dxgi.DXGI_RGB,
    Offset: Windows.Win32.Dxgi.DXGI_RGB,
    GammaCurve: {"kind":"Array","child": Windows.Win32.Dxgi.DXGI_RGB},
};
// --------------------------------------------------------
// Type: DXGI_GAMMA_CONTROL_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_GAMMA_CONTROL_CAPABILITIES = extern struct {
    ScaleAndOffsetSupported: Windows.Win32.SystemServices.BOOL,
    MaxConvertedValue: {"kind":"Single"},
    MinConvertedValue: {"kind":"Single"},
    NumGammaControlPoints: {"kind":"UInt32"},
    ControlPointPositions: {"kind":"Array","child": {"kind":"Single"}},
};
// --------------------------------------------------------
// Type: DXGI_MODE_SCANLINE_ORDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_MODE_SCANLINE_ORDER = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_MODE_SCALING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_MODE_SCALING = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_MODE_ROTATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_MODE_ROTATION = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_MODE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_MODE_DESC = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    RefreshRate: Windows.Win32.Dxgi.DXGI_RATIONAL,
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ScanlineOrdering: Windows.Win32.Dxgi.DXGI_MODE_SCANLINE_ORDER,
    Scaling: Windows.Win32.Dxgi.DXGI_MODE_SCALING,
};
// --------------------------------------------------------
// Type: DXGI_JPEG_DC_HUFFMAN_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_JPEG_DC_HUFFMAN_TABLE = extern struct {
    CodeCounts: {"kind":"Array","child": {"kind":"Byte"}},
    CodeValues: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DXGI_JPEG_AC_HUFFMAN_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_JPEG_AC_HUFFMAN_TABLE = extern struct {
    CodeCounts: {"kind":"Array","child": {"kind":"Byte"}},
    CodeValues: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DXGI_JPEG_QUANTIZATION_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_JPEG_QUANTIZATION_TABLE = extern struct {
    Elements: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DXGI_FRAME_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_FRAME_STATISTICS = extern struct {
    PresentCount: {"kind":"UInt32"},
    PresentRefreshCount: {"kind":"UInt32"},
    SyncRefreshCount: {"kind":"UInt32"},
    SyncQPCTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    SyncGPUTime: Windows.Win32.SystemServices.LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: DXGI_MAPPED_RECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_MAPPED_RECT = extern struct {
    Pitch: {"kind":"Int32"},
    pBits: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DXGI_ADAPTER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_ADAPTER_DESC = extern struct {
    Description: {"kind":"Array","child": {"kind":"UInt16"}},
    VendorId: {"kind":"UInt32"},
    DeviceId: {"kind":"UInt32"},
    SubSysId: {"kind":"UInt32"},
    Revision: {"kind":"UInt32"},
    DedicatedVideoMemory: {"kind":"UIntPtr"},
    DedicatedSystemMemory: {"kind":"UIntPtr"},
    SharedSystemMemory: {"kind":"UIntPtr"},
    AdapterLuid: Windows.Win32.Kernel.LUID,
};
// --------------------------------------------------------
// Type: DXGI_OUTPUT_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTPUT_DESC = extern struct {
    DeviceName: {"kind":"Array","child": {"kind":"UInt16"}},
    DesktopCoordinates: Windows.Win32.DisplayDevices.RECT,
    AttachedToDesktop: Windows.Win32.SystemServices.BOOL,
    Rotation: Windows.Win32.Dxgi.DXGI_MODE_ROTATION,
    Monitor: {"kind":"IntPtr"},
};
// --------------------------------------------------------
// Type: DXGI_SHARED_RESOURCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_SHARED_RESOURCE = extern struct {
    Handle: Windows.Win32.SystemServices.HANDLE,
};
// --------------------------------------------------------
// Type: DXGI_RESIDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_RESIDENCY = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_SURFACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_SURFACE_DESC = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    SampleDesc: Windows.Win32.Dxgi.DXGI_SAMPLE_DESC,
};
// --------------------------------------------------------
// Type: DXGI_SWAP_EFFECT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_SWAP_EFFECT = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_SWAP_CHAIN_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_SWAP_CHAIN_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_SWAP_CHAIN_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_SWAP_CHAIN_DESC = extern struct {
    BufferDesc: Windows.Win32.Dxgi.DXGI_MODE_DESC,
    SampleDesc: Windows.Win32.Dxgi.DXGI_SAMPLE_DESC,
    BufferUsage: {"kind":"UInt32"},
    BufferCount: {"kind":"UInt32"},
    OutputWindow: Windows.Win32.WindowsAndMessaging.HWND,
    Windowed: Windows.Win32.SystemServices.BOOL,
    SwapEffect: Windows.Win32.Dxgi.DXGI_SWAP_EFFECT,
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDXGIObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIObject = *opaque{
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'SetPrivateDataInterface'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'GetParent'
};
// --------------------------------------------------------
// Type: IDXGIDeviceSubObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDeviceSubObject = *opaque{
    // TODO: Method 'GetDevice'
};
// --------------------------------------------------------
// Type: IDXGIResource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIResource = *opaque{
    // TODO: Method 'GetSharedHandle'
    // TODO: Method 'GetUsage'
    // TODO: Method 'SetEvictionPriority'
    // TODO: Method 'GetEvictionPriority'
};
// --------------------------------------------------------
// Type: IDXGIKeyedMutex
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIKeyedMutex = *opaque{
    // TODO: Method 'AcquireSync'
    // TODO: Method 'ReleaseSync'
};
// --------------------------------------------------------
// Type: IDXGISurface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISurface = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
};
// --------------------------------------------------------
// Type: IDXGISurface1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISurface1 = *opaque{
    // TODO: Method 'GetDC'
    // TODO: Method 'ReleaseDC'
};
// --------------------------------------------------------
// Type: IDXGIAdapter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIAdapter = *opaque{
    // TODO: Method 'EnumOutputs'
    // TODO: Method 'GetDesc'
    // TODO: Method 'CheckInterfaceSupport'
};
// --------------------------------------------------------
// Type: IDXGIOutput
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetDisplayModeList'
    // TODO: Method 'FindClosestMatchingMode'
    // TODO: Method 'WaitForVBlank'
    // TODO: Method 'TakeOwnership'
    // TODO: Method 'ReleaseOwnership'
    // TODO: Method 'GetGammaControlCapabilities'
    // TODO: Method 'SetGammaControl'
    // TODO: Method 'GetGammaControl'
    // TODO: Method 'SetDisplaySurface'
    // TODO: Method 'GetDisplaySurfaceData'
    // TODO: Method 'GetFrameStatistics'
};
// --------------------------------------------------------
// Type: IDXGISwapChain
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISwapChain = *opaque{
    // TODO: Method 'Present'
    // TODO: Method 'GetBuffer'
    // TODO: Method 'SetFullscreenState'
    // TODO: Method 'GetFullscreenState'
    // TODO: Method 'GetDesc'
    // TODO: Method 'ResizeBuffers'
    // TODO: Method 'ResizeTarget'
    // TODO: Method 'GetContainingOutput'
    // TODO: Method 'GetFrameStatistics'
    // TODO: Method 'GetLastPresentCount'
};
// --------------------------------------------------------
// Type: IDXGIFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory = *opaque{
    // TODO: Method 'EnumAdapters'
    // TODO: Method 'MakeWindowAssociation'
    // TODO: Method 'GetWindowAssociation'
    // TODO: Method 'CreateSwapChain'
    // TODO: Method 'CreateSoftwareAdapter'
};
// --------------------------------------------------------
// Type: IDXGIDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDevice = *opaque{
    // TODO: Method 'GetAdapter'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'QueryResourceResidency'
    // TODO: Method 'SetGPUThreadPriority'
    // TODO: Method 'GetGPUThreadPriority'
};
// --------------------------------------------------------
// Type: DXGI_ADAPTER_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_ADAPTER_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_ADAPTER_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_ADAPTER_DESC1 = extern struct {
    Description: {"kind":"Array","child": {"kind":"UInt16"}},
    VendorId: {"kind":"UInt32"},
    DeviceId: {"kind":"UInt32"},
    SubSysId: {"kind":"UInt32"},
    Revision: {"kind":"UInt32"},
    DedicatedVideoMemory: {"kind":"UIntPtr"},
    DedicatedSystemMemory: {"kind":"UIntPtr"},
    SharedSystemMemory: {"kind":"UIntPtr"},
    AdapterLuid: Windows.Win32.Kernel.LUID,
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DXGI_DISPLAY_COLOR_SPACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_DISPLAY_COLOR_SPACE = extern struct {
    PrimaryCoordinates: {"kind":"Array","child": {"kind":"Single"}},
    WhitePoints: {"kind":"Array","child": {"kind":"Single"}},
};
// --------------------------------------------------------
// Type: IDXGIFactory1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory1 = *opaque{
    // TODO: Method 'EnumAdapters1'
    // TODO: Method 'IsCurrent'
};
// --------------------------------------------------------
// Type: IDXGIAdapter1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIAdapter1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: IDXGIDevice1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDevice1 = *opaque{
    // TODO: Method 'SetMaximumFrameLatency'
    // TODO: Method 'GetMaximumFrameLatency'
};
// --------------------------------------------------------
// Type: IDXGIDisplayControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDisplayControl = *opaque{
    // TODO: Method 'IsStereoEnabled'
    // TODO: Method 'SetStereoEnabled'
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_MOVE_RECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTDUPL_MOVE_RECT = extern struct {
    SourcePoint: Windows.Win32.DisplayDevices.POINT,
    DestinationRect: Windows.Win32.DisplayDevices.RECT,
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTDUPL_DESC = extern struct {
    ModeDesc: Windows.Win32.Dxgi.DXGI_MODE_DESC,
    Rotation: Windows.Win32.Dxgi.DXGI_MODE_ROTATION,
    DesktopImageInSystemMemory: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_POINTER_POSITION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTDUPL_POINTER_POSITION = extern struct {
    Position: Windows.Win32.DisplayDevices.POINT,
    Visible: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_POINTER_SHAPE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_OUTDUPL_POINTER_SHAPE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_POINTER_SHAPE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTDUPL_POINTER_SHAPE_INFO = extern struct {
    Type: {"kind":"UInt32"},
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    Pitch: {"kind":"UInt32"},
    HotSpot: Windows.Win32.DisplayDevices.POINT,
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_FRAME_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTDUPL_FRAME_INFO = extern struct {
    LastPresentTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    LastMouseUpdateTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    AccumulatedFrames: {"kind":"UInt32"},
    RectsCoalesced: Windows.Win32.SystemServices.BOOL,
    ProtectedContentMaskedOut: Windows.Win32.SystemServices.BOOL,
    PointerPosition: Windows.Win32.Dxgi.DXGI_OUTDUPL_POINTER_POSITION,
    TotalMetadataBufferSize: {"kind":"UInt32"},
    PointerShapeBufferSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDXGIOutputDuplication
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutputDuplication = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'AcquireNextFrame'
    // TODO: Method 'GetFrameDirtyRects'
    // TODO: Method 'GetFrameMoveRects'
    // TODO: Method 'GetFramePointerShape'
    // TODO: Method 'MapDesktopSurface'
    // TODO: Method 'UnMapDesktopSurface'
    // TODO: Method 'ReleaseFrame'
};
// --------------------------------------------------------
// Type: DXGI_ALPHA_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_ALPHA_MODE = *opaque{
};
// --------------------------------------------------------
// Type: IDXGISurface2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISurface2 = *opaque{
    // TODO: Method 'GetResource'
};
// --------------------------------------------------------
// Type: IDXGIResource1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIResource1 = *opaque{
    // TODO: Method 'CreateSubresourceSurface'
    // TODO: Method 'CreateSharedHandle'
};
// --------------------------------------------------------
// Type: DXGI_OFFER_RESOURCE_PRIORITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_OFFER_RESOURCE_PRIORITY = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIDevice2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDevice2 = *opaque{
    // TODO: Method 'OfferResources'
    // TODO: Method 'ReclaimResources'
    // TODO: Method 'EnqueueSetEvent'
};
// --------------------------------------------------------
// Type: DXGI_MODE_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_MODE_DESC1 = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    RefreshRate: Windows.Win32.Dxgi.DXGI_RATIONAL,
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ScanlineOrdering: Windows.Win32.Dxgi.DXGI_MODE_SCANLINE_ORDER,
    Scaling: Windows.Win32.Dxgi.DXGI_MODE_SCALING,
    Stereo: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: DXGI_SCALING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_SCALING = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_SWAP_CHAIN_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_SWAP_CHAIN_DESC1 = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    Stereo: Windows.Win32.SystemServices.BOOL,
    SampleDesc: Windows.Win32.Dxgi.DXGI_SAMPLE_DESC,
    BufferUsage: {"kind":"UInt32"},
    BufferCount: {"kind":"UInt32"},
    Scaling: Windows.Win32.Dxgi.DXGI_SCALING,
    SwapEffect: Windows.Win32.Dxgi.DXGI_SWAP_EFFECT,
    AlphaMode: Windows.Win32.Dxgi.DXGI_ALPHA_MODE,
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DXGI_SWAP_CHAIN_FULLSCREEN_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_SWAP_CHAIN_FULLSCREEN_DESC = extern struct {
    RefreshRate: Windows.Win32.Dxgi.DXGI_RATIONAL,
    ScanlineOrdering: Windows.Win32.Dxgi.DXGI_MODE_SCANLINE_ORDER,
    Scaling: Windows.Win32.Dxgi.DXGI_MODE_SCALING,
    Windowed: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: DXGI_PRESENT_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_PRESENT_PARAMETERS = extern struct {
    DirtyRectsCount: {"kind":"UInt32"},
    pDirtyRects: {"kind""Ptr","child":Windows.Win32.DisplayDevices.RECT},
    pScrollRect: {"kind""Ptr","child":Windows.Win32.DisplayDevices.RECT},
    pScrollOffset: {"kind""Ptr","child":Windows.Win32.DisplayDevices.POINT},
};
// --------------------------------------------------------
// Type: IDXGISwapChain1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISwapChain1 = *opaque{
    // TODO: Method 'GetDesc1'
    // TODO: Method 'GetFullscreenDesc'
    // TODO: Method 'GetHwnd'
    // TODO: Method 'GetCoreWindow'
    // TODO: Method 'Present1'
    // TODO: Method 'IsTemporaryMonoSupported'
    // TODO: Method 'GetRestrictToOutput'
    // TODO: Method 'SetBackgroundColor'
    // TODO: Method 'GetBackgroundColor'
    // TODO: Method 'SetRotation'
    // TODO: Method 'GetRotation'
};
// --------------------------------------------------------
// Type: IDXGIFactory2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory2 = *opaque{
    // TODO: Method 'IsWindowedStereoEnabled'
    // TODO: Method 'CreateSwapChainForHwnd'
    // TODO: Method 'CreateSwapChainForCoreWindow'
    // TODO: Method 'GetSharedResourceAdapterLuid'
    // TODO: Method 'RegisterStereoStatusWindow'
    // TODO: Method 'RegisterStereoStatusEvent'
    // TODO: Method 'UnregisterStereoStatus'
    // TODO: Method 'RegisterOcclusionStatusWindow'
    // TODO: Method 'RegisterOcclusionStatusEvent'
    // TODO: Method 'UnregisterOcclusionStatus'
    // TODO: Method 'CreateSwapChainForComposition'
};
// --------------------------------------------------------
// Type: DXGI_GRAPHICS_PREEMPTION_GRANULARITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_GRAPHICS_PREEMPTION_GRANULARITY = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_COMPUTE_PREEMPTION_GRANULARITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_COMPUTE_PREEMPTION_GRANULARITY = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_ADAPTER_DESC2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_ADAPTER_DESC2 = extern struct {
    Description: {"kind":"Array","child": {"kind":"UInt16"}},
    VendorId: {"kind":"UInt32"},
    DeviceId: {"kind":"UInt32"},
    SubSysId: {"kind":"UInt32"},
    Revision: {"kind":"UInt32"},
    DedicatedVideoMemory: {"kind":"UIntPtr"},
    DedicatedSystemMemory: {"kind":"UIntPtr"},
    SharedSystemMemory: {"kind":"UIntPtr"},
    AdapterLuid: Windows.Win32.Kernel.LUID,
    Flags: {"kind":"UInt32"},
    GraphicsPreemptionGranularity: Windows.Win32.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY,
    ComputePreemptionGranularity: Windows.Win32.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY,
};
// --------------------------------------------------------
// Type: IDXGIAdapter2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIAdapter2 = *opaque{
    // TODO: Method 'GetDesc2'
};
// --------------------------------------------------------
// Type: IDXGIOutput1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput1 = *opaque{
    // TODO: Method 'GetDisplayModeList1'
    // TODO: Method 'FindClosestMatchingMode1'
    // TODO: Method 'GetDisplaySurfaceData1'
    // TODO: Method 'DuplicateOutput'
};
// --------------------------------------------------------
// Type: IDXGIDevice3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDevice3 = *opaque{
    // TODO: Method 'Trim'
};
// --------------------------------------------------------
// Type: DXGI_MATRIX_3X2_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_MATRIX_3X2_F = extern struct {
    _11: {"kind":"Single"},
    _12: {"kind":"Single"},
    _21: {"kind":"Single"},
    _22: {"kind":"Single"},
    _31: {"kind":"Single"},
    _32: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: IDXGISwapChain2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISwapChain2 = *opaque{
    // TODO: Method 'SetSourceSize'
    // TODO: Method 'GetSourceSize'
    // TODO: Method 'SetMaximumFrameLatency'
    // TODO: Method 'GetMaximumFrameLatency'
    // TODO: Method 'GetFrameLatencyWaitableObject'
    // TODO: Method 'SetMatrixTransform'
    // TODO: Method 'GetMatrixTransform'
};
// --------------------------------------------------------
// Type: IDXGIOutput2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput2 = *opaque{
    // TODO: Method 'SupportsOverlays'
};
// --------------------------------------------------------
// Type: IDXGIFactory3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory3 = *opaque{
    // TODO: Method 'GetCreationFlags'
};
// --------------------------------------------------------
// Type: DXGI_DECODE_SWAP_CHAIN_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_DECODE_SWAP_CHAIN_DESC = extern struct {
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIDecodeSwapChain
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDecodeSwapChain = *opaque{
    // TODO: Method 'PresentBuffer'
    // TODO: Method 'SetSourceRect'
    // TODO: Method 'SetTargetRect'
    // TODO: Method 'SetDestSize'
    // TODO: Method 'GetSourceRect'
    // TODO: Method 'GetTargetRect'
    // TODO: Method 'GetDestSize'
    // TODO: Method 'SetColorSpace'
    // TODO: Method 'GetColorSpace'
};
// --------------------------------------------------------
// Type: IDXGIFactoryMedia
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactoryMedia = *opaque{
    // TODO: Method 'CreateSwapChainForCompositionSurfaceHandle'
    // TODO: Method 'CreateDecodeSwapChainForCompositionSurfaceHandle'
};
// --------------------------------------------------------
// Type: DXGI_FRAME_PRESENTATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_FRAME_PRESENTATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_FRAME_STATISTICS_MEDIA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_FRAME_STATISTICS_MEDIA = extern struct {
    PresentCount: {"kind":"UInt32"},
    PresentRefreshCount: {"kind":"UInt32"},
    SyncRefreshCount: {"kind":"UInt32"},
    SyncQPCTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    SyncGPUTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    CompositionMode: Windows.Win32.Dxgi.DXGI_FRAME_PRESENTATION_MODE,
    ApprovedPresentDuration: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDXGISwapChainMedia
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISwapChainMedia = *opaque{
    // TODO: Method 'GetFrameStatisticsMedia'
    // TODO: Method 'SetPresentDuration'
    // TODO: Method 'CheckPresentDurationSupport'
};
// --------------------------------------------------------
// Type: DXGI_OVERLAY_SUPPORT_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_OVERLAY_SUPPORT_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIOutput3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput3 = *opaque{
    // TODO: Method 'CheckOverlaySupport'
};
// --------------------------------------------------------
// Type: DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: IDXGISwapChain3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISwapChain3 = *opaque{
    // TODO: Method 'GetCurrentBackBufferIndex'
    // TODO: Method 'CheckColorSpaceSupport'
    // TODO: Method 'SetColorSpace1'
    // TODO: Method 'ResizeBuffers1'
};
// --------------------------------------------------------
// Type: DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIOutput4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput4 = *opaque{
    // TODO: Method 'CheckOverlayColorSpaceSupport'
};
// --------------------------------------------------------
// Type: IDXGIFactory4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory4 = *opaque{
    // TODO: Method 'EnumAdapterByLuid'
    // TODO: Method 'EnumWarpAdapter'
};
// --------------------------------------------------------
// Type: DXGI_MEMORY_SEGMENT_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_MEMORY_SEGMENT_GROUP = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_QUERY_VIDEO_MEMORY_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_QUERY_VIDEO_MEMORY_INFO = extern struct {
    Budget: {"kind":"UInt64"},
    CurrentUsage: {"kind":"UInt64"},
    AvailableForReservation: {"kind":"UInt64"},
    CurrentReservation: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IDXGIAdapter3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIAdapter3 = *opaque{
    // TODO: Method 'RegisterHardwareContentProtectionTeardownStatusEvent'
    // TODO: Method 'UnregisterHardwareContentProtectionTeardownStatus'
    // TODO: Method 'QueryVideoMemoryInfo'
    // TODO: Method 'SetVideoMemoryReservation'
    // TODO: Method 'RegisterVideoMemoryBudgetChangeNotificationEvent'
    // TODO: Method 'UnregisterVideoMemoryBudgetChangeNotification'
};
// --------------------------------------------------------
// Type: DXGI_OUTDUPL_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_OUTDUPL_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIOutput5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput5 = *opaque{
    // TODO: Method 'DuplicateOutput1'
};
// --------------------------------------------------------
// Type: DXGI_HDR_METADATA_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_HDR_METADATA_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_HDR_METADATA_HDR10
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_HDR_METADATA_HDR10 = extern struct {
    RedPrimary: {"kind":"Array","child": {"kind":"UInt16"}},
    GreenPrimary: {"kind":"Array","child": {"kind":"UInt16"}},
    BluePrimary: {"kind":"Array","child": {"kind":"UInt16"}},
    WhitePoint: {"kind":"Array","child": {"kind":"UInt16"}},
    MaxMasteringLuminance: {"kind":"UInt32"},
    MinMasteringLuminance: {"kind":"UInt32"},
    MaxContentLightLevel: {"kind":"UInt16"},
    MaxFrameAverageLightLevel: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: DXGI_HDR_METADATA_HDR10PLUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_HDR_METADATA_HDR10PLUS = extern struct {
    Data: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: IDXGISwapChain4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGISwapChain4 = *opaque{
    // TODO: Method 'SetHDRMetaData'
};
// --------------------------------------------------------
// Type: DXGI_OFFER_RESOURCE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_OFFER_RESOURCE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_RECLAIM_RESOURCE_RESULTS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_RECLAIM_RESOURCE_RESULTS = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIDevice4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDevice4 = *opaque{
    // TODO: Method 'OfferResources1'
    // TODO: Method 'ReclaimResources1'
};
// --------------------------------------------------------
// Type: DXGI_FEATURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_FEATURE = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIFactory5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory5 = *opaque{
    // TODO: Method 'CheckFeatureSupport'
};
// --------------------------------------------------------
// Type: DXGI_ADAPTER_FLAG3
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_ADAPTER_FLAG3 = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_ADAPTER_DESC3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_ADAPTER_DESC3 = extern struct {
    Description: {"kind":"Array","child": {"kind":"UInt16"}},
    VendorId: {"kind":"UInt32"},
    DeviceId: {"kind":"UInt32"},
    SubSysId: {"kind":"UInt32"},
    Revision: {"kind":"UInt32"},
    DedicatedVideoMemory: {"kind":"UIntPtr"},
    DedicatedSystemMemory: {"kind":"UIntPtr"},
    SharedSystemMemory: {"kind":"UIntPtr"},
    AdapterLuid: Windows.Win32.Kernel.LUID,
    Flags: Windows.Win32.Dxgi.DXGI_ADAPTER_FLAG3,
    GraphicsPreemptionGranularity: Windows.Win32.Dxgi.DXGI_GRAPHICS_PREEMPTION_GRANULARITY,
    ComputePreemptionGranularity: Windows.Win32.Dxgi.DXGI_COMPUTE_PREEMPTION_GRANULARITY,
};
// --------------------------------------------------------
// Type: IDXGIAdapter4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIAdapter4 = *opaque{
    // TODO: Method 'GetDesc3'
};
// --------------------------------------------------------
// Type: DXGI_OUTPUT_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_OUTPUT_DESC1 = extern struct {
    DeviceName: {"kind":"Array","child": {"kind":"UInt16"}},
    DesktopCoordinates: Windows.Win32.DisplayDevices.RECT,
    AttachedToDesktop: Windows.Win32.SystemServices.BOOL,
    Rotation: Windows.Win32.Dxgi.DXGI_MODE_ROTATION,
    Monitor: {"kind":"IntPtr"},
    BitsPerColor: {"kind":"UInt32"},
    ColorSpace: Windows.Win32.Dxgi.DXGI_COLOR_SPACE_TYPE,
    RedPrimary: {"kind":"Array","child": {"kind":"Single"}},
    GreenPrimary: {"kind":"Array","child": {"kind":"Single"}},
    BluePrimary: {"kind":"Array","child": {"kind":"Single"}},
    WhitePoint: {"kind":"Array","child": {"kind":"Single"}},
    MinLuminance: {"kind":"Single"},
    MaxLuminance: {"kind":"Single"},
    MaxFullFrameLuminance: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_HARDWARE_COMPOSITION_SUPPORT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIOutput6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIOutput6 = *opaque{
    // TODO: Method 'GetDesc1'
    // TODO: Method 'CheckHardwareCompositionSupport'
};
// --------------------------------------------------------
// Type: DXGI_GPU_PREFERENCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_GPU_PREFERENCE = *opaque{
};
// --------------------------------------------------------
// Type: IDXGIFactory6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory6 = *opaque{
    // TODO: Method 'EnumAdapterByGpuPreference'
};
// --------------------------------------------------------
// Type: IDXGIFactory7
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIFactory7 = *opaque{
    // TODO: Method 'RegisterAdaptersChangedEvent'
    // TODO: Method 'UnregisterAdaptersChangedEvent'
};
// --------------------------------------------------------
// Type: DXGI_DEBUG_RLO_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_DEBUG_RLO_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_INFO_QUEUE_MESSAGE_CATEGORY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_INFO_QUEUE_MESSAGE_CATEGORY = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_INFO_QUEUE_MESSAGE_SEVERITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DXGI_INFO_QUEUE_MESSAGE_SEVERITY = *opaque{
};
// --------------------------------------------------------
// Type: DXGI_INFO_QUEUE_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_INFO_QUEUE_MESSAGE = extern struct {
    Producer: Guid,
    Category: Windows.Win32.Dxgi.DXGI_INFO_QUEUE_MESSAGE_CATEGORY,
    Severity: Windows.Win32.Dxgi.DXGI_INFO_QUEUE_MESSAGE_SEVERITY,
    ID: {"kind":"Int32"},
    pDescription: {"kind""Ptr","child":{"kind":"SByte"}},
    DescriptionByteLength: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: DXGI_INFO_QUEUE_FILTER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_INFO_QUEUE_FILTER_DESC = extern struct {
    NumCategories: {"kind":"UInt32"},
    pCategoryList: {"kind""Ptr","child":Windows.Win32.Dxgi.DXGI_INFO_QUEUE_MESSAGE_CATEGORY},
    NumSeverities: {"kind":"UInt32"},
    pSeverityList: {"kind""Ptr","child":Windows.Win32.Dxgi.DXGI_INFO_QUEUE_MESSAGE_SEVERITY},
    NumIDs: {"kind":"UInt32"},
    pIDList: {"kind""Ptr","child":{"kind":"Int32"}},
};
// --------------------------------------------------------
// Type: DXGI_INFO_QUEUE_FILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXGI_INFO_QUEUE_FILTER = extern struct {
    AllowList: Windows.Win32.Dxgi.DXGI_INFO_QUEUE_FILTER_DESC,
    DenyList: Windows.Win32.Dxgi.DXGI_INFO_QUEUE_FILTER_DESC,
};
// --------------------------------------------------------
// Type: IDXGIInfoQueue
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIInfoQueue = *opaque{
    // TODO: Method 'SetMessageCountLimit'
    // TODO: Method 'ClearStoredMessages'
    // TODO: Method 'GetMessageA'
    // TODO: Method 'GetNumStoredMessagesAllowedByRetrievalFilters'
    // TODO: Method 'GetNumStoredMessages'
    // TODO: Method 'GetNumMessagesDiscardedByMessageCountLimit'
    // TODO: Method 'GetMessageCountLimit'
    // TODO: Method 'GetNumMessagesAllowedByStorageFilter'
    // TODO: Method 'GetNumMessagesDeniedByStorageFilter'
    // TODO: Method 'AddStorageFilterEntries'
    // TODO: Method 'GetStorageFilter'
    // TODO: Method 'ClearStorageFilter'
    // TODO: Method 'PushEmptyStorageFilter'
    // TODO: Method 'PushDenyAllStorageFilter'
    // TODO: Method 'PushCopyOfStorageFilter'
    // TODO: Method 'PushStorageFilter'
    // TODO: Method 'PopStorageFilter'
    // TODO: Method 'GetStorageFilterStackSize'
    // TODO: Method 'AddRetrievalFilterEntries'
    // TODO: Method 'GetRetrievalFilter'
    // TODO: Method 'ClearRetrievalFilter'
    // TODO: Method 'PushEmptyRetrievalFilter'
    // TODO: Method 'PushDenyAllRetrievalFilter'
    // TODO: Method 'PushCopyOfRetrievalFilter'
    // TODO: Method 'PushRetrievalFilter'
    // TODO: Method 'PopRetrievalFilter'
    // TODO: Method 'GetRetrievalFilterStackSize'
    // TODO: Method 'AddMessage'
    // TODO: Method 'AddApplicationMessage'
    // TODO: Method 'SetBreakOnCategory'
    // TODO: Method 'SetBreakOnSeverity'
    // TODO: Method 'SetBreakOnID'
    // TODO: Method 'GetBreakOnCategory'
    // TODO: Method 'GetBreakOnSeverity'
    // TODO: Method 'GetBreakOnID'
    // TODO: Method 'SetMuteDebugOutput'
    // TODO: Method 'GetMuteDebugOutput'
};
// --------------------------------------------------------
// Type: IDXGIDebug
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDebug = *opaque{
    // TODO: Method 'ReportLiveObjects'
};
// --------------------------------------------------------
// Type: IDXGIDebug1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDXGIDebug1 = *opaque{
    // TODO: Method 'EnableLeakTrackingForThread'
    // TODO: Method 'DisableLeakTrackingForThread'
    // TODO: Method 'IsLeakTrackingEnabledForThread'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "dxgi" fn CreateDXGIFactory(
    riid: {"kind""Ptr","child":Guid},
    ppFactory: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "dxgi" fn CreateDXGIFactory1(
    riid: {"kind""Ptr","child":Guid},
    ppFactory: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "dxgi" fn CreateDXGIFactory2(
    Flags: {"kind":"UInt32"},
    riid: {"kind""Ptr","child":Guid},
    ppFactory: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "dxgi" fn DXGIGetDebugInterface1(
    Flags: {"kind":"UInt32"},
    riid: {"kind""Ptr","child":Guid},
    pDebug: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "dxgi" fn DXGIDeclareAdapterRemovalSupport(
],

"unicode_aliases": [
]}
