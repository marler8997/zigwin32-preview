{
"constants": [
     {
         "name": "MICROSOFT_URL_EXPERIENCE_PROPERTY"
        ,"type": {"kind":"String"}
        ,"value": "Microsoft TIP URL Experience"
    }
    ,{
         "name": "MICROSOFT_TIP_NO_INSERT_BUTTON_PROPERTY"
        ,"type": {"kind":"String"}
        ,"value": "Microsoft TIP No Insert Option"
    }
    ,{
         "name": "MICROSOFT_TIP_COMBOBOXLIST_PROPERTY"
        ,"type": {"kind":"String"}
        ,"value": "Microsoft TIP ComboBox List Window Identifier"
    }
    ,{
         "name": "MICROSOFT_TIP_OPENING_MSG"
        ,"type": {"kind":"String"}
        ,"value": "TabletInputPanelOpening"
    }
    ,{
         "name": "InkMinTransparencyValue"
        ,"type": {"kind":"Int32"}
        ,"value": 0
    }
    ,{
         "name": "InkMaxTransparencyValue"
        ,"type": {"kind":"Int32"}
        ,"value": 255
    }
    ,{
         "name": "InkCollectorClipInkToMargin"
        ,"type": {"kind":"Int32"}
        ,"value": 0
    }
    ,{
         "name": "InkCollectorDefaultMargin"
        ,"type": {"kind":"Int32"}
        ,"value": -2147483648
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: PfnRecoCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PfnRecoCallback = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: InkDisp
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkDisp = opaque {
};
// --------------------------------------------------------
// Type: InkOverlay
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkOverlay = opaque {
};
// --------------------------------------------------------
// Type: InkPicture
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkPicture = opaque {
};
// --------------------------------------------------------
// Type: InkCollector
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkCollector = opaque {
};
// --------------------------------------------------------
// Type: InkDrawingAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkDrawingAttributes = opaque {
};
// --------------------------------------------------------
// Type: InkRectangle
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkRectangle = opaque {
};
// --------------------------------------------------------
// Type: InkRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkRenderer = opaque {
};
// --------------------------------------------------------
// Type: InkTransform
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkTransform = opaque {
};
// --------------------------------------------------------
// Type: InkRecognizers
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkRecognizers = opaque {
};
// --------------------------------------------------------
// Type: InkRecognizerContext
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkRecognizerContext = opaque {
};
// --------------------------------------------------------
// Type: InkRecognizerGuide
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkRecognizerGuide = opaque {
};
// --------------------------------------------------------
// Type: InkTablets
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkTablets = opaque {
};
// --------------------------------------------------------
// Type: InkWordList
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkWordList = opaque {
};
// --------------------------------------------------------
// Type: InkStrokes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkStrokes = opaque {
};
// --------------------------------------------------------
// Type: Ink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Ink = opaque {
};
// --------------------------------------------------------
// Type: SketchInk
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SketchInk = opaque {
};
// --------------------------------------------------------
// Type: PROPERTY_UNITS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PROPERTY_UNITS = *opaque{
};
// --------------------------------------------------------
// Type: SYSTEM_EVENT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SYSTEM_EVENT_DATA = extern struct {
    bModifier: {"kind":"Byte"},
    wKey: {"kind":"UInt16"},
    xPos: {"kind":"Int32"},
    yPos: {"kind":"Int32"},
    bCursorMode: {"kind":"Byte"},
    dwButtonState: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: STROKE_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const STROKE_RANGE = extern struct {
    iStrokeBegin: {"kind":"UInt32"},
    iStrokeEnd: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PROPERTY_METRICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PROPERTY_METRICS = extern struct {
    nLogicalMin: {"kind":"Int32"},
    nLogicalMax: {"kind":"Int32"},
    Units: Windows.Win32.TabletPC.PROPERTY_UNITS,
    fResolution: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: PACKET_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PACKET_PROPERTY = extern struct {
    guid: Guid,
    PropertyMetrics: Windows.Win32.TabletPC.PROPERTY_METRICS,
};
// --------------------------------------------------------
// Type: PACKET_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PACKET_DESCRIPTION = extern struct {
    cbPacketSize: {"kind":"UInt32"},
    cPacketProperties: {"kind":"UInt32"},
    pPacketProperties: {"kind""Ptr","child":Windows.Win32.TabletPC.PACKET_PROPERTY},
    cButtons: {"kind":"UInt32"},
    pguidButtons: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: enumINKMETRIC_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const enumINKMETRIC_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: enumGetCandidateFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const enumGetCandidateFlags = *opaque{
};
// --------------------------------------------------------
// Type: INKMETRIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const INKMETRIC = extern struct {
    iHeight: {"kind":"Int32"},
    iFontAscent: {"kind":"Int32"},
    iFontDescent: {"kind":"Int32"},
    dwFlags: {"kind":"UInt32"},
    color: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: InkSelectionConstants
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkSelectionConstants = *opaque{
};
// --------------------------------------------------------
// Type: InkBoundingBoxMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkBoundingBoxMode = *opaque{
};
// --------------------------------------------------------
// Type: InkExtractFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkExtractFlags = *opaque{
};
// --------------------------------------------------------
// Type: InkPersistenceFormat
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkPersistenceFormat = *opaque{
};
// --------------------------------------------------------
// Type: InkPersistenceCompressionMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkPersistenceCompressionMode = *opaque{
};
// --------------------------------------------------------
// Type: InkPenTip
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkPenTip = *opaque{
};
// --------------------------------------------------------
// Type: InkRasterOperation
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRasterOperation = *opaque{
};
// --------------------------------------------------------
// Type: InkMousePointer
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkMousePointer = *opaque{
};
// --------------------------------------------------------
// Type: InkClipboardModes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkClipboardModes = *opaque{
};
// --------------------------------------------------------
// Type: InkClipboardFormats
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkClipboardFormats = *opaque{
};
// --------------------------------------------------------
// Type: SelectionHitResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SelectionHitResult = *opaque{
};
// --------------------------------------------------------
// Type: InkRecognitionStatus
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRecognitionStatus = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRectangle
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRectangle = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkExtendedProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkExtendedProperty = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkExtendedProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkExtendedProperties = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkDrawingAttributes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkDrawingAttributes = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkTransform = *opaque{
};
// --------------------------------------------------------
// Type: InkApplicationGesture
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkApplicationGesture = *opaque{
};
// --------------------------------------------------------
// Type: InkSystemGesture
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkSystemGesture = *opaque{
};
// --------------------------------------------------------
// Type: InkRecognitionConfidence
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRecognitionConfidence = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkGesture
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkGesture = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCursor
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCursor = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCursors
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCursors = *opaque{
};
// --------------------------------------------------------
// Type: InkCursorButtonState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkCursorButtonState = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCursorButton
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCursorButton = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCursorButtons
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCursorButtons = *opaque{
};
// --------------------------------------------------------
// Type: TabletHardwareCapabilities
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TabletHardwareCapabilities = *opaque{
};
// --------------------------------------------------------
// Type: TabletPropertyMetricUnit
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TabletPropertyMetricUnit = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkTablet
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkTablet = *opaque{
};
// --------------------------------------------------------
// Type: TabletDeviceKind
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TabletDeviceKind = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkTablet2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkTablet2 = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkTablet3
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkTablet3 = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkTablets
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkTablets = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkStrokeDisp
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkStrokeDisp = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkStrokes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkStrokes = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCustomStrokes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCustomStrokes = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_StrokeEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_StrokeEvent = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_Ink
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_Ink = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkEvent = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRenderer
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRenderer = *opaque{
};
// --------------------------------------------------------
// Type: InkCollectorEventInterest
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkCollectorEventInterest = *opaque{
};
// --------------------------------------------------------
// Type: InkMouseButton
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkMouseButton = *opaque{
};
// --------------------------------------------------------
// Type: InkShiftKeyModifierFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkShiftKeyModifierFlags = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCollectorEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCollectorEvent = *opaque{
};
// --------------------------------------------------------
// Type: InkOverlayEditingMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkOverlayEditingMode = *opaque{
};
// --------------------------------------------------------
// Type: InkOverlayAttachMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkOverlayAttachMode = *opaque{
};
// --------------------------------------------------------
// Type: InkPictureSizeMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkPictureSizeMode = *opaque{
};
// --------------------------------------------------------
// Type: InkOverlayEraserMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkOverlayEraserMode = *opaque{
};
// --------------------------------------------------------
// Type: InkCollectionMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkCollectionMode = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkCollector
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkCollector = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecognizer
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognizer = *opaque{
};
// --------------------------------------------------------
// Type: InkRecognizerCapabilities
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRecognizerCapabilities = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecognizer2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognizer2 = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecognizers
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognizers = *opaque{
};
// --------------------------------------------------------
// Type: InkRecognizerCharacterAutoCompletionMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRecognizerCharacterAutoCompletionMode = *opaque{
};
// --------------------------------------------------------
// Type: InkRecognitionModes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRecognitionModes = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecognitionEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognitionEvent = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecoContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecoContext = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecoContext2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecoContext2 = *opaque{
};
// --------------------------------------------------------
// Type: InkRecognitionAlternatesSelection
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkRecognitionAlternatesSelection = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecognitionResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognitionResult = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecoAlternate
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecoAlternate = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkRecognitionAlternates
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognitionAlternates = *opaque{
};
// --------------------------------------------------------
// Type: InkRecoGuide
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const InkRecoGuide = extern struct {
    rectWritingBox: Windows.Win32.DisplayDevices.RECT,
    rectDrawnBox: Windows.Win32.DisplayDevices.RECT,
    cRows: {"kind":"Int32"},
    cColumns: {"kind":"Int32"},
    midline: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DISPID_InkRecognizerGuide
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkRecognizerGuide = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkWordList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkWordList = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkWordList2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkWordList2 = *opaque{
};
// --------------------------------------------------------
// Type: IInkRectangle
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRectangle = *opaque{
    // TODO: Method 'get_Top'
    // TODO: Method 'put_Top'
    // TODO: Method 'get_Left'
    // TODO: Method 'put_Left'
    // TODO: Method 'get_Bottom'
    // TODO: Method 'put_Bottom'
    // TODO: Method 'get_Right'
    // TODO: Method 'put_Right'
    // TODO: Method 'get_Data'
    // TODO: Method 'put_Data'
    // TODO: Method 'GetRectangle'
    // TODO: Method 'SetRectangle'
};
// --------------------------------------------------------
// Type: IInkExtendedProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkExtendedProperty = *opaque{
    // TODO: Method 'get_Guid'
    // TODO: Method 'get_Data'
    // TODO: Method 'put_Data'
};
// --------------------------------------------------------
// Type: IInkExtendedProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkExtendedProperties = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'Clear'
    // TODO: Method 'DoesPropertyExist'
};
// --------------------------------------------------------
// Type: IInkDrawingAttributes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkDrawingAttributes = *opaque{
    // TODO: Method 'get_Color'
    // TODO: Method 'put_Color'
    // TODO: Method 'get_Width'
    // TODO: Method 'put_Width'
    // TODO: Method 'get_Height'
    // TODO: Method 'put_Height'
    // TODO: Method 'get_FitToCurve'
    // TODO: Method 'put_FitToCurve'
    // TODO: Method 'get_IgnorePressure'
    // TODO: Method 'put_IgnorePressure'
    // TODO: Method 'get_AntiAliased'
    // TODO: Method 'put_AntiAliased'
    // TODO: Method 'get_Transparency'
    // TODO: Method 'put_Transparency'
    // TODO: Method 'get_RasterOperation'
    // TODO: Method 'put_RasterOperation'
    // TODO: Method 'get_PenTip'
    // TODO: Method 'put_PenTip'
    // TODO: Method 'get_ExtendedProperties'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IInkTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkTransform = *opaque{
    // TODO: Method 'Reset'
    // TODO: Method 'Translate'
    // TODO: Method 'Rotate'
    // TODO: Method 'Reflect'
    // TODO: Method 'Shear'
    // TODO: Method 'ScaleTransform'
    // TODO: Method 'GetTransform'
    // TODO: Method 'SetTransform'
    // TODO: Method 'get_eM11'
    // TODO: Method 'put_eM11'
    // TODO: Method 'get_eM12'
    // TODO: Method 'put_eM12'
    // TODO: Method 'get_eM21'
    // TODO: Method 'put_eM21'
    // TODO: Method 'get_eM22'
    // TODO: Method 'put_eM22'
    // TODO: Method 'get_eDx'
    // TODO: Method 'put_eDx'
    // TODO: Method 'get_eDy'
    // TODO: Method 'put_eDy'
    // TODO: Method 'get_Data'
    // TODO: Method 'put_Data'
};
// --------------------------------------------------------
// Type: IInkGesture
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkGesture = *opaque{
    // TODO: Method 'get_Confidence'
    // TODO: Method 'get_Id'
    // TODO: Method 'GetHotPoint'
};
// --------------------------------------------------------
// Type: IInkCursor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkCursor = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Id'
    // TODO: Method 'get_Inverted'
    // TODO: Method 'get_DrawingAttributes'
    // TODO: Method 'putref_DrawingAttributes'
    // TODO: Method 'get_Tablet'
    // TODO: Method 'get_Buttons'
};
// --------------------------------------------------------
// Type: IInkCursors
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkCursors = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
};
// --------------------------------------------------------
// Type: IInkCursorButton
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkCursorButton = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Id'
    // TODO: Method 'get_State'
};
// --------------------------------------------------------
// Type: IInkCursorButtons
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkCursorButtons = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
};
// --------------------------------------------------------
// Type: IInkTablet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkTablet = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_PlugAndPlayId'
    // TODO: Method 'get_MaximumInputRectangle'
    // TODO: Method 'get_HardwareCapabilities'
    // TODO: Method 'IsPacketPropertySupported'
    // TODO: Method 'GetPropertyMetrics'
};
// --------------------------------------------------------
// Type: IInkTablet2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkTablet2 = *opaque{
    // TODO: Method 'get_DeviceKind'
};
// --------------------------------------------------------
// Type: IInkTablet3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkTablet3 = *opaque{
    // TODO: Method 'get_IsMultiTouch'
    // TODO: Method 'get_MaximumCursors'
};
// --------------------------------------------------------
// Type: IInkTablets
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkTablets = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_DefaultTablet'
    // TODO: Method 'Item'
    // TODO: Method 'IsPacketPropertySupported'
};
// --------------------------------------------------------
// Type: IInkStrokeDisp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkStrokeDisp = *opaque{
    // TODO: Method 'get_ID'
    // TODO: Method 'get_BezierPoints'
    // TODO: Method 'get_DrawingAttributes'
    // TODO: Method 'putref_DrawingAttributes'
    // TODO: Method 'get_Ink'
    // TODO: Method 'get_ExtendedProperties'
    // TODO: Method 'get_PolylineCusps'
    // TODO: Method 'get_BezierCusps'
    // TODO: Method 'get_SelfIntersections'
    // TODO: Method 'get_PacketCount'
    // TODO: Method 'get_PacketSize'
    // TODO: Method 'get_PacketDescription'
    // TODO: Method 'get_Deleted'
    // TODO: Method 'GetBoundingBox'
    // TODO: Method 'FindIntersections'
    // TODO: Method 'GetRectangleIntersections'
    // TODO: Method 'Clip'
    // TODO: Method 'HitTestCircle'
    // TODO: Method 'NearestPoint'
    // TODO: Method 'Split'
    // TODO: Method 'GetPacketDescriptionPropertyMetrics'
    // TODO: Method 'GetPoints'
    // TODO: Method 'SetPoints'
    // TODO: Method 'GetPacketData'
    // TODO: Method 'GetPacketValuesByProperty'
    // TODO: Method 'SetPacketValuesByProperty'
    // TODO: Method 'GetFlattenedBezierPoints'
    // TODO: Method 'Transform'
    // TODO: Method 'ScaleToRectangle'
    // TODO: Method 'Move'
    // TODO: Method 'Rotate'
    // TODO: Method 'Shear'
    // TODO: Method 'ScaleTransform'
};
// --------------------------------------------------------
// Type: IInkStrokes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkStrokes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Ink'
    // TODO: Method 'get_RecognitionResult'
    // TODO: Method 'ToString'
    // TODO: Method 'Item'
    // TODO: Method 'Add'
    // TODO: Method 'AddStrokes'
    // TODO: Method 'Remove'
    // TODO: Method 'RemoveStrokes'
    // TODO: Method 'ModifyDrawingAttributes'
    // TODO: Method 'GetBoundingBox'
    // TODO: Method 'Transform'
    // TODO: Method 'ScaleToRectangle'
    // TODO: Method 'Move'
    // TODO: Method 'Rotate'
    // TODO: Method 'Shear'
    // TODO: Method 'ScaleTransform'
    // TODO: Method 'Clip'
    // TODO: Method 'RemoveRecognitionResult'
};
// --------------------------------------------------------
// Type: IInkCustomStrokes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkCustomStrokes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'Clear'
};
// --------------------------------------------------------
// Type: _IInkStrokesEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkStrokesEvents = *opaque{
};
// --------------------------------------------------------
// Type: IInkDisp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkDisp = *opaque{
    // TODO: Method 'get_Strokes'
    // TODO: Method 'get_ExtendedProperties'
    // TODO: Method 'get_Dirty'
    // TODO: Method 'put_Dirty'
    // TODO: Method 'get_CustomStrokes'
    // TODO: Method 'GetBoundingBox'
    // TODO: Method 'DeleteStrokes'
    // TODO: Method 'DeleteStroke'
    // TODO: Method 'ExtractStrokes'
    // TODO: Method 'ExtractWithRectangle'
    // TODO: Method 'Clip'
    // TODO: Method 'Clone'
    // TODO: Method 'HitTestCircle'
    // TODO: Method 'HitTestWithRectangle'
    // TODO: Method 'HitTestWithLasso'
    // TODO: Method 'NearestPoint'
    // TODO: Method 'CreateStrokes'
    // TODO: Method 'AddStrokesAtRectangle'
    // TODO: Method 'Save'
    // TODO: Method 'Load'
    // TODO: Method 'CreateStroke'
    // TODO: Method 'ClipboardCopyWithRectangle'
    // TODO: Method 'ClipboardCopy'
    // TODO: Method 'CanPaste'
    // TODO: Method 'ClipboardPaste'
};
// --------------------------------------------------------
// Type: _IInkEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkEvents = *opaque{
};
// --------------------------------------------------------
// Type: IInkRenderer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRenderer = *opaque{
    // TODO: Method 'GetViewTransform'
    // TODO: Method 'SetViewTransform'
    // TODO: Method 'GetObjectTransform'
    // TODO: Method 'SetObjectTransform'
    // TODO: Method 'Draw'
    // TODO: Method 'DrawStroke'
    // TODO: Method 'PixelToInkSpace'
    // TODO: Method 'InkSpaceToPixel'
    // TODO: Method 'PixelToInkSpaceFromPoints'
    // TODO: Method 'InkSpaceToPixelFromPoints'
    // TODO: Method 'Measure'
    // TODO: Method 'MeasureStroke'
    // TODO: Method 'Move'
    // TODO: Method 'Rotate'
    // TODO: Method 'ScaleTransform'
};
// --------------------------------------------------------
// Type: IInkCollector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkCollector = *opaque{
    // TODO: Method 'get_hWnd'
    // TODO: Method 'put_hWnd'
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_DefaultDrawingAttributes'
    // TODO: Method 'putref_DefaultDrawingAttributes'
    // TODO: Method 'get_Renderer'
    // TODO: Method 'putref_Renderer'
    // TODO: Method 'get_Ink'
    // TODO: Method 'putref_Ink'
    // TODO: Method 'get_AutoRedraw'
    // TODO: Method 'put_AutoRedraw'
    // TODO: Method 'get_CollectingInk'
    // TODO: Method 'get_CollectionMode'
    // TODO: Method 'put_CollectionMode'
    // TODO: Method 'get_DynamicRendering'
    // TODO: Method 'put_DynamicRendering'
    // TODO: Method 'get_DesiredPacketDescription'
    // TODO: Method 'put_DesiredPacketDescription'
    // TODO: Method 'get_MouseIcon'
    // TODO: Method 'put_MouseIcon'
    // TODO: Method 'putref_MouseIcon'
    // TODO: Method 'get_MousePointer'
    // TODO: Method 'put_MousePointer'
    // TODO: Method 'get_Cursors'
    // TODO: Method 'get_MarginX'
    // TODO: Method 'put_MarginX'
    // TODO: Method 'get_MarginY'
    // TODO: Method 'put_MarginY'
    // TODO: Method 'get_Tablet'
    // TODO: Method 'get_SupportHighContrastInk'
    // TODO: Method 'put_SupportHighContrastInk'
    // TODO: Method 'SetGestureStatus'
    // TODO: Method 'GetGestureStatus'
    // TODO: Method 'GetWindowInputRectangle'
    // TODO: Method 'SetWindowInputRectangle'
    // TODO: Method 'SetAllTabletsMode'
    // TODO: Method 'SetSingleTabletIntegratedMode'
    // TODO: Method 'GetEventInterest'
    // TODO: Method 'SetEventInterest'
};
// --------------------------------------------------------
// Type: _IInkCollectorEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkCollectorEvents = *opaque{
};
// --------------------------------------------------------
// Type: IInkOverlay
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkOverlay = *opaque{
    // TODO: Method 'get_hWnd'
    // TODO: Method 'put_hWnd'
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_DefaultDrawingAttributes'
    // TODO: Method 'putref_DefaultDrawingAttributes'
    // TODO: Method 'get_Renderer'
    // TODO: Method 'putref_Renderer'
    // TODO: Method 'get_Ink'
    // TODO: Method 'putref_Ink'
    // TODO: Method 'get_AutoRedraw'
    // TODO: Method 'put_AutoRedraw'
    // TODO: Method 'get_CollectingInk'
    // TODO: Method 'get_CollectionMode'
    // TODO: Method 'put_CollectionMode'
    // TODO: Method 'get_DynamicRendering'
    // TODO: Method 'put_DynamicRendering'
    // TODO: Method 'get_DesiredPacketDescription'
    // TODO: Method 'put_DesiredPacketDescription'
    // TODO: Method 'get_MouseIcon'
    // TODO: Method 'put_MouseIcon'
    // TODO: Method 'putref_MouseIcon'
    // TODO: Method 'get_MousePointer'
    // TODO: Method 'put_MousePointer'
    // TODO: Method 'get_EditingMode'
    // TODO: Method 'put_EditingMode'
    // TODO: Method 'get_Selection'
    // TODO: Method 'put_Selection'
    // TODO: Method 'get_EraserMode'
    // TODO: Method 'put_EraserMode'
    // TODO: Method 'get_EraserWidth'
    // TODO: Method 'put_EraserWidth'
    // TODO: Method 'get_AttachMode'
    // TODO: Method 'put_AttachMode'
    // TODO: Method 'get_Cursors'
    // TODO: Method 'get_MarginX'
    // TODO: Method 'put_MarginX'
    // TODO: Method 'get_MarginY'
    // TODO: Method 'put_MarginY'
    // TODO: Method 'get_Tablet'
    // TODO: Method 'get_SupportHighContrastInk'
    // TODO: Method 'put_SupportHighContrastInk'
    // TODO: Method 'get_SupportHighContrastSelectionUI'
    // TODO: Method 'put_SupportHighContrastSelectionUI'
    // TODO: Method 'HitTestSelection'
    // TODO: Method 'Draw'
    // TODO: Method 'SetGestureStatus'
    // TODO: Method 'GetGestureStatus'
    // TODO: Method 'GetWindowInputRectangle'
    // TODO: Method 'SetWindowInputRectangle'
    // TODO: Method 'SetAllTabletsMode'
    // TODO: Method 'SetSingleTabletIntegratedMode'
    // TODO: Method 'GetEventInterest'
    // TODO: Method 'SetEventInterest'
};
// --------------------------------------------------------
// Type: _IInkOverlayEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkOverlayEvents = *opaque{
};
// --------------------------------------------------------
// Type: IInkPicture
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkPicture = *opaque{
    // TODO: Method 'get_hWnd'
    // TODO: Method 'get_DefaultDrawingAttributes'
    // TODO: Method 'putref_DefaultDrawingAttributes'
    // TODO: Method 'get_Renderer'
    // TODO: Method 'putref_Renderer'
    // TODO: Method 'get_Ink'
    // TODO: Method 'putref_Ink'
    // TODO: Method 'get_AutoRedraw'
    // TODO: Method 'put_AutoRedraw'
    // TODO: Method 'get_CollectingInk'
    // TODO: Method 'get_CollectionMode'
    // TODO: Method 'put_CollectionMode'
    // TODO: Method 'get_DynamicRendering'
    // TODO: Method 'put_DynamicRendering'
    // TODO: Method 'get_DesiredPacketDescription'
    // TODO: Method 'put_DesiredPacketDescription'
    // TODO: Method 'get_MouseIcon'
    // TODO: Method 'put_MouseIcon'
    // TODO: Method 'putref_MouseIcon'
    // TODO: Method 'get_MousePointer'
    // TODO: Method 'put_MousePointer'
    // TODO: Method 'get_EditingMode'
    // TODO: Method 'put_EditingMode'
    // TODO: Method 'get_Selection'
    // TODO: Method 'put_Selection'
    // TODO: Method 'get_EraserMode'
    // TODO: Method 'put_EraserMode'
    // TODO: Method 'get_EraserWidth'
    // TODO: Method 'put_EraserWidth'
    // TODO: Method 'putref_Picture'
    // TODO: Method 'put_Picture'
    // TODO: Method 'get_Picture'
    // TODO: Method 'put_SizeMode'
    // TODO: Method 'get_SizeMode'
    // TODO: Method 'put_BackColor'
    // TODO: Method 'get_BackColor'
    // TODO: Method 'get_Cursors'
    // TODO: Method 'get_MarginX'
    // TODO: Method 'put_MarginX'
    // TODO: Method 'get_MarginY'
    // TODO: Method 'put_MarginY'
    // TODO: Method 'get_Tablet'
    // TODO: Method 'get_SupportHighContrastInk'
    // TODO: Method 'put_SupportHighContrastInk'
    // TODO: Method 'get_SupportHighContrastSelectionUI'
    // TODO: Method 'put_SupportHighContrastSelectionUI'
    // TODO: Method 'HitTestSelection'
    // TODO: Method 'SetGestureStatus'
    // TODO: Method 'GetGestureStatus'
    // TODO: Method 'GetWindowInputRectangle'
    // TODO: Method 'SetWindowInputRectangle'
    // TODO: Method 'SetAllTabletsMode'
    // TODO: Method 'SetSingleTabletIntegratedMode'
    // TODO: Method 'GetEventInterest'
    // TODO: Method 'SetEventInterest'
    // TODO: Method 'get_InkEnabled'
    // TODO: Method 'put_InkEnabled'
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
};
// --------------------------------------------------------
// Type: _IInkPictureEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkPictureEvents = *opaque{
};
// --------------------------------------------------------
// Type: IInkRecognizer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognizer = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Vendor'
    // TODO: Method 'get_Capabilities'
    // TODO: Method 'get_Languages'
    // TODO: Method 'get_SupportedProperties'
    // TODO: Method 'get_PreferredPacketDescription'
    // TODO: Method 'CreateRecognizerContext'
};
// --------------------------------------------------------
// Type: IInkRecognizer2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognizer2 = *opaque{
    // TODO: Method 'get_Id'
    // TODO: Method 'get_UnicodeRanges'
};
// --------------------------------------------------------
// Type: IInkRecognizers
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognizers = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'GetDefaultRecognizer'
    // TODO: Method 'Item'
};
// --------------------------------------------------------
// Type: _IInkRecognitionEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkRecognitionEvents = *opaque{
};
// --------------------------------------------------------
// Type: IInkRecognizerContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognizerContext = *opaque{
    // TODO: Method 'get_Strokes'
    // TODO: Method 'putref_Strokes'
    // TODO: Method 'get_CharacterAutoCompletionMode'
    // TODO: Method 'put_CharacterAutoCompletionMode'
    // TODO: Method 'get_Factoid'
    // TODO: Method 'put_Factoid'
    // TODO: Method 'get_Guide'
    // TODO: Method 'putref_Guide'
    // TODO: Method 'get_PrefixText'
    // TODO: Method 'put_PrefixText'
    // TODO: Method 'get_SuffixText'
    // TODO: Method 'put_SuffixText'
    // TODO: Method 'get_RecognitionFlags'
    // TODO: Method 'put_RecognitionFlags'
    // TODO: Method 'get_WordList'
    // TODO: Method 'putref_WordList'
    // TODO: Method 'get_Recognizer'
    // TODO: Method 'Recognize'
    // TODO: Method 'StopBackgroundRecognition'
    // TODO: Method 'EndInkInput'
    // TODO: Method 'BackgroundRecognize'
    // TODO: Method 'BackgroundRecognizeWithAlternates'
    // TODO: Method 'Clone'
    // TODO: Method 'IsStringSupported'
};
// --------------------------------------------------------
// Type: IInkRecognizerContext2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognizerContext2 = *opaque{
    // TODO: Method 'get_EnabledUnicodeRanges'
    // TODO: Method 'put_EnabledUnicodeRanges'
};
// --------------------------------------------------------
// Type: IInkRecognitionResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognitionResult = *opaque{
    // TODO: Method 'get_TopString'
    // TODO: Method 'get_TopAlternate'
    // TODO: Method 'get_TopConfidence'
    // TODO: Method 'get_Strokes'
    // TODO: Method 'AlternatesFromSelection'
    // TODO: Method 'ModifyTopAlternate'
    // TODO: Method 'SetResultOnStrokes'
};
// --------------------------------------------------------
// Type: IInkRecognitionAlternate
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognitionAlternate = *opaque{
    // TODO: Method 'get_String'
    // TODO: Method 'get_Confidence'
    // TODO: Method 'get_Baseline'
    // TODO: Method 'get_Midline'
    // TODO: Method 'get_Ascender'
    // TODO: Method 'get_Descender'
    // TODO: Method 'get_LineNumber'
    // TODO: Method 'get_Strokes'
    // TODO: Method 'get_LineAlternates'
    // TODO: Method 'get_ConfidenceAlternates'
    // TODO: Method 'GetStrokesFromStrokeRanges'
    // TODO: Method 'GetStrokesFromTextRange'
    // TODO: Method 'GetTextRangeFromStrokes'
    // TODO: Method 'AlternatesWithConstantPropertyValues'
    // TODO: Method 'GetPropertyValue'
};
// --------------------------------------------------------
// Type: IInkRecognitionAlternates
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognitionAlternates = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Strokes'
    // TODO: Method 'Item'
};
// --------------------------------------------------------
// Type: IInkRecognizerGuide
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkRecognizerGuide = *opaque{
    // TODO: Method 'get_WritingBox'
    // TODO: Method 'put_WritingBox'
    // TODO: Method 'get_DrawnBox'
    // TODO: Method 'put_DrawnBox'
    // TODO: Method 'get_Rows'
    // TODO: Method 'put_Rows'
    // TODO: Method 'get_Columns'
    // TODO: Method 'put_Columns'
    // TODO: Method 'get_Midline'
    // TODO: Method 'put_Midline'
    // TODO: Method 'get_GuideData'
    // TODO: Method 'put_GuideData'
};
// --------------------------------------------------------
// Type: IInkWordList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkWordList = *opaque{
    // TODO: Method 'AddWord'
    // TODO: Method 'RemoveWord'
    // TODO: Method 'Merge'
};
// --------------------------------------------------------
// Type: IInkWordList2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkWordList2 = *opaque{
    // TODO: Method 'AddWords'
};
// --------------------------------------------------------
// Type: IInk
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInk = *opaque{
};
// --------------------------------------------------------
// Type: IInkLineInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkLineInfo = *opaque{
    // TODO: Method 'SetFormat'
    // TODO: Method 'GetFormat'
    // TODO: Method 'GetInkExtent'
    // TODO: Method 'GetCandidate'
    // TODO: Method 'SetCandidate'
    // TODO: Method 'Recognize'
};
// --------------------------------------------------------
// Type: ISketchInk
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISketchInk = *opaque{
};
// --------------------------------------------------------
// Type: InkDivider
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkDivider = opaque {
};
// --------------------------------------------------------
// Type: InkDivisionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkDivisionType = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkDivider
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkDivider = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkDivisionResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkDivisionResult = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkDivisionUnit
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkDivisionUnit = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkDivisionUnits
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkDivisionUnits = *opaque{
};
// --------------------------------------------------------
// Type: IInkDivider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkDivider = *opaque{
    // TODO: Method 'get_Strokes'
    // TODO: Method 'putref_Strokes'
    // TODO: Method 'get_RecognizerContext'
    // TODO: Method 'putref_RecognizerContext'
    // TODO: Method 'get_LineHeight'
    // TODO: Method 'put_LineHeight'
    // TODO: Method 'Divide'
};
// --------------------------------------------------------
// Type: IInkDivisionResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkDivisionResult = *opaque{
    // TODO: Method 'get_Strokes'
    // TODO: Method 'ResultByType'
};
// --------------------------------------------------------
// Type: IInkDivisionUnit
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkDivisionUnit = *opaque{
    // TODO: Method 'get_Strokes'
    // TODO: Method 'get_DivisionType'
    // TODO: Method 'get_RecognizedString'
    // TODO: Method 'get_RotationTransform'
};
// --------------------------------------------------------
// Type: IInkDivisionUnits
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkDivisionUnits = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
};
// --------------------------------------------------------
// Type: HandwrittenTextInsertion
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const HandwrittenTextInsertion = opaque {
};
// --------------------------------------------------------
// Type: PenInputPanel
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PenInputPanel = opaque {
};
// --------------------------------------------------------
// Type: TextInputPanel
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const TextInputPanel = opaque {
};
// --------------------------------------------------------
// Type: PenInputPanel_Internal
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PenInputPanel_Internal = opaque {
};
// --------------------------------------------------------
// Type: DISPID_PenInputPanel
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_PenInputPanel = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_PenInputPanelEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_PenInputPanelEvents = *opaque{
};
// --------------------------------------------------------
// Type: VisualState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VisualState = *opaque{
};
// --------------------------------------------------------
// Type: InteractionMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InteractionMode = *opaque{
};
// --------------------------------------------------------
// Type: InPlaceState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InPlaceState = *opaque{
};
// --------------------------------------------------------
// Type: PanelInputArea
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PanelInputArea = *opaque{
};
// --------------------------------------------------------
// Type: CorrectionMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CorrectionMode = *opaque{
};
// --------------------------------------------------------
// Type: CorrectionPosition
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CorrectionPosition = *opaque{
};
// --------------------------------------------------------
// Type: InPlaceDirection
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InPlaceDirection = *opaque{
};
// --------------------------------------------------------
// Type: EventMask
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EventMask = *opaque{
};
// --------------------------------------------------------
// Type: PanelType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PanelType = *opaque{
};
// --------------------------------------------------------
// Type: IPenInputPanel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPenInputPanel = *opaque{
    // TODO: Method 'get_Busy'
    // TODO: Method 'get_Factoid'
    // TODO: Method 'put_Factoid'
    // TODO: Method 'get_AttachedEditWindow'
    // TODO: Method 'put_AttachedEditWindow'
    // TODO: Method 'get_CurrentPanel'
    // TODO: Method 'put_CurrentPanel'
    // TODO: Method 'get_DefaultPanel'
    // TODO: Method 'put_DefaultPanel'
    // TODO: Method 'get_Visible'
    // TODO: Method 'put_Visible'
    // TODO: Method 'get_Top'
    // TODO: Method 'get_Left'
    // TODO: Method 'get_Width'
    // TODO: Method 'get_Height'
    // TODO: Method 'get_VerticalOffset'
    // TODO: Method 'put_VerticalOffset'
    // TODO: Method 'get_HorizontalOffset'
    // TODO: Method 'put_HorizontalOffset'
    // TODO: Method 'get_AutoShow'
    // TODO: Method 'put_AutoShow'
    // TODO: Method 'MoveTo'
    // TODO: Method 'CommitPendingInput'
    // TODO: Method 'Refresh'
    // TODO: Method 'EnableTsf'
};
// --------------------------------------------------------
// Type: _IPenInputPanelEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IPenInputPanelEvents = *opaque{
};
// --------------------------------------------------------
// Type: IHandwrittenTextInsertion
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IHandwrittenTextInsertion = *opaque{
    // TODO: Method 'InsertRecognitionResultsArray'
    // TODO: Method 'InsertInkRecognitionResult'
};
// --------------------------------------------------------
// Type: ITextInputPanelEventSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextInputPanelEventSink = *opaque{
    // TODO: Method 'InPlaceStateChanging'
    // TODO: Method 'InPlaceStateChanged'
    // TODO: Method 'InPlaceSizeChanging'
    // TODO: Method 'InPlaceSizeChanged'
    // TODO: Method 'InputAreaChanging'
    // TODO: Method 'InputAreaChanged'
    // TODO: Method 'CorrectionModeChanging'
    // TODO: Method 'CorrectionModeChanged'
    // TODO: Method 'InPlaceVisibilityChanging'
    // TODO: Method 'InPlaceVisibilityChanged'
    // TODO: Method 'TextInserting'
    // TODO: Method 'TextInserted'
};
// --------------------------------------------------------
// Type: ITextInputPanel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextInputPanel = *opaque{
    // TODO: Method 'get_AttachedEditWindow'
    // TODO: Method 'put_AttachedEditWindow'
    // TODO: Method 'get_CurrentInteractionMode'
    // TODO: Method 'get_DefaultInPlaceState'
    // TODO: Method 'put_DefaultInPlaceState'
    // TODO: Method 'get_CurrentInPlaceState'
    // TODO: Method 'get_DefaultInputArea'
    // TODO: Method 'put_DefaultInputArea'
    // TODO: Method 'get_CurrentInputArea'
    // TODO: Method 'get_CurrentCorrectionMode'
    // TODO: Method 'get_PreferredInPlaceDirection'
    // TODO: Method 'put_PreferredInPlaceDirection'
    // TODO: Method 'get_ExpandPostInsertionCorrection'
    // TODO: Method 'put_ExpandPostInsertionCorrection'
    // TODO: Method 'get_InPlaceVisibleOnFocus'
    // TODO: Method 'put_InPlaceVisibleOnFocus'
    // TODO: Method 'get_InPlaceBoundingRectangle'
    // TODO: Method 'get_PopUpCorrectionHeight'
    // TODO: Method 'get_PopDownCorrectionHeight'
    // TODO: Method 'CommitPendingInput'
    // TODO: Method 'SetInPlaceVisibility'
    // TODO: Method 'SetInPlacePosition'
    // TODO: Method 'SetInPlaceHoverTargetPosition'
    // TODO: Method 'Advise'
    // TODO: Method 'Unadvise'
};
// --------------------------------------------------------
// Type: IInputPanelWindowHandle
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInputPanelWindowHandle = *opaque{
    // TODO: Method 'get_AttachedEditWindow32'
    // TODO: Method 'put_AttachedEditWindow32'
    // TODO: Method 'get_AttachedEditWindow64'
    // TODO: Method 'put_AttachedEditWindow64'
};
// --------------------------------------------------------
// Type: ITextInputPanelRunInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextInputPanelRunInfo = *opaque{
    // TODO: Method 'IsTipRunning'
};
// --------------------------------------------------------
// Type: FLICKDIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FLICKDIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: FLICKMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FLICKMODE = *opaque{
};
// --------------------------------------------------------
// Type: FLICKACTION_COMMANDCODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FLICKACTION_COMMANDCODE = *opaque{
};
// --------------------------------------------------------
// Type: FLICK_POINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FLICK_POINT = extern struct {
    _bitfield: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: FLICK_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FLICK_DATA = extern struct {
    _bitfield: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: SCROLLDIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SCROLLDIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: KEYMODIFIER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KEYMODIFIER = *opaque{
};
// --------------------------------------------------------
// Type: InkEdit
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const InkEdit = opaque {
};
// --------------------------------------------------------
// Type: IEC_STROKEINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IEC_STROKEINFO = extern struct {
    nmhdr: Windows.Win32.Controls.NMHDR,
    Cursor: Windows.Win32.TabletPC.IInkCursor,
    Stroke: Windows.Win32.TabletPC.IInkStrokeDisp,
};
// --------------------------------------------------------
// Type: IEC_GESTUREINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IEC_GESTUREINFO = extern struct {
    nmhdr: Windows.Win32.Controls.NMHDR,
    Cursor: Windows.Win32.TabletPC.IInkCursor,
    Strokes: Windows.Win32.TabletPC.IInkStrokes,
    Gestures: Windows.Win32.Automation.VARIANT,
};
// --------------------------------------------------------
// Type: IEC_RECOGNITIONRESULTINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IEC_RECOGNITIONRESULTINFO = extern struct {
    nmhdr: Windows.Win32.Controls.NMHDR,
    RecognitionResult: Windows.Win32.TabletPC.IInkRecognitionResult,
};
// --------------------------------------------------------
// Type: MouseButton
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MouseButton = *opaque{
};
// --------------------------------------------------------
// Type: SelAlignmentConstants
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SelAlignmentConstants = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkEdit
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkEdit = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_InkEditEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_InkEditEvents = *opaque{
};
// --------------------------------------------------------
// Type: InkMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkMode = *opaque{
};
// --------------------------------------------------------
// Type: InkInsertMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkInsertMode = *opaque{
};
// --------------------------------------------------------
// Type: InkEditStatus
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkEditStatus = *opaque{
};
// --------------------------------------------------------
// Type: InkDisplayMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InkDisplayMode = *opaque{
};
// --------------------------------------------------------
// Type: AppearanceConstants
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AppearanceConstants = *opaque{
};
// --------------------------------------------------------
// Type: BorderStyleConstants
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BorderStyleConstants = *opaque{
};
// --------------------------------------------------------
// Type: ScrollBarsConstants
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ScrollBarsConstants = *opaque{
};
// --------------------------------------------------------
// Type: IInkEdit
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInkEdit = *opaque{
    // TODO: Method 'get_Status'
    // TODO: Method 'get_UseMouseForInput'
    // TODO: Method 'put_UseMouseForInput'
    // TODO: Method 'get_InkMode'
    // TODO: Method 'put_InkMode'
    // TODO: Method 'get_InkInsertMode'
    // TODO: Method 'put_InkInsertMode'
    // TODO: Method 'get_DrawingAttributes'
    // TODO: Method 'putref_DrawingAttributes'
    // TODO: Method 'get_RecognitionTimeout'
    // TODO: Method 'put_RecognitionTimeout'
    // TODO: Method 'get_Recognizer'
    // TODO: Method 'putref_Recognizer'
    // TODO: Method 'get_Factoid'
    // TODO: Method 'put_Factoid'
    // TODO: Method 'get_SelInks'
    // TODO: Method 'put_SelInks'
    // TODO: Method 'get_SelInksDisplayMode'
    // TODO: Method 'put_SelInksDisplayMode'
    // TODO: Method 'Recognize'
    // TODO: Method 'GetGestureStatus'
    // TODO: Method 'SetGestureStatus'
    // TODO: Method 'put_BackColor'
    // TODO: Method 'get_BackColor'
    // TODO: Method 'get_Appearance'
    // TODO: Method 'put_Appearance'
    // TODO: Method 'get_BorderStyle'
    // TODO: Method 'put_BorderStyle'
    // TODO: Method 'get_Hwnd'
    // TODO: Method 'get_Font'
    // TODO: Method 'putref_Font'
    // TODO: Method 'get_Text'
    // TODO: Method 'put_Text'
    // TODO: Method 'get_MouseIcon'
    // TODO: Method 'put_MouseIcon'
    // TODO: Method 'putref_MouseIcon'
    // TODO: Method 'get_MousePointer'
    // TODO: Method 'put_MousePointer'
    // TODO: Method 'get_Locked'
    // TODO: Method 'put_Locked'
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_MaxLength'
    // TODO: Method 'put_MaxLength'
    // TODO: Method 'get_MultiLine'
    // TODO: Method 'put_MultiLine'
    // TODO: Method 'get_ScrollBars'
    // TODO: Method 'put_ScrollBars'
    // TODO: Method 'get_DisableNoScroll'
    // TODO: Method 'put_DisableNoScroll'
    // TODO: Method 'get_SelAlignment'
    // TODO: Method 'put_SelAlignment'
    // TODO: Method 'get_SelBold'
    // TODO: Method 'put_SelBold'
    // TODO: Method 'get_SelItalic'
    // TODO: Method 'put_SelItalic'
    // TODO: Method 'get_SelUnderline'
    // TODO: Method 'put_SelUnderline'
    // TODO: Method 'get_SelColor'
    // TODO: Method 'put_SelColor'
    // TODO: Method 'get_SelFontName'
    // TODO: Method 'put_SelFontName'
    // TODO: Method 'get_SelFontSize'
    // TODO: Method 'put_SelFontSize'
    // TODO: Method 'get_SelCharOffset'
    // TODO: Method 'put_SelCharOffset'
    // TODO: Method 'get_TextRTF'
    // TODO: Method 'put_TextRTF'
    // TODO: Method 'get_SelStart'
    // TODO: Method 'put_SelStart'
    // TODO: Method 'get_SelLength'
    // TODO: Method 'put_SelLength'
    // TODO: Method 'get_SelText'
    // TODO: Method 'put_SelText'
    // TODO: Method 'get_SelRTF'
    // TODO: Method 'put_SelRTF'
    // TODO: Method 'Refresh'
};
// --------------------------------------------------------
// Type: _IInkEditEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IInkEditEvents = *opaque{
};
// --------------------------------------------------------
// Type: MathInputControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MathInputControl = opaque {
};
// --------------------------------------------------------
// Type: MICUIELEMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MICUIELEMENT = *opaque{
};
// --------------------------------------------------------
// Type: MICUIELEMENTSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MICUIELEMENTSTATE = *opaque{
};
// --------------------------------------------------------
// Type: DISPID_MathInputControlEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DISPID_MathInputControlEvents = *opaque{
};
// --------------------------------------------------------
// Type: IMathInputControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMathInputControl = *opaque{
    // TODO: Method 'Show'
    // TODO: Method 'Hide'
    // TODO: Method 'IsVisible'
    // TODO: Method 'GetPosition'
    // TODO: Method 'SetPosition'
    // TODO: Method 'Clear'
    // TODO: Method 'SetCustomPaint'
    // TODO: Method 'SetCaptionText'
    // TODO: Method 'LoadInk'
    // TODO: Method 'SetOwnerWindow'
    // TODO: Method 'EnableExtendedButtons'
    // TODO: Method 'GetPreviewHeight'
    // TODO: Method 'SetPreviewHeight'
    // TODO: Method 'EnableAutoGrow'
    // TODO: Method 'AddFunctionName'
    // TODO: Method 'RemoveFunctionName'
    // TODO: Method 'GetHoverIcon'
};
// --------------------------------------------------------
// Type: _IMathInputControlEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IMathInputControlEvents = *opaque{
};
// --------------------------------------------------------
// Type: RealTimeStylus
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const RealTimeStylus = opaque {
};
// --------------------------------------------------------
// Type: DynamicRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DynamicRenderer = opaque {
};
// --------------------------------------------------------
// Type: GestureRecognizer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const GestureRecognizer = opaque {
};
// --------------------------------------------------------
// Type: StrokeBuilder
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const StrokeBuilder = opaque {
};
// --------------------------------------------------------
// Type: RealTimeStylusDataInterest
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RealTimeStylusDataInterest = *opaque{
};
// --------------------------------------------------------
// Type: StylusInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const StylusInfo = extern struct {
    tcid: {"kind":"UInt32"},
    cid: {"kind":"UInt32"},
    bIsInvertedCursor: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: StylusQueue
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const StylusQueue = *opaque{
};
// --------------------------------------------------------
// Type: RealTimeStylusLockType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RealTimeStylusLockType = *opaque{
};
// --------------------------------------------------------
// Type: GESTURE_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GESTURE_DATA = extern struct {
    gestureId: {"kind":"Int32"},
    recoConfidence: {"kind":"Int32"},
    strokeCount: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DYNAMIC_RENDERER_CACHED_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DYNAMIC_RENDERER_CACHED_DATA = extern struct {
    strokeId: {"kind":"Int32"},
    dynamicRenderer: Windows.Win32.TabletPC.IDynamicRenderer,
};
// --------------------------------------------------------
// Type: IRealTimeStylus
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRealTimeStylus = *opaque{
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_HWND'
    // TODO: Method 'put_HWND'
    // TODO: Method 'get_WindowInputRectangle'
    // TODO: Method 'put_WindowInputRectangle'
    // TODO: Method 'AddStylusSyncPlugin'
    // TODO: Method 'RemoveStylusSyncPlugin'
    // TODO: Method 'RemoveAllStylusSyncPlugins'
    // TODO: Method 'GetStylusSyncPlugin'
    // TODO: Method 'GetStylusSyncPluginCount'
    // TODO: Method 'AddStylusAsyncPlugin'
    // TODO: Method 'RemoveStylusAsyncPlugin'
    // TODO: Method 'RemoveAllStylusAsyncPlugins'
    // TODO: Method 'GetStylusAsyncPlugin'
    // TODO: Method 'GetStylusAsyncPluginCount'
    // TODO: Method 'get_ChildRealTimeStylusPlugin'
    // TODO: Method 'putref_ChildRealTimeStylusPlugin'
    // TODO: Method 'AddCustomStylusDataToQueue'
    // TODO: Method 'ClearStylusQueues'
    // TODO: Method 'SetAllTabletsMode'
    // TODO: Method 'SetSingleTabletMode'
    // TODO: Method 'GetTablet'
    // TODO: Method 'GetTabletContextIdFromTablet'
    // TODO: Method 'GetTabletFromTabletContextId'
    // TODO: Method 'GetAllTabletContextIds'
    // TODO: Method 'GetStyluses'
    // TODO: Method 'GetStylusForId'
    // TODO: Method 'SetDesiredPacketDescription'
    // TODO: Method 'GetDesiredPacketDescription'
    // TODO: Method 'GetPacketDescriptionData'
};
// --------------------------------------------------------
// Type: IRealTimeStylus2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRealTimeStylus2 = *opaque{
    // TODO: Method 'get_FlicksEnabled'
    // TODO: Method 'put_FlicksEnabled'
};
// --------------------------------------------------------
// Type: IRealTimeStylus3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRealTimeStylus3 = *opaque{
    // TODO: Method 'get_MultiTouchEnabled'
    // TODO: Method 'put_MultiTouchEnabled'
};
// --------------------------------------------------------
// Type: IRealTimeStylusSynchronization
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRealTimeStylusSynchronization = *opaque{
    // TODO: Method 'AcquireLock'
    // TODO: Method 'ReleaseLock'
};
// --------------------------------------------------------
// Type: IStrokeBuilder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStrokeBuilder = *opaque{
    // TODO: Method 'CreateStroke'
    // TODO: Method 'BeginStroke'
    // TODO: Method 'AppendPackets'
    // TODO: Method 'EndStroke'
    // TODO: Method 'get_Ink'
    // TODO: Method 'putref_Ink'
};
// --------------------------------------------------------
// Type: IStylusPlugin
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStylusPlugin = *opaque{
    // TODO: Method 'RealTimeStylusEnabled'
    // TODO: Method 'RealTimeStylusDisabled'
    // TODO: Method 'StylusInRange'
    // TODO: Method 'StylusOutOfRange'
    // TODO: Method 'StylusDown'
    // TODO: Method 'StylusUp'
    // TODO: Method 'StylusButtonDown'
    // TODO: Method 'StylusButtonUp'
    // TODO: Method 'InAirPackets'
    // TODO: Method 'Packets'
    // TODO: Method 'CustomStylusDataAdded'
    // TODO: Method 'SystemEvent'
    // TODO: Method 'TabletAdded'
    // TODO: Method 'TabletRemoved'
    // TODO: Method 'Error'
    // TODO: Method 'UpdateMapping'
    // TODO: Method 'DataInterest'
};
// --------------------------------------------------------
// Type: IStylusSyncPlugin
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStylusSyncPlugin = *opaque{
};
// --------------------------------------------------------
// Type: IStylusAsyncPlugin
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStylusAsyncPlugin = *opaque{
};
// --------------------------------------------------------
// Type: IDynamicRenderer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDynamicRenderer = *opaque{
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_HWND'
    // TODO: Method 'put_HWND'
    // TODO: Method 'get_ClipRectangle'
    // TODO: Method 'put_ClipRectangle'
    // TODO: Method 'get_ClipRegion'
    // TODO: Method 'put_ClipRegion'
    // TODO: Method 'get_DrawingAttributes'
    // TODO: Method 'putref_DrawingAttributes'
    // TODO: Method 'get_DataCacheEnabled'
    // TODO: Method 'put_DataCacheEnabled'
    // TODO: Method 'ReleaseCachedData'
    // TODO: Method 'Refresh'
    // TODO: Method 'Draw'
};
// --------------------------------------------------------
// Type: IGestureRecognizer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGestureRecognizer = *opaque{
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_MaxStrokeCount'
    // TODO: Method 'put_MaxStrokeCount'
    // TODO: Method 'EnableGestures'
    // TODO: Method 'Reset'
};
// --------------------------------------------------------
// Type: RECO_GUIDE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_GUIDE = extern struct {
    xOrigin: {"kind":"Int32"},
    yOrigin: {"kind":"Int32"},
    cxBox: {"kind":"Int32"},
    cyBox: {"kind":"Int32"},
    cxBase: {"kind":"Int32"},
    cyBase: {"kind":"Int32"},
    cHorzBox: {"kind":"Int32"},
    cVertBox: {"kind":"Int32"},
    cyMid: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: RECO_ATTRS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_ATTRS = extern struct {
    dwRecoCapabilityFlags: {"kind":"UInt32"},
    awcVendorName: {"kind":"Array","child": {"kind":"UInt16"}},
    awcFriendlyName: {"kind":"Array","child": {"kind":"UInt16"}},
    awLanguageId: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: RECO_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_RANGE = extern struct {
    iwcBegin: {"kind":"UInt32"},
    cCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: LINE_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LINE_SEGMENT = extern struct {
    PtA: Windows.Win32.DisplayDevices.POINT,
    PtB: Windows.Win32.DisplayDevices.POINT,
};
// --------------------------------------------------------
// Type: LATTICE_METRICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LATTICE_METRICS = extern struct {
    lsBaseline: Windows.Win32.TabletPC.LINE_SEGMENT,
    iMidlineOffset: {"kind":"Int16"},
};
// --------------------------------------------------------
// Type: LINE_METRICS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LINE_METRICS = *opaque{
};
// --------------------------------------------------------
// Type: CONFIDENCE_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CONFIDENCE_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: ALT_BREAKS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ALT_BREAKS = *opaque{
};
// --------------------------------------------------------
// Type: enumRECO_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const enumRECO_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: RECO_LATTICE_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_LATTICE_PROPERTY = extern struct {
    guidProperty: Guid,
    cbPropertyValue: {"kind":"UInt16"},
    pPropertyValue: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: RECO_LATTICE_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_LATTICE_PROPERTIES = extern struct {
    cProperties: {"kind":"UInt32"},
    apProps: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.TabletPC.RECO_LATTICE_PROPERTY}},
};
// --------------------------------------------------------
// Type: RECO_LATTICE_ELEMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_LATTICE_ELEMENT = extern struct {
    score: {"kind":"Int32"},
    type: {"kind":"UInt16"},
    pData: {"kind""Ptr","child":{"kind":"Byte"}},
    ulNextColumn: {"kind":"UInt32"},
    ulStrokeNumber: {"kind":"UInt32"},
    epProp: Windows.Win32.TabletPC.RECO_LATTICE_PROPERTIES,
};
// --------------------------------------------------------
// Type: RECO_LATTICE_COLUMN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_LATTICE_COLUMN = extern struct {
    key: {"kind":"UInt32"},
    cpProp: Windows.Win32.TabletPC.RECO_LATTICE_PROPERTIES,
    cStrokes: {"kind":"UInt32"},
    pStrokes: {"kind""Ptr","child":{"kind":"UInt32"}},
    cLatticeElements: {"kind":"UInt32"},
    pLatticeElements: {"kind""Ptr","child":Windows.Win32.TabletPC.RECO_LATTICE_ELEMENT},
};
// --------------------------------------------------------
// Type: RECO_LATTICE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RECO_LATTICE = extern struct {
    ulColumnCount: {"kind":"UInt32"},
    pLatticeColumns: {"kind""Ptr","child":Windows.Win32.TabletPC.RECO_LATTICE_COLUMN},
    ulPropertyCount: {"kind":"UInt32"},
    pGuidProperties: {"kind""Ptr","child":Guid},
    ulBestResultColumnCount: {"kind":"UInt32"},
    pulBestResultColumns: {"kind""Ptr","child":{"kind":"UInt32"}},
    pulBestResultIndexes: {"kind""Ptr","child":{"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: CHARACTER_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CHARACTER_RANGE = extern struct {
    wcLow: {"kind":"UInt16"},
    cChars: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: HRECOALT__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HRECOALT__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HRECOCONTEXT__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HRECOCONTEXT__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HRECOGNIZER__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HRECOGNIZER__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HRECOLATTICE__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HRECOLATTICE__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HRECOWORDLIST__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HRECOWORDLIST__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: TipAutoCompleteClient
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const TipAutoCompleteClient = opaque {
};
// --------------------------------------------------------
// Type: ITipAutoCompleteProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITipAutoCompleteProvider = *opaque{
    // TODO: Method 'UpdatePendingText'
    // TODO: Method 'Show'
};
// --------------------------------------------------------
// Type: ITipAutoCompleteClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITipAutoCompleteClient = *opaque{
    // TODO: Method 'AdviseProvider'
    // TODO: Method 'UnadviseProvider'
    // TODO: Method 'UserSelection'
    // TODO: Method 'PreferredRects'
    // TODO: Method 'RequestShowUI'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn CreateRecognizer(
    pCLSID: {"kind""Ptr","child":Guid},
    phrec: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn DestroyRecognizer(
    hrec: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetRecoAttributes(
    hrec: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__},
    pRecoAttrs: {"kind""Ptr","child":Windows.Win32.TabletPC.RECO_ATTRS},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn CreateContext(
    hrec: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__},
    phrc: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn DestroyContext(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetResultPropertyList(
    hrec: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__},
    pPropertyCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    pPropertyGuid: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetUnicodeRanges(
    hrec: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__},
    pcRanges: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcr: {"kind""Ptr","child":Windows.Win32.TabletPC.CHARACTER_RANGE},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn AddStroke(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    pPacketDesc: {"kind""Ptr","child":Windows.Win32.TabletPC.PACKET_DESCRIPTION},
    cbPacket: {"kind":"UInt32"},
    pPacket: {"kind""Ptr","child":{"kind":"Byte"}},
    pXForm: {"kind""Ptr","child":Windows.Win32.Gdi.XFORM},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetBestResultString(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    pcSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pwcBestResult: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn SetGuide(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    pGuide: {"kind""Ptr","child":Windows.Win32.TabletPC.RECO_GUIDE},
    iIndex: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn AdviseInkChange(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    bNewStroke: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn EndInkInput(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn Process(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    pbPartialProcessing: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn SetFactoid(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    cwcFactoid: {"kind":"UInt32"},
    pwcFactoid: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn SetFlags(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetLatticePtr(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    ppLattice: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.TabletPC.RECO_LATTICE}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn SetTextContext(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    cwcBefore: {"kind":"UInt32"},
    pwcBefore: {"kind""Ptr","child":{"kind":"UInt16"}},
    cwcAfter: {"kind":"UInt32"},
    pwcAfter: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn SetEnabledUnicodeRanges(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    cRanges: {"kind":"UInt32"},
    pcr: {"kind""Ptr","child":Windows.Win32.TabletPC.CHARACTER_RANGE},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn IsStringSupported(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    wcString: {"kind":"UInt32"},
    pwcString: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn SetWordList(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    hwl: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOWORDLIST__},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetRightSeparator(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    pcSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pwcRightSeparator: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetLeftSeparator(
    hrc: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOCONTEXT__},
    pcSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pwcLeftSeparator: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn DestroyWordList(
    hwl: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOWORDLIST__},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn AddWordsToWordList(
    hwl: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOWORDLIST__},
    pwcWords: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn MakeWordList(
    hrec: {"kind""Ptr","child":Windows.Win32.TabletPC.HRECOGNIZER__},
    pBuffer: {"kind""Ptr","child":{"kind":"UInt16"}},
    phwl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.TabletPC.HRECOWORDLIST__}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn GetAllRecognizers(
    recognizerClsids: {"kind""Ptr","child":{"kind""Ptr","child":Guid}},
    count: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "inkobjcore" fn LoadCachedAttributes(
    clsid: Guid,
    pRecoAttributes: {"kind""Ptr","child":Windows.Win32.TabletPC.RECO_ATTRS},
],

"unicode_aliases": [
]}
