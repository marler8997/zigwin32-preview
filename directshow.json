{
"constants": [
     {
         "name": "g_wszExcludeScriptStreamDeliverySynchronization"
        ,"type": {"kind":"String"}
        ,"value": "ExcludeScriptStreamDeliverySynchronization"
    }
    ,{
         "name": "g_wszStreamBufferRecordingDuration"
        ,"type": {"kind":"String"}
        ,"value": "Duration"
    }
    ,{
         "name": "g_wszStreamBufferRecordingBitrate"
        ,"type": {"kind":"String"}
        ,"value": "Bitrate"
    }
    ,{
         "name": "g_wszStreamBufferRecordingSeekable"
        ,"type": {"kind":"String"}
        ,"value": "Seekable"
    }
    ,{
         "name": "g_wszStreamBufferRecordingStridable"
        ,"type": {"kind":"String"}
        ,"value": "Stridable"
    }
    ,{
         "name": "g_wszStreamBufferRecordingBroadcast"
        ,"type": {"kind":"String"}
        ,"value": "Broadcast"
    }
    ,{
         "name": "g_wszStreamBufferRecordingProtected"
        ,"type": {"kind":"String"}
        ,"value": "Is_Protected"
    }
    ,{
         "name": "g_wszStreamBufferRecordingTrusted"
        ,"type": {"kind":"String"}
        ,"value": "Is_Trusted"
    }
    ,{
         "name": "g_wszStreamBufferRecordingSignature_Name"
        ,"type": {"kind":"String"}
        ,"value": "Signature_Name"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasAudio"
        ,"type": {"kind":"String"}
        ,"value": "HasAudio"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasImage"
        ,"type": {"kind":"String"}
        ,"value": "HasImage"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasScript"
        ,"type": {"kind":"String"}
        ,"value": "HasScript"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasVideo"
        ,"type": {"kind":"String"}
        ,"value": "HasVideo"
    }
    ,{
         "name": "g_wszStreamBufferRecordingCurrentBitrate"
        ,"type": {"kind":"String"}
        ,"value": "CurrentBitrate"
    }
    ,{
         "name": "g_wszStreamBufferRecordingOptimalBitrate"
        ,"type": {"kind":"String"}
        ,"value": "OptimalBitrate"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasAttachedImages"
        ,"type": {"kind":"String"}
        ,"value": "HasAttachedImages"
    }
    ,{
         "name": "g_wszStreamBufferRecordingSkipBackward"
        ,"type": {"kind":"String"}
        ,"value": "Can_Skip_Backward"
    }
    ,{
         "name": "g_wszStreamBufferRecordingSkipForward"
        ,"type": {"kind":"String"}
        ,"value": "Can_Skip_Forward"
    }
    ,{
         "name": "g_wszStreamBufferRecordingNumberOfFrames"
        ,"type": {"kind":"String"}
        ,"value": "NumberOfFrames"
    }
    ,{
         "name": "g_wszStreamBufferRecordingFileSize"
        ,"type": {"kind":"String"}
        ,"value": "FileSize"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasArbitraryDataStream"
        ,"type": {"kind":"String"}
        ,"value": "HasArbitraryDataStream"
    }
    ,{
         "name": "g_wszStreamBufferRecordingHasFileTransferStream"
        ,"type": {"kind":"String"}
        ,"value": "HasFileTransferStream"
    }
    ,{
         "name": "g_wszStreamBufferRecordingTitle"
        ,"type": {"kind":"String"}
        ,"value": "Title"
    }
    ,{
         "name": "g_wszStreamBufferRecordingAuthor"
        ,"type": {"kind":"String"}
        ,"value": "Author"
    }
    ,{
         "name": "g_wszStreamBufferRecordingDescription"
        ,"type": {"kind":"String"}
        ,"value": "Description"
    }
    ,{
         "name": "g_wszStreamBufferRecordingRating"
        ,"type": {"kind":"String"}
        ,"value": "Rating"
    }
    ,{
         "name": "g_wszStreamBufferRecordingCopyright"
        ,"type": {"kind":"String"}
        ,"value": "Copyright"
    }
    ,{
         "name": "g_wszStreamBufferRecordingUse_DRM"
        ,"type": {"kind":"String"}
        ,"value": "Use_DRM"
    }
    ,{
         "name": "g_wszStreamBufferRecordingDRM_Flags"
        ,"type": {"kind":"String"}
        ,"value": "DRM_Flags"
    }
    ,{
         "name": "g_wszStreamBufferRecordingDRM_Level"
        ,"type": {"kind":"String"}
        ,"value": "DRM_Level"
    }
    ,{
         "name": "g_wszStreamBufferRecordingAlbumTitle"
        ,"type": {"kind":"String"}
        ,"value": "WM/AlbumTitle"
    }
    ,{
         "name": "g_wszStreamBufferRecordingTrack"
        ,"type": {"kind":"String"}
        ,"value": "WM/Track"
    }
    ,{
         "name": "g_wszStreamBufferRecordingPromotionURL"
        ,"type": {"kind":"String"}
        ,"value": "WM/PromotionURL"
    }
    ,{
         "name": "g_wszStreamBufferRecordingAlbumCoverURL"
        ,"type": {"kind":"String"}
        ,"value": "WM/AlbumCoverURL"
    }
    ,{
         "name": "g_wszStreamBufferRecordingGenre"
        ,"type": {"kind":"String"}
        ,"value": "WM/Genre"
    }
    ,{
         "name": "g_wszStreamBufferRecordingYear"
        ,"type": {"kind":"String"}
        ,"value": "WM/Year"
    }
    ,{
         "name": "g_wszStreamBufferRecordingGenreID"
        ,"type": {"kind":"String"}
        ,"value": "WM/GenreID"
    }
    ,{
         "name": "g_wszStreamBufferRecordingMCDI"
        ,"type": {"kind":"String"}
        ,"value": "WM/MCDI"
    }
    ,{
         "name": "g_wszStreamBufferRecordingComposer"
        ,"type": {"kind":"String"}
        ,"value": "WM/Composer"
    }
    ,{
         "name": "g_wszStreamBufferRecordingLyrics"
        ,"type": {"kind":"String"}
        ,"value": "WM/Lyrics"
    }
    ,{
         "name": "g_wszStreamBufferRecordingTrackNumber"
        ,"type": {"kind":"String"}
        ,"value": "WM/TrackNumber"
    }
    ,{
         "name": "g_wszStreamBufferRecordingToolName"
        ,"type": {"kind":"String"}
        ,"value": "WM/ToolName"
    }
    ,{
         "name": "g_wszStreamBufferRecordingToolVersion"
        ,"type": {"kind":"String"}
        ,"value": "WM/ToolVersion"
    }
    ,{
         "name": "g_wszStreamBufferRecordingIsVBR"
        ,"type": {"kind":"String"}
        ,"value": "IsVBR"
    }
    ,{
         "name": "g_wszStreamBufferRecordingAlbumArtist"
        ,"type": {"kind":"String"}
        ,"value": "WM/AlbumArtist"
    }
    ,{
         "name": "g_wszStreamBufferRecordingBannerImageType"
        ,"type": {"kind":"String"}
        ,"value": "BannerImageType"
    }
    ,{
         "name": "g_wszStreamBufferRecordingBannerImageData"
        ,"type": {"kind":"String"}
        ,"value": "BannerImageData"
    }
    ,{
         "name": "g_wszStreamBufferRecordingBannerImageURL"
        ,"type": {"kind":"String"}
        ,"value": "BannerImageURL"
    }
    ,{
         "name": "g_wszStreamBufferRecordingCopyrightURL"
        ,"type": {"kind":"String"}
        ,"value": "CopyrightURL"
    }
    ,{
         "name": "g_wszStreamBufferRecordingAspectRatioX"
        ,"type": {"kind":"String"}
        ,"value": "AspectRatioX"
    }
    ,{
         "name": "g_wszStreamBufferRecordingAspectRatioY"
        ,"type": {"kind":"String"}
        ,"value": "AspectRatioY"
    }
    ,{
         "name": "g_wszStreamBufferRecordingNSCName"
        ,"type": {"kind":"String"}
        ,"value": "NSC_Name"
    }
    ,{
         "name": "g_wszStreamBufferRecordingNSCAddress"
        ,"type": {"kind":"String"}
        ,"value": "NSC_Address"
    }
    ,{
         "name": "g_wszStreamBufferRecordingNSCPhone"
        ,"type": {"kind":"String"}
        ,"value": "NSC_Phone"
    }
    ,{
         "name": "g_wszStreamBufferRecordingNSCEmail"
        ,"type": {"kind":"String"}
        ,"value": "NSC_Email"
    }
    ,{
         "name": "g_wszStreamBufferRecordingNSCDescription"
        ,"type": {"kind":"String"}
        ,"value": "NSC_Description"
    }
    ,{
         "name": "STREAMBUFFER_EC_TIMEHOLE"
        ,"type": {"kind":"Int32"}
        ,"value": 806
    }
    ,{
         "name": "STREAMBUFFER_EC_STALE_DATA_READ"
        ,"type": {"kind":"Int32"}
        ,"value": 807
    }
    ,{
         "name": "STREAMBUFFER_EC_STALE_FILE_DELETED"
        ,"type": {"kind":"Int32"}
        ,"value": 808
    }
    ,{
         "name": "STREAMBUFFER_EC_CONTENT_BECOMING_STALE"
        ,"type": {"kind":"Int32"}
        ,"value": 809
    }
    ,{
         "name": "STREAMBUFFER_EC_WRITE_FAILURE"
        ,"type": {"kind":"Int32"}
        ,"value": 810
    }
    ,{
         "name": "STREAMBUFFER_EC_WRITE_FAILURE_CLEAR"
        ,"type": {"kind":"Int32"}
        ,"value": 811
    }
    ,{
         "name": "STREAMBUFFER_EC_READ_FAILURE"
        ,"type": {"kind":"Int32"}
        ,"value": 812
    }
    ,{
         "name": "STREAMBUFFER_EC_RATE_CHANGED"
        ,"type": {"kind":"Int32"}
        ,"value": 813
    }
    ,{
         "name": "STREAMBUFFER_EC_PRIMARY_AUDIO"
        ,"type": {"kind":"Int32"}
        ,"value": 814
    }
    ,{
         "name": "STREAMBUFFER_EC_RATE_CHANGING_FOR_SETPOSITIONS"
        ,"type": {"kind":"Int32"}
        ,"value": 815
    }
    ,{
         "name": "STREAMBUFFER_EC_SETPOSITIONS_EVENTS_DONE"
        ,"type": {"kind":"Int32"}
        ,"value": 816
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: READYSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const READYSTATE = *opaque{
};
// --------------------------------------------------------
// Type: DMO_MEDIA_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DMO_MEDIA_TYPE = extern struct {
    majortype: Guid,
    subtype: Guid,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    lSampleSize: {"kind":"UInt32"},
    formattype: Guid,
    pUnk: Windows.Win32.Com.IUnknown,
    cbFormat: {"kind":"UInt32"},
    pbFormat: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: IMediaBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaBuffer = *opaque{
    // TODO: Method 'SetLength'
    // TODO: Method 'GetMaxLength'
    // TODO: Method 'GetBufferAndLength'
};
// --------------------------------------------------------
// Type: DMO_OUTPUT_DATA_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DMO_OUTPUT_DATA_BUFFER = extern struct {
    pBuffer: Windows.Win32.DirectShow.IMediaBuffer,
    dwStatus: {"kind":"UInt32"},
    rtTimestamp: {"kind":"Int64"},
    rtTimelength: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: IMediaObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaObject = *opaque{
    // TODO: Method 'GetStreamCount'
    // TODO: Method 'GetInputStreamInfo'
    // TODO: Method 'GetOutputStreamInfo'
    // TODO: Method 'GetInputType'
    // TODO: Method 'GetOutputType'
    // TODO: Method 'SetInputType'
    // TODO: Method 'SetOutputType'
    // TODO: Method 'GetInputCurrentType'
    // TODO: Method 'GetOutputCurrentType'
    // TODO: Method 'GetInputSizeInfo'
    // TODO: Method 'GetOutputSizeInfo'
    // TODO: Method 'GetInputMaxLatency'
    // TODO: Method 'SetInputMaxLatency'
    // TODO: Method 'Flush'
    // TODO: Method 'Discontinuity'
    // TODO: Method 'AllocateStreamingResources'
    // TODO: Method 'FreeStreamingResources'
    // TODO: Method 'GetInputStatus'
    // TODO: Method 'ProcessInput'
    // TODO: Method 'ProcessOutput'
    // TODO: Method 'Lock'
};
// --------------------------------------------------------
// Type: IEnumDMO
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumDMO = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IMediaObjectInPlace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaObjectInPlace = *opaque{
    // TODO: Method 'Process'
    // TODO: Method 'Clone'
    // TODO: Method 'GetLatency'
};
// --------------------------------------------------------
// Type: IDMOQualityControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMOQualityControl = *opaque{
    // TODO: Method 'SetNow'
    // TODO: Method 'SetStatus'
    // TODO: Method 'GetStatus'
};
// --------------------------------------------------------
// Type: IDMOVideoOutputOptimizations
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMOVideoOutputOptimizations = *opaque{
    // TODO: Method 'QueryOperationModePreferences'
    // TODO: Method 'SetOperationMode'
    // TODO: Method 'GetCurrentOperationMode'
    // TODO: Method 'GetCurrentSampleRequirements'
};
// --------------------------------------------------------
// Type: DXVA_COPPSetProtectionLevelCmdData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXVA_COPPSetProtectionLevelCmdData = extern struct {
    ProtType: {"kind":"UInt32"},
    ProtLevel: {"kind":"UInt32"},
    ExtendedInfoChangeMask: {"kind":"UInt32"},
    ExtendedInfoData: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: COPP_HDCP_Protection_Level
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_HDCP_Protection_Level = *opaque{
};
// --------------------------------------------------------
// Type: COPP_CGMSA_Protection_Level
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_CGMSA_Protection_Level = *opaque{
};
// --------------------------------------------------------
// Type: COPP_ACP_Protection_Level
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_ACP_Protection_Level = *opaque{
};
// --------------------------------------------------------
// Type: DXVA_COPPSetSignalingCmdData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXVA_COPPSetSignalingCmdData = extern struct {
    ActiveTVProtectionStandard: {"kind":"UInt32"},
    AspectRatioChangeMask1: {"kind":"UInt32"},
    AspectRatioData1: {"kind":"UInt32"},
    AspectRatioChangeMask2: {"kind":"UInt32"},
    AspectRatioData2: {"kind":"UInt32"},
    AspectRatioChangeMask3: {"kind":"UInt32"},
    AspectRatioData3: {"kind":"UInt32"},
    ExtendedInfoChangeMask: {"kind":"Array","child": {"kind":"UInt32"}},
    ExtendedInfoData: {"kind":"Array","child": {"kind":"UInt32"}},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: COPP_TVProtectionStandard
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_TVProtectionStandard = *opaque{
};
// --------------------------------------------------------
// Type: COPP_ImageAspectRatio_EN300294
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_ImageAspectRatio_EN300294 = *opaque{
};
// --------------------------------------------------------
// Type: COPP_StatusFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_StatusFlags = *opaque{
};
// --------------------------------------------------------
// Type: DXVA_COPPStatusData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXVA_COPPStatusData = extern struct {
    rApp: Guid,
    dwFlags: {"kind":"UInt32"},
    dwData: {"kind":"UInt32"},
    ExtendedInfoValidMask: {"kind":"UInt32"},
    ExtendedInfoData: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DXVA_COPPStatusDisplayData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXVA_COPPStatusDisplayData = extern struct {
    rApp: Guid,
    dwFlags: {"kind":"UInt32"},
    DisplayWidth: {"kind":"UInt32"},
    DisplayHeight: {"kind":"UInt32"},
    Format: {"kind":"UInt32"},
    d3dFormat: {"kind":"UInt32"},
    FreqNumerator: {"kind":"UInt32"},
    FreqDenominator: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: COPP_StatusHDCPFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_StatusHDCPFlags = *opaque{
};
// --------------------------------------------------------
// Type: DXVA_COPPStatusHDCPKeyData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXVA_COPPStatusHDCPKeyData = extern struct {
    rApp: Guid,
    dwFlags: {"kind":"UInt32"},
    dwHDCPFlags: {"kind":"UInt32"},
    BKey: Guid,
    Reserved1: Guid,
    Reserved2: Guid,
};
// --------------------------------------------------------
// Type: COPP_ConnectorType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_ConnectorType = *opaque{
};
// --------------------------------------------------------
// Type: COPP_BusType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPP_BusType = *opaque{
};
// --------------------------------------------------------
// Type: DXVA_COPPStatusSignalingCmdData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DXVA_COPPStatusSignalingCmdData = extern struct {
    rApp: Guid,
    dwFlags: {"kind":"UInt32"},
    AvailableTVProtectionStandards: {"kind":"UInt32"},
    ActiveTVProtectionStandard: {"kind":"UInt32"},
    TVType: {"kind":"UInt32"},
    AspectRatioValidMask1: {"kind":"UInt32"},
    AspectRatioData1: {"kind":"UInt32"},
    AspectRatioValidMask2: {"kind":"UInt32"},
    AspectRatioData2: {"kind":"UInt32"},
    AspectRatioValidMask3: {"kind":"UInt32"},
    AspectRatioData3: {"kind":"UInt32"},
    ExtendedInfoValidMask: {"kind":"Array","child": {"kind":"UInt32"}},
    ExtendedInfoData: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: BITMAPINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BITMAPINFOHEADER = extern struct {
    biSize: {"kind":"UInt32"},
    biWidth: {"kind":"Int32"},
    biHeight: {"kind":"Int32"},
    biPlanes: {"kind":"UInt16"},
    biBitCount: {"kind":"UInt16"},
    biCompression: {"kind":"UInt32"},
    biSizeImage: {"kind":"UInt32"},
    biXPelsPerMeter: {"kind":"Int32"},
    biYPelsPerMeter: {"kind":"Int32"},
    biClrUsed: {"kind":"UInt32"},
    biClrImportant: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AMVP_SELECT_FORMAT_BY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMVP_SELECT_FORMAT_BY = *opaque{
};
// --------------------------------------------------------
// Type: AMVP_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMVP_MODE = *opaque{
};
// --------------------------------------------------------
// Type: AMVPSIZE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVPSIZE = extern struct {
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AMVPDIMINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVPDIMINFO = extern struct {
    dwFieldWidth: {"kind":"UInt32"},
    dwFieldHeight: {"kind":"UInt32"},
    dwVBIWidth: {"kind":"UInt32"},
    dwVBIHeight: {"kind":"UInt32"},
    rcValidRegion: Windows.Win32.DisplayDevices.RECT,
};
// --------------------------------------------------------
// Type: AMVPDATAINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVPDATAINFO = extern struct {
    dwSize: {"kind":"UInt32"},
    dwMicrosecondsPerField: {"kind":"UInt32"},
    amvpDimInfo: Windows.Win32.DirectShow.AMVPDIMINFO,
    dwPictAspectRatioX: {"kind":"UInt32"},
    dwPictAspectRatioY: {"kind":"UInt32"},
    bEnableDoubleClock: Windows.Win32.SystemServices.BOOL,
    bEnableVACT: Windows.Win32.SystemServices.BOOL,
    bDataIsInterlaced: Windows.Win32.SystemServices.BOOL,
    lHalfLinesOdd: {"kind":"Int32"},
    bFieldPolarityInverted: Windows.Win32.SystemServices.BOOL,
    dwNumLinesInVREF: {"kind":"UInt32"},
    lHalfLinesEven: {"kind":"Int32"},
    dwReserved1: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ICreateDevEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICreateDevEnum = *opaque{
    // TODO: Method 'CreateClassEnumerator'
};
// --------------------------------------------------------
// Type: AM_MEDIA_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_MEDIA_TYPE = extern struct {
    majortype: Guid,
    subtype: Guid,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    lSampleSize: {"kind":"UInt32"},
    formattype: Guid,
    pUnk: Windows.Win32.Com.IUnknown,
    cbFormat: {"kind":"UInt32"},
    pbFormat: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: PIN_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PIN_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: ALLOCATOR_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ALLOCATOR_PROPERTIES = extern struct {
    cBuffers: {"kind":"Int32"},
    cbBuffer: {"kind":"Int32"},
    cbAlign: {"kind":"Int32"},
    cbPrefix: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: PIN_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PIN_INFO = extern struct {
    pFilter: Windows.Win32.DirectShow.IBaseFilter,
    dir: Windows.Win32.DirectShow.PIN_DIRECTION,
    achName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IPin
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPin = *opaque{
    // TODO: Method 'Connect'
    // TODO: Method 'ReceiveConnection'
    // TODO: Method 'Disconnect'
    // TODO: Method 'ConnectedTo'
    // TODO: Method 'ConnectionMediaType'
    // TODO: Method 'QueryPinInfo'
    // TODO: Method 'QueryDirection'
    // TODO: Method 'QueryId'
    // TODO: Method 'QueryAccept'
    // TODO: Method 'EnumMediaTypes'
    // TODO: Method 'QueryInternalConnections'
    // TODO: Method 'EndOfStream'
    // TODO: Method 'BeginFlush'
    // TODO: Method 'EndFlush'
    // TODO: Method 'NewSegment'
};
// --------------------------------------------------------
// Type: IEnumPins
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumPins = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IEnumMediaTypes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumMediaTypes = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IFilterGraph
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterGraph = *opaque{
    // TODO: Method 'AddFilter'
    // TODO: Method 'RemoveFilter'
    // TODO: Method 'EnumFilters'
    // TODO: Method 'FindFilterByName'
    // TODO: Method 'ConnectDirect'
    // TODO: Method 'Reconnect'
    // TODO: Method 'Disconnect'
    // TODO: Method 'SetDefaultSyncSource'
};
// --------------------------------------------------------
// Type: IEnumFilters
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumFilters = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: FILTER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FILTER_STATE = *opaque{
};
// --------------------------------------------------------
// Type: IMediaFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaFilter = *opaque{
    // TODO: Method 'Stop'
    // TODO: Method 'Pause'
    // TODO: Method 'Run'
    // TODO: Method 'GetState'
    // TODO: Method 'SetSyncSource'
    // TODO: Method 'GetSyncSource'
};
// --------------------------------------------------------
// Type: FILTER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FILTER_INFO = extern struct {
    achName: {"kind":"Array","child": {"kind":"UInt16"}},
    pGraph: Windows.Win32.DirectShow.IFilterGraph,
};
// --------------------------------------------------------
// Type: IBaseFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBaseFilter = *opaque{
    // TODO: Method 'EnumPins'
    // TODO: Method 'FindPin'
    // TODO: Method 'QueryFilterInfo'
    // TODO: Method 'JoinFilterGraph'
    // TODO: Method 'QueryVendorInfo'
};
// --------------------------------------------------------
// Type: IReferenceClock
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IReferenceClock = *opaque{
    // TODO: Method 'GetTime'
    // TODO: Method 'AdviseTime'
    // TODO: Method 'AdvisePeriodic'
    // TODO: Method 'Unadvise'
};
// --------------------------------------------------------
// Type: IReferenceClockTimerControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IReferenceClockTimerControl = *opaque{
    // TODO: Method 'SetDefaultTimerResolution'
    // TODO: Method 'GetDefaultTimerResolution'
};
// --------------------------------------------------------
// Type: IReferenceClock2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IReferenceClock2 = *opaque{
};
// --------------------------------------------------------
// Type: IMediaSample
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaSample = *opaque{
    // TODO: Method 'GetPointer'
    // TODO: Method 'GetSize'
    // TODO: Method 'GetTime'
    // TODO: Method 'SetTime'
    // TODO: Method 'IsSyncPoint'
    // TODO: Method 'SetSyncPoint'
    // TODO: Method 'IsPreroll'
    // TODO: Method 'SetPreroll'
    // TODO: Method 'GetActualDataLength'
    // TODO: Method 'SetActualDataLength'
    // TODO: Method 'GetMediaType'
    // TODO: Method 'SetMediaType'
    // TODO: Method 'IsDiscontinuity'
    // TODO: Method 'SetDiscontinuity'
    // TODO: Method 'GetMediaTime'
    // TODO: Method 'SetMediaTime'
};
// --------------------------------------------------------
// Type: tagAM_SAMPLE_PROPERTY_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tagAM_SAMPLE_PROPERTY_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AM_SAMPLE2_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_SAMPLE2_PROPERTIES = extern struct {
    cbData: {"kind":"UInt32"},
    dwTypeSpecificFlags: {"kind":"UInt32"},
    dwSampleFlags: {"kind":"UInt32"},
    lActual: {"kind":"Int32"},
    tStart: {"kind":"Int64"},
    tStop: {"kind":"Int64"},
    dwStreamId: {"kind":"UInt32"},
    pMediaType: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},
    pbBuffer: {"kind""Ptr","child":{"kind":"Byte"}},
    cbBuffer: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: IMediaSample2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaSample2 = *opaque{
    // TODO: Method 'GetProperties'
    // TODO: Method 'SetProperties'
};
// --------------------------------------------------------
// Type: IMediaSample2Config
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaSample2Config = *opaque{
    // TODO: Method 'GetSurface'
};
// --------------------------------------------------------
// Type: IMemAllocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMemAllocator = *opaque{
    // TODO: Method 'SetProperties'
    // TODO: Method 'GetProperties'
    // TODO: Method 'Commit'
    // TODO: Method 'Decommit'
    // TODO: Method 'GetBuffer'
    // TODO: Method 'ReleaseBuffer'
};
// --------------------------------------------------------
// Type: IMemAllocatorCallbackTemp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMemAllocatorCallbackTemp = *opaque{
    // TODO: Method 'SetNotify'
    // TODO: Method 'GetFreeCount'
};
// --------------------------------------------------------
// Type: IMemAllocatorNotifyCallbackTemp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMemAllocatorNotifyCallbackTemp = *opaque{
    // TODO: Method 'NotifyRelease'
};
// --------------------------------------------------------
// Type: IMemInputPin
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMemInputPin = *opaque{
    // TODO: Method 'GetAllocator'
    // TODO: Method 'NotifyAllocator'
    // TODO: Method 'GetAllocatorRequirements'
    // TODO: Method 'Receive'
    // TODO: Method 'ReceiveMultiple'
    // TODO: Method 'ReceiveCanBlock'
};
// --------------------------------------------------------
// Type: IAMovieSetup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMovieSetup = *opaque{
    // TODO: Method 'Register'
    // TODO: Method 'Unregister'
};
// --------------------------------------------------------
// Type: AM_SEEKING_SeekingFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_SEEKING_SeekingFlags = *opaque{
};
// --------------------------------------------------------
// Type: AM_SEEKING_SEEKING_CAPABILITIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_SEEKING_SEEKING_CAPABILITIES = *opaque{
};
// --------------------------------------------------------
// Type: IMediaSeeking
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaSeeking = *opaque{
    // TODO: Method 'GetCapabilities'
    // TODO: Method 'CheckCapabilities'
    // TODO: Method 'IsFormatSupported'
    // TODO: Method 'QueryPreferredFormat'
    // TODO: Method 'GetTimeFormatA'
    // TODO: Method 'IsUsingTimeFormat'
    // TODO: Method 'SetTimeFormat'
    // TODO: Method 'GetDuration'
    // TODO: Method 'GetStopPosition'
    // TODO: Method 'GetCurrentPosition'
    // TODO: Method 'ConvertTimeFormat'
    // TODO: Method 'SetPositions'
    // TODO: Method 'GetPositions'
    // TODO: Method 'GetAvailable'
    // TODO: Method 'SetRate'
    // TODO: Method 'GetRate'
    // TODO: Method 'GetPreroll'
};
// --------------------------------------------------------
// Type: tagAM_MEDIAEVENT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tagAM_MEDIAEVENT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: REGFILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const REGFILTER = extern struct {
    Clsid: Guid,
    Name: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IEnumRegFilters
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumRegFilters = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: __MIDL_IFilterMapper_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL_IFilterMapper_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IFilterMapper
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterMapper = *opaque{
    // TODO: Method 'RegisterFilter'
    // TODO: Method 'RegisterFilterInstance'
    // TODO: Method 'RegisterPin'
    // TODO: Method 'RegisterPinType'
    // TODO: Method 'UnregisterFilter'
    // TODO: Method 'UnregisterFilterInstance'
    // TODO: Method 'UnregisterPin'
    // TODO: Method 'EnumMatchingFilters'
};
// --------------------------------------------------------
// Type: REGPINTYPES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const REGPINTYPES = extern struct {
    clsMajorType: {"kind""Ptr","child":Guid},
    clsMinorType: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: REGFILTERPINS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const REGFILTERPINS = extern struct {
    strName: {"kind""Ptr","child":{"kind":"UInt16"}},
    bRendered: Windows.Win32.SystemServices.BOOL,
    bOutput: Windows.Win32.SystemServices.BOOL,
    bZero: Windows.Win32.SystemServices.BOOL,
    bMany: Windows.Win32.SystemServices.BOOL,
    clsConnectsToFilter: {"kind""Ptr","child":Guid},
    strConnectsToPin: {"kind""Ptr","child":{"kind":"UInt16"}},
    nMediaTypes: {"kind":"UInt32"},
    lpMediaType: {"kind""Ptr","child":Windows.Win32.DirectShow.REGPINTYPES},
};
// --------------------------------------------------------
// Type: REGPINMEDIUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const REGPINMEDIUM = extern struct {
    clsMedium: Guid,
    dw1: {"kind":"UInt32"},
    dw2: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_strmif_0000_0023_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_strmif_0000_0023_0001 = *opaque{
};
// --------------------------------------------------------
// Type: REGFILTERPINS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const REGFILTERPINS2 = extern struct {
    dwFlags: {"kind":"UInt32"},
    cInstances: {"kind":"UInt32"},
    nMediaTypes: {"kind":"UInt32"},
    lpMediaType: {"kind""Ptr","child":Windows.Win32.DirectShow.REGPINTYPES},
    nMediums: {"kind":"UInt32"},
    lpMedium: {"kind""Ptr","child":Windows.Win32.DirectShow.REGPINMEDIUM},
    clsPinCategory: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: REGFILTER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const REGFILTER2 = extern struct {
    dwVersion: {"kind":"UInt32"},
    dwMerit: {"kind":"UInt32"},
    Anonymous: Windows.Win32.DirectShow.REGFILTER2+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous2_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous2_e__Struct = extern struct {
            cPins2: {"kind":"UInt32"},
            rgPins2: {"kind""Ptr","child":Windows.Win32.DirectShow.REGFILTERPINS2},
        };
        // --------------------------------------------------------
        // Type: _Anonymous1_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous1_e__Struct = extern struct {
            cPins: {"kind":"UInt32"},
            rgPins: {"kind""Ptr","child":Windows.Win32.DirectShow.REGFILTERPINS},
        };
    };
};
// --------------------------------------------------------
// Type: IFilterMapper2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterMapper2 = *opaque{
    // TODO: Method 'CreateCategory'
    // TODO: Method 'UnregisterFilter'
    // TODO: Method 'RegisterFilter'
    // TODO: Method 'EnumMatchingFilters'
};
// --------------------------------------------------------
// Type: IFilterMapper3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterMapper3 = *opaque{
    // TODO: Method 'GetICreateDevEnum'
};
// --------------------------------------------------------
// Type: QualityMessageType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const QualityMessageType = *opaque{
};
// --------------------------------------------------------
// Type: Quality
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const Quality = extern struct {
    Type: Windows.Win32.DirectShow.QualityMessageType,
    Proportion: {"kind":"Int32"},
    Late: {"kind":"Int64"},
    TimeStamp: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: IQualityControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IQualityControl = *opaque{
    // TODO: Method 'Notify'
    // TODO: Method 'SetSink'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_strmif_0000_0026_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_strmif_0000_0026_0001 = *opaque{
};
// --------------------------------------------------------
// Type: COLORKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const COLORKEY = extern struct {
    KeyType: {"kind":"UInt32"},
    PaletteIndex: {"kind":"UInt32"},
    LowColorValue: {"kind":"UInt32"},
    HighColorValue: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_strmif_0000_0026_0002
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_strmif_0000_0026_0002 = *opaque{
};
// --------------------------------------------------------
// Type: IOverlayNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IOverlayNotify = *opaque{
    // TODO: Method 'OnPaletteChange'
    // TODO: Method 'OnClipChange'
    // TODO: Method 'OnColorKeyChange'
    // TODO: Method 'OnPositionChange'
};
// --------------------------------------------------------
// Type: IOverlayNotify2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IOverlayNotify2 = *opaque{
    // TODO: Method 'OnDisplayChange'
};
// --------------------------------------------------------
// Type: IOverlay
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IOverlay = *opaque{
    // TODO: Method 'GetPalette'
    // TODO: Method 'SetPalette'
    // TODO: Method 'GetDefaultColorKey'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'GetWindowHandle'
    // TODO: Method 'GetClipList'
    // TODO: Method 'GetVideoPosition'
    // TODO: Method 'Advise'
    // TODO: Method 'Unadvise'
};
// --------------------------------------------------------
// Type: IMediaEventSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaEventSink = *opaque{
    // TODO: Method 'Notify'
};
// --------------------------------------------------------
// Type: IFileSourceFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFileSourceFilter = *opaque{
    // TODO: Method 'Load'
    // TODO: Method 'GetCurFile'
};
// --------------------------------------------------------
// Type: IFileSinkFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFileSinkFilter = *opaque{
    // TODO: Method 'SetFileName'
    // TODO: Method 'GetCurFile'
};
// --------------------------------------------------------
// Type: IFileSinkFilter2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFileSinkFilter2 = *opaque{
    // TODO: Method 'SetMode'
    // TODO: Method 'GetMode'
};
// --------------------------------------------------------
// Type: AM_FILESINK_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_FILESINK_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IGraphBuilder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGraphBuilder = *opaque{
    // TODO: Method 'Connect'
    // TODO: Method 'Render'
    // TODO: Method 'RenderFile'
    // TODO: Method 'AddSourceFilter'
    // TODO: Method 'SetLogFile'
    // TODO: Method 'Abort'
    // TODO: Method 'ShouldOperationContinue'
};
// --------------------------------------------------------
// Type: ICaptureGraphBuilder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICaptureGraphBuilder = *opaque{
    // TODO: Method 'SetFiltergraph'
    // TODO: Method 'GetFiltergraph'
    // TODO: Method 'SetOutputFileName'
    // TODO: Method 'FindInterface'
    // TODO: Method 'RenderStream'
    // TODO: Method 'ControlStream'
    // TODO: Method 'AllocCapFile'
    // TODO: Method 'CopyCaptureFile'
};
// --------------------------------------------------------
// Type: IAMCopyCaptureFileProgress
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMCopyCaptureFileProgress = *opaque{
    // TODO: Method 'Progress'
};
// --------------------------------------------------------
// Type: ICaptureGraphBuilder2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICaptureGraphBuilder2 = *opaque{
    // TODO: Method 'SetFiltergraph'
    // TODO: Method 'GetFiltergraph'
    // TODO: Method 'SetOutputFileName'
    // TODO: Method 'FindInterface'
    // TODO: Method 'RenderStream'
    // TODO: Method 'ControlStream'
    // TODO: Method 'AllocCapFile'
    // TODO: Method 'CopyCaptureFile'
    // TODO: Method 'FindPin'
};
// --------------------------------------------------------
// Type: _AM_RENSDEREXFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_RENSDEREXFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IFilterGraph2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterGraph2 = *opaque{
    // TODO: Method 'AddSourceFilterForMoniker'
    // TODO: Method 'ReconnectEx'
    // TODO: Method 'RenderEx'
};
// --------------------------------------------------------
// Type: IFilterGraph3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterGraph3 = *opaque{
    // TODO: Method 'SetSyncSourceEx'
};
// --------------------------------------------------------
// Type: IStreamBuilder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBuilder = *opaque{
    // TODO: Method 'Render'
    // TODO: Method 'Backout'
};
// --------------------------------------------------------
// Type: IAsyncReader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAsyncReader = *opaque{
    // TODO: Method 'RequestAllocator'
    // TODO: Method 'Request'
    // TODO: Method 'WaitForNext'
    // TODO: Method 'SyncReadAligned'
    // TODO: Method 'SyncRead'
    // TODO: Method 'Length'
    // TODO: Method 'BeginFlush'
    // TODO: Method 'EndFlush'
};
// --------------------------------------------------------
// Type: IGraphVersion
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGraphVersion = *opaque{
    // TODO: Method 'QueryVersion'
};
// --------------------------------------------------------
// Type: IResourceConsumer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResourceConsumer = *opaque{
    // TODO: Method 'AcquireResource'
    // TODO: Method 'ReleaseResource'
};
// --------------------------------------------------------
// Type: IResourceManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResourceManager = *opaque{
    // TODO: Method 'Register'
    // TODO: Method 'RegisterGroup'
    // TODO: Method 'RequestResource'
    // TODO: Method 'NotifyAcquire'
    // TODO: Method 'NotifyRelease'
    // TODO: Method 'CancelRequest'
    // TODO: Method 'SetFocus'
    // TODO: Method 'ReleaseFocus'
};
// --------------------------------------------------------
// Type: IDistributorNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDistributorNotify = *opaque{
    // TODO: Method 'Stop'
    // TODO: Method 'Pause'
    // TODO: Method 'Run'
    // TODO: Method 'SetSyncSource'
    // TODO: Method 'NotifyGraphChange'
};
// --------------------------------------------------------
// Type: AM_STREAM_INFO_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_STREAM_INFO_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AM_STREAM_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_STREAM_INFO = extern struct {
    tStart: {"kind":"Int64"},
    tStop: {"kind":"Int64"},
    dwStartCookie: {"kind":"UInt32"},
    dwStopCookie: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IAMStreamControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMStreamControl = *opaque{
    // TODO: Method 'StartAt'
    // TODO: Method 'StopAt'
    // TODO: Method 'GetInfo'
};
// --------------------------------------------------------
// Type: ISeekingPassThru
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISeekingPassThru = *opaque{
    // TODO: Method 'Init'
};
// --------------------------------------------------------
// Type: VIDEO_STREAM_CONFIG_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VIDEO_STREAM_CONFIG_CAPS = extern struct {
    guid: Guid,
    VideoStandard: {"kind":"UInt32"},
    InputSize: Windows.Win32.DisplayDevices.SIZE,
    MinCroppingSize: Windows.Win32.DisplayDevices.SIZE,
    MaxCroppingSize: Windows.Win32.DisplayDevices.SIZE,
    CropGranularityX: {"kind":"Int32"},
    CropGranularityY: {"kind":"Int32"},
    CropAlignX: {"kind":"Int32"},
    CropAlignY: {"kind":"Int32"},
    MinOutputSize: Windows.Win32.DisplayDevices.SIZE,
    MaxOutputSize: Windows.Win32.DisplayDevices.SIZE,
    OutputGranularityX: {"kind":"Int32"},
    OutputGranularityY: {"kind":"Int32"},
    StretchTapsX: {"kind":"Int32"},
    StretchTapsY: {"kind":"Int32"},
    ShrinkTapsX: {"kind":"Int32"},
    ShrinkTapsY: {"kind":"Int32"},
    MinFrameInterval: {"kind":"Int64"},
    MaxFrameInterval: {"kind":"Int64"},
    MinBitsPerSecond: {"kind":"Int32"},
    MaxBitsPerSecond: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: AUDIO_STREAM_CONFIG_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AUDIO_STREAM_CONFIG_CAPS = extern struct {
    guid: Guid,
    MinimumChannels: {"kind":"UInt32"},
    MaximumChannels: {"kind":"UInt32"},
    ChannelsGranularity: {"kind":"UInt32"},
    MinimumBitsPerSample: {"kind":"UInt32"},
    MaximumBitsPerSample: {"kind":"UInt32"},
    BitsPerSampleGranularity: {"kind":"UInt32"},
    MinimumSampleFrequency: {"kind":"UInt32"},
    MaximumSampleFrequency: {"kind":"UInt32"},
    SampleFrequencyGranularity: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IAMStreamConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMStreamConfig = *opaque{
    // TODO: Method 'SetFormat'
    // TODO: Method 'GetFormat'
    // TODO: Method 'GetNumberOfCapabilities'
    // TODO: Method 'GetStreamCaps'
};
// --------------------------------------------------------
// Type: InterleavingMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const InterleavingMode = *opaque{
};
// --------------------------------------------------------
// Type: IConfigInterleaving
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConfigInterleaving = *opaque{
    // TODO: Method 'put_Mode'
    // TODO: Method 'get_Mode'
    // TODO: Method 'put_Interleaving'
    // TODO: Method 'get_Interleaving'
};
// --------------------------------------------------------
// Type: IConfigAviMux
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConfigAviMux = *opaque{
    // TODO: Method 'SetMasterStream'
    // TODO: Method 'GetMasterStream'
    // TODO: Method 'SetOutputCompatibilityIndex'
    // TODO: Method 'GetOutputCompatibilityIndex'
};
// --------------------------------------------------------
// Type: CompressionCaps
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CompressionCaps = *opaque{
};
// --------------------------------------------------------
// Type: IAMVideoCompression
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVideoCompression = *opaque{
    // TODO: Method 'put_KeyFrameRate'
    // TODO: Method 'get_KeyFrameRate'
    // TODO: Method 'put_PFramesPerKeyFrame'
    // TODO: Method 'get_PFramesPerKeyFrame'
    // TODO: Method 'put_Quality'
    // TODO: Method 'get_Quality'
    // TODO: Method 'put_WindowSize'
    // TODO: Method 'get_WindowSize'
    // TODO: Method 'GetInfo'
    // TODO: Method 'OverrideKeyFrame'
    // TODO: Method 'OverrideFrameSize'
};
// --------------------------------------------------------
// Type: VfwCaptureDialogs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VfwCaptureDialogs = *opaque{
};
// --------------------------------------------------------
// Type: VfwCompressDialogs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VfwCompressDialogs = *opaque{
};
// --------------------------------------------------------
// Type: IAMVfwCaptureDialogs
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVfwCaptureDialogs = *opaque{
    // TODO: Method 'HasDialog'
    // TODO: Method 'ShowDialog'
    // TODO: Method 'SendDriverMessage'
};
// --------------------------------------------------------
// Type: IAMVfwCompressDialogs
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVfwCompressDialogs = *opaque{
    // TODO: Method 'ShowDialog'
    // TODO: Method 'GetState'
    // TODO: Method 'SetState'
    // TODO: Method 'SendDriverMessage'
};
// --------------------------------------------------------
// Type: IAMDroppedFrames
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMDroppedFrames = *opaque{
    // TODO: Method 'GetNumDropped'
    // TODO: Method 'GetNumNotDropped'
    // TODO: Method 'GetDroppedInfo'
    // TODO: Method 'GetAverageFrameSize'
};
// --------------------------------------------------------
// Type: IAMAudioInputMixer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMAudioInputMixer = *opaque{
    // TODO: Method 'put_Enable'
    // TODO: Method 'get_Enable'
    // TODO: Method 'put_Mono'
    // TODO: Method 'get_Mono'
    // TODO: Method 'put_MixLevel'
    // TODO: Method 'get_MixLevel'
    // TODO: Method 'put_Pan'
    // TODO: Method 'get_Pan'
    // TODO: Method 'put_Loudness'
    // TODO: Method 'get_Loudness'
    // TODO: Method 'put_Treble'
    // TODO: Method 'get_Treble'
    // TODO: Method 'get_TrebleRange'
    // TODO: Method 'put_Bass'
    // TODO: Method 'get_Bass'
    // TODO: Method 'get_BassRange'
};
// --------------------------------------------------------
// Type: IAMBufferNegotiation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMBufferNegotiation = *opaque{
    // TODO: Method 'SuggestAllocatorProperties'
    // TODO: Method 'GetAllocatorProperties'
};
// --------------------------------------------------------
// Type: AnalogVideoStandard
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AnalogVideoStandard = *opaque{
};
// --------------------------------------------------------
// Type: TunerInputType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TunerInputType = *opaque{
};
// --------------------------------------------------------
// Type: VideoCopyProtectionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VideoCopyProtectionType = *opaque{
};
// --------------------------------------------------------
// Type: PhysicalConnectorType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PhysicalConnectorType = *opaque{
};
// --------------------------------------------------------
// Type: IAMAnalogVideoDecoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMAnalogVideoDecoder = *opaque{
    // TODO: Method 'get_AvailableTVFormats'
    // TODO: Method 'put_TVFormat'
    // TODO: Method 'get_TVFormat'
    // TODO: Method 'get_HorizontalLocked'
    // TODO: Method 'put_VCRHorizontalLocking'
    // TODO: Method 'get_VCRHorizontalLocking'
    // TODO: Method 'get_NumberOfLines'
    // TODO: Method 'put_OutputEnable'
    // TODO: Method 'get_OutputEnable'
};
// --------------------------------------------------------
// Type: VideoProcAmpProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VideoProcAmpProperty = *opaque{
};
// --------------------------------------------------------
// Type: VideoProcAmpFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VideoProcAmpFlags = *opaque{
};
// --------------------------------------------------------
// Type: IAMVideoProcAmp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVideoProcAmp = *opaque{
    // TODO: Method 'GetRange'
    // TODO: Method 'Set'
    // TODO: Method 'Get'
};
// --------------------------------------------------------
// Type: CameraControlProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CameraControlProperty = *opaque{
};
// --------------------------------------------------------
// Type: CameraControlFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CameraControlFlags = *opaque{
};
// --------------------------------------------------------
// Type: IAMCameraControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMCameraControl = *opaque{
    // TODO: Method 'GetRange'
    // TODO: Method 'Set'
    // TODO: Method 'Get'
};
// --------------------------------------------------------
// Type: VideoControlFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VideoControlFlags = *opaque{
};
// --------------------------------------------------------
// Type: IAMVideoControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVideoControl = *opaque{
    // TODO: Method 'GetCaps'
    // TODO: Method 'SetMode'
    // TODO: Method 'GetMode'
    // TODO: Method 'GetCurrentActualFrameRate'
    // TODO: Method 'GetMaxAvailableFrameRate'
    // TODO: Method 'GetFrameRateList'
};
// --------------------------------------------------------
// Type: IAMCrossbar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMCrossbar = *opaque{
    // TODO: Method 'get_PinCounts'
    // TODO: Method 'CanRoute'
    // TODO: Method 'Route'
    // TODO: Method 'get_IsRoutedTo'
    // TODO: Method 'get_CrossbarPinInfo'
};
// --------------------------------------------------------
// Type: AMTunerSubChannel
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMTunerSubChannel = *opaque{
};
// --------------------------------------------------------
// Type: AMTunerSignalStrength
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMTunerSignalStrength = *opaque{
};
// --------------------------------------------------------
// Type: AMTunerModeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMTunerModeType = *opaque{
};
// --------------------------------------------------------
// Type: AMTunerEventType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMTunerEventType = *opaque{
};
// --------------------------------------------------------
// Type: IAMTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTuner = *opaque{
    // TODO: Method 'put_Channel'
    // TODO: Method 'get_Channel'
    // TODO: Method 'ChannelMinMax'
    // TODO: Method 'put_CountryCode'
    // TODO: Method 'get_CountryCode'
    // TODO: Method 'put_TuningSpace'
    // TODO: Method 'get_TuningSpace'
    // TODO: Method 'Logon'
    // TODO: Method 'Logout'
    // TODO: Method 'SignalPresent'
    // TODO: Method 'put_Mode'
    // TODO: Method 'get_Mode'
    // TODO: Method 'GetAvailableModes'
    // TODO: Method 'RegisterNotificationCallBack'
    // TODO: Method 'UnRegisterNotificationCallBack'
};
// --------------------------------------------------------
// Type: IAMTunerNotification
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTunerNotification = *opaque{
    // TODO: Method 'OnEvent'
};
// --------------------------------------------------------
// Type: IAMTVTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTVTuner = *opaque{
    // TODO: Method 'get_AvailableTVFormats'
    // TODO: Method 'get_TVFormat'
    // TODO: Method 'AutoTune'
    // TODO: Method 'StoreAutoTune'
    // TODO: Method 'get_NumInputConnections'
    // TODO: Method 'put_InputType'
    // TODO: Method 'get_InputType'
    // TODO: Method 'put_ConnectInput'
    // TODO: Method 'get_ConnectInput'
    // TODO: Method 'get_VideoFrequency'
    // TODO: Method 'get_AudioFrequency'
};
// --------------------------------------------------------
// Type: IBPCSatelliteTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBPCSatelliteTuner = *opaque{
    // TODO: Method 'get_DefaultSubChannelTypes'
    // TODO: Method 'put_DefaultSubChannelTypes'
    // TODO: Method 'IsTapingPermitted'
};
// --------------------------------------------------------
// Type: TVAudioMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TVAudioMode = *opaque{
};
// --------------------------------------------------------
// Type: AMTVAudioEventType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMTVAudioEventType = *opaque{
};
// --------------------------------------------------------
// Type: IAMTVAudio
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTVAudio = *opaque{
    // TODO: Method 'GetHardwareSupportedTVAudioModes'
    // TODO: Method 'GetAvailableTVAudioModes'
    // TODO: Method 'get_TVAudioMode'
    // TODO: Method 'put_TVAudioMode'
    // TODO: Method 'RegisterNotificationCallBack'
    // TODO: Method 'UnRegisterNotificationCallBack'
};
// --------------------------------------------------------
// Type: IAMTVAudioNotification
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTVAudioNotification = *opaque{
    // TODO: Method 'OnEvent'
};
// --------------------------------------------------------
// Type: IAMAnalogVideoEncoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMAnalogVideoEncoder = *opaque{
    // TODO: Method 'get_AvailableTVFormats'
    // TODO: Method 'put_TVFormat'
    // TODO: Method 'get_TVFormat'
    // TODO: Method 'put_CopyProtection'
    // TODO: Method 'get_CopyProtection'
    // TODO: Method 'put_CCEnable'
    // TODO: Method 'get_CCEnable'
};
// --------------------------------------------------------
// Type: AMPROPERTY_PIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMPROPERTY_PIN = *opaque{
};
// --------------------------------------------------------
// Type: IKsPropertySet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsPropertySet = *opaque{
    // TODO: Method 'Set'
    // TODO: Method 'Get'
    // TODO: Method 'QuerySupported'
};
// --------------------------------------------------------
// Type: IMediaPropertyBag
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaPropertyBag = *opaque{
    // TODO: Method 'EnumProperty'
};
// --------------------------------------------------------
// Type: IPersistMediaPropertyBag
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPersistMediaPropertyBag = *opaque{
    // TODO: Method 'InitNew'
    // TODO: Method 'Load'
    // TODO: Method 'Save'
};
// --------------------------------------------------------
// Type: IAMPhysicalPinInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMPhysicalPinInfo = *opaque{
    // TODO: Method 'GetPhysicalType'
};
// --------------------------------------------------------
// Type: IAMExtDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMExtDevice = *opaque{
    // TODO: Method 'GetCapability'
    // TODO: Method 'get_ExternalDeviceID'
    // TODO: Method 'get_ExternalDeviceVersion'
    // TODO: Method 'put_DevicePower'
    // TODO: Method 'get_DevicePower'
    // TODO: Method 'Calibrate'
    // TODO: Method 'put_DevicePort'
    // TODO: Method 'get_DevicePort'
};
// --------------------------------------------------------
// Type: IAMExtTransport
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMExtTransport = *opaque{
    // TODO: Method 'GetCapability'
    // TODO: Method 'put_MediaState'
    // TODO: Method 'get_MediaState'
    // TODO: Method 'put_LocalControl'
    // TODO: Method 'get_LocalControl'
    // TODO: Method 'GetStatus'
    // TODO: Method 'GetTransportBasicParameters'
    // TODO: Method 'SetTransportBasicParameters'
    // TODO: Method 'GetTransportVideoParameters'
    // TODO: Method 'SetTransportVideoParameters'
    // TODO: Method 'GetTransportAudioParameters'
    // TODO: Method 'SetTransportAudioParameters'
    // TODO: Method 'put_Mode'
    // TODO: Method 'get_Mode'
    // TODO: Method 'put_Rate'
    // TODO: Method 'get_Rate'
    // TODO: Method 'GetChase'
    // TODO: Method 'SetChase'
    // TODO: Method 'GetBump'
    // TODO: Method 'SetBump'
    // TODO: Method 'get_AntiClogControl'
    // TODO: Method 'put_AntiClogControl'
    // TODO: Method 'GetEditPropertySet'
    // TODO: Method 'SetEditPropertySet'
    // TODO: Method 'GetEditProperty'
    // TODO: Method 'SetEditProperty'
    // TODO: Method 'get_EditStart'
    // TODO: Method 'put_EditStart'
};
// --------------------------------------------------------
// Type: IAMTimecodeReader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTimecodeReader = *opaque{
    // TODO: Method 'GetTCRMode'
    // TODO: Method 'SetTCRMode'
    // TODO: Method 'put_VITCLine'
    // TODO: Method 'get_VITCLine'
    // TODO: Method 'GetTimecode'
};
// --------------------------------------------------------
// Type: IAMTimecodeGenerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTimecodeGenerator = *opaque{
    // TODO: Method 'GetTCGMode'
    // TODO: Method 'SetTCGMode'
    // TODO: Method 'put_VITCLine'
    // TODO: Method 'get_VITCLine'
    // TODO: Method 'SetTimecode'
    // TODO: Method 'GetTimecode'
};
// --------------------------------------------------------
// Type: IAMTimecodeDisplay
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMTimecodeDisplay = *opaque{
    // TODO: Method 'GetTCDisplayEnable'
    // TODO: Method 'SetTCDisplayEnable'
    // TODO: Method 'GetTCDisplay'
    // TODO: Method 'SetTCDisplay'
};
// --------------------------------------------------------
// Type: IAMDevMemoryAllocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMDevMemoryAllocator = *opaque{
    // TODO: Method 'GetInfo'
    // TODO: Method 'CheckMemory'
    // TODO: Method 'Alloc'
    // TODO: Method 'Free'
    // TODO: Method 'GetDevMemoryObject'
};
// --------------------------------------------------------
// Type: IAMDevMemoryControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMDevMemoryControl = *opaque{
    // TODO: Method 'QueryWriteSync'
    // TODO: Method 'WriteSync'
    // TODO: Method 'GetDevId'
};
// --------------------------------------------------------
// Type: _AMSTREAMSELECTINFOFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AMSTREAMSELECTINFOFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: _AMSTREAMSELECTENABLEFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AMSTREAMSELECTENABLEFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IAMStreamSelect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMStreamSelect = *opaque{
    // TODO: Method 'Count'
    // TODO: Method 'Info'
    // TODO: Method 'Enable'
};
// --------------------------------------------------------
// Type: _AMRESCTL_RESERVEFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AMRESCTL_RESERVEFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IAMResourceControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMResourceControl = *opaque{
    // TODO: Method 'Reserve'
};
// --------------------------------------------------------
// Type: IAMClockAdjust
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMClockAdjust = *opaque{
    // TODO: Method 'SetClockDelta'
};
// --------------------------------------------------------
// Type: _AM_FILTER_MISC_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_FILTER_MISC_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IAMFilterMiscFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMFilterMiscFlags = *opaque{
    // TODO: Method 'GetMiscFlags'
};
// --------------------------------------------------------
// Type: IDrawVideoImage
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDrawVideoImage = *opaque{
    // TODO: Method 'DrawVideoImageBegin'
    // TODO: Method 'DrawVideoImageEnd'
    // TODO: Method 'DrawVideoImageDraw'
};
// --------------------------------------------------------
// Type: IDecimateVideoImage
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDecimateVideoImage = *opaque{
    // TODO: Method 'SetDecimationImageSize'
    // TODO: Method 'ResetDecimationImageSize'
};
// --------------------------------------------------------
// Type: DECIMATION_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DECIMATION_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: IAMVideoDecimationProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVideoDecimationProperties = *opaque{
    // TODO: Method 'QueryDecimationUsage'
    // TODO: Method 'SetDecimationUsage'
};
// --------------------------------------------------------
// Type: IVideoFrameStep
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVideoFrameStep = *opaque{
    // TODO: Method 'Step'
    // TODO: Method 'CanStep'
    // TODO: Method 'CancelStep'
};
// --------------------------------------------------------
// Type: _AM_PUSHSOURCE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_PUSHSOURCE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IAMLatency
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMLatency = *opaque{
    // TODO: Method 'GetLatency'
};
// --------------------------------------------------------
// Type: IAMPushSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMPushSource = *opaque{
    // TODO: Method 'GetPushSourceFlags'
    // TODO: Method 'SetPushSourceFlags'
    // TODO: Method 'SetStreamOffset'
    // TODO: Method 'GetStreamOffset'
    // TODO: Method 'GetMaxStreamOffset'
    // TODO: Method 'SetMaxStreamOffset'
};
// --------------------------------------------------------
// Type: IAMDeviceRemoval
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMDeviceRemoval = *opaque{
    // TODO: Method 'DeviceInfo'
    // TODO: Method 'Reassociate'
    // TODO: Method 'Disassociate'
};
// --------------------------------------------------------
// Type: DVINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVINFO = extern struct {
    dwDVAAuxSrc: {"kind":"UInt32"},
    dwDVAAuxCtl: {"kind":"UInt32"},
    dwDVAAuxSrc1: {"kind":"UInt32"},
    dwDVAAuxCtl1: {"kind":"UInt32"},
    dwDVVAuxSrc: {"kind":"UInt32"},
    dwDVVAuxCtl: {"kind":"UInt32"},
    dwDVReserved: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: _DVENCODERRESOLUTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _DVENCODERRESOLUTION = *opaque{
};
// --------------------------------------------------------
// Type: _DVENCODERVIDEOFORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _DVENCODERVIDEOFORMAT = *opaque{
};
// --------------------------------------------------------
// Type: _DVENCODERFORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _DVENCODERFORMAT = *opaque{
};
// --------------------------------------------------------
// Type: IDVEnc
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVEnc = *opaque{
    // TODO: Method 'get_IFormatResolution'
    // TODO: Method 'put_IFormatResolution'
};
// --------------------------------------------------------
// Type: _DVDECODERRESOLUTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _DVDECODERRESOLUTION = *opaque{
};
// --------------------------------------------------------
// Type: _DVRESOLUTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _DVRESOLUTION = *opaque{
};
// --------------------------------------------------------
// Type: IIPDVDec
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIPDVDec = *opaque{
    // TODO: Method 'get_IPDisplay'
    // TODO: Method 'put_IPDisplay'
};
// --------------------------------------------------------
// Type: IDVRGB219
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVRGB219 = *opaque{
    // TODO: Method 'SetRGB219'
};
// --------------------------------------------------------
// Type: IDVSplitter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVSplitter = *opaque{
    // TODO: Method 'DiscardAlternateVideoFrames'
};
// --------------------------------------------------------
// Type: _AM_AUDIO_RENDERER_STAT_PARAM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_AUDIO_RENDERER_STAT_PARAM = *opaque{
};
// --------------------------------------------------------
// Type: IAMAudioRendererStats
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMAudioRendererStats = *opaque{
    // TODO: Method 'GetStatParam'
};
// --------------------------------------------------------
// Type: _AM_INTF_SEARCH_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_INTF_SEARCH_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IAMGraphStreams
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMGraphStreams = *opaque{
    // TODO: Method 'FindUpstreamInterface'
    // TODO: Method 'SyncUsingStreamOffset'
    // TODO: Method 'SetMaxGraphLatency'
};
// --------------------------------------------------------
// Type: AMOVERLAYFX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMOVERLAYFX = *opaque{
};
// --------------------------------------------------------
// Type: IAMOverlayFX
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMOverlayFX = *opaque{
    // TODO: Method 'QueryOverlayFXCaps'
    // TODO: Method 'SetOverlayFX'
    // TODO: Method 'GetOverlayFX'
};
// --------------------------------------------------------
// Type: IAMOpenProgress
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMOpenProgress = *opaque{
    // TODO: Method 'QueryProgress'
    // TODO: Method 'AbortOperation'
};
// --------------------------------------------------------
// Type: IMpeg2Demultiplexer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMpeg2Demultiplexer = *opaque{
    // TODO: Method 'CreateOutputPin'
    // TODO: Method 'SetOutputPinMediaType'
    // TODO: Method 'DeleteOutputPin'
};
// --------------------------------------------------------
// Type: STREAM_ID_MAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const STREAM_ID_MAP = extern struct {
    stream_id: {"kind":"UInt32"},
    dwMediaSampleContent: {"kind":"UInt32"},
    ulSubstreamFilterValue: {"kind":"UInt32"},
    iDataOffset: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: IEnumStreamIdMap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumStreamIdMap = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IMPEG2StreamIdMap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2StreamIdMap = *opaque{
    // TODO: Method 'MapStreamId'
    // TODO: Method 'UnmapStreamId'
    // TODO: Method 'EnumStreamIdMap'
};
// --------------------------------------------------------
// Type: IRegisterServiceProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRegisterServiceProvider = *opaque{
    // TODO: Method 'RegisterService'
};
// --------------------------------------------------------
// Type: IAMClockSlave
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMClockSlave = *opaque{
    // TODO: Method 'SetErrorTolerance'
    // TODO: Method 'GetErrorTolerance'
};
// --------------------------------------------------------
// Type: IAMGraphBuilderCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMGraphBuilderCallback = *opaque{
    // TODO: Method 'SelectedFilter'
    // TODO: Method 'CreatedFilter'
};
// --------------------------------------------------------
// Type: IAMFilterGraphCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMFilterGraphCallback = *opaque{
    // TODO: Method 'UnableToRender'
};
// --------------------------------------------------------
// Type: IGetCapabilitiesKey
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetCapabilitiesKey = *opaque{
    // TODO: Method 'GetCapabilitiesKey'
};
// --------------------------------------------------------
// Type: IEncoderAPI
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEncoderAPI = *opaque{
    // TODO: Method 'IsSupported'
    // TODO: Method 'IsAvailable'
    // TODO: Method 'GetParameterRange'
    // TODO: Method 'GetParameterValues'
    // TODO: Method 'GetDefaultValue'
    // TODO: Method 'GetValue'
    // TODO: Method 'SetValue'
};
// --------------------------------------------------------
// Type: IVideoEncoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVideoEncoder = *opaque{
};
// --------------------------------------------------------
// Type: IAMDecoderCaps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMDecoderCaps = *opaque{
    // TODO: Method 'GetDecoderCaps'
};
// --------------------------------------------------------
// Type: AMCOPPSignature
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMCOPPSignature = extern struct {
    Signature: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AMCOPPCommand
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMCOPPCommand = extern struct {
    macKDI: Guid,
    guidCommandID: Guid,
    dwSequence: {"kind":"UInt32"},
    cbSizeData: {"kind":"UInt32"},
    CommandData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AMCOPPStatusInput
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMCOPPStatusInput = extern struct {
    rApp: Guid,
    guidStatusRequestID: Guid,
    dwSequence: {"kind":"UInt32"},
    cbSizeData: {"kind":"UInt32"},
    StatusData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AMCOPPStatusOutput
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMCOPPStatusOutput = extern struct {
    macKDI: Guid,
    cbSizeData: {"kind":"UInt32"},
    COPPStatus: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: IAMCertifiedOutputProtection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMCertifiedOutputProtection = *opaque{
    // TODO: Method 'KeyExchange'
    // TODO: Method 'SessionSequenceStart'
    // TODO: Method 'ProtectionCommand'
    // TODO: Method 'ProtectionStatus'
};
// --------------------------------------------------------
// Type: IAMAsyncReaderTimestampScaling
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMAsyncReaderTimestampScaling = *opaque{
    // TODO: Method 'GetTimestampMode'
    // TODO: Method 'SetTimestampMode'
};
// --------------------------------------------------------
// Type: IAMPluginControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMPluginControl = *opaque{
    // TODO: Method 'GetPreferredClsid'
    // TODO: Method 'GetPreferredClsidByIndex'
    // TODO: Method 'SetPreferredClsid'
    // TODO: Method 'IsDisabled'
    // TODO: Method 'GetDisabledByIndex'
    // TODO: Method 'SetDisabled'
    // TODO: Method 'IsLegacyDisabled'
};
// --------------------------------------------------------
// Type: IPinConnection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPinConnection = *opaque{
    // TODO: Method 'DynamicQueryAccept'
    // TODO: Method 'NotifyEndOfStream'
    // TODO: Method 'IsEndPin'
    // TODO: Method 'DynamicDisconnect'
};
// --------------------------------------------------------
// Type: IPinFlowControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPinFlowControl = *opaque{
    // TODO: Method 'Block'
};
// --------------------------------------------------------
// Type: _AM_PIN_FLOW_CONTROL_BLOCK_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_PIN_FLOW_CONTROL_BLOCK_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AM_GRAPH_CONFIG_RECONNECT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_GRAPH_CONFIG_RECONNECT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: _REM_FILTER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _REM_FILTER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AM_FILTER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_FILTER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IGraphConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGraphConfig = *opaque{
    // TODO: Method 'Reconnect'
    // TODO: Method 'Reconfigure'
    // TODO: Method 'AddFilterToCache'
    // TODO: Method 'EnumCacheFilter'
    // TODO: Method 'RemoveFilterFromCache'
    // TODO: Method 'GetStartTime'
    // TODO: Method 'PushThroughData'
    // TODO: Method 'SetFilterFlags'
    // TODO: Method 'GetFilterFlags'
    // TODO: Method 'RemoveFilterEx'
};
// --------------------------------------------------------
// Type: IGraphConfigCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGraphConfigCallback = *opaque{
    // TODO: Method 'Reconfigure'
};
// --------------------------------------------------------
// Type: IFilterChain
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterChain = *opaque{
    // TODO: Method 'StartChain'
    // TODO: Method 'PauseChain'
    // TODO: Method 'StopChain'
    // TODO: Method 'RemoveChain'
};
// --------------------------------------------------------
// Type: VMRPresentationFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRPresentationFlags = *opaque{
};
// --------------------------------------------------------
// Type: VMRPRESENTATIONINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRPRESENTATIONINFO = extern struct {
    dwFlags: {"kind":"UInt32"},
    lpSurf: Windows.Win32.DirectDraw.IDirectDrawSurface7,
    rtStart: {"kind":"Int64"},
    rtEnd: {"kind":"Int64"},
    szAspectRatio: Windows.Win32.DisplayDevices.SIZE,
    rcSrc: Windows.Win32.DisplayDevices.RECT,
    rcDst: Windows.Win32.DisplayDevices.RECT,
    dwTypeSpecificFlags: {"kind":"UInt32"},
    dwInterlaceFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IVMRImagePresenter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImagePresenter = *opaque{
    // TODO: Method 'StartPresenting'
    // TODO: Method 'StopPresenting'
    // TODO: Method 'PresentImage'
};
// --------------------------------------------------------
// Type: VMRSurfaceAllocationFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRSurfaceAllocationFlags = *opaque{
};
// --------------------------------------------------------
// Type: VMRALLOCATIONINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRALLOCATIONINFO = extern struct {
    dwFlags: {"kind":"UInt32"},
    lpHdr: {"kind""Ptr","child":Windows.Win32.DirectShow.BITMAPINFOHEADER},
    lpPixFmt: {"kind""Ptr","child":Windows.Win32.DirectDraw.DDPIXELFORMAT},
    szAspectRatio: Windows.Win32.DisplayDevices.SIZE,
    dwMinBuffers: {"kind":"UInt32"},
    dwMaxBuffers: {"kind":"UInt32"},
    dwInterlaceFlags: {"kind":"UInt32"},
    szNativeSize: Windows.Win32.DisplayDevices.SIZE,
};
// --------------------------------------------------------
// Type: IVMRSurfaceAllocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurfaceAllocator = *opaque{
    // TODO: Method 'AllocateSurface'
    // TODO: Method 'FreeSurface'
    // TODO: Method 'PrepareSurface'
    // TODO: Method 'AdviseNotify'
};
// --------------------------------------------------------
// Type: IVMRSurfaceAllocatorNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurfaceAllocatorNotify = *opaque{
    // TODO: Method 'AdviseSurfaceAllocator'
    // TODO: Method 'SetDDrawDevice'
    // TODO: Method 'ChangeDDrawDevice'
    // TODO: Method 'RestoreDDrawSurfaces'
    // TODO: Method 'NotifyEvent'
    // TODO: Method 'SetBorderColor'
};
// --------------------------------------------------------
// Type: VMR_ASPECT_RATIO_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR_ASPECT_RATIO_MODE = *opaque{
};
// --------------------------------------------------------
// Type: IVMRWindowlessControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRWindowlessControl = *opaque{
    // TODO: Method 'GetNativeVideoSize'
    // TODO: Method 'GetMinIdealVideoSize'
    // TODO: Method 'GetMaxIdealVideoSize'
    // TODO: Method 'SetVideoPosition'
    // TODO: Method 'GetVideoPosition'
    // TODO: Method 'GetAspectRatioMode'
    // TODO: Method 'SetAspectRatioMode'
    // TODO: Method 'SetVideoClippingWindow'
    // TODO: Method 'RepaintVideo'
    // TODO: Method 'DisplayModeChanged'
    // TODO: Method 'GetCurrentImage'
    // TODO: Method 'SetBorderColor'
    // TODO: Method 'GetBorderColor'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'GetColorKey'
};
// --------------------------------------------------------
// Type: VMRMixerPrefs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRMixerPrefs = *opaque{
};
// --------------------------------------------------------
// Type: NORMALIZEDRECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NORMALIZEDRECT = extern struct {
    left: {"kind":"Single"},
    top: {"kind":"Single"},
    right: {"kind":"Single"},
    bottom: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: IVMRMixerControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRMixerControl = *opaque{
    // TODO: Method 'SetAlpha'
    // TODO: Method 'GetAlpha'
    // TODO: Method 'SetZOrder'
    // TODO: Method 'GetZOrder'
    // TODO: Method 'SetOutputRect'
    // TODO: Method 'GetOutputRect'
    // TODO: Method 'SetBackgroundClr'
    // TODO: Method 'GetBackgroundClr'
    // TODO: Method 'SetMixingPrefs'
    // TODO: Method 'GetMixingPrefs'
};
// --------------------------------------------------------
// Type: VMRGUID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRGUID = extern struct {
    pGUID: {"kind""Ptr","child":Guid},
    GUID: Guid,
};
// --------------------------------------------------------
// Type: VMRMONITORINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRMONITORINFO = extern struct {
    guid: Windows.Win32.DirectShow.VMRGUID,
    rcMonitor: Windows.Win32.DisplayDevices.RECT,
    hMon: {"kind":"IntPtr"},
    dwFlags: {"kind":"UInt32"},
    szDevice: {"kind":"Array","child": {"kind":"UInt16"}},
    szDescription: {"kind":"Array","child": {"kind":"UInt16"}},
    liDriverVersion: Windows.Win32.SystemServices.LARGE_INTEGER,
    dwVendorId: {"kind":"UInt32"},
    dwDeviceId: {"kind":"UInt32"},
    dwSubSysId: {"kind":"UInt32"},
    dwRevision: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IVMRMonitorConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRMonitorConfig = *opaque{
    // TODO: Method 'SetMonitor'
    // TODO: Method 'GetMonitor'
    // TODO: Method 'SetDefaultMonitor'
    // TODO: Method 'GetDefaultMonitor'
    // TODO: Method 'GetAvailableMonitors'
};
// --------------------------------------------------------
// Type: VMRRenderPrefs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRRenderPrefs = *opaque{
};
// --------------------------------------------------------
// Type: VMRMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRMode = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_strmif_0000_0122_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_strmif_0000_0122_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IVMRFilterConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRFilterConfig = *opaque{
    // TODO: Method 'SetImageCompositor'
    // TODO: Method 'SetNumberOfStreams'
    // TODO: Method 'GetNumberOfStreams'
    // TODO: Method 'SetRenderingPrefs'
    // TODO: Method 'GetRenderingPrefs'
    // TODO: Method 'SetRenderingMode'
    // TODO: Method 'GetRenderingMode'
};
// --------------------------------------------------------
// Type: IVMRAspectRatioControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRAspectRatioControl = *opaque{
    // TODO: Method 'GetAspectRatioMode'
    // TODO: Method 'SetAspectRatioMode'
};
// --------------------------------------------------------
// Type: VMRDeinterlacePrefs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRDeinterlacePrefs = *opaque{
};
// --------------------------------------------------------
// Type: VMRDeinterlaceTech
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMRDeinterlaceTech = *opaque{
};
// --------------------------------------------------------
// Type: VMRFrequency
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRFrequency = extern struct {
    dwNumerator: {"kind":"UInt32"},
    dwDenominator: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VMRVideoDesc
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRVideoDesc = extern struct {
    dwSize: {"kind":"UInt32"},
    dwSampleWidth: {"kind":"UInt32"},
    dwSampleHeight: {"kind":"UInt32"},
    SingleFieldPerSample: Windows.Win32.SystemServices.BOOL,
    dwFourCC: {"kind":"UInt32"},
    InputSampleFreq: Windows.Win32.DirectShow.VMRFrequency,
    OutputFrameFreq: Windows.Win32.DirectShow.VMRFrequency,
};
// --------------------------------------------------------
// Type: VMRDeinterlaceCaps
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRDeinterlaceCaps = extern struct {
    dwSize: {"kind":"UInt32"},
    dwNumPreviousOutputFrames: {"kind":"UInt32"},
    dwNumForwardRefSamples: {"kind":"UInt32"},
    dwNumBackwardRefSamples: {"kind":"UInt32"},
    DeinterlaceTechnology: Windows.Win32.DirectShow.VMRDeinterlaceTech,
};
// --------------------------------------------------------
// Type: IVMRDeinterlaceControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRDeinterlaceControl = *opaque{
    // TODO: Method 'GetNumberOfDeinterlaceModes'
    // TODO: Method 'GetDeinterlaceModeCaps'
    // TODO: Method 'GetDeinterlaceMode'
    // TODO: Method 'SetDeinterlaceMode'
    // TODO: Method 'GetDeinterlacePrefs'
    // TODO: Method 'SetDeinterlacePrefs'
    // TODO: Method 'GetActualDeinterlaceMode'
};
// --------------------------------------------------------
// Type: VMRALPHABITMAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRALPHABITMAP = extern struct {
    dwFlags: {"kind":"UInt32"},
    hdc: Windows.Win32.Gdi.HDC,
    pDDS: Windows.Win32.DirectDraw.IDirectDrawSurface7,
    rSrc: Windows.Win32.DisplayDevices.RECT,
    rDest: Windows.Win32.DirectShow.NORMALIZEDRECT,
    fAlpha: {"kind":"Single"},
    clrSrcKey: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IVMRMixerBitmap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRMixerBitmap = *opaque{
    // TODO: Method 'SetAlphaBitmap'
    // TODO: Method 'UpdateAlphaBitmapParameters'
    // TODO: Method 'GetAlphaBitmapParameters'
};
// --------------------------------------------------------
// Type: VMRVIDEOSTREAMINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMRVIDEOSTREAMINFO = extern struct {
    pddsVideoSurface: Windows.Win32.DirectDraw.IDirectDrawSurface7,
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
    dwStrmID: {"kind":"UInt32"},
    fAlpha: {"kind":"Single"},
    ddClrKey: Windows.Win32.DirectShow.DDCOLORKEY,
    rNormal: Windows.Win32.DirectShow.NORMALIZEDRECT,
};
// --------------------------------------------------------
// Type: IVMRImageCompositor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImageCompositor = *opaque{
    // TODO: Method 'InitCompositionTarget'
    // TODO: Method 'TermCompositionTarget'
    // TODO: Method 'SetStreamMediaType'
    // TODO: Method 'CompositeImage'
};
// --------------------------------------------------------
// Type: IVMRVideoStreamControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRVideoStreamControl = *opaque{
    // TODO: Method 'SetColorKey'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'SetStreamActiveState'
    // TODO: Method 'GetStreamActiveState'
};
// --------------------------------------------------------
// Type: IVMRSurface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurface = *opaque{
    // TODO: Method 'IsSurfaceLocked'
    // TODO: Method 'LockSurface'
    // TODO: Method 'UnlockSurface'
    // TODO: Method 'GetSurface'
};
// --------------------------------------------------------
// Type: IVMRImagePresenterConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImagePresenterConfig = *opaque{
    // TODO: Method 'SetRenderingPrefs'
    // TODO: Method 'GetRenderingPrefs'
};
// --------------------------------------------------------
// Type: IVMRImagePresenterExclModeConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImagePresenterExclModeConfig = *opaque{
    // TODO: Method 'SetXlcModeDDObjAndPrimarySurface'
    // TODO: Method 'GetXlcModeDDObjAndPrimarySurface'
};
// --------------------------------------------------------
// Type: IVPManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPManager = *opaque{
    // TODO: Method 'SetVideoPortIndex'
    // TODO: Method 'GetVideoPortIndex'
};
// --------------------------------------------------------
// Type: DVD_DOMAIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_DOMAIN = *opaque{
};
// --------------------------------------------------------
// Type: DVD_MENU_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_MENU_ID = *opaque{
};
// --------------------------------------------------------
// Type: DVD_DISC_SIDE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_DISC_SIDE = *opaque{
};
// --------------------------------------------------------
// Type: DVD_PREFERRED_DISPLAY_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_PREFERRED_DISPLAY_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DVD_ATR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_ATR = extern struct {
    ulCAT: {"kind":"UInt32"},
    pbATRI: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DVD_FRAMERATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_FRAMERATE = *opaque{
};
// --------------------------------------------------------
// Type: DVD_TIMECODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_TIMECODE = extern struct {
    _bitfield: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DVD_NavCmdType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_NavCmdType = *opaque{
};
// --------------------------------------------------------
// Type: DVD_TIMECODE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_TIMECODE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DVD_HMSF_TIMECODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_HMSF_TIMECODE = extern struct {
    bHours: {"kind":"Byte"},
    bMinutes: {"kind":"Byte"},
    bSeconds: {"kind":"Byte"},
    bFrames: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DVD_PLAYBACK_LOCATION2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_PLAYBACK_LOCATION2 = extern struct {
    TitleNum: {"kind":"UInt32"},
    ChapterNum: {"kind":"UInt32"},
    TimeCode: Windows.Win32.DirectShow.DVD_HMSF_TIMECODE,
    TimeCodeFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DVD_PLAYBACK_LOCATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_PLAYBACK_LOCATION = extern struct {
    TitleNum: {"kind":"UInt32"},
    ChapterNum: {"kind":"UInt32"},
    TimeCode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VALID_UOP_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VALID_UOP_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: DVD_CMD_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_CMD_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DVD_OPTION_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_OPTION_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: DVD_RELATIVE_BUTTON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_RELATIVE_BUTTON = *opaque{
};
// --------------------------------------------------------
// Type: DVD_PARENTAL_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_PARENTAL_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: DVD_AUDIO_LANG_EXT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_AUDIO_LANG_EXT = *opaque{
};
// --------------------------------------------------------
// Type: DVD_SUBPICTURE_LANG_EXT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_SUBPICTURE_LANG_EXT = *opaque{
};
// --------------------------------------------------------
// Type: DVD_AUDIO_APPMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_AUDIO_APPMODE = *opaque{
};
// --------------------------------------------------------
// Type: DVD_AUDIO_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_AUDIO_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: DVD_KARAOKE_DOWNMIX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_KARAOKE_DOWNMIX = *opaque{
};
// --------------------------------------------------------
// Type: DVD_AudioAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_AudioAttributes = extern struct {
    AppMode: Windows.Win32.DirectShow.DVD_AUDIO_APPMODE,
    AppModeData: {"kind":"Byte"},
    AudioFormat: Windows.Win32.DirectShow.DVD_AUDIO_FORMAT,
    Language: {"kind":"UInt32"},
    LanguageExtension: Windows.Win32.DirectShow.DVD_AUDIO_LANG_EXT,
    fHasMultichannelInfo: Windows.Win32.SystemServices.BOOL,
    dwFrequency: {"kind":"UInt32"},
    bQuantization: {"kind":"Byte"},
    bNumberOfChannels: {"kind":"Byte"},
    dwReserved: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: DVD_MUA_MixingInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_MUA_MixingInfo = extern struct {
    fMixTo0: Windows.Win32.SystemServices.BOOL,
    fMixTo1: Windows.Win32.SystemServices.BOOL,
    fMix0InPhase: Windows.Win32.SystemServices.BOOL,
    fMix1InPhase: Windows.Win32.SystemServices.BOOL,
    dwSpeakerPosition: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DVD_MUA_Coeff
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_MUA_Coeff = extern struct {
    log2_alpha: {"kind":"Double"},
    log2_beta: {"kind":"Double"},
};
// --------------------------------------------------------
// Type: DVD_MultichannelAudioAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_MultichannelAudioAttributes = extern struct {
    Info: {"kind":"Array","child": Windows.Win32.DirectShow.DVD_MUA_MixingInfo},
    Coeff: {"kind":"Array","child": Windows.Win32.DirectShow.DVD_MUA_Coeff},
};
// --------------------------------------------------------
// Type: DVD_KARAOKE_CONTENTS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_KARAOKE_CONTENTS = *opaque{
};
// --------------------------------------------------------
// Type: DVD_KARAOKE_ASSIGNMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_KARAOKE_ASSIGNMENT = *opaque{
};
// --------------------------------------------------------
// Type: DVD_KaraokeAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_KaraokeAttributes = extern struct {
    bVersion: {"kind":"Byte"},
    fMasterOfCeremoniesInGuideVocal1: Windows.Win32.SystemServices.BOOL,
    fDuet: Windows.Win32.SystemServices.BOOL,
    ChannelAssignment: Windows.Win32.DirectShow.DVD_KARAOKE_ASSIGNMENT,
    wChannelContents: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: DVD_VIDEO_COMPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_VIDEO_COMPRESSION = *opaque{
};
// --------------------------------------------------------
// Type: DVD_VideoAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_VideoAttributes = extern struct {
    fPanscanPermitted: Windows.Win32.SystemServices.BOOL,
    fLetterboxPermitted: Windows.Win32.SystemServices.BOOL,
    ulAspectX: {"kind":"UInt32"},
    ulAspectY: {"kind":"UInt32"},
    ulFrameRate: {"kind":"UInt32"},
    ulFrameHeight: {"kind":"UInt32"},
    Compression: Windows.Win32.DirectShow.DVD_VIDEO_COMPRESSION,
    fLine21Field1InGOP: Windows.Win32.SystemServices.BOOL,
    fLine21Field2InGOP: Windows.Win32.SystemServices.BOOL,
    ulSourceResolutionX: {"kind":"UInt32"},
    ulSourceResolutionY: {"kind":"UInt32"},
    fIsSourceLetterboxed: Windows.Win32.SystemServices.BOOL,
    fIsFilmMode: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: DVD_SUBPICTURE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_SUBPICTURE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DVD_SUBPICTURE_CODING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_SUBPICTURE_CODING = *opaque{
};
// --------------------------------------------------------
// Type: DVD_SubpictureAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_SubpictureAttributes = extern struct {
    Type: Windows.Win32.DirectShow.DVD_SUBPICTURE_TYPE,
    CodingMode: Windows.Win32.DirectShow.DVD_SUBPICTURE_CODING,
    Language: {"kind":"UInt32"},
    LanguageExtension: Windows.Win32.DirectShow.DVD_SUBPICTURE_LANG_EXT,
};
// --------------------------------------------------------
// Type: DVD_TITLE_APPMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_TITLE_APPMODE = *opaque{
};
// --------------------------------------------------------
// Type: DVD_TitleAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_TitleAttributes = extern struct {
    Anonymous: Windows.Win32.DirectShow.DVD_TitleAttributes+_Anonymous_e__Union,
    VideoAttributes: Windows.Win32.DirectShow.DVD_VideoAttributes,
    ulNumberOfAudioStreams: {"kind":"UInt32"},
    AudioAttributes: {"kind":"Array","child": Windows.Win32.DirectShow.DVD_AudioAttributes},
    MultichannelAudioAttributes: {"kind":"Array","child": Windows.Win32.DirectShow.DVD_MultichannelAudioAttributes},
    ulNumberOfSubpictureStreams: {"kind":"UInt32"},
    SubpictureAttributes: {"kind":"Array","child": Windows.Win32.DirectShow.DVD_SubpictureAttributes},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DVD_MenuAttributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_MenuAttributes = extern struct {
    fCompatibleRegion: {"kind":"Array","child": {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.SystemServices.BOOL}}}},
    VideoAttributes: Windows.Win32.DirectShow.DVD_VideoAttributes,
    fAudioPresent: Windows.Win32.SystemServices.BOOL,
    AudioAttributes: Windows.Win32.DirectShow.DVD_AudioAttributes,
    fSubpicturePresent: Windows.Win32.SystemServices.BOOL,
    SubpictureAttributes: Windows.Win32.DirectShow.DVD_SubpictureAttributes,
};
// --------------------------------------------------------
// Type: IDvdControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdControl = *opaque{
    // TODO: Method 'TitlePlay'
    // TODO: Method 'ChapterPlay'
    // TODO: Method 'TimePlay'
    // TODO: Method 'StopForResume'
    // TODO: Method 'GoUp'
    // TODO: Method 'TimeSearch'
    // TODO: Method 'ChapterSearch'
    // TODO: Method 'PrevPGSearch'
    // TODO: Method 'TopPGSearch'
    // TODO: Method 'NextPGSearch'
    // TODO: Method 'ForwardScan'
    // TODO: Method 'BackwardScan'
    // TODO: Method 'MenuCall'
    // TODO: Method 'Resume'
    // TODO: Method 'UpperButtonSelect'
    // TODO: Method 'LowerButtonSelect'
    // TODO: Method 'LeftButtonSelect'
    // TODO: Method 'RightButtonSelect'
    // TODO: Method 'ButtonActivate'
    // TODO: Method 'ButtonSelectAndActivate'
    // TODO: Method 'StillOff'
    // TODO: Method 'PauseOn'
    // TODO: Method 'PauseOff'
    // TODO: Method 'MenuLanguageSelect'
    // TODO: Method 'AudioStreamChange'
    // TODO: Method 'SubpictureStreamChange'
    // TODO: Method 'AngleChange'
    // TODO: Method 'ParentalLevelSelect'
    // TODO: Method 'ParentalCountrySelect'
    // TODO: Method 'KaraokeAudioPresentationModeChange'
    // TODO: Method 'VideoModePreferrence'
    // TODO: Method 'SetRoot'
    // TODO: Method 'MouseActivate'
    // TODO: Method 'MouseSelect'
    // TODO: Method 'ChapterPlayAutoStop'
};
// --------------------------------------------------------
// Type: IDvdInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdInfo = *opaque{
    // TODO: Method 'GetCurrentDomain'
    // TODO: Method 'GetCurrentLocation'
    // TODO: Method 'GetTotalTitleTime'
    // TODO: Method 'GetCurrentButton'
    // TODO: Method 'GetCurrentAngle'
    // TODO: Method 'GetCurrentAudio'
    // TODO: Method 'GetCurrentSubpicture'
    // TODO: Method 'GetCurrentUOPS'
    // TODO: Method 'GetAllSPRMs'
    // TODO: Method 'GetAllGPRMs'
    // TODO: Method 'GetAudioLanguage'
    // TODO: Method 'GetSubpictureLanguage'
    // TODO: Method 'GetTitleAttributes'
    // TODO: Method 'GetVMGAttributes'
    // TODO: Method 'GetCurrentVideoAttributes'
    // TODO: Method 'GetCurrentAudioAttributes'
    // TODO: Method 'GetCurrentSubpictureAttributes'
    // TODO: Method 'GetCurrentVolumeInfo'
    // TODO: Method 'GetDVDTextInfo'
    // TODO: Method 'GetPlayerParentalLevel'
    // TODO: Method 'GetNumberOfChapters'
    // TODO: Method 'GetTitleParentalLevels'
    // TODO: Method 'GetRoot'
};
// --------------------------------------------------------
// Type: IDvdCmd
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdCmd = *opaque{
    // TODO: Method 'WaitForStart'
    // TODO: Method 'WaitForEnd'
};
// --------------------------------------------------------
// Type: IDvdState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdState = *opaque{
    // TODO: Method 'GetDiscID'
    // TODO: Method 'GetParentalLevel'
};
// --------------------------------------------------------
// Type: IDvdControl2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdControl2 = *opaque{
    // TODO: Method 'PlayTitle'
    // TODO: Method 'PlayChapterInTitle'
    // TODO: Method 'PlayAtTimeInTitle'
    // TODO: Method 'Stop'
    // TODO: Method 'ReturnFromSubmenu'
    // TODO: Method 'PlayAtTime'
    // TODO: Method 'PlayChapter'
    // TODO: Method 'PlayPrevChapter'
    // TODO: Method 'ReplayChapter'
    // TODO: Method 'PlayNextChapter'
    // TODO: Method 'PlayForwards'
    // TODO: Method 'PlayBackwards'
    // TODO: Method 'ShowMenu'
    // TODO: Method 'Resume'
    // TODO: Method 'SelectRelativeButton'
    // TODO: Method 'ActivateButton'
    // TODO: Method 'SelectButton'
    // TODO: Method 'SelectAndActivateButton'
    // TODO: Method 'StillOff'
    // TODO: Method 'Pause'
    // TODO: Method 'SelectAudioStream'
    // TODO: Method 'SelectSubpictureStream'
    // TODO: Method 'SetSubpictureState'
    // TODO: Method 'SelectAngle'
    // TODO: Method 'SelectParentalLevel'
    // TODO: Method 'SelectParentalCountry'
    // TODO: Method 'SelectKaraokeAudioPresentationMode'
    // TODO: Method 'SelectVideoModePreference'
    // TODO: Method 'SetDVDDirectory'
    // TODO: Method 'ActivateAtPosition'
    // TODO: Method 'SelectAtPosition'
    // TODO: Method 'PlayChaptersAutoStop'
    // TODO: Method 'AcceptParentalLevelChange'
    // TODO: Method 'SetOption'
    // TODO: Method 'SetState'
    // TODO: Method 'PlayPeriodInTitleAutoStop'
    // TODO: Method 'SetGPRM'
    // TODO: Method 'SelectDefaultMenuLanguage'
    // TODO: Method 'SelectDefaultAudioLanguage'
    // TODO: Method 'SelectDefaultSubpictureLanguage'
};
// --------------------------------------------------------
// Type: DVD_TextStringType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_TextStringType = *opaque{
};
// --------------------------------------------------------
// Type: DVD_TextCharSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_TextCharSet = *opaque{
};
// --------------------------------------------------------
// Type: DVD_DECODER_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_DECODER_CAPS = extern struct {
    dwSize: {"kind":"UInt32"},
    dwAudioCaps: {"kind":"UInt32"},
    dFwdMaxRateVideo: {"kind":"Double"},
    dFwdMaxRateAudio: {"kind":"Double"},
    dFwdMaxRateSP: {"kind":"Double"},
    dBwdMaxRateVideo: {"kind":"Double"},
    dBwdMaxRateAudio: {"kind":"Double"},
    dBwdMaxRateSP: {"kind":"Double"},
    dwRes1: {"kind":"UInt32"},
    dwRes2: {"kind":"UInt32"},
    dwRes3: {"kind":"UInt32"},
    dwRes4: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDvdInfo2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdInfo2 = *opaque{
    // TODO: Method 'GetCurrentDomain'
    // TODO: Method 'GetCurrentLocation'
    // TODO: Method 'GetTotalTitleTime'
    // TODO: Method 'GetCurrentButton'
    // TODO: Method 'GetCurrentAngle'
    // TODO: Method 'GetCurrentAudio'
    // TODO: Method 'GetCurrentSubpicture'
    // TODO: Method 'GetCurrentUOPS'
    // TODO: Method 'GetAllSPRMs'
    // TODO: Method 'GetAllGPRMs'
    // TODO: Method 'GetAudioLanguage'
    // TODO: Method 'GetSubpictureLanguage'
    // TODO: Method 'GetTitleAttributes'
    // TODO: Method 'GetVMGAttributes'
    // TODO: Method 'GetCurrentVideoAttributes'
    // TODO: Method 'GetAudioAttributes'
    // TODO: Method 'GetKaraokeAttributes'
    // TODO: Method 'GetSubpictureAttributes'
    // TODO: Method 'GetDVDVolumeInfo'
    // TODO: Method 'GetDVDTextNumberOfLanguages'
    // TODO: Method 'GetDVDTextLanguageInfo'
    // TODO: Method 'GetDVDTextStringAsNative'
    // TODO: Method 'GetDVDTextStringAsUnicode'
    // TODO: Method 'GetPlayerParentalLevel'
    // TODO: Method 'GetNumberOfChapters'
    // TODO: Method 'GetTitleParentalLevels'
    // TODO: Method 'GetDVDDirectory'
    // TODO: Method 'IsAudioStreamEnabled'
    // TODO: Method 'GetDiscID'
    // TODO: Method 'GetState'
    // TODO: Method 'GetMenuLanguages'
    // TODO: Method 'GetButtonAtPosition'
    // TODO: Method 'GetCmdFromEvent'
    // TODO: Method 'GetDefaultMenuLanguage'
    // TODO: Method 'GetDefaultAudioLanguage'
    // TODO: Method 'GetDefaultSubpictureLanguage'
    // TODO: Method 'GetDecoderCaps'
    // TODO: Method 'GetButtonRect'
    // TODO: Method 'IsSubpictureStreamEnabled'
};
// --------------------------------------------------------
// Type: AM_DVD_GRAPH_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_DVD_GRAPH_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AM_DVD_STREAM_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_DVD_STREAM_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AM_DVD_RENDERSTATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVD_RENDERSTATUS = extern struct {
    hrVPEStatus: Windows.Win32.Com.HRESULT,
    bDvdVolInvalid: Windows.Win32.SystemServices.BOOL,
    bDvdVolUnknown: Windows.Win32.SystemServices.BOOL,
    bNoLine21In: Windows.Win32.SystemServices.BOOL,
    bNoLine21Out: Windows.Win32.SystemServices.BOOL,
    iNumStreams: {"kind":"Int32"},
    iNumStreamsFailed: {"kind":"Int32"},
    dwFailedStreamsFlag: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDvdGraphBuilder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvdGraphBuilder = *opaque{
    // TODO: Method 'GetFiltergraph'
    // TODO: Method 'GetDvdInterface'
    // TODO: Method 'RenderDvdVideoVolume'
};
// --------------------------------------------------------
// Type: IDDrawExclModeVideo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDDrawExclModeVideo = *opaque{
    // TODO: Method 'SetDDrawObject'
    // TODO: Method 'GetDDrawObject'
    // TODO: Method 'SetDDrawSurface'
    // TODO: Method 'GetDDrawSurface'
    // TODO: Method 'SetDrawParameters'
    // TODO: Method 'GetNativeVideoProps'
    // TODO: Method 'SetCallbackInterface'
};
// --------------------------------------------------------
// Type: _AM_OVERLAY_NOTIFY_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_OVERLAY_NOTIFY_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IDDrawExclModeVideoCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDDrawExclModeVideoCallback = *opaque{
    // TODO: Method 'OnUpdateOverlay'
    // TODO: Method 'OnUpdateColorKey'
    // TODO: Method 'OnUpdateSize'
};
// --------------------------------------------------------
// Type: BDA_TEMPLATE_CONNECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TEMPLATE_CONNECTION = extern struct {
    FromNodeType: {"kind":"UInt32"},
    FromNodePinType: {"kind":"UInt32"},
    ToNodeType: {"kind":"UInt32"},
    ToNodePinType: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_TEMPLATE_PIN_JOINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TEMPLATE_PIN_JOINT = extern struct {
    uliTemplateConnection: {"kind":"UInt32"},
    ulcInstancesMax: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_EVENT_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_EVENT_ID = *opaque{
};
// --------------------------------------------------------
// Type: KS_BDA_FRAME_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_BDA_FRAME_INFO = extern struct {
    ExtendedHeaderSize: {"kind":"UInt32"},
    dwFrameFlags: {"kind":"UInt32"},
    ulEvent: {"kind":"UInt32"},
    ulChannelNumber: {"kind":"UInt32"},
    ulSubchannelNumber: {"kind":"UInt32"},
    ulReason: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_ETHERNET_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_ETHERNET_ADDRESS = extern struct {
    rgbAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_ETHERNET_ADDRESS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_ETHERNET_ADDRESS_LIST = extern struct {
    ulcAddresses: {"kind":"UInt32"},
    rgAddressl: {"kind":"Array","child": Windows.Win32.DirectShow.BDA_ETHERNET_ADDRESS},
};
// --------------------------------------------------------
// Type: BDA_MULTICAST_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_MULTICAST_MODE = *opaque{
};
// --------------------------------------------------------
// Type: BDA_IPv4_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_IPv4_ADDRESS = extern struct {
    rgbAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_IPv4_ADDRESS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_IPv4_ADDRESS_LIST = extern struct {
    ulcAddresses: {"kind":"UInt32"},
    rgAddressl: {"kind":"Array","child": Windows.Win32.DirectShow.BDA_IPv4_ADDRESS},
};
// --------------------------------------------------------
// Type: BDA_IPv6_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_IPv6_ADDRESS = extern struct {
    rgbAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_IPv6_ADDRESS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_IPv6_ADDRESS_LIST = extern struct {
    ulcAddresses: {"kind":"UInt32"},
    rgAddressl: {"kind":"Array","child": Windows.Win32.DirectShow.BDA_IPv6_ADDRESS},
};
// --------------------------------------------------------
// Type: BDA_SIGNAL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_SIGNAL_STATE = *opaque{
};
// --------------------------------------------------------
// Type: BDA_CHANGE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_CHANGE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: BDANODE_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDANODE_DESCRIPTOR = extern struct {
    ulBdaNodeType: {"kind":"UInt32"},
    guidFunction: Guid,
    guidName: Guid,
};
// --------------------------------------------------------
// Type: BDA_TABLE_SECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TABLE_SECTION = extern struct {
    ulPrimarySectionId: {"kind":"UInt32"},
    ulSecondarySectionId: {"kind":"UInt32"},
    ulcbSectionLength: {"kind":"UInt32"},
    argbSectionData: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: BDA_DISEQC_SEND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_DISEQC_SEND = extern struct {
    ulRequestId: {"kind":"UInt32"},
    ulPacketLength: {"kind":"UInt32"},
    argbPacketData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_DISEQC_RESPONSE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_DISEQC_RESPONSE = extern struct {
    ulRequestId: {"kind":"UInt32"},
    ulPacketLength: {"kind":"UInt32"},
    argbPacketData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: MEDIA_SAMPLE_CONTENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MEDIA_SAMPLE_CONTENT = *opaque{
};
// --------------------------------------------------------
// Type: PID_MAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PID_MAP = extern struct {
    ulPID: {"kind":"UInt32"},
    MediaSampleContent: Windows.Win32.DirectShow.MEDIA_SAMPLE_CONTENT,
};
// --------------------------------------------------------
// Type: BDA_PID_MAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_PID_MAP = extern struct {
    MediaSampleContent: Windows.Win32.DirectShow.MEDIA_SAMPLE_CONTENT,
    ulcPIDs: {"kind":"UInt32"},
    aulPIDs: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: BDA_PID_UNMAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_PID_UNMAP = extern struct {
    ulcPIDs: {"kind":"UInt32"},
    aulPIDs: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: BDA_CA_MODULE_UI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_CA_MODULE_UI = extern struct {
    ulFormat: {"kind":"UInt32"},
    ulbcDesc: {"kind":"UInt32"},
    ulDesc: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: BDA_PROGRAM_PID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_PROGRAM_PID_LIST = extern struct {
    ulProgramNumber: {"kind":"UInt32"},
    ulcPIDs: {"kind":"UInt32"},
    ulPID: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: BDA_DRM_DRMSTATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_DRM_DRMSTATUS = extern struct {
    lResult: {"kind":"Int32"},
    DRMuuid: Guid,
    ulDrmUuidListStringSize: {"kind":"UInt32"},
    argbDrmUuidListString: {"kind":"Array","child": Guid},
};
// --------------------------------------------------------
// Type: BDA_WMDRM_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_WMDRM_STATUS = extern struct {
    lResult: {"kind":"Int32"},
    ulMaxCaptureTokenSize: {"kind":"UInt32"},
    uMaxStreamingPid: {"kind":"UInt32"},
    ulMaxLicense: {"kind":"UInt32"},
    ulMinSecurityLevel: {"kind":"UInt32"},
    ulRevInfoSequenceNumber: {"kind":"UInt32"},
    ulRevInfoIssuedTime: {"kind":"UInt64"},
    ulRevListVersion: {"kind":"UInt32"},
    ulRevInfoTTL: {"kind":"UInt32"},
    ulState: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_WMDRM_KEYINFOLIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_WMDRM_KEYINFOLIST = extern struct {
    lResult: {"kind":"Int32"},
    ulKeyuuidBufferLen: {"kind":"UInt32"},
    argKeyuuidBuffer: {"kind":"Array","child": Guid},
};
// --------------------------------------------------------
// Type: BDA_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_BUFFER = extern struct {
    lResult: {"kind":"Int32"},
    ulBufferSize: {"kind":"UInt32"},
    argbBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_WMDRM_RENEWLICENSE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_WMDRM_RENEWLICENSE = extern struct {
    lResult: {"kind":"Int32"},
    ulDescrambleStatus: {"kind":"UInt32"},
    ulXmrLicenseOutputLength: {"kind":"UInt32"},
    argbXmrLicenceOutputBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_WMDRMTUNER_PIDPROTECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_WMDRMTUNER_PIDPROTECTION = extern struct {
    lResult: {"kind":"Int32"},
    uuidKeyID: Guid,
};
// --------------------------------------------------------
// Type: BDA_WMDRMTUNER_PURCHASEENTITLEMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_WMDRMTUNER_PURCHASEENTITLEMENT = extern struct {
    lResult: {"kind":"Int32"},
    ulDescrambleStatus: {"kind":"UInt32"},
    ulCaptureTokenLength: {"kind":"UInt32"},
    argbCaptureTokenBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_TUNER_TUNERSTATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TUNER_TUNERSTATE = extern struct {
    lResult: {"kind":"Int32"},
    ulTuneLength: {"kind":"UInt32"},
    argbTuneData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_TUNER_DIAGNOSTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TUNER_DIAGNOSTICS = extern struct {
    lResult: {"kind":"Int32"},
    ulSignalLevel: {"kind":"UInt32"},
    ulSignalLevelQuality: {"kind":"UInt32"},
    ulSignalNoiseRatio: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_STRING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_STRING = extern struct {
    lResult: {"kind":"Int32"},
    ulStringSize: {"kind":"UInt32"},
    argbString: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_SCAN_CAPABILTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_SCAN_CAPABILTIES = extern struct {
    lResult: {"kind":"Int32"},
    ul64AnalogStandardsSupported: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: BDA_SCAN_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_SCAN_STATE = extern struct {
    lResult: {"kind":"Int32"},
    ulSignalLock: {"kind":"UInt32"},
    ulSecondsLeft: {"kind":"UInt32"},
    ulCurrentFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_SCAN_START
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_SCAN_START = extern struct {
    lResult: {"kind":"Int32"},
    LowerFrequency: {"kind":"UInt32"},
    HigerFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_GDDS_DATATYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_GDDS_DATATYPE = extern struct {
    lResult: {"kind":"Int32"},
    uuidDataType: Guid,
};
// --------------------------------------------------------
// Type: BDA_GDDS_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_GDDS_DATA = extern struct {
    lResult: {"kind":"Int32"},
    ulDataLength: {"kind":"UInt32"},
    ulPercentageProgress: {"kind":"UInt32"},
    argbData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_USERACTIVITY_INTERVAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_USERACTIVITY_INTERVAL = extern struct {
    lResult: {"kind":"Int32"},
    ulActivityInterval: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_CAS_CHECK_ENTITLEMENTTOKEN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_CAS_CHECK_ENTITLEMENTTOKEN = extern struct {
    lResult: {"kind":"Int32"},
    ulDescrambleStatus: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_CAS_CLOSE_MMIDIALOG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_CAS_CLOSE_MMIDIALOG = extern struct {
    lResult: {"kind":"Int32"},
    SessionResult: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_CAS_REQUESTTUNERDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_CAS_REQUESTTUNERDATA = extern struct {
    ucRequestPriority: {"kind":"Byte"},
    ucRequestReason: {"kind":"Byte"},
    ucRequestConsequences: {"kind":"Byte"},
    ulEstimatedTime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_CAS_OPENMMIDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_CAS_OPENMMIDATA = extern struct {
    ulDialogNumber: {"kind":"UInt32"},
    ulDialogRequest: {"kind":"UInt32"},
    uuidDialogType: Guid,
    usDialogDataLength: {"kind":"UInt16"},
    argbDialogData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_CAS_CLOSEMMIDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_CAS_CLOSEMMIDATA = extern struct {
    ulDialogNumber: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ISDBCAS_REQUEST_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ISDBCAS_REQUEST_ID = *opaque{
};
// --------------------------------------------------------
// Type: BDA_ISDBCAS_REQUESTHEADER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const BDA_ISDBCAS_REQUESTHEADER = *opaque{
};
// --------------------------------------------------------
// Type: BDA_ISDBCAS_RESPONSEDATA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const BDA_ISDBCAS_RESPONSEDATA = *opaque{
};
// --------------------------------------------------------
// Type: BDA_ISDBCAS_EMG_REQ
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_ISDBCAS_EMG_REQ = extern struct {
    bCLA: {"kind":"Byte"},
    bINS: {"kind":"Byte"},
    bP1: {"kind":"Byte"},
    bP2: {"kind":"Byte"},
    bLC: {"kind":"Byte"},
    bCardId: {"kind":"Array","child": {"kind":"Byte"}},
    bProtocol: {"kind":"Byte"},
    bCABroadcasterGroupId: {"kind":"Byte"},
    bMessageControl: {"kind":"Byte"},
    bMessageCode: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: MUX_PID_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MUX_PID_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: BDA_MUX_PIDLISTITEM
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const BDA_MUX_PIDLISTITEM = *opaque{
};
// --------------------------------------------------------
// Type: BDA_TS_SELECTORINFO
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const BDA_TS_SELECTORINFO = *opaque{
};
// --------------------------------------------------------
// Type: BDA_TS_SELECTORINFO_ISDBS_EXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TS_SELECTORINFO_ISDBS_EXT = extern struct {
    bTMCC: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_DVBT2_L1_SIGNALLING_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_DVBT2_L1_SIGNALLING_DATA = extern struct {
    L1Pre_TYPE: {"kind":"Byte"},
    L1Pre_BWT_S1_S2: {"kind":"Byte"},
    L1Pre_REPETITION_GUARD_PAPR: {"kind":"Byte"},
    L1Pre_MOD_COD_FEC: {"kind":"Byte"},
    L1Pre_POSTSIZE_INFO_PILOT: {"kind":"Array","child": {"kind":"Byte"}},
    L1Pre_TX_ID_AVAIL: {"kind":"Byte"},
    L1Pre_CELL_ID: {"kind":"Array","child": {"kind":"Byte"}},
    L1Pre_NETWORK_ID: {"kind":"Array","child": {"kind":"Byte"}},
    L1Pre_T2SYSTEM_ID: {"kind":"Array","child": {"kind":"Byte"}},
    L1Pre_NUM_T2_FRAMES: {"kind":"Byte"},
    L1Pre_NUM_DATA_REGENFLAG_L1POSTEXT: {"kind":"Array","child": {"kind":"Byte"}},
    L1Pre_NUMRF_CURRENTRF_RESERVED: {"kind":"Array","child": {"kind":"Byte"}},
    L1Pre_CRC32: {"kind":"Array","child": {"kind":"Byte"}},
    L1PostData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_RATING_PINRESET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_RATING_PINRESET = extern struct {
    bPinLength: {"kind":"Byte"},
    argbNewPin: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DVBSystemType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVBSystemType = *opaque{
};
// --------------------------------------------------------
// Type: BDA_Channel
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_Channel = *opaque{
};
// --------------------------------------------------------
// Type: ComponentCategory
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ComponentCategory = *opaque{
};
// --------------------------------------------------------
// Type: ComponentStatus
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ComponentStatus = *opaque{
};
// --------------------------------------------------------
// Type: MPEG2StreamType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MPEG2StreamType = *opaque{
};
// --------------------------------------------------------
// Type: MPEG2_TRANSPORT_STRIDE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MPEG2_TRANSPORT_STRIDE = extern struct {
    dwOffset: {"kind":"UInt32"},
    dwPacketLength: {"kind":"UInt32"},
    dwStride: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ATSCComponentTypeFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ATSCComponentTypeFlags = *opaque{
};
// --------------------------------------------------------
// Type: BinaryConvolutionCodeRate
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BinaryConvolutionCodeRate = *opaque{
};
// --------------------------------------------------------
// Type: FECMethod
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FECMethod = *opaque{
};
// --------------------------------------------------------
// Type: ModulationType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ModulationType = *opaque{
};
// --------------------------------------------------------
// Type: ScanModulationTypes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ScanModulationTypes = *opaque{
};
// --------------------------------------------------------
// Type: SpectralInversion
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SpectralInversion = *opaque{
};
// --------------------------------------------------------
// Type: Polarisation
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const Polarisation = *opaque{
};
// --------------------------------------------------------
// Type: LNB_Source
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LNB_Source = *opaque{
};
// --------------------------------------------------------
// Type: GuardInterval
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const GuardInterval = *opaque{
};
// --------------------------------------------------------
// Type: HierarchyAlpha
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const HierarchyAlpha = *opaque{
};
// --------------------------------------------------------
// Type: TransmissionMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TransmissionMode = *opaque{
};
// --------------------------------------------------------
// Type: RollOff
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RollOff = *opaque{
};
// --------------------------------------------------------
// Type: Pilot
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const Pilot = *opaque{
};
// --------------------------------------------------------
// Type: BDA_SIGNAL_TIMEOUTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_SIGNAL_TIMEOUTS = extern struct {
    ulCarrierTimeoutMs: {"kind":"UInt32"},
    ulScanningTimeoutMs: {"kind":"UInt32"},
    ulTuningTimeoutMs: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: BDA_Frequency
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_Frequency = *opaque{
};
// --------------------------------------------------------
// Type: BDA_Range
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_Range = *opaque{
};
// --------------------------------------------------------
// Type: BDA_Channel_Bandwidth
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_Channel_Bandwidth = *opaque{
};
// --------------------------------------------------------
// Type: BDA_Frequency_Multiplier
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_Frequency_Multiplier = *opaque{
};
// --------------------------------------------------------
// Type: BDA_Comp_Flags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_Comp_Flags = *opaque{
};
// --------------------------------------------------------
// Type: ApplicationTypeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ApplicationTypeType = *opaque{
};
// --------------------------------------------------------
// Type: BDA_CONDITIONALACCESS_REQUESTTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_CONDITIONALACCESS_REQUESTTYPE = *opaque{
};
// --------------------------------------------------------
// Type: BDA_CONDITIONALACCESS_MMICLOSEREASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_CONDITIONALACCESS_MMICLOSEREASON = *opaque{
};
// --------------------------------------------------------
// Type: BDA_CONDITIONALACCESS_SESSION_RESULT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_CONDITIONALACCESS_SESSION_RESULT = *opaque{
};
// --------------------------------------------------------
// Type: BDA_DISCOVERY_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_DISCOVERY_STATE = *opaque{
};
// --------------------------------------------------------
// Type: SmartCardStatusType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SmartCardStatusType = *opaque{
};
// --------------------------------------------------------
// Type: SmartCardAssociationType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SmartCardAssociationType = *opaque{
};
// --------------------------------------------------------
// Type: LocationCodeSchemeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LocationCodeSchemeType = *opaque{
};
// --------------------------------------------------------
// Type: EALocationCodeType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const EALocationCodeType = extern struct {
    LocationCodeScheme: Windows.Win32.DirectShow.LocationCodeSchemeType,
    state_code: {"kind":"Byte"},
    county_subdivision: {"kind":"Byte"},
    county_code: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: EntitlementType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EntitlementType = *opaque{
};
// --------------------------------------------------------
// Type: UICloseReasonType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const UICloseReasonType = *opaque{
};
// --------------------------------------------------------
// Type: SmartCardApplication
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SmartCardApplication = extern struct {
    ApplicationType: Windows.Win32.DirectShow.ApplicationTypeType,
    ApplicationVersion: {"kind":"UInt16"},
    pbstrApplicationName: Windows.Win32.Automation.BSTR,
    pbstrApplicationURL: Windows.Win32.Automation.BSTR,
};
// --------------------------------------------------------
// Type: BDA_DrmPairingError
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_DrmPairingError = *opaque{
};
// --------------------------------------------------------
// Type: IBDA_NetworkProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_NetworkProvider = *opaque{
    // TODO: Method 'PutSignalSource'
    // TODO: Method 'GetSignalSource'
    // TODO: Method 'GetNetworkType'
    // TODO: Method 'PutTuningSpace'
    // TODO: Method 'GetTuningSpace'
    // TODO: Method 'RegisterDeviceFilter'
    // TODO: Method 'UnRegisterDeviceFilter'
};
// --------------------------------------------------------
// Type: IBDA_EthernetFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_EthernetFilter = *opaque{
    // TODO: Method 'GetMulticastListSize'
    // TODO: Method 'PutMulticastList'
    // TODO: Method 'GetMulticastList'
    // TODO: Method 'PutMulticastMode'
    // TODO: Method 'GetMulticastMode'
};
// --------------------------------------------------------
// Type: IBDA_IPV4Filter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_IPV4Filter = *opaque{
    // TODO: Method 'GetMulticastListSize'
    // TODO: Method 'PutMulticastList'
    // TODO: Method 'GetMulticastList'
    // TODO: Method 'PutMulticastMode'
    // TODO: Method 'GetMulticastMode'
};
// --------------------------------------------------------
// Type: IBDA_IPV6Filter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_IPV6Filter = *opaque{
    // TODO: Method 'GetMulticastListSize'
    // TODO: Method 'PutMulticastList'
    // TODO: Method 'GetMulticastList'
    // TODO: Method 'PutMulticastMode'
    // TODO: Method 'GetMulticastMode'
};
// --------------------------------------------------------
// Type: IBDA_DeviceControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DeviceControl = *opaque{
    // TODO: Method 'StartChanges'
    // TODO: Method 'CheckChanges'
    // TODO: Method 'CommitChanges'
    // TODO: Method 'GetChangeState'
};
// --------------------------------------------------------
// Type: IBDA_PinControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_PinControl = *opaque{
    // TODO: Method 'GetPinID'
    // TODO: Method 'GetPinType'
    // TODO: Method 'RegistrationContext'
};
// --------------------------------------------------------
// Type: IBDA_SignalProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_SignalProperties = *opaque{
    // TODO: Method 'PutNetworkType'
    // TODO: Method 'GetNetworkType'
    // TODO: Method 'PutSignalSource'
    // TODO: Method 'GetSignalSource'
    // TODO: Method 'PutTuningSpace'
    // TODO: Method 'GetTuningSpace'
};
// --------------------------------------------------------
// Type: IBDA_SignalStatistics
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_SignalStatistics = *opaque{
    // TODO: Method 'put_SignalStrength'
    // TODO: Method 'get_SignalStrength'
    // TODO: Method 'put_SignalQuality'
    // TODO: Method 'get_SignalQuality'
    // TODO: Method 'put_SignalPresent'
    // TODO: Method 'get_SignalPresent'
    // TODO: Method 'put_SignalLocked'
    // TODO: Method 'get_SignalLocked'
    // TODO: Method 'put_SampleTime'
    // TODO: Method 'get_SampleTime'
};
// --------------------------------------------------------
// Type: IBDA_Topology
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_Topology = *opaque{
    // TODO: Method 'GetNodeTypes'
    // TODO: Method 'GetNodeDescriptors'
    // TODO: Method 'GetNodeInterfaces'
    // TODO: Method 'GetPinTypes'
    // TODO: Method 'GetTemplateConnections'
    // TODO: Method 'CreatePin'
    // TODO: Method 'DeletePin'
    // TODO: Method 'SetMediaType'
    // TODO: Method 'SetMedium'
    // TODO: Method 'CreateTopology'
    // TODO: Method 'GetControlNode'
};
// --------------------------------------------------------
// Type: IBDA_VoidTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_VoidTransform = *opaque{
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
};
// --------------------------------------------------------
// Type: IBDA_NullTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_NullTransform = *opaque{
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
};
// --------------------------------------------------------
// Type: IBDA_FrequencyFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_FrequencyFilter = *opaque{
    // TODO: Method 'put_Autotune'
    // TODO: Method 'get_Autotune'
    // TODO: Method 'put_Frequency'
    // TODO: Method 'get_Frequency'
    // TODO: Method 'put_Polarity'
    // TODO: Method 'get_Polarity'
    // TODO: Method 'put_Range'
    // TODO: Method 'get_Range'
    // TODO: Method 'put_Bandwidth'
    // TODO: Method 'get_Bandwidth'
    // TODO: Method 'put_FrequencyMultiplier'
    // TODO: Method 'get_FrequencyMultiplier'
};
// --------------------------------------------------------
// Type: IBDA_LNBInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_LNBInfo = *opaque{
    // TODO: Method 'put_LocalOscilatorFrequencyLowBand'
    // TODO: Method 'get_LocalOscilatorFrequencyLowBand'
    // TODO: Method 'put_LocalOscilatorFrequencyHighBand'
    // TODO: Method 'get_LocalOscilatorFrequencyHighBand'
    // TODO: Method 'put_HighLowSwitchFrequency'
    // TODO: Method 'get_HighLowSwitchFrequency'
};
// --------------------------------------------------------
// Type: IBDA_DiseqCommand
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DiseqCommand = *opaque{
    // TODO: Method 'put_EnableDiseqCommands'
    // TODO: Method 'put_DiseqLNBSource'
    // TODO: Method 'put_DiseqUseToneBurst'
    // TODO: Method 'put_DiseqRepeats'
    // TODO: Method 'put_DiseqSendCommand'
    // TODO: Method 'get_DiseqResponse'
};
// --------------------------------------------------------
// Type: IBDA_AutoDemodulate
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_AutoDemodulate = *opaque{
    // TODO: Method 'put_AutoDemodulate'
};
// --------------------------------------------------------
// Type: IBDA_AutoDemodulateEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_AutoDemodulateEx = *opaque{
    // TODO: Method 'get_SupportedDeviceNodeTypes'
    // TODO: Method 'get_SupportedVideoFormats'
    // TODO: Method 'get_AuxInputCount'
};
// --------------------------------------------------------
// Type: IBDA_DigitalDemodulator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DigitalDemodulator = *opaque{
    // TODO: Method 'put_ModulationType'
    // TODO: Method 'get_ModulationType'
    // TODO: Method 'put_InnerFECMethod'
    // TODO: Method 'get_InnerFECMethod'
    // TODO: Method 'put_InnerFECRate'
    // TODO: Method 'get_InnerFECRate'
    // TODO: Method 'put_OuterFECMethod'
    // TODO: Method 'get_OuterFECMethod'
    // TODO: Method 'put_OuterFECRate'
    // TODO: Method 'get_OuterFECRate'
    // TODO: Method 'put_SymbolRate'
    // TODO: Method 'get_SymbolRate'
    // TODO: Method 'put_SpectralInversion'
    // TODO: Method 'get_SpectralInversion'
};
// --------------------------------------------------------
// Type: IBDA_DigitalDemodulator2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DigitalDemodulator2 = *opaque{
    // TODO: Method 'put_GuardInterval'
    // TODO: Method 'get_GuardInterval'
    // TODO: Method 'put_TransmissionMode'
    // TODO: Method 'get_TransmissionMode'
    // TODO: Method 'put_RollOff'
    // TODO: Method 'get_RollOff'
    // TODO: Method 'put_Pilot'
    // TODO: Method 'get_Pilot'
};
// --------------------------------------------------------
// Type: IBDA_DigitalDemodulator3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DigitalDemodulator3 = *opaque{
    // TODO: Method 'put_SignalTimeouts'
    // TODO: Method 'get_SignalTimeouts'
    // TODO: Method 'put_PLPNumber'
    // TODO: Method 'get_PLPNumber'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_bdaiface_0000_0019_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_bdaiface_0000_0019_0001 = *opaque{
};
// --------------------------------------------------------
// Type: ICCSubStreamFiltering
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICCSubStreamFiltering = *opaque{
    // TODO: Method 'get_SubstreamTypes'
    // TODO: Method 'put_SubstreamTypes'
};
// --------------------------------------------------------
// Type: IBDA_IPSinkControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_IPSinkControl = *opaque{
    // TODO: Method 'GetMulticastList'
    // TODO: Method 'GetAdapterIPAddress'
};
// --------------------------------------------------------
// Type: IBDA_IPSinkInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_IPSinkInfo = *opaque{
    // TODO: Method 'get_MulticastList'
    // TODO: Method 'get_AdapterIPAddress'
    // TODO: Method 'get_AdapterDescription'
};
// --------------------------------------------------------
// Type: IEnumPIDMap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumPIDMap = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IMPEG2PIDMap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2PIDMap = *opaque{
    // TODO: Method 'MapPID'
    // TODO: Method 'UnmapPID'
    // TODO: Method 'EnumPIDMap'
};
// --------------------------------------------------------
// Type: IFrequencyMap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFrequencyMap = *opaque{
    // TODO: Method 'get_FrequencyMapping'
    // TODO: Method 'put_FrequencyMapping'
    // TODO: Method 'get_CountryCode'
    // TODO: Method 'put_CountryCode'
    // TODO: Method 'get_DefaultFrequencyMapping'
    // TODO: Method 'get_CountryCodeList'
};
// --------------------------------------------------------
// Type: IBDA_EasMessage
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_EasMessage = *opaque{
    // TODO: Method 'get_EasMessage'
};
// --------------------------------------------------------
// Type: IBDA_TransportStreamInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_TransportStreamInfo = *opaque{
    // TODO: Method 'get_PatTableTickCount'
};
// --------------------------------------------------------
// Type: IBDA_ConditionalAccess
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_ConditionalAccess = *opaque{
    // TODO: Method 'get_SmartCardStatus'
    // TODO: Method 'get_SmartCardInfo'
    // TODO: Method 'get_SmartCardApplications'
    // TODO: Method 'get_Entitlement'
    // TODO: Method 'TuneByChannel'
    // TODO: Method 'SetProgram'
    // TODO: Method 'AddProgram'
    // TODO: Method 'RemoveProgram'
    // TODO: Method 'GetModuleUI'
    // TODO: Method 'InformUIClosed'
};
// --------------------------------------------------------
// Type: IBDA_DiagnosticProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DiagnosticProperties = *opaque{
};
// --------------------------------------------------------
// Type: IBDA_DRM
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DRM = *opaque{
    // TODO: Method 'GetDRMPairingStatus'
    // TODO: Method 'PerformDRMPairing'
};
// --------------------------------------------------------
// Type: IBDA_NameValueService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_NameValueService = *opaque{
    // TODO: Method 'GetValueNameByIndex'
    // TODO: Method 'GetValue'
    // TODO: Method 'SetValue'
};
// --------------------------------------------------------
// Type: IBDA_ConditionalAccessEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_ConditionalAccessEx = *opaque{
    // TODO: Method 'CheckEntitlementToken'
    // TODO: Method 'SetCaptureToken'
    // TODO: Method 'OpenBroadcastMmi'
    // TODO: Method 'CloseMmiDialog'
    // TODO: Method 'CreateDialogRequestNumber'
};
// --------------------------------------------------------
// Type: IBDA_ISDBConditionalAccess
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_ISDBConditionalAccess = *opaque{
    // TODO: Method 'SetIsdbCasRequest'
};
// --------------------------------------------------------
// Type: IBDA_EventingService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_EventingService = *opaque{
    // TODO: Method 'CompleteEvent'
};
// --------------------------------------------------------
// Type: IBDA_AUX
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_AUX = *opaque{
    // TODO: Method 'QueryCapabilities'
    // TODO: Method 'EnumCapability'
};
// --------------------------------------------------------
// Type: IBDA_Encoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_Encoder = *opaque{
    // TODO: Method 'QueryCapabilities'
    // TODO: Method 'EnumAudioCapability'
    // TODO: Method 'EnumVideoCapability'
    // TODO: Method 'SetParameters'
    // TODO: Method 'GetState'
};
// --------------------------------------------------------
// Type: IBDA_FDC
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_FDC = *opaque{
    // TODO: Method 'GetStatus'
    // TODO: Method 'RequestTables'
    // TODO: Method 'AddPid'
    // TODO: Method 'RemovePid'
    // TODO: Method 'AddTid'
    // TODO: Method 'RemoveTid'
    // TODO: Method 'GetTableSection'
};
// --------------------------------------------------------
// Type: IBDA_GuideDataDeliveryService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_GuideDataDeliveryService = *opaque{
    // TODO: Method 'GetGuideDataType'
    // TODO: Method 'GetGuideData'
    // TODO: Method 'RequestGuideDataUpdate'
    // TODO: Method 'GetTuneXmlFromServiceIdx'
    // TODO: Method 'GetServices'
    // TODO: Method 'GetServiceInfoFromTuneXml'
};
// --------------------------------------------------------
// Type: IBDA_DRMService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DRMService = *opaque{
    // TODO: Method 'SetDRM'
    // TODO: Method 'GetDRMStatus'
};
// --------------------------------------------------------
// Type: IBDA_WMDRMSession
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_WMDRMSession = *opaque{
    // TODO: Method 'GetStatus'
    // TODO: Method 'SetRevInfo'
    // TODO: Method 'SetCrl'
    // TODO: Method 'TransactMessage'
    // TODO: Method 'GetLicense'
    // TODO: Method 'ReissueLicense'
    // TODO: Method 'RenewLicense'
    // TODO: Method 'GetKeyInfo'
};
// --------------------------------------------------------
// Type: IBDA_WMDRMTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_WMDRMTuner = *opaque{
    // TODO: Method 'PurchaseEntitlement'
    // TODO: Method 'CancelCaptureToken'
    // TODO: Method 'SetPidProtection'
    // TODO: Method 'GetPidProtection'
    // TODO: Method 'SetSyncValue'
    // TODO: Method 'GetStartCodeProfile'
};
// --------------------------------------------------------
// Type: IBDA_DRIDRMService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DRIDRMService = *opaque{
    // TODO: Method 'SetDRM'
    // TODO: Method 'GetDRMStatus'
    // TODO: Method 'GetPairingStatus'
};
// --------------------------------------------------------
// Type: IBDA_DRIWMDRMSession
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_DRIWMDRMSession = *opaque{
    // TODO: Method 'AcknowledgeLicense'
    // TODO: Method 'ProcessLicenseChallenge'
    // TODO: Method 'ProcessRegistrationChallenge'
    // TODO: Method 'SetRevInfo'
    // TODO: Method 'SetCrl'
    // TODO: Method 'GetHMSAssociationData'
    // TODO: Method 'GetLastCardeaError'
};
// --------------------------------------------------------
// Type: IBDA_MUX
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_MUX = *opaque{
    // TODO: Method 'SetPidList'
    // TODO: Method 'GetPidList'
};
// --------------------------------------------------------
// Type: IBDA_TransportStreamSelector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_TransportStreamSelector = *opaque{
    // TODO: Method 'SetTSID'
    // TODO: Method 'GetTSInformation'
};
// --------------------------------------------------------
// Type: IBDA_UserActivityService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_UserActivityService = *opaque{
    // TODO: Method 'SetCurrentTunerUseReason'
    // TODO: Method 'GetUserActivityInterval'
    // TODO: Method 'UserActivityDetected'
};
// --------------------------------------------------------
// Type: IESEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESEvent = *opaque{
    // TODO: Method 'GetEventId'
    // TODO: Method 'GetEventType'
    // TODO: Method 'SetCompletionStatus'
    // TODO: Method 'GetData'
    // TODO: Method 'GetStringData'
};
// --------------------------------------------------------
// Type: IESEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESEvents = *opaque{
    // TODO: Method 'OnESEventReceived'
};
// --------------------------------------------------------
// Type: IBroadcastEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBroadcastEvent = *opaque{
    // TODO: Method 'Fire'
};
// --------------------------------------------------------
// Type: IBroadcastEventEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBroadcastEventEx = *opaque{
    // TODO: Method 'FireEx'
};
// --------------------------------------------------------
// Type: IAMNetShowConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMNetShowConfig = *opaque{
    // TODO: Method 'get_BufferingTime'
    // TODO: Method 'put_BufferingTime'
    // TODO: Method 'get_UseFixedUDPPort'
    // TODO: Method 'put_UseFixedUDPPort'
    // TODO: Method 'get_FixedUDPPort'
    // TODO: Method 'put_FixedUDPPort'
    // TODO: Method 'get_UseHTTPProxy'
    // TODO: Method 'put_UseHTTPProxy'
    // TODO: Method 'get_EnableAutoProxy'
    // TODO: Method 'put_EnableAutoProxy'
    // TODO: Method 'get_HTTPProxyHost'
    // TODO: Method 'put_HTTPProxyHost'
    // TODO: Method 'get_HTTPProxyPort'
    // TODO: Method 'put_HTTPProxyPort'
    // TODO: Method 'get_EnableMulticast'
    // TODO: Method 'put_EnableMulticast'
    // TODO: Method 'get_EnableUDP'
    // TODO: Method 'put_EnableUDP'
    // TODO: Method 'get_EnableTCP'
    // TODO: Method 'put_EnableTCP'
    // TODO: Method 'get_EnableHTTP'
    // TODO: Method 'put_EnableHTTP'
};
// --------------------------------------------------------
// Type: IAMChannelInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMChannelInfo = *opaque{
    // TODO: Method 'get_ChannelName'
    // TODO: Method 'get_ChannelDescription'
    // TODO: Method 'get_ChannelURL'
    // TODO: Method 'get_ContactAddress'
    // TODO: Method 'get_ContactPhone'
    // TODO: Method 'get_ContactEmail'
};
// --------------------------------------------------------
// Type: IAMNetworkStatus
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMNetworkStatus = *opaque{
    // TODO: Method 'get_ReceivedPackets'
    // TODO: Method 'get_RecoveredPackets'
    // TODO: Method 'get_LostPackets'
    // TODO: Method 'get_ReceptionQuality'
    // TODO: Method 'get_BufferingCount'
    // TODO: Method 'get_IsBroadcast'
    // TODO: Method 'get_BufferingProgress'
};
// --------------------------------------------------------
// Type: AMExtendedSeekingCapabilities
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMExtendedSeekingCapabilities = *opaque{
};
// --------------------------------------------------------
// Type: IAMExtendedSeeking
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMExtendedSeeking = *opaque{
    // TODO: Method 'get_ExSeekCapabilities'
    // TODO: Method 'get_MarkerCount'
    // TODO: Method 'get_CurrentMarker'
    // TODO: Method 'GetMarkerTime'
    // TODO: Method 'GetMarkerName'
    // TODO: Method 'put_PlaybackSpeed'
    // TODO: Method 'get_PlaybackSpeed'
};
// --------------------------------------------------------
// Type: IAMNetShowExProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMNetShowExProps = *opaque{
    // TODO: Method 'get_SourceProtocol'
    // TODO: Method 'get_Bandwidth'
    // TODO: Method 'get_ErrorCorrection'
    // TODO: Method 'get_CodecCount'
    // TODO: Method 'GetCodecInstalled'
    // TODO: Method 'GetCodecDescription'
    // TODO: Method 'GetCodecURL'
    // TODO: Method 'get_CreationDate'
    // TODO: Method 'get_SourceLink'
};
// --------------------------------------------------------
// Type: IAMExtendedErrorInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMExtendedErrorInfo = *opaque{
    // TODO: Method 'get_HasError'
    // TODO: Method 'get_ErrorDescription'
    // TODO: Method 'get_ErrorCode'
};
// --------------------------------------------------------
// Type: IAMMediaContent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMMediaContent = *opaque{
    // TODO: Method 'get_AuthorName'
    // TODO: Method 'get_Title'
    // TODO: Method 'get_Rating'
    // TODO: Method 'get_Description'
    // TODO: Method 'get_Copyright'
    // TODO: Method 'get_BaseURL'
    // TODO: Method 'get_LogoURL'
    // TODO: Method 'get_LogoIconURL'
    // TODO: Method 'get_WatermarkURL'
    // TODO: Method 'get_MoreInfoURL'
    // TODO: Method 'get_MoreInfoBannerImage'
    // TODO: Method 'get_MoreInfoBannerURL'
    // TODO: Method 'get_MoreInfoText'
};
// --------------------------------------------------------
// Type: IAMMediaContent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMMediaContent2 = *opaque{
    // TODO: Method 'get_MediaParameter'
    // TODO: Method 'get_MediaParameterName'
    // TODO: Method 'get_PlaylistCount'
};
// --------------------------------------------------------
// Type: IAMNetShowPreroll
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMNetShowPreroll = *opaque{
    // TODO: Method 'put_Preroll'
    // TODO: Method 'get_Preroll'
};
// --------------------------------------------------------
// Type: IDShowPlugin
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDShowPlugin = *opaque{
    // TODO: Method 'get_URL'
    // TODO: Method 'get_UserAgent'
};
// --------------------------------------------------------
// Type: IAMDirectSound
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMDirectSound = *opaque{
    // TODO: Method 'GetDirectSoundInterface'
    // TODO: Method 'GetPrimaryBufferInterface'
    // TODO: Method 'GetSecondaryBufferInterface'
    // TODO: Method 'ReleaseDirectSoundInterface'
    // TODO: Method 'ReleasePrimaryBufferInterface'
    // TODO: Method 'ReleaseSecondaryBufferInterface'
    // TODO: Method 'SetFocusWindow'
    // TODO: Method 'GetFocusWindow'
};
// --------------------------------------------------------
// Type: AM_LINE21_CCLEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_LINE21_CCLEVEL = *opaque{
};
// --------------------------------------------------------
// Type: AM_LINE21_CCSERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_LINE21_CCSERVICE = *opaque{
};
// --------------------------------------------------------
// Type: AM_LINE21_CCSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_LINE21_CCSTATE = *opaque{
};
// --------------------------------------------------------
// Type: AM_LINE21_CCSTYLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_LINE21_CCSTYLE = *opaque{
};
// --------------------------------------------------------
// Type: AM_LINE21_DRAWBGMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_LINE21_DRAWBGMODE = *opaque{
};
// --------------------------------------------------------
// Type: IAMLine21Decoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMLine21Decoder = *opaque{
    // TODO: Method 'GetDecoderLevel'
    // TODO: Method 'GetCurrentService'
    // TODO: Method 'SetCurrentService'
    // TODO: Method 'GetServiceState'
    // TODO: Method 'SetServiceState'
    // TODO: Method 'GetOutputFormat'
    // TODO: Method 'SetOutputFormat'
    // TODO: Method 'GetBackgroundColor'
    // TODO: Method 'SetBackgroundColor'
    // TODO: Method 'GetRedrawAlways'
    // TODO: Method 'SetRedrawAlways'
    // TODO: Method 'GetDrawBackgroundMode'
    // TODO: Method 'SetDrawBackgroundMode'
};
// --------------------------------------------------------
// Type: IAMParse
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMParse = *opaque{
    // TODO: Method 'GetParseTime'
    // TODO: Method 'SetParseTime'
    // TODO: Method 'Flush'
};
// --------------------------------------------------------
// Type: FilgraphManager
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const FilgraphManager = opaque {
};
// --------------------------------------------------------
// Type: IAMCollection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMCollection = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'Item'
    // TODO: Method 'get__NewEnum'
};
// --------------------------------------------------------
// Type: IMediaControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaControl = *opaque{
    // TODO: Method 'Run'
    // TODO: Method 'Pause'
    // TODO: Method 'Stop'
    // TODO: Method 'GetState'
    // TODO: Method 'RenderFile'
    // TODO: Method 'AddSourceFilter'
    // TODO: Method 'get_FilterCollection'
    // TODO: Method 'get_RegFilterCollection'
    // TODO: Method 'StopWhenReady'
};
// --------------------------------------------------------
// Type: IMediaEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaEvent = *opaque{
    // TODO: Method 'GetEventHandle'
    // TODO: Method 'GetEvent'
    // TODO: Method 'WaitForCompletion'
    // TODO: Method 'CancelDefaultHandling'
    // TODO: Method 'RestoreDefaultHandling'
    // TODO: Method 'FreeEventParams'
};
// --------------------------------------------------------
// Type: IMediaEventEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaEventEx = *opaque{
    // TODO: Method 'SetNotifyWindow'
    // TODO: Method 'SetNotifyFlags'
    // TODO: Method 'GetNotifyFlags'
};
// --------------------------------------------------------
// Type: IMediaPosition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaPosition = *opaque{
    // TODO: Method 'get_Duration'
    // TODO: Method 'put_CurrentPosition'
    // TODO: Method 'get_CurrentPosition'
    // TODO: Method 'get_StopTime'
    // TODO: Method 'put_StopTime'
    // TODO: Method 'get_PrerollTime'
    // TODO: Method 'put_PrerollTime'
    // TODO: Method 'put_Rate'
    // TODO: Method 'get_Rate'
    // TODO: Method 'CanSeekForward'
    // TODO: Method 'CanSeekBackward'
};
// --------------------------------------------------------
// Type: IBasicAudio
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBasicAudio = *opaque{
    // TODO: Method 'put_Volume'
    // TODO: Method 'get_Volume'
    // TODO: Method 'put_Balance'
    // TODO: Method 'get_Balance'
};
// --------------------------------------------------------
// Type: IVideoWindow
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVideoWindow = *opaque{
    // TODO: Method 'put_Caption'
    // TODO: Method 'get_Caption'
    // TODO: Method 'put_WindowStyle'
    // TODO: Method 'get_WindowStyle'
    // TODO: Method 'put_WindowStyleEx'
    // TODO: Method 'get_WindowStyleEx'
    // TODO: Method 'put_AutoShow'
    // TODO: Method 'get_AutoShow'
    // TODO: Method 'put_WindowState'
    // TODO: Method 'get_WindowState'
    // TODO: Method 'put_BackgroundPalette'
    // TODO: Method 'get_BackgroundPalette'
    // TODO: Method 'put_Visible'
    // TODO: Method 'get_Visible'
    // TODO: Method 'put_Left'
    // TODO: Method 'get_Left'
    // TODO: Method 'put_Width'
    // TODO: Method 'get_Width'
    // TODO: Method 'put_Top'
    // TODO: Method 'get_Top'
    // TODO: Method 'put_Height'
    // TODO: Method 'get_Height'
    // TODO: Method 'put_Owner'
    // TODO: Method 'get_Owner'
    // TODO: Method 'put_MessageDrain'
    // TODO: Method 'get_MessageDrain'
    // TODO: Method 'get_BorderColor'
    // TODO: Method 'put_BorderColor'
    // TODO: Method 'get_FullScreenMode'
    // TODO: Method 'put_FullScreenMode'
    // TODO: Method 'SetWindowForeground'
    // TODO: Method 'NotifyOwnerMessage'
    // TODO: Method 'SetWindowPosition'
    // TODO: Method 'GetWindowPosition'
    // TODO: Method 'GetMinIdealImageSize'
    // TODO: Method 'GetMaxIdealImageSize'
    // TODO: Method 'GetRestorePosition'
    // TODO: Method 'HideCursor'
    // TODO: Method 'IsCursorHidden'
};
// --------------------------------------------------------
// Type: IBasicVideo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBasicVideo = *opaque{
    // TODO: Method 'get_AvgTimePerFrame'
    // TODO: Method 'get_BitRate'
    // TODO: Method 'get_BitErrorRate'
    // TODO: Method 'get_VideoWidth'
    // TODO: Method 'get_VideoHeight'
    // TODO: Method 'put_SourceLeft'
    // TODO: Method 'get_SourceLeft'
    // TODO: Method 'put_SourceWidth'
    // TODO: Method 'get_SourceWidth'
    // TODO: Method 'put_SourceTop'
    // TODO: Method 'get_SourceTop'
    // TODO: Method 'put_SourceHeight'
    // TODO: Method 'get_SourceHeight'
    // TODO: Method 'put_DestinationLeft'
    // TODO: Method 'get_DestinationLeft'
    // TODO: Method 'put_DestinationWidth'
    // TODO: Method 'get_DestinationWidth'
    // TODO: Method 'put_DestinationTop'
    // TODO: Method 'get_DestinationTop'
    // TODO: Method 'put_DestinationHeight'
    // TODO: Method 'get_DestinationHeight'
    // TODO: Method 'SetSourcePosition'
    // TODO: Method 'GetSourcePosition'
    // TODO: Method 'SetDefaultSourcePosition'
    // TODO: Method 'SetDestinationPosition'
    // TODO: Method 'GetDestinationPosition'
    // TODO: Method 'SetDefaultDestinationPosition'
    // TODO: Method 'GetVideoSize'
    // TODO: Method 'GetVideoPaletteEntries'
    // TODO: Method 'GetCurrentImage'
    // TODO: Method 'IsUsingDefaultSource'
    // TODO: Method 'IsUsingDefaultDestination'
};
// --------------------------------------------------------
// Type: IBasicVideo2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBasicVideo2 = *opaque{
    // TODO: Method 'GetPreferredAspectRatio'
};
// --------------------------------------------------------
// Type: IDeferredCommand
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDeferredCommand = *opaque{
    // TODO: Method 'Cancel'
    // TODO: Method 'Confidence'
    // TODO: Method 'Postpone'
    // TODO: Method 'GetHResult'
};
// --------------------------------------------------------
// Type: IQueueCommand
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IQueueCommand = *opaque{
    // TODO: Method 'InvokeAtStreamTime'
    // TODO: Method 'InvokeAtPresentationTime'
};
// --------------------------------------------------------
// Type: IFilterInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFilterInfo = *opaque{
    // TODO: Method 'FindPin'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_VendorInfo'
    // TODO: Method 'get_Filter'
    // TODO: Method 'get_Pins'
    // TODO: Method 'get_IsFileSource'
    // TODO: Method 'get_Filename'
    // TODO: Method 'put_Filename'
};
// --------------------------------------------------------
// Type: IRegFilterInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRegFilterInfo = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'Filter'
};
// --------------------------------------------------------
// Type: IMediaTypeInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaTypeInfo = *opaque{
    // TODO: Method 'get_Type'
    // TODO: Method 'get_Subtype'
};
// --------------------------------------------------------
// Type: IPinInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPinInfo = *opaque{
    // TODO: Method 'get_Pin'
    // TODO: Method 'get_ConnectedTo'
    // TODO: Method 'get_ConnectionMediaType'
    // TODO: Method 'get_FilterInfo'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Direction'
    // TODO: Method 'get_PinID'
    // TODO: Method 'get_MediaTypes'
    // TODO: Method 'Connect'
    // TODO: Method 'ConnectDirect'
    // TODO: Method 'ConnectWithType'
    // TODO: Method 'Disconnect'
    // TODO: Method 'Render'
};
// --------------------------------------------------------
// Type: IAMStats
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMStats = *opaque{
    // TODO: Method 'Reset'
    // TODO: Method 'get_Count'
    // TODO: Method 'GetValueByIndex'
    // TODO: Method 'GetValueByName'
    // TODO: Method 'GetIndex'
    // TODO: Method 'AddValue'
};
// --------------------------------------------------------
// Type: AMVAUncompBufferInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVAUncompBufferInfo = extern struct {
    dwMinNumSurfaces: {"kind":"UInt32"},
    dwMaxNumSurfaces: {"kind":"UInt32"},
    ddUncompPixelFormat: Windows.Win32.DirectDraw.DDPIXELFORMAT,
};
// --------------------------------------------------------
// Type: AMVAUncompDataInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVAUncompDataInfo = extern struct {
    dwUncompWidth: {"kind":"UInt32"},
    dwUncompHeight: {"kind":"UInt32"},
    ddUncompPixelFormat: Windows.Win32.DirectDraw.DDPIXELFORMAT,
};
// --------------------------------------------------------
// Type: AMVAInternalMemInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVAInternalMemInfo = extern struct {
    dwScratchMemAlloc: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AMVACompBufferInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVACompBufferInfo = extern struct {
    dwNumCompBuffers: {"kind":"UInt32"},
    dwWidthToCreate: {"kind":"UInt32"},
    dwHeightToCreate: {"kind":"UInt32"},
    dwBytesToAllocate: {"kind":"UInt32"},
    ddCompCaps: Windows.Win32.DirectDraw.DDSCAPS2,
    ddPixelFormat: Windows.Win32.DirectDraw.DDPIXELFORMAT,
};
// --------------------------------------------------------
// Type: AMVABeginFrameInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVABeginFrameInfo = extern struct {
    dwDestSurfaceIndex: {"kind":"UInt32"},
    pInputData: {"kind""Ptr","child":{"kind":"Void"}},
    dwSizeInputData: {"kind":"UInt32"},
    pOutputData: {"kind""Ptr","child":{"kind":"Void"}},
    dwSizeOutputData: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AMVAEndFrameInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVAEndFrameInfo = extern struct {
    dwSizeMiscData: {"kind":"UInt32"},
    pMiscData: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: AMVABUFFERINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMVABUFFERINFO = extern struct {
    dwTypeIndex: {"kind":"UInt32"},
    dwBufferIndex: {"kind":"UInt32"},
    dwDataOffset: {"kind":"UInt32"},
    dwDataSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IAMVideoAcceleratorNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVideoAcceleratorNotify = *opaque{
    // TODO: Method 'GetUncompSurfacesInfo'
    // TODO: Method 'SetUncompSurfacesInfo'
    // TODO: Method 'GetCreateVideoAcceleratorData'
};
// --------------------------------------------------------
// Type: IAMVideoAccelerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMVideoAccelerator = *opaque{
    // TODO: Method 'GetVideoAcceleratorGUIDs'
    // TODO: Method 'GetUncompFormatsSupported'
    // TODO: Method 'GetInternalMemInfo'
    // TODO: Method 'GetCompBufferInfo'
    // TODO: Method 'GetInternalCompBufferInfo'
    // TODO: Method 'BeginFrame'
    // TODO: Method 'EndFrame'
    // TODO: Method 'GetBuffer'
    // TODO: Method 'ReleaseBuffer'
    // TODO: Method 'Execute'
    // TODO: Method 'QueryRenderStatus'
    // TODO: Method 'DisplayFrame'
};
// --------------------------------------------------------
// Type: AM_WST_PAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_WST_PAGE = extern struct {
    dwPageNr: {"kind":"UInt32"},
    dwSubPageNr: {"kind":"UInt32"},
    pucPageData: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AM_WST_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_WST_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: AM_WST_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_WST_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: AM_WST_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_WST_STATE = *opaque{
};
// --------------------------------------------------------
// Type: AM_WST_STYLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_WST_STYLE = *opaque{
};
// --------------------------------------------------------
// Type: AM_WST_DRAWBGMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_WST_DRAWBGMODE = *opaque{
};
// --------------------------------------------------------
// Type: IAMWstDecoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMWstDecoder = *opaque{
    // TODO: Method 'GetDecoderLevel'
    // TODO: Method 'GetCurrentService'
    // TODO: Method 'GetServiceState'
    // TODO: Method 'SetServiceState'
    // TODO: Method 'GetOutputFormat'
    // TODO: Method 'SetOutputFormat'
    // TODO: Method 'GetBackgroundColor'
    // TODO: Method 'SetBackgroundColor'
    // TODO: Method 'GetRedrawAlways'
    // TODO: Method 'SetRedrawAlways'
    // TODO: Method 'GetDrawBackgroundMode'
    // TODO: Method 'SetDrawBackgroundMode'
    // TODO: Method 'SetAnswerMode'
    // TODO: Method 'GetAnswerMode'
    // TODO: Method 'SetHoldPage'
    // TODO: Method 'GetHoldPage'
    // TODO: Method 'GetCurrentPage'
    // TODO: Method 'SetCurrentPage'
};
// --------------------------------------------------------
// Type: IKsTopologyInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsTopologyInfo = *opaque{
    // TODO: Method 'get_NumCategories'
    // TODO: Method 'get_Category'
    // TODO: Method 'get_NumConnections'
    // TODO: Method 'get_ConnectionInfo'
    // TODO: Method 'get_NodeName'
    // TODO: Method 'get_NumNodes'
    // TODO: Method 'get_NodeType'
    // TODO: Method 'CreateNodeInstance'
};
// --------------------------------------------------------
// Type: ISelector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISelector = *opaque{
    // TODO: Method 'get_NumSources'
    // TODO: Method 'get_SourceNodeId'
    // TODO: Method 'put_SourceNodeId'
};
// --------------------------------------------------------
// Type: ICameraControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICameraControl = *opaque{
    // TODO: Method 'get_Exposure'
    // TODO: Method 'put_Exposure'
    // TODO: Method 'getRange_Exposure'
    // TODO: Method 'get_Focus'
    // TODO: Method 'put_Focus'
    // TODO: Method 'getRange_Focus'
    // TODO: Method 'get_Iris'
    // TODO: Method 'put_Iris'
    // TODO: Method 'getRange_Iris'
    // TODO: Method 'get_Zoom'
    // TODO: Method 'put_Zoom'
    // TODO: Method 'getRange_Zoom'
    // TODO: Method 'get_FocalLengths'
    // TODO: Method 'get_Pan'
    // TODO: Method 'put_Pan'
    // TODO: Method 'getRange_Pan'
    // TODO: Method 'get_Tilt'
    // TODO: Method 'put_Tilt'
    // TODO: Method 'getRange_Tilt'
    // TODO: Method 'get_PanTilt'
    // TODO: Method 'put_PanTilt'
    // TODO: Method 'get_Roll'
    // TODO: Method 'put_Roll'
    // TODO: Method 'getRange_Roll'
    // TODO: Method 'get_ExposureRelative'
    // TODO: Method 'put_ExposureRelative'
    // TODO: Method 'getRange_ExposureRelative'
    // TODO: Method 'get_FocusRelative'
    // TODO: Method 'put_FocusRelative'
    // TODO: Method 'getRange_FocusRelative'
    // TODO: Method 'get_IrisRelative'
    // TODO: Method 'put_IrisRelative'
    // TODO: Method 'getRange_IrisRelative'
    // TODO: Method 'get_ZoomRelative'
    // TODO: Method 'put_ZoomRelative'
    // TODO: Method 'getRange_ZoomRelative'
    // TODO: Method 'get_PanRelative'
    // TODO: Method 'put_PanRelative'
    // TODO: Method 'get_TiltRelative'
    // TODO: Method 'put_TiltRelative'
    // TODO: Method 'getRange_TiltRelative'
    // TODO: Method 'get_PanTiltRelative'
    // TODO: Method 'put_PanTiltRelative'
    // TODO: Method 'getRange_PanRelative'
    // TODO: Method 'get_RollRelative'
    // TODO: Method 'put_RollRelative'
    // TODO: Method 'getRange_RollRelative'
    // TODO: Method 'get_ScanMode'
    // TODO: Method 'put_ScanMode'
    // TODO: Method 'get_PrivacyMode'
    // TODO: Method 'put_PrivacyMode'
};
// --------------------------------------------------------
// Type: IVideoProcAmp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVideoProcAmp = *opaque{
    // TODO: Method 'get_BacklightCompensation'
    // TODO: Method 'put_BacklightCompensation'
    // TODO: Method 'getRange_BacklightCompensation'
    // TODO: Method 'get_Brightness'
    // TODO: Method 'put_Brightness'
    // TODO: Method 'getRange_Brightness'
    // TODO: Method 'get_ColorEnable'
    // TODO: Method 'put_ColorEnable'
    // TODO: Method 'getRange_ColorEnable'
    // TODO: Method 'get_Contrast'
    // TODO: Method 'put_Contrast'
    // TODO: Method 'getRange_Contrast'
    // TODO: Method 'get_Gamma'
    // TODO: Method 'put_Gamma'
    // TODO: Method 'getRange_Gamma'
    // TODO: Method 'get_Saturation'
    // TODO: Method 'put_Saturation'
    // TODO: Method 'getRange_Saturation'
    // TODO: Method 'get_Sharpness'
    // TODO: Method 'put_Sharpness'
    // TODO: Method 'getRange_Sharpness'
    // TODO: Method 'get_WhiteBalance'
    // TODO: Method 'put_WhiteBalance'
    // TODO: Method 'getRange_WhiteBalance'
    // TODO: Method 'get_Gain'
    // TODO: Method 'put_Gain'
    // TODO: Method 'getRange_Gain'
    // TODO: Method 'get_Hue'
    // TODO: Method 'put_Hue'
    // TODO: Method 'getRange_Hue'
    // TODO: Method 'get_DigitalMultiplier'
    // TODO: Method 'put_DigitalMultiplier'
    // TODO: Method 'getRange_DigitalMultiplier'
    // TODO: Method 'get_PowerlineFrequency'
    // TODO: Method 'put_PowerlineFrequency'
    // TODO: Method 'getRange_PowerlineFrequency'
    // TODO: Method 'get_WhiteBalanceComponent'
    // TODO: Method 'put_WhiteBalanceComponent'
    // TODO: Method 'getRange_WhiteBalanceComponent'
};
// --------------------------------------------------------
// Type: IKsNodeControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsNodeControl = *opaque{
    // TODO: Method 'put_NodeId'
    // TODO: Method 'put_KsControl'
};
// --------------------------------------------------------
// Type: IConfigAsfWriter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConfigAsfWriter = *opaque{
    // TODO: Method 'ConfigureFilterUsingProfileId'
    // TODO: Method 'GetCurrentProfileId'
    // TODO: Method 'ConfigureFilterUsingProfileGuid'
    // TODO: Method 'GetCurrentProfileGuid'
    // TODO: Method 'ConfigureFilterUsingProfile'
    // TODO: Method 'GetCurrentProfile'
    // TODO: Method 'SetIndexMode'
    // TODO: Method 'GetIndexMode'
};
// --------------------------------------------------------
// Type: IConfigAsfWriter2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConfigAsfWriter2 = *opaque{
    // TODO: Method 'StreamNumFromPin'
    // TODO: Method 'SetParam'
    // TODO: Method 'GetParam'
    // TODO: Method 'ResetMultiPassState'
};
// --------------------------------------------------------
// Type: STREAM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const STREAM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: STREAM_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const STREAM_STATE = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmstream_0000_0000_0003
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmstream_0000_0000_0003 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmstream_0000_0000_0004
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmstream_0000_0000_0004 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmstream_0000_0000_0005
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmstream_0000_0000_0005 = *opaque{
};
// --------------------------------------------------------
// Type: IMultiMediaStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMultiMediaStream = *opaque{
    // TODO: Method 'GetInformation'
    // TODO: Method 'GetMediaStream'
    // TODO: Method 'EnumMediaStreams'
    // TODO: Method 'GetState'
    // TODO: Method 'SetState'
    // TODO: Method 'GetTime'
    // TODO: Method 'GetDuration'
    // TODO: Method 'Seek'
    // TODO: Method 'GetEndOfStreamEventHandle'
};
// --------------------------------------------------------
// Type: IMediaStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaStream = *opaque{
    // TODO: Method 'GetMultiMediaStream'
    // TODO: Method 'GetInformation'
    // TODO: Method 'SetSameFormat'
    // TODO: Method 'AllocateSample'
    // TODO: Method 'CreateSharedSample'
    // TODO: Method 'SendEndOfStream'
};
// --------------------------------------------------------
// Type: IStreamSample
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamSample = *opaque{
    // TODO: Method 'GetMediaStream'
    // TODO: Method 'GetSampleTimes'
    // TODO: Method 'SetSampleTimes'
    // TODO: Method 'Update'
    // TODO: Method 'CompletionStatus'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_ddstream_0000_0000_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_ddstream_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IDirectDrawMediaStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawMediaStream = *opaque{
    // TODO: Method 'GetFormat'
    // TODO: Method 'SetFormat'
    // TODO: Method 'GetDirectDraw'
    // TODO: Method 'SetDirectDraw'
    // TODO: Method 'CreateSample'
    // TODO: Method 'GetTimePerFrame'
};
// --------------------------------------------------------
// Type: IDirectDrawStreamSample
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawStreamSample = *opaque{
    // TODO: Method 'GetSurface'
    // TODO: Method 'SetRect'
};
// --------------------------------------------------------
// Type: IAudioMediaStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioMediaStream = *opaque{
    // TODO: Method 'GetFormat'
    // TODO: Method 'SetFormat'
    // TODO: Method 'CreateSample'
};
// --------------------------------------------------------
// Type: IAudioStreamSample
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioStreamSample = *opaque{
    // TODO: Method 'GetAudioData'
};
// --------------------------------------------------------
// Type: IMemoryData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMemoryData = *opaque{
    // TODO: Method 'SetBuffer'
    // TODO: Method 'GetInfo'
    // TODO: Method 'SetActual'
};
// --------------------------------------------------------
// Type: IAudioData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioData = *opaque{
    // TODO: Method 'GetFormat'
    // TODO: Method 'SetFormat'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_amstream_0000_0000_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_amstream_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_amstream_0000_0000_0002
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_amstream_0000_0000_0002 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_amstream_0000_0000_0003
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_amstream_0000_0000_0003 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_amstream_0000_0000_0004
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_amstream_0000_0000_0004 = *opaque{
};
// --------------------------------------------------------
// Type: IAMMultiMediaStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMMultiMediaStream = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetFilterGraph'
    // TODO: Method 'GetFilter'
    // TODO: Method 'AddMediaStream'
    // TODO: Method 'OpenFile'
    // TODO: Method 'OpenMoniker'
    // TODO: Method 'Render'
};
// --------------------------------------------------------
// Type: IAMMediaStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMMediaStream = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'SetState'
    // TODO: Method 'JoinAMMultiMediaStream'
    // TODO: Method 'JoinFilter'
    // TODO: Method 'JoinFilterGraph'
};
// --------------------------------------------------------
// Type: IMediaStreamFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaStreamFilter = *opaque{
    // TODO: Method 'AddMediaStream'
    // TODO: Method 'GetMediaStream'
    // TODO: Method 'EnumMediaStreams'
    // TODO: Method 'SupportSeeking'
    // TODO: Method 'ReferenceTimeToStreamTime'
    // TODO: Method 'GetCurrentStreamTime'
    // TODO: Method 'WaitUntil'
    // TODO: Method 'Flush'
    // TODO: Method 'EndOfStream'
};
// --------------------------------------------------------
// Type: IDirectDrawMediaSampleAllocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawMediaSampleAllocator = *opaque{
    // TODO: Method 'GetDirectDraw'
};
// --------------------------------------------------------
// Type: IDirectDrawMediaSample
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawMediaSample = *opaque{
    // TODO: Method 'GetSurfaceAndReleaseLock'
    // TODO: Method 'LockMediaSamplePointer'
};
// --------------------------------------------------------
// Type: IAMMediaTypeStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMMediaTypeStream = *opaque{
    // TODO: Method 'GetFormat'
    // TODO: Method 'SetFormat'
    // TODO: Method 'CreateSample'
    // TODO: Method 'GetStreamAllocatorRequirements'
    // TODO: Method 'SetStreamAllocatorRequirements'
};
// --------------------------------------------------------
// Type: IAMMediaTypeSample
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMMediaTypeSample = *opaque{
    // TODO: Method 'SetPointer'
    // TODO: Method 'GetPointer'
    // TODO: Method 'GetSize'
    // TODO: Method 'GetTime'
    // TODO: Method 'SetTime'
    // TODO: Method 'IsSyncPoint'
    // TODO: Method 'SetSyncPoint'
    // TODO: Method 'IsPreroll'
    // TODO: Method 'SetPreroll'
    // TODO: Method 'GetActualDataLength'
    // TODO: Method 'SetActualDataLength'
    // TODO: Method 'GetMediaType'
    // TODO: Method 'SetMediaType'
    // TODO: Method 'IsDiscontinuity'
    // TODO: Method 'SetDiscontinuity'
    // TODO: Method 'GetMediaTime'
    // TODO: Method 'SetMediaTime'
};
// --------------------------------------------------------
// Type: IDirectDrawVideo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawVideo = *opaque{
    // TODO: Method 'GetSwitches'
    // TODO: Method 'SetSwitches'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetEmulatedCaps'
    // TODO: Method 'GetSurfaceDesc'
    // TODO: Method 'GetFourCCCodes'
    // TODO: Method 'SetDirectDraw'
    // TODO: Method 'GetDirectDraw'
    // TODO: Method 'GetSurfaceType'
    // TODO: Method 'SetDefault'
    // TODO: Method 'UseScanLine'
    // TODO: Method 'CanUseScanLine'
    // TODO: Method 'UseOverlayStretch'
    // TODO: Method 'CanUseOverlayStretch'
    // TODO: Method 'UseWhenFullScreen'
    // TODO: Method 'WillUseFullScreen'
};
// --------------------------------------------------------
// Type: IQualProp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IQualProp = *opaque{
    // TODO: Method 'get_FramesDroppedInRenderer'
    // TODO: Method 'get_FramesDrawn'
    // TODO: Method 'get_AvgFrameRate'
    // TODO: Method 'get_Jitter'
    // TODO: Method 'get_AvgSyncOffset'
    // TODO: Method 'get_DevSyncOffset'
};
// --------------------------------------------------------
// Type: IFullScreenVideo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFullScreenVideo = *opaque{
    // TODO: Method 'CountModes'
    // TODO: Method 'GetModeInfo'
    // TODO: Method 'GetCurrentMode'
    // TODO: Method 'IsModeAvailable'
    // TODO: Method 'IsModeEnabled'
    // TODO: Method 'SetEnabled'
    // TODO: Method 'GetClipFactor'
    // TODO: Method 'SetClipFactor'
    // TODO: Method 'SetMessageDrain'
    // TODO: Method 'GetMessageDrain'
    // TODO: Method 'SetMonitor'
    // TODO: Method 'GetMonitor'
    // TODO: Method 'HideOnDeactivate'
    // TODO: Method 'IsHideOnDeactivate'
    // TODO: Method 'SetCaption'
    // TODO: Method 'GetCaption'
    // TODO: Method 'SetDefault'
};
// --------------------------------------------------------
// Type: IFullScreenVideoEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IFullScreenVideoEx = *opaque{
    // TODO: Method 'SetAcceleratorTable'
    // TODO: Method 'GetAcceleratorTable'
    // TODO: Method 'KeepPixelAspectRatio'
    // TODO: Method 'IsKeepPixelAspectRatio'
};
// --------------------------------------------------------
// Type: IBaseVideoMixer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBaseVideoMixer = *opaque{
    // TODO: Method 'SetLeadPin'
    // TODO: Method 'GetLeadPin'
    // TODO: Method 'GetInputPinCount'
    // TODO: Method 'IsUsingClock'
    // TODO: Method 'SetUsingClock'
    // TODO: Method 'GetClockPeriod'
    // TODO: Method 'SetClockPeriod'
};
// --------------------------------------------------------
// Type: TRUECOLORINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRUECOLORINFO = extern struct {
    dwBitMasks: {"kind":"Array","child": {"kind":"UInt32"}},
    bmiColors: {"kind":"Array","child": Windows.Win32.Gdi.RGBQUAD},
};
// --------------------------------------------------------
// Type: VIDEOINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VIDEOINFOHEADER = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwBitRate: {"kind":"UInt32"},
    dwBitErrorRate: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
    bmiHeader: Windows.Win32.DirectShow.BITMAPINFOHEADER,
};
// --------------------------------------------------------
// Type: VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VIDEOINFO = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwBitRate: {"kind":"UInt32"},
    dwBitErrorRate: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
    bmiHeader: Windows.Win32.DirectShow.BITMAPINFOHEADER,
    Anonymous: Windows.Win32.DirectShow.VIDEOINFO+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MPEG1VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MPEG1VIDEOINFO = extern struct {
    hdr: Windows.Win32.DirectShow.VIDEOINFOHEADER,
    dwStartTimeCode: {"kind":"UInt32"},
    cbSequenceHeader: {"kind":"UInt32"},
    bSequenceHeader: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: ANALOGVIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ANALOGVIDEOINFO = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwActiveWidth: {"kind":"UInt32"},
    dwActiveHeight: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: AM_PROPERTY_FRAMESTEP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_FRAMESTEP = *opaque{
};
// --------------------------------------------------------
// Type: AM_FRAMESTEP_STEP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_FRAMESTEP_STEP = extern struct {
    dwFramesToStep: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDMOWrapperFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMOWrapperFilter = *opaque{
    // TODO: Method 'Init'
};
// --------------------------------------------------------
// Type: KSALLOCATORMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSALLOCATORMODE = *opaque{
};
// --------------------------------------------------------
// Type: FRAMING_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FRAMING_PROP = *opaque{
};
// --------------------------------------------------------
// Type: FRAMING_CACHE_OPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FRAMING_CACHE_OPS = *opaque{
};
// --------------------------------------------------------
// Type: OPTIMAL_WEIGHT_TOTALS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OPTIMAL_WEIGHT_TOTALS = extern struct {
    MinTotalNominator: {"kind":"Int64"},
    MaxTotalNominator: {"kind":"Int64"},
    TotalDenominator: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: IKsPin
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const IKsPin = opaque {
};
// --------------------------------------------------------
// Type: IKsAllocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const IKsAllocator = opaque {
};
// --------------------------------------------------------
// Type: IKsAllocatorEx
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const IKsAllocatorEx = opaque {
};
// --------------------------------------------------------
// Type: PIPE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PIPE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PIPE_DIMENSIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PIPE_DIMENSIONS = extern struct {
    AllocatorPin: Windows.Win32.CoreAudio.KS_COMPRESSION,
    MaxExpansionPin: Windows.Win32.CoreAudio.KS_COMPRESSION,
    EndPin: Windows.Win32.CoreAudio.KS_COMPRESSION,
};
// --------------------------------------------------------
// Type: PIPE_ALLOCATOR_PLACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PIPE_ALLOCATOR_PLACE = *opaque{
};
// --------------------------------------------------------
// Type: KS_LogicalMemoryType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_LogicalMemoryType = *opaque{
};
// --------------------------------------------------------
// Type: PIPE_TERMINATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PIPE_TERMINATION = extern struct {
    Flags: {"kind":"UInt32"},
    OutsideFactors: {"kind":"UInt32"},
    Weigth: {"kind":"UInt32"},
    PhysicalRange: Windows.Win32.CoreAudio.KS_FRAMING_RANGE,
    OptimalRange: Windows.Win32.CoreAudio.KS_FRAMING_RANGE_WEIGHTED,
    Compression: Windows.Win32.CoreAudio.KS_COMPRESSION,
};
// --------------------------------------------------------
// Type: ALLOCATOR_PROPERTIES_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ALLOCATOR_PROPERTIES_EX = extern struct {
    cBuffers: {"kind":"Int32"},
    cbBuffer: {"kind":"Int32"},
    cbAlign: {"kind":"Int32"},
    cbPrefix: {"kind":"Int32"},
    MemoryType: Guid,
    BusType: Guid,
    State: Windows.Win32.DirectShow.PIPE_STATE,
    Input: Windows.Win32.DirectShow.PIPE_TERMINATION,
    Output: Windows.Win32.DirectShow.PIPE_TERMINATION,
    Strategy: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    Weight: {"kind":"UInt32"},
    LogicalMemoryType: Windows.Win32.DirectShow.KS_LogicalMemoryType,
    AllocatorPlace: Windows.Win32.DirectShow.PIPE_ALLOCATOR_PLACE,
    Dimensions: Windows.Win32.DirectShow.PIPE_DIMENSIONS,
    PhysicalRange: Windows.Win32.CoreAudio.KS_FRAMING_RANGE,
    PrevSegment: {"kind""Ptr","child":Windows.Win32.DirectShow.IKsAllocatorEx},
    CountNextSegments: {"kind":"UInt32"},
    NextSegments: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.DirectShow.IKsAllocatorEx}},
    InsideFactors: {"kind":"UInt32"},
    NumberPins: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLSID_Proxy
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CLSID_Proxy = opaque {
};
// --------------------------------------------------------
// Type: IKsControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsControl = *opaque{
    // TODO: Method 'KsProperty'
    // TODO: Method 'KsMethod'
    // TODO: Method 'KsEvent'
};
// --------------------------------------------------------
// Type: IKsAggregateControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsAggregateControl = *opaque{
    // TODO: Method 'KsAddAggregate'
    // TODO: Method 'KsRemoveAggregate'
};
// --------------------------------------------------------
// Type: IKsTopology
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsTopology = *opaque{
    // TODO: Method 'CreateNodeInstance'
};
// --------------------------------------------------------
// Type: IMixerOCXNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMixerOCXNotify = *opaque{
    // TODO: Method 'OnInvalidateRect'
    // TODO: Method 'OnStatusChange'
    // TODO: Method 'OnDataChange'
};
// --------------------------------------------------------
// Type: IMixerOCX
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMixerOCX = *opaque{
    // TODO: Method 'OnDisplayChange'
    // TODO: Method 'GetAspectRatio'
    // TODO: Method 'GetVideoSize'
    // TODO: Method 'GetStatus'
    // TODO: Method 'OnDraw'
    // TODO: Method 'SetDrawRegion'
    // TODO: Method 'Advise'
    // TODO: Method 'UnAdvise'
};
// --------------------------------------------------------
// Type: AM_ASPECT_RATIO_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_ASPECT_RATIO_MODE = *opaque{
};
// --------------------------------------------------------
// Type: IMixerPinConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMixerPinConfig = *opaque{
    // TODO: Method 'SetRelativePosition'
    // TODO: Method 'GetRelativePosition'
    // TODO: Method 'SetZOrder'
    // TODO: Method 'GetZOrder'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'SetBlendingParameter'
    // TODO: Method 'GetBlendingParameter'
    // TODO: Method 'SetAspectRatioMode'
    // TODO: Method 'GetAspectRatioMode'
    // TODO: Method 'SetStreamTransparent'
    // TODO: Method 'GetStreamTransparent'
};
// --------------------------------------------------------
// Type: IMixerPinConfig2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMixerPinConfig2 = *opaque{
    // TODO: Method 'SetOverlaySurfaceColorControls'
    // TODO: Method 'GetOverlaySurfaceColorControls'
};
// --------------------------------------------------------
// Type: AM_MPEGSTREAMTYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_MPEGSTREAMTYPE = extern struct {
    dwStreamId: {"kind":"UInt32"},
    dwReserved: {"kind":"UInt32"},
    mt: Windows.Win32.DirectShow.AM_MEDIA_TYPE,
    bFormat: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AM_MPEGSYSTEMTYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_MPEGSYSTEMTYPE = extern struct {
    dwBitRate: {"kind":"UInt32"},
    cStreams: {"kind":"UInt32"},
    Streams: {"kind":"Array","child": Windows.Win32.DirectShow.AM_MPEGSTREAMTYPE},
};
// --------------------------------------------------------
// Type: IMpegAudioDecoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMpegAudioDecoder = *opaque{
    // TODO: Method 'get_FrequencyDivider'
    // TODO: Method 'put_FrequencyDivider'
    // TODO: Method 'get_DecoderAccuracy'
    // TODO: Method 'put_DecoderAccuracy'
    // TODO: Method 'get_Stereo'
    // TODO: Method 'put_Stereo'
    // TODO: Method 'get_DecoderWordSize'
    // TODO: Method 'put_DecoderWordSize'
    // TODO: Method 'get_IntegerDecode'
    // TODO: Method 'put_IntegerDecode'
    // TODO: Method 'get_DualMode'
    // TODO: Method 'put_DualMode'
    // TODO: Method 'get_AudioFormat'
};
// --------------------------------------------------------
// Type: VMR9PresentationFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9PresentationFlags = *opaque{
};
// --------------------------------------------------------
// Type: VMR9PresentationInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9PresentationInfo = extern struct {
    dwFlags: {"kind":"UInt32"},
    lpSurf: Windows.Win32.Direct2D.IDirect3DSurface9,
    rtStart: {"kind":"Int64"},
    rtEnd: {"kind":"Int64"},
    szAspectRatio: Windows.Win32.DisplayDevices.SIZE,
    rcSrc: Windows.Win32.DisplayDevices.RECT,
    rcDst: Windows.Win32.DisplayDevices.RECT,
    dwReserved1: {"kind":"UInt32"},
    dwReserved2: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IVMRImagePresenter9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImagePresenter9 = *opaque{
    // TODO: Method 'StartPresenting'
    // TODO: Method 'StopPresenting'
    // TODO: Method 'PresentImage'
};
// --------------------------------------------------------
// Type: VMR9SurfaceAllocationFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9SurfaceAllocationFlags = *opaque{
};
// --------------------------------------------------------
// Type: VMR9AllocationInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9AllocationInfo = extern struct {
    dwFlags: {"kind":"UInt32"},
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
    Format: Windows.Win32.Direct3D9.D3DFORMAT,
    Pool: Windows.Win32.Direct3D9.D3DPOOL,
    MinBuffers: {"kind":"UInt32"},
    szAspectRatio: Windows.Win32.DisplayDevices.SIZE,
    szNativeSize: Windows.Win32.DisplayDevices.SIZE,
};
// --------------------------------------------------------
// Type: IVMRSurfaceAllocator9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurfaceAllocator9 = *opaque{
    // TODO: Method 'InitializeDevice'
    // TODO: Method 'TerminateDevice'
    // TODO: Method 'GetSurface'
    // TODO: Method 'AdviseNotify'
};
// --------------------------------------------------------
// Type: IVMRSurfaceAllocatorEx9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurfaceAllocatorEx9 = *opaque{
    // TODO: Method 'GetSurfaceEx'
};
// --------------------------------------------------------
// Type: IVMRSurfaceAllocatorNotify9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurfaceAllocatorNotify9 = *opaque{
    // TODO: Method 'AdviseSurfaceAllocator'
    // TODO: Method 'SetD3DDevice'
    // TODO: Method 'ChangeD3DDevice'
    // TODO: Method 'AllocateSurfaceHelper'
    // TODO: Method 'NotifyEvent'
};
// --------------------------------------------------------
// Type: VMR9AspectRatioMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9AspectRatioMode = *opaque{
};
// --------------------------------------------------------
// Type: IVMRWindowlessControl9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRWindowlessControl9 = *opaque{
    // TODO: Method 'GetNativeVideoSize'
    // TODO: Method 'GetMinIdealVideoSize'
    // TODO: Method 'GetMaxIdealVideoSize'
    // TODO: Method 'SetVideoPosition'
    // TODO: Method 'GetVideoPosition'
    // TODO: Method 'GetAspectRatioMode'
    // TODO: Method 'SetAspectRatioMode'
    // TODO: Method 'SetVideoClippingWindow'
    // TODO: Method 'RepaintVideo'
    // TODO: Method 'DisplayModeChanged'
    // TODO: Method 'GetCurrentImage'
    // TODO: Method 'SetBorderColor'
    // TODO: Method 'GetBorderColor'
};
// --------------------------------------------------------
// Type: VMR9MixerPrefs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9MixerPrefs = *opaque{
};
// --------------------------------------------------------
// Type: VMR9NormalizedRect
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9NormalizedRect = extern struct {
    left: {"kind":"Single"},
    top: {"kind":"Single"},
    right: {"kind":"Single"},
    bottom: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: VMR9ProcAmpControlFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9ProcAmpControlFlags = *opaque{
};
// --------------------------------------------------------
// Type: VMR9ProcAmpControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9ProcAmpControl = extern struct {
    dwSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    Brightness: {"kind":"Single"},
    Contrast: {"kind":"Single"},
    Hue: {"kind":"Single"},
    Saturation: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: VMR9ProcAmpControlRange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9ProcAmpControlRange = extern struct {
    dwSize: {"kind":"UInt32"},
    dwProperty: Windows.Win32.DirectShow.VMR9ProcAmpControlFlags,
    MinValue: {"kind":"Single"},
    MaxValue: {"kind":"Single"},
    DefaultValue: {"kind":"Single"},
    StepSize: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: IVMRMixerControl9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRMixerControl9 = *opaque{
    // TODO: Method 'SetAlpha'
    // TODO: Method 'GetAlpha'
    // TODO: Method 'SetZOrder'
    // TODO: Method 'GetZOrder'
    // TODO: Method 'SetOutputRect'
    // TODO: Method 'GetOutputRect'
    // TODO: Method 'SetBackgroundClr'
    // TODO: Method 'GetBackgroundClr'
    // TODO: Method 'SetMixingPrefs'
    // TODO: Method 'GetMixingPrefs'
    // TODO: Method 'SetProcAmpControl'
    // TODO: Method 'GetProcAmpControl'
    // TODO: Method 'GetProcAmpControlRange'
};
// --------------------------------------------------------
// Type: VMR9AlphaBitmap
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9AlphaBitmap = extern struct {
    dwFlags: {"kind":"UInt32"},
    hdc: Windows.Win32.Gdi.HDC,
    pDDS: Windows.Win32.Direct2D.IDirect3DSurface9,
    rSrc: Windows.Win32.DisplayDevices.RECT,
    rDest: Windows.Win32.DirectShow.VMR9NormalizedRect,
    fAlpha: {"kind":"Single"},
    clrSrcKey: {"kind":"UInt32"},
    dwFilterMode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VMR9AlphaBitmapFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9AlphaBitmapFlags = *opaque{
};
// --------------------------------------------------------
// Type: IVMRMixerBitmap9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRMixerBitmap9 = *opaque{
    // TODO: Method 'SetAlphaBitmap'
    // TODO: Method 'UpdateAlphaBitmapParameters'
    // TODO: Method 'GetAlphaBitmapParameters'
};
// --------------------------------------------------------
// Type: IVMRSurface9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRSurface9 = *opaque{
    // TODO: Method 'IsSurfaceLocked'
    // TODO: Method 'LockSurface'
    // TODO: Method 'UnlockSurface'
    // TODO: Method 'GetSurface'
};
// --------------------------------------------------------
// Type: VMR9RenderPrefs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9RenderPrefs = *opaque{
};
// --------------------------------------------------------
// Type: IVMRImagePresenterConfig9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImagePresenterConfig9 = *opaque{
    // TODO: Method 'SetRenderingPrefs'
    // TODO: Method 'GetRenderingPrefs'
};
// --------------------------------------------------------
// Type: IVMRVideoStreamControl9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRVideoStreamControl9 = *opaque{
    // TODO: Method 'SetStreamActiveState'
    // TODO: Method 'GetStreamActiveState'
};
// --------------------------------------------------------
// Type: VMR9Mode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9Mode = *opaque{
};
// --------------------------------------------------------
// Type: IVMRFilterConfig9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRFilterConfig9 = *opaque{
    // TODO: Method 'SetImageCompositor'
    // TODO: Method 'SetNumberOfStreams'
    // TODO: Method 'GetNumberOfStreams'
    // TODO: Method 'SetRenderingPrefs'
    // TODO: Method 'GetRenderingPrefs'
    // TODO: Method 'SetRenderingMode'
    // TODO: Method 'GetRenderingMode'
};
// --------------------------------------------------------
// Type: IVMRAspectRatioControl9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRAspectRatioControl9 = *opaque{
    // TODO: Method 'GetAspectRatioMode'
    // TODO: Method 'SetAspectRatioMode'
};
// --------------------------------------------------------
// Type: VMR9MonitorInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9MonitorInfo = extern struct {
    uDevID: {"kind":"UInt32"},
    rcMonitor: Windows.Win32.DisplayDevices.RECT,
    hMon: {"kind":"IntPtr"},
    dwFlags: {"kind":"UInt32"},
    szDevice: {"kind":"Array","child": {"kind":"UInt16"}},
    szDescription: {"kind":"Array","child": {"kind":"UInt16"}},
    liDriverVersion: Windows.Win32.SystemServices.LARGE_INTEGER,
    dwVendorId: {"kind":"UInt32"},
    dwDeviceId: {"kind":"UInt32"},
    dwSubSysId: {"kind":"UInt32"},
    dwRevision: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IVMRMonitorConfig9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRMonitorConfig9 = *opaque{
    // TODO: Method 'SetMonitor'
    // TODO: Method 'GetMonitor'
    // TODO: Method 'SetDefaultMonitor'
    // TODO: Method 'GetDefaultMonitor'
    // TODO: Method 'GetAvailableMonitors'
};
// --------------------------------------------------------
// Type: VMR9DeinterlacePrefs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9DeinterlacePrefs = *opaque{
};
// --------------------------------------------------------
// Type: VMR9DeinterlaceTech
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9DeinterlaceTech = *opaque{
};
// --------------------------------------------------------
// Type: VMR9Frequency
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9Frequency = extern struct {
    dwNumerator: {"kind":"UInt32"},
    dwDenominator: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VMR9_SampleFormat
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VMR9_SampleFormat = *opaque{
};
// --------------------------------------------------------
// Type: VMR9VideoDesc
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9VideoDesc = extern struct {
    dwSize: {"kind":"UInt32"},
    dwSampleWidth: {"kind":"UInt32"},
    dwSampleHeight: {"kind":"UInt32"},
    SampleFormat: Windows.Win32.DirectShow.VMR9_SampleFormat,
    dwFourCC: {"kind":"UInt32"},
    InputSampleFreq: Windows.Win32.DirectShow.VMR9Frequency,
    OutputFrameFreq: Windows.Win32.DirectShow.VMR9Frequency,
};
// --------------------------------------------------------
// Type: VMR9DeinterlaceCaps
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9DeinterlaceCaps = extern struct {
    dwSize: {"kind":"UInt32"},
    dwNumPreviousOutputFrames: {"kind":"UInt32"},
    dwNumForwardRefSamples: {"kind":"UInt32"},
    dwNumBackwardRefSamples: {"kind":"UInt32"},
    DeinterlaceTechnology: Windows.Win32.DirectShow.VMR9DeinterlaceTech,
};
// --------------------------------------------------------
// Type: IVMRDeinterlaceControl9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRDeinterlaceControl9 = *opaque{
    // TODO: Method 'GetNumberOfDeinterlaceModes'
    // TODO: Method 'GetDeinterlaceModeCaps'
    // TODO: Method 'GetDeinterlaceMode'
    // TODO: Method 'SetDeinterlaceMode'
    // TODO: Method 'GetDeinterlacePrefs'
    // TODO: Method 'SetDeinterlacePrefs'
    // TODO: Method 'GetActualDeinterlaceMode'
};
// --------------------------------------------------------
// Type: VMR9VideoStreamInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VMR9VideoStreamInfo = extern struct {
    pddsVideoSurface: Windows.Win32.Direct2D.IDirect3DSurface9,
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
    dwStrmID: {"kind":"UInt32"},
    fAlpha: {"kind":"Single"},
    rNormal: Windows.Win32.DirectShow.VMR9NormalizedRect,
    rtStart: {"kind":"Int64"},
    rtEnd: {"kind":"Int64"},
    SampleFormat: Windows.Win32.DirectShow.VMR9_SampleFormat,
};
// --------------------------------------------------------
// Type: IVMRImageCompositor9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVMRImageCompositor9 = *opaque{
    // TODO: Method 'InitCompositionDevice'
    // TODO: Method 'TermCompositionDevice'
    // TODO: Method 'SetStreamMediaType'
    // TODO: Method 'CompositeImage'
};
// --------------------------------------------------------
// Type: IVPBaseConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPBaseConfig = *opaque{
    // TODO: Method 'GetConnectInfo'
    // TODO: Method 'SetConnectInfo'
    // TODO: Method 'GetVPDataInfo'
    // TODO: Method 'GetMaxPixelRate'
    // TODO: Method 'InformVPInputFormats'
    // TODO: Method 'GetVideoFormats'
    // TODO: Method 'SetVideoFormat'
    // TODO: Method 'SetInvertPolarity'
    // TODO: Method 'GetOverlaySurface'
    // TODO: Method 'SetDirectDrawKernelHandle'
    // TODO: Method 'SetVideoPortID'
    // TODO: Method 'SetDDSurfaceKernelHandles'
    // TODO: Method 'SetSurfaceParameters'
};
// --------------------------------------------------------
// Type: IVPConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPConfig = *opaque{
    // TODO: Method 'IsVPDecimationAllowed'
    // TODO: Method 'SetScalingFactors'
};
// --------------------------------------------------------
// Type: IVPVBIConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPVBIConfig = *opaque{
};
// --------------------------------------------------------
// Type: IVPBaseNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPBaseNotify = *opaque{
    // TODO: Method 'RenegotiateVPParameters'
};
// --------------------------------------------------------
// Type: IVPNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPNotify = *opaque{
    // TODO: Method 'SetDeinterlaceMode'
    // TODO: Method 'GetDeinterlaceMode'
};
// --------------------------------------------------------
// Type: IVPNotify2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPNotify2 = *opaque{
    // TODO: Method 'SetVPSyncMaster'
    // TODO: Method 'GetVPSyncMaster'
};
// --------------------------------------------------------
// Type: IVPVBINotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVPVBINotify = *opaque{
};
// --------------------------------------------------------
// Type: IXMLGraphBuilder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXMLGraphBuilder = *opaque{
    // TODO: Method 'BuildFromXML'
    // TODO: Method 'SaveToXML'
    // TODO: Method 'BuildFromXMLFile'
};
// --------------------------------------------------------
// Type: _riffchunk
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _riffchunk = *opaque{
};
// --------------------------------------------------------
// Type: _rifflist
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _rifflist = *opaque{
};
// --------------------------------------------------------
// Type: AVIMAINHEADER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVIMAINHEADER = *opaque{
};
// --------------------------------------------------------
// Type: _aviextheader
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _aviextheader = *opaque{
};
// --------------------------------------------------------
// Type: AVISTREAMHEADER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVISTREAMHEADER = *opaque{
    // --------------------------------------------------------
    // Type: _rcFrame_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _rcFrame_e__Struct = extern struct {
        left: {"kind":"Int16"},
        top: {"kind":"Int16"},
        right: {"kind":"Int16"},
        bottom: {"kind":"Int16"},
    };
};
// --------------------------------------------------------
// Type: AVIOLDINDEX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVIOLDINDEX = *opaque{
    // --------------------------------------------------------
    // Type: _avioldindex_entry
    // TypeLayoutAttr: sequential
    // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
    pub const _avioldindex_entry = *opaque{
    };
};
// --------------------------------------------------------
// Type: _timecodedata
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _timecodedata = *opaque{
};
// --------------------------------------------------------
// Type: AVIMETAINDEX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVIMETAINDEX = *opaque{
};
// --------------------------------------------------------
// Type: AVISUPERINDEX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVISUPERINDEX = *opaque{
    // --------------------------------------------------------
    // Type: _avisuperindex_entry
    // TypeLayoutAttr: sequential
    // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
    pub const _avisuperindex_entry = *opaque{
    };
};
// --------------------------------------------------------
// Type: AVISTDINDEX_ENTRY
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVISTDINDEX_ENTRY = *opaque{
};
// --------------------------------------------------------
// Type: AVISTDINDEX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const AVISTDINDEX = *opaque{
};
// --------------------------------------------------------
// Type: _avitimedindex_entry
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _avitimedindex_entry = *opaque{
};
// --------------------------------------------------------
// Type: _avitimedindex
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _avitimedindex = *opaque{
};
// --------------------------------------------------------
// Type: _avitimecodeindex
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _avitimecodeindex = *opaque{
};
// --------------------------------------------------------
// Type: _avitcdlindex_entry
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _avitcdlindex_entry = *opaque{
};
// --------------------------------------------------------
// Type: _avitcdlindex
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _avitcdlindex = *opaque{
};
// --------------------------------------------------------
// Type: _avifieldindex_chunk
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const _avifieldindex_chunk = *opaque{
    // --------------------------------------------------------
    // Type: _avifieldindex_entry
    // TypeLayoutAttr: sequential
    // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
    pub const _avifieldindex_entry = *opaque{
    };
};
// --------------------------------------------------------
// Type: MainAVIHeader
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MainAVIHeader = extern struct {
    dwMicroSecPerFrame: {"kind":"UInt32"},
    dwMaxBytesPerSec: {"kind":"UInt32"},
    dwPaddingGranularity: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    dwTotalFrames: {"kind":"UInt32"},
    dwInitialFrames: {"kind":"UInt32"},
    dwStreams: {"kind":"UInt32"},
    dwSuggestedBufferSize: {"kind":"UInt32"},
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
    dwReserved: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: AVIStreamHeader
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AVIStreamHeader = extern struct {
    fccType: {"kind":"UInt32"},
    fccHandler: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    wPriority: {"kind":"UInt16"},
    wLanguage: {"kind":"UInt16"},
    dwInitialFrames: {"kind":"UInt32"},
    dwScale: {"kind":"UInt32"},
    dwRate: {"kind":"UInt32"},
    dwStart: {"kind":"UInt32"},
    dwLength: {"kind":"UInt32"},
    dwSuggestedBufferSize: {"kind":"UInt32"},
    dwQuality: {"kind":"UInt32"},
    dwSampleSize: {"kind":"UInt32"},
    rcFrame: Windows.Win32.DisplayDevices.RECT,
};
// --------------------------------------------------------
// Type: AVIINDEXENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AVIINDEXENTRY = extern struct {
    ckid: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    dwChunkOffset: {"kind":"UInt32"},
    dwChunkLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AVIPALCHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AVIPALCHANGE = extern struct {
    bFirstEntry: {"kind":"Byte"},
    bNumEntries: {"kind":"Byte"},
    wFlags: {"kind":"UInt16"},
    peNew: Windows.Win32.Direct2D.PALETTEENTRY,
};
// --------------------------------------------------------
// Type: AM_PROPERTY_AC3
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_AC3 = *opaque{
};
// --------------------------------------------------------
// Type: AM_AC3_ERROR_CONCEALMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_AC3_ERROR_CONCEALMENT = extern struct {
    fRepeatPreviousBlock: Windows.Win32.SystemServices.BOOL,
    fErrorInCurrentBlock: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: AM_AC3_ALTERNATE_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_AC3_ALTERNATE_AUDIO = extern struct {
    fStereo: Windows.Win32.SystemServices.BOOL,
    DualMode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AM_AC3_DOWNMIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_AC3_DOWNMIX = extern struct {
    fDownMix: Windows.Win32.SystemServices.BOOL,
    fDolbySurround: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: AM_AC3_BIT_STREAM_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_AC3_BIT_STREAM_MODE = extern struct {
    BitStreamMode: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: AM_AC3_DIALOGUE_LEVEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_AC3_DIALOGUE_LEVEL = extern struct {
    DialogueLevel: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AM_AC3_ROOM_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_AC3_ROOM_TYPE = extern struct {
    fLargeRoom: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: AM_PROPERTY_DVDSUBPIC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_DVDSUBPIC = *opaque{
};
// --------------------------------------------------------
// Type: AM_DVD_YUV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVD_YUV = extern struct {
    Reserved: {"kind":"Byte"},
    Y: {"kind":"Byte"},
    U: {"kind":"Byte"},
    V: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: AM_PROPERTY_SPPAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_PROPERTY_SPPAL = extern struct {
    sppal: {"kind":"Array","child": Windows.Win32.DirectShow.AM_DVD_YUV},
};
// --------------------------------------------------------
// Type: AM_COLCON
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_COLCON = extern struct {
    _bitfield1: {"kind":"Byte"},
    _bitfield2: {"kind":"Byte"},
    _bitfield3: {"kind":"Byte"},
    _bitfield4: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: AM_PROPERTY_SPHLI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_PROPERTY_SPHLI = extern struct {
    HLISS: {"kind":"UInt16"},
    Reserved: {"kind":"UInt16"},
    StartPTM: {"kind":"UInt32"},
    EndPTM: {"kind":"UInt32"},
    StartX: {"kind":"UInt16"},
    StartY: {"kind":"UInt16"},
    StopX: {"kind":"UInt16"},
    StopY: {"kind":"UInt16"},
    ColCon: Windows.Win32.DirectShow.AM_COLCON,
};
// --------------------------------------------------------
// Type: AM_PROPERTY_DVDCOPYPROT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_DVDCOPYPROT = *opaque{
};
// --------------------------------------------------------
// Type: AM_DIGITAL_CP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_DIGITAL_CP = *opaque{
};
// --------------------------------------------------------
// Type: AM_DVDCOPY_CHLGKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVDCOPY_CHLGKEY = extern struct {
    ChlgKey: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AM_DVDCOPY_BUSKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVDCOPY_BUSKEY = extern struct {
    BusKey: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AM_DVDCOPY_DISCKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVDCOPY_DISCKEY = extern struct {
    DiscKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AM_DVDCOPY_TITLEKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVDCOPY_TITLEKEY = extern struct {
    KeyFlags: {"kind":"UInt32"},
    Reserved1: {"kind":"Array","child": {"kind":"UInt32"}},
    TitleKey: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved2: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: AM_COPY_MACROVISION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_COPY_MACROVISION = extern struct {
    MACROVISIONLevel: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AM_DVDCOPY_SET_COPY_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVDCOPY_SET_COPY_STATE = extern struct {
    DVDCopyState: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AM_DVDCOPYSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_DVDCOPYSTATE = *opaque{
};
// --------------------------------------------------------
// Type: AM_COPY_MACROVISION_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_COPY_MACROVISION_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: DVD_REGION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVD_REGION = extern struct {
    CopySystem: {"kind":"Byte"},
    RegionData: {"kind":"Byte"},
    SystemRegion: {"kind":"Byte"},
    ResetCount: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: AM_MPEG2Level
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_MPEG2Level = *opaque{
};
// --------------------------------------------------------
// Type: AM_MPEG2Profile
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_MPEG2Profile = *opaque{
};
// --------------------------------------------------------
// Type: VIDEOINFOHEADER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VIDEOINFOHEADER2 = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwBitRate: {"kind":"UInt32"},
    dwBitErrorRate: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
    dwInterlaceFlags: {"kind":"UInt32"},
    dwCopyProtectFlags: {"kind":"UInt32"},
    dwPictAspectRatioX: {"kind":"UInt32"},
    dwPictAspectRatioY: {"kind":"UInt32"},
    Anonymous: Windows.Win32.DirectShow.VIDEOINFOHEADER2+_Anonymous_e__Union,
    dwReserved2: {"kind":"UInt32"},
    bmiHeader: Windows.Win32.DirectShow.BITMAPINFOHEADER,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MPEG2VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MPEG2VIDEOINFO = extern struct {
    hdr: Windows.Win32.DirectShow.VIDEOINFOHEADER2,
    dwStartTimeCode: {"kind":"UInt32"},
    cbSequenceHeader: {"kind":"UInt32"},
    dwProfile: {"kind":"UInt32"},
    dwLevel: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    dwSequenceHeader: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: AM_DvdKaraokeData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DvdKaraokeData = extern struct {
    dwDownmix: {"kind":"UInt32"},
    dwSpeakerAssignment: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AM_PROPERTY_DVDKARAOKE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_DVDKARAOKE = *opaque{
};
// --------------------------------------------------------
// Type: AM_PROPERTY_TS_RATE_CHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_TS_RATE_CHANGE = *opaque{
};
// --------------------------------------------------------
// Type: AM_PROPERTY_DVD_RATE_CHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AM_PROPERTY_DVD_RATE_CHANGE = *opaque{
};
// --------------------------------------------------------
// Type: AM_SimpleRateChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_SimpleRateChange = extern struct {
    StartTime: {"kind":"Int64"},
    Rate: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: AM_QueryRate
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_QueryRate = extern struct {
    lMaxForwardFullFrame: {"kind":"Int32"},
    lMaxReverseFullFrame: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: AM_ExactRateChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_ExactRateChange = extern struct {
    OutputZeroTime: {"kind":"Int64"},
    Rate: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: AM_DVD_ChangeRate
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_DVD_ChangeRate = extern struct {
    StartInTime: {"kind":"Int64"},
    StartOutTime: {"kind":"Int64"},
    Rate: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DVD_PLAY_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_PLAY_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: DVD_ERROR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_ERROR = *opaque{
};
// --------------------------------------------------------
// Type: DVD_WARNING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_WARNING = *opaque{
};
// --------------------------------------------------------
// Type: DVD_PB_STOPPED
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVD_PB_STOPPED = *opaque{
};
// --------------------------------------------------------
// Type: AMGETERRORTEXTPROCA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMGETERRORTEXTPROCA = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: AMGETERRORTEXTPROCW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMGETERRORTEXTPROCW = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: AMGETERRORTEXTPROC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMGETERRORTEXTPROC = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: SNDDEV_ERR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SNDDEV_ERR = *opaque{
};
// --------------------------------------------------------
// Type: MP_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MP_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MP_CURVE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MP_CURVE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MP_PARAMINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MP_PARAMINFO = extern struct {
    mpType: Windows.Win32.DirectShow.MP_TYPE,
    mopCaps: {"kind":"UInt32"},
    mpdMinValue: {"kind":"Single"},
    mpdMaxValue: {"kind":"Single"},
    mpdNeutralValue: {"kind":"Single"},
    szUnitText: {"kind":"Array","child": {"kind":"UInt16"}},
    szLabel: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: MP_ENVELOPE_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MP_ENVELOPE_SEGMENT = extern struct {
    rtStart: {"kind":"Int64"},
    rtEnd: {"kind":"Int64"},
    valStart: {"kind":"Single"},
    valEnd: {"kind":"Single"},
    iCurve: Windows.Win32.DirectShow.MP_CURVE_TYPE,
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IMediaParamInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaParamInfo = *opaque{
    // TODO: Method 'GetParamCount'
    // TODO: Method 'GetParamInfo'
    // TODO: Method 'GetParamText'
    // TODO: Method 'GetNumTimeFormats'
    // TODO: Method 'GetSupportedTimeFormat'
    // TODO: Method 'GetCurrentTimeFormat'
};
// --------------------------------------------------------
// Type: IMediaParams
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMediaParams = *opaque{
    // TODO: Method 'GetParam'
    // TODO: Method 'SetParam'
    // TODO: Method 'AddEnvelope'
    // TODO: Method 'FlushEnvelope'
    // TODO: Method 'SetTimeFormat'
};
// --------------------------------------------------------
// Type: DMO_PARTIAL_MEDIATYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DMO_PARTIAL_MEDIATYPE = extern struct {
    type: Guid,
    subtype: Guid,
};
// --------------------------------------------------------
// Type: DMO_REGISTER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DMO_REGISTER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DMO_ENUM_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DMO_ENUM_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: SystemTuningSpaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SystemTuningSpaces = opaque {
};
// --------------------------------------------------------
// Type: TuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const TuningSpace = opaque {
};
// --------------------------------------------------------
// Type: ChannelIDTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ChannelIDTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: ATSCTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ATSCTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: DigitalCableTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DigitalCableTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: AnalogRadioTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AnalogRadioTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: AuxInTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AuxInTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: AnalogTVTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AnalogTVTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: DVBTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: DVBSTuningSpace
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBSTuningSpace = opaque {
};
// --------------------------------------------------------
// Type: ComponentTypes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ComponentTypes = opaque {
};
// --------------------------------------------------------
// Type: ComponentType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ComponentType = opaque {
};
// --------------------------------------------------------
// Type: LanguageComponentType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const LanguageComponentType = opaque {
};
// --------------------------------------------------------
// Type: MPEG2ComponentType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MPEG2ComponentType = opaque {
};
// --------------------------------------------------------
// Type: ATSCComponentType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ATSCComponentType = opaque {
};
// --------------------------------------------------------
// Type: Components
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Components = opaque {
};
// --------------------------------------------------------
// Type: Component
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Component = opaque {
};
// --------------------------------------------------------
// Type: MPEG2Component
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MPEG2Component = opaque {
};
// --------------------------------------------------------
// Type: AnalogAudioComponentType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AnalogAudioComponentType = opaque {
};
// --------------------------------------------------------
// Type: TuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const TuneRequest = opaque {
};
// --------------------------------------------------------
// Type: ChannelIDTuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ChannelIDTuneRequest = opaque {
};
// --------------------------------------------------------
// Type: ChannelTuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ChannelTuneRequest = opaque {
};
// --------------------------------------------------------
// Type: ATSCChannelTuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ATSCChannelTuneRequest = opaque {
};
// --------------------------------------------------------
// Type: DigitalCableTuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DigitalCableTuneRequest = opaque {
};
// --------------------------------------------------------
// Type: MPEG2TuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MPEG2TuneRequest = opaque {
};
// --------------------------------------------------------
// Type: MPEG2TuneRequestFactory
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MPEG2TuneRequestFactory = opaque {
};
// --------------------------------------------------------
// Type: Locator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Locator = opaque {
};
// --------------------------------------------------------
// Type: DigitalLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DigitalLocator = opaque {
};
// --------------------------------------------------------
// Type: AnalogLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AnalogLocator = opaque {
};
// --------------------------------------------------------
// Type: ATSCLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ATSCLocator = opaque {
};
// --------------------------------------------------------
// Type: DigitalCableLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DigitalCableLocator = opaque {
};
// --------------------------------------------------------
// Type: DVBTLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBTLocator = opaque {
};
// --------------------------------------------------------
// Type: DVBTLocator2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBTLocator2 = opaque {
};
// --------------------------------------------------------
// Type: DVBSLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBSLocator = opaque {
};
// --------------------------------------------------------
// Type: DVBCLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBCLocator = opaque {
};
// --------------------------------------------------------
// Type: ISDBSLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ISDBSLocator = opaque {
};
// --------------------------------------------------------
// Type: DVBTuneRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVBTuneRequest = opaque {
};
// --------------------------------------------------------
// Type: CreatePropBagOnRegKey
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CreatePropBagOnRegKey = opaque {
};
// --------------------------------------------------------
// Type: BroadcastEventService
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const BroadcastEventService = opaque {
};
// --------------------------------------------------------
// Type: TunerMarshaler
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const TunerMarshaler = opaque {
};
// --------------------------------------------------------
// Type: PersistTuneXmlUtility
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PersistTuneXmlUtility = opaque {
};
// --------------------------------------------------------
// Type: ESEventService
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ESEventService = opaque {
};
// --------------------------------------------------------
// Type: ESEventFactory
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ESEventFactory = opaque {
};
// --------------------------------------------------------
// Type: ICreatePropBagOnRegKey
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICreatePropBagOnRegKey = *opaque{
    // TODO: Method 'Create'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_tuner_0000_0000_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_tuner_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: ITuningSpaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuningSpaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'get_EnumTuningSpaces'
};
// --------------------------------------------------------
// Type: ITuningSpaceContainer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuningSpaceContainer = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'put_Item'
    // TODO: Method 'TuningSpacesForCLSID'
    // TODO: Method '_TuningSpacesForCLSID2'
    // TODO: Method 'TuningSpacesForName'
    // TODO: Method 'FindID'
    // TODO: Method 'Add'
    // TODO: Method 'get_EnumTuningSpaces'
    // TODO: Method 'Remove'
    // TODO: Method 'get_MaxCount'
    // TODO: Method 'put_MaxCount'
};
// --------------------------------------------------------
// Type: ITuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuningSpace = *opaque{
    // TODO: Method 'get_UniqueName'
    // TODO: Method 'put_UniqueName'
    // TODO: Method 'get_FriendlyName'
    // TODO: Method 'put_FriendlyName'
    // TODO: Method 'get_CLSID'
    // TODO: Method 'get_NetworkType'
    // TODO: Method 'put_NetworkType'
    // TODO: Method 'get__NetworkType'
    // TODO: Method 'put__NetworkType'
    // TODO: Method 'CreateTuneRequest'
    // TODO: Method 'EnumCategoryGUIDs'
    // TODO: Method 'EnumDeviceMonikers'
    // TODO: Method 'get_DefaultPreferredComponentTypes'
    // TODO: Method 'put_DefaultPreferredComponentTypes'
    // TODO: Method 'get_FrequencyMapping'
    // TODO: Method 'put_FrequencyMapping'
    // TODO: Method 'get_DefaultLocator'
    // TODO: Method 'put_DefaultLocator'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IEnumTuningSpaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumTuningSpaces = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IDVBTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBTuningSpace = *opaque{
    // TODO: Method 'get_SystemType'
    // TODO: Method 'put_SystemType'
};
// --------------------------------------------------------
// Type: IDVBTuningSpace2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBTuningSpace2 = *opaque{
    // TODO: Method 'get_NetworkID'
    // TODO: Method 'put_NetworkID'
};
// --------------------------------------------------------
// Type: IDVBSTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBSTuningSpace = *opaque{
    // TODO: Method 'get_LowOscillator'
    // TODO: Method 'put_LowOscillator'
    // TODO: Method 'get_HighOscillator'
    // TODO: Method 'put_HighOscillator'
    // TODO: Method 'get_LNBSwitch'
    // TODO: Method 'put_LNBSwitch'
    // TODO: Method 'get_InputRange'
    // TODO: Method 'put_InputRange'
    // TODO: Method 'get_SpectralInversion'
    // TODO: Method 'put_SpectralInversion'
};
// --------------------------------------------------------
// Type: IAuxInTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAuxInTuningSpace = *opaque{
};
// --------------------------------------------------------
// Type: IAuxInTuningSpace2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAuxInTuningSpace2 = *opaque{
    // TODO: Method 'get_CountryCode'
    // TODO: Method 'put_CountryCode'
};
// --------------------------------------------------------
// Type: IAnalogTVTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAnalogTVTuningSpace = *opaque{
    // TODO: Method 'get_MinChannel'
    // TODO: Method 'put_MinChannel'
    // TODO: Method 'get_MaxChannel'
    // TODO: Method 'put_MaxChannel'
    // TODO: Method 'get_InputType'
    // TODO: Method 'put_InputType'
    // TODO: Method 'get_CountryCode'
    // TODO: Method 'put_CountryCode'
};
// --------------------------------------------------------
// Type: IATSCTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSCTuningSpace = *opaque{
    // TODO: Method 'get_MinMinorChannel'
    // TODO: Method 'put_MinMinorChannel'
    // TODO: Method 'get_MaxMinorChannel'
    // TODO: Method 'put_MaxMinorChannel'
    // TODO: Method 'get_MinPhysicalChannel'
    // TODO: Method 'put_MinPhysicalChannel'
    // TODO: Method 'get_MaxPhysicalChannel'
    // TODO: Method 'put_MaxPhysicalChannel'
};
// --------------------------------------------------------
// Type: IDigitalCableTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDigitalCableTuningSpace = *opaque{
    // TODO: Method 'get_MinMajorChannel'
    // TODO: Method 'put_MinMajorChannel'
    // TODO: Method 'get_MaxMajorChannel'
    // TODO: Method 'put_MaxMajorChannel'
    // TODO: Method 'get_MinSourceID'
    // TODO: Method 'put_MinSourceID'
    // TODO: Method 'get_MaxSourceID'
    // TODO: Method 'put_MaxSourceID'
};
// --------------------------------------------------------
// Type: IAnalogRadioTuningSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAnalogRadioTuningSpace = *opaque{
    // TODO: Method 'get_MinFrequency'
    // TODO: Method 'put_MinFrequency'
    // TODO: Method 'get_MaxFrequency'
    // TODO: Method 'put_MaxFrequency'
    // TODO: Method 'get_Step'
    // TODO: Method 'put_Step'
};
// --------------------------------------------------------
// Type: IAnalogRadioTuningSpace2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAnalogRadioTuningSpace2 = *opaque{
    // TODO: Method 'get_CountryCode'
    // TODO: Method 'put_CountryCode'
};
// --------------------------------------------------------
// Type: ITuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuneRequest = *opaque{
    // TODO: Method 'get_TuningSpace'
    // TODO: Method 'get_Components'
    // TODO: Method 'Clone'
    // TODO: Method 'get_Locator'
    // TODO: Method 'put_Locator'
};
// --------------------------------------------------------
// Type: IChannelIDTuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IChannelIDTuneRequest = *opaque{
    // TODO: Method 'get_ChannelID'
    // TODO: Method 'put_ChannelID'
};
// --------------------------------------------------------
// Type: IChannelTuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IChannelTuneRequest = *opaque{
    // TODO: Method 'get_Channel'
    // TODO: Method 'put_Channel'
};
// --------------------------------------------------------
// Type: IATSCChannelTuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSCChannelTuneRequest = *opaque{
    // TODO: Method 'get_MinorChannel'
    // TODO: Method 'put_MinorChannel'
};
// --------------------------------------------------------
// Type: IDigitalCableTuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDigitalCableTuneRequest = *opaque{
    // TODO: Method 'get_MajorChannel'
    // TODO: Method 'put_MajorChannel'
    // TODO: Method 'get_SourceID'
    // TODO: Method 'put_SourceID'
};
// --------------------------------------------------------
// Type: IDVBTuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBTuneRequest = *opaque{
    // TODO: Method 'get_ONID'
    // TODO: Method 'put_ONID'
    // TODO: Method 'get_TSID'
    // TODO: Method 'put_TSID'
    // TODO: Method 'get_SID'
    // TODO: Method 'put_SID'
};
// --------------------------------------------------------
// Type: IMPEG2TuneRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2TuneRequest = *opaque{
    // TODO: Method 'get_TSID'
    // TODO: Method 'put_TSID'
    // TODO: Method 'get_ProgNo'
    // TODO: Method 'put_ProgNo'
};
// --------------------------------------------------------
// Type: IMPEG2TuneRequestFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2TuneRequestFactory = *opaque{
    // TODO: Method 'CreateTuneRequest'
};
// --------------------------------------------------------
// Type: IMPEG2TuneRequestSupport
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2TuneRequestSupport = *opaque{
};
// --------------------------------------------------------
// Type: ITunerCap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITunerCap = *opaque{
    // TODO: Method 'get_SupportedNetworkTypes'
    // TODO: Method 'get_SupportedVideoFormats'
    // TODO: Method 'get_AuxInputCount'
};
// --------------------------------------------------------
// Type: ITunerCapEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITunerCapEx = *opaque{
    // TODO: Method 'get_Has608_708Caption'
};
// --------------------------------------------------------
// Type: ITuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuner = *opaque{
    // TODO: Method 'get_TuningSpace'
    // TODO: Method 'put_TuningSpace'
    // TODO: Method 'EnumTuningSpaces'
    // TODO: Method 'get_TuneRequest'
    // TODO: Method 'put_TuneRequest'
    // TODO: Method 'Validate'
    // TODO: Method 'get_PreferredComponentTypes'
    // TODO: Method 'put_PreferredComponentTypes'
    // TODO: Method 'get_SignalStrength'
    // TODO: Method 'TriggerSignalEvents'
};
// --------------------------------------------------------
// Type: IScanningTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IScanningTuner = *opaque{
    // TODO: Method 'SeekUp'
    // TODO: Method 'SeekDown'
    // TODO: Method 'ScanUp'
    // TODO: Method 'ScanDown'
    // TODO: Method 'AutoProgram'
};
// --------------------------------------------------------
// Type: IScanningTunerEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IScanningTunerEx = *opaque{
    // TODO: Method 'GetCurrentLocator'
    // TODO: Method 'PerformExhaustiveScan'
    // TODO: Method 'TerminateCurrentScan'
    // TODO: Method 'ResumeCurrentScan'
    // TODO: Method 'GetTunerScanningCapability'
    // TODO: Method 'GetTunerStatus'
    // TODO: Method 'GetCurrentTunerStandardCapability'
    // TODO: Method 'SetScanSignalTypeFilter'
};
// --------------------------------------------------------
// Type: IComponentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponentType = *opaque{
    // TODO: Method 'get_Category'
    // TODO: Method 'put_Category'
    // TODO: Method 'get_MediaMajorType'
    // TODO: Method 'put_MediaMajorType'
    // TODO: Method 'get__MediaMajorType'
    // TODO: Method 'put__MediaMajorType'
    // TODO: Method 'get_MediaSubType'
    // TODO: Method 'put_MediaSubType'
    // TODO: Method 'get__MediaSubType'
    // TODO: Method 'put__MediaSubType'
    // TODO: Method 'get_MediaFormatType'
    // TODO: Method 'put_MediaFormatType'
    // TODO: Method 'get__MediaFormatType'
    // TODO: Method 'put__MediaFormatType'
    // TODO: Method 'get_MediaType'
    // TODO: Method 'put_MediaType'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: ILanguageComponentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ILanguageComponentType = *opaque{
    // TODO: Method 'get_LangID'
    // TODO: Method 'put_LangID'
};
// --------------------------------------------------------
// Type: IMPEG2ComponentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2ComponentType = *opaque{
    // TODO: Method 'get_StreamType'
    // TODO: Method 'put_StreamType'
};
// --------------------------------------------------------
// Type: IATSCComponentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSCComponentType = *opaque{
    // TODO: Method 'get_Flags'
    // TODO: Method 'put_Flags'
};
// --------------------------------------------------------
// Type: IEnumComponentTypes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumComponentTypes = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IComponentTypes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponentTypes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'EnumComponentTypes'
    // TODO: Method 'get_Item'
    // TODO: Method 'put_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IComponent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponent = *opaque{
    // TODO: Method 'get_Type'
    // TODO: Method 'put_Type'
    // TODO: Method 'get_DescLangID'
    // TODO: Method 'put_DescLangID'
    // TODO: Method 'get_Status'
    // TODO: Method 'put_Status'
    // TODO: Method 'get_Description'
    // TODO: Method 'put_Description'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IAnalogAudioComponentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAnalogAudioComponentType = *opaque{
    // TODO: Method 'get_AnalogAudioMode'
    // TODO: Method 'put_AnalogAudioMode'
};
// --------------------------------------------------------
// Type: IMPEG2Component
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2Component = *opaque{
    // TODO: Method 'get_PID'
    // TODO: Method 'put_PID'
    // TODO: Method 'get_PCRPID'
    // TODO: Method 'put_PCRPID'
    // TODO: Method 'get_ProgramNumber'
    // TODO: Method 'put_ProgramNumber'
};
// --------------------------------------------------------
// Type: IEnumComponents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumComponents = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IComponents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponents = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'EnumComponents'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'Clone'
    // TODO: Method 'put_Item'
};
// --------------------------------------------------------
// Type: IComponentsOld
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponentsOld = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'EnumComponents'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: ILocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ILocator = *opaque{
    // TODO: Method 'get_CarrierFrequency'
    // TODO: Method 'put_CarrierFrequency'
    // TODO: Method 'get_InnerFEC'
    // TODO: Method 'put_InnerFEC'
    // TODO: Method 'get_InnerFECRate'
    // TODO: Method 'put_InnerFECRate'
    // TODO: Method 'get_OuterFEC'
    // TODO: Method 'put_OuterFEC'
    // TODO: Method 'get_OuterFECRate'
    // TODO: Method 'put_OuterFECRate'
    // TODO: Method 'get_Modulation'
    // TODO: Method 'put_Modulation'
    // TODO: Method 'get_SymbolRate'
    // TODO: Method 'put_SymbolRate'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IAnalogLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAnalogLocator = *opaque{
    // TODO: Method 'get_VideoStandard'
    // TODO: Method 'put_VideoStandard'
};
// --------------------------------------------------------
// Type: IDigitalLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDigitalLocator = *opaque{
};
// --------------------------------------------------------
// Type: IATSCLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSCLocator = *opaque{
    // TODO: Method 'get_PhysicalChannel'
    // TODO: Method 'put_PhysicalChannel'
    // TODO: Method 'get_TSID'
    // TODO: Method 'put_TSID'
};
// --------------------------------------------------------
// Type: IATSCLocator2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSCLocator2 = *opaque{
    // TODO: Method 'get_ProgramNumber'
    // TODO: Method 'put_ProgramNumber'
};
// --------------------------------------------------------
// Type: IDigitalCableLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDigitalCableLocator = *opaque{
};
// --------------------------------------------------------
// Type: IDVBTLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBTLocator = *opaque{
    // TODO: Method 'get_Bandwidth'
    // TODO: Method 'put_Bandwidth'
    // TODO: Method 'get_LPInnerFEC'
    // TODO: Method 'put_LPInnerFEC'
    // TODO: Method 'get_LPInnerFECRate'
    // TODO: Method 'put_LPInnerFECRate'
    // TODO: Method 'get_HAlpha'
    // TODO: Method 'put_HAlpha'
    // TODO: Method 'get_Guard'
    // TODO: Method 'put_Guard'
    // TODO: Method 'get_Mode'
    // TODO: Method 'put_Mode'
    // TODO: Method 'get_OtherFrequencyInUse'
    // TODO: Method 'put_OtherFrequencyInUse'
};
// --------------------------------------------------------
// Type: IDVBTLocator2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBTLocator2 = *opaque{
    // TODO: Method 'get_PhysicalLayerPipeId'
    // TODO: Method 'put_PhysicalLayerPipeId'
};
// --------------------------------------------------------
// Type: IDVBSLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBSLocator = *opaque{
    // TODO: Method 'get_SignalPolarisation'
    // TODO: Method 'put_SignalPolarisation'
    // TODO: Method 'get_WestPosition'
    // TODO: Method 'put_WestPosition'
    // TODO: Method 'get_OrbitalPosition'
    // TODO: Method 'put_OrbitalPosition'
    // TODO: Method 'get_Azimuth'
    // TODO: Method 'put_Azimuth'
    // TODO: Method 'get_Elevation'
    // TODO: Method 'put_Elevation'
};
// --------------------------------------------------------
// Type: IDVBSLocator2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBSLocator2 = *opaque{
    // TODO: Method 'get_DiseqLNBSource'
    // TODO: Method 'put_DiseqLNBSource'
    // TODO: Method 'get_LocalOscillatorOverrideLow'
    // TODO: Method 'put_LocalOscillatorOverrideLow'
    // TODO: Method 'get_LocalOscillatorOverrideHigh'
    // TODO: Method 'put_LocalOscillatorOverrideHigh'
    // TODO: Method 'get_LocalLNBSwitchOverride'
    // TODO: Method 'put_LocalLNBSwitchOverride'
    // TODO: Method 'get_LocalSpectralInversionOverride'
    // TODO: Method 'put_LocalSpectralInversionOverride'
    // TODO: Method 'get_SignalRollOff'
    // TODO: Method 'put_SignalRollOff'
    // TODO: Method 'get_SignalPilot'
    // TODO: Method 'put_SignalPilot'
};
// --------------------------------------------------------
// Type: IDVBCLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVBCLocator = *opaque{
};
// --------------------------------------------------------
// Type: IISDBSLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDBSLocator = *opaque{
};
// --------------------------------------------------------
// Type: IESOpenMmiEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESOpenMmiEvent = *opaque{
    // TODO: Method 'GetDialogNumber'
    // TODO: Method 'GetDialogType'
    // TODO: Method 'GetDialogData'
    // TODO: Method 'GetDialogStringData'
};
// --------------------------------------------------------
// Type: IESCloseMmiEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESCloseMmiEvent = *opaque{
    // TODO: Method 'GetDialogNumber'
};
// --------------------------------------------------------
// Type: IESValueUpdatedEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESValueUpdatedEvent = *opaque{
    // TODO: Method 'GetValueNames'
};
// --------------------------------------------------------
// Type: IESRequestTunerEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESRequestTunerEvent = *opaque{
    // TODO: Method 'GetPriority'
    // TODO: Method 'GetReason'
    // TODO: Method 'GetConsequences'
    // TODO: Method 'GetEstimatedTime'
};
// --------------------------------------------------------
// Type: IESIsdbCasResponseEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESIsdbCasResponseEvent = *opaque{
    // TODO: Method 'GetRequestId'
    // TODO: Method 'GetStatus'
    // TODO: Method 'GetDataLength'
    // TODO: Method 'GetResponseData'
};
// --------------------------------------------------------
// Type: IGpnvsCommonBase
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGpnvsCommonBase = *opaque{
    // TODO: Method 'GetValueUpdateName'
};
// --------------------------------------------------------
// Type: IESEventFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESEventFactory = *opaque{
    // TODO: Method 'CreateESEvent'
};
// --------------------------------------------------------
// Type: IESLicenseRenewalResultEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESLicenseRenewalResultEvent = *opaque{
    // TODO: Method 'GetCallersId'
    // TODO: Method 'GetFileName'
    // TODO: Method 'IsRenewalSuccessful'
    // TODO: Method 'IsCheckEntitlementCallRequired'
    // TODO: Method 'GetDescrambledStatus'
    // TODO: Method 'GetRenewalResultCode'
    // TODO: Method 'GetCASFailureCode'
    // TODO: Method 'GetRenewalHResult'
    // TODO: Method 'GetEntitlementTokenLength'
    // TODO: Method 'GetEntitlementToken'
    // TODO: Method 'GetExpiryDate'
};
// --------------------------------------------------------
// Type: IESFileExpiryDateEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESFileExpiryDateEvent = *opaque{
    // TODO: Method 'GetTunerId'
    // TODO: Method 'GetExpiryDate'
    // TODO: Method 'GetFinalExpiryDate'
    // TODO: Method 'GetMaxRenewalCount'
    // TODO: Method 'IsEntitlementTokenPresent'
    // TODO: Method 'DoesExpireAfterFirstUse'
};
// --------------------------------------------------------
// Type: IESEventService
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESEventService = *opaque{
    // TODO: Method 'FireESEvent'
};
// --------------------------------------------------------
// Type: IESEventServiceConfiguration
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IESEventServiceConfiguration = *opaque{
    // TODO: Method 'SetParent'
    // TODO: Method 'RemoveParent'
    // TODO: Method 'SetOwner'
    // TODO: Method 'RemoveOwner'
    // TODO: Method 'SetGraph'
    // TODO: Method 'RemoveGraph'
};
// --------------------------------------------------------
// Type: IRegisterTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRegisterTuner = *opaque{
    // TODO: Method 'Register'
    // TODO: Method 'Unregister'
};
// --------------------------------------------------------
// Type: IBDAComparable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDAComparable = *opaque{
    // TODO: Method 'CompareExact'
    // TODO: Method 'CompareEquivalent'
    // TODO: Method 'HashExact'
    // TODO: Method 'HashExactIncremental'
    // TODO: Method 'HashEquivalent'
    // TODO: Method 'HashEquivalentIncremental'
};
// --------------------------------------------------------
// Type: IPersistTuneXml
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPersistTuneXml = *opaque{
    // TODO: Method 'InitNew'
    // TODO: Method 'Load'
    // TODO: Method 'Save'
};
// --------------------------------------------------------
// Type: IPersistTuneXmlUtility
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPersistTuneXmlUtility = *opaque{
    // TODO: Method 'Deserialize'
};
// --------------------------------------------------------
// Type: IPersistTuneXmlUtility2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPersistTuneXmlUtility2 = *opaque{
    // TODO: Method 'Serialize'
};
// --------------------------------------------------------
// Type: IBDACreateTuneRequestEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDACreateTuneRequestEx = *opaque{
    // TODO: Method 'CreateTuneRequestEx'
};
// --------------------------------------------------------
// Type: XDSToRat
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const XDSToRat = opaque {
};
// --------------------------------------------------------
// Type: EvalRat
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EvalRat = opaque {
};
// --------------------------------------------------------
// Type: ETFilter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ETFilter = opaque {
};
// --------------------------------------------------------
// Type: DTFilter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DTFilter = opaque {
};
// --------------------------------------------------------
// Type: XDSCodec
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const XDSCodec = opaque {
};
// --------------------------------------------------------
// Type: CXDSData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CXDSData = opaque {
};
// --------------------------------------------------------
// Type: EnTvRat_System
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTvRat_System = *opaque{
};
// --------------------------------------------------------
// Type: EnTvRat_GenericLevel
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTvRat_GenericLevel = *opaque{
};
// --------------------------------------------------------
// Type: EnTvRat_MPAA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTvRat_MPAA = *opaque{
};
// --------------------------------------------------------
// Type: EnTvRat_US_TV
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTvRat_US_TV = *opaque{
};
// --------------------------------------------------------
// Type: EnTvRat_CAE_TV
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTvRat_CAE_TV = *opaque{
};
// --------------------------------------------------------
// Type: EnTvRat_CAF_TV
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTvRat_CAF_TV = *opaque{
};
// --------------------------------------------------------
// Type: BfEnTvRat_GenericAttributes
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BfEnTvRat_GenericAttributes = *opaque{
};
// --------------------------------------------------------
// Type: BfEnTvRat_Attributes_US_TV
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BfEnTvRat_Attributes_US_TV = *opaque{
};
// --------------------------------------------------------
// Type: BfEnTvRat_Attributes_MPAA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BfEnTvRat_Attributes_MPAA = *opaque{
};
// --------------------------------------------------------
// Type: BfEnTvRat_Attributes_CAE_TV
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BfEnTvRat_Attributes_CAE_TV = *opaque{
};
// --------------------------------------------------------
// Type: BfEnTvRat_Attributes_CAF_TV
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BfEnTvRat_Attributes_CAF_TV = *opaque{
};
// --------------------------------------------------------
// Type: FormatNotSupportedEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FormatNotSupportedEvents = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_encdec_0000_0000_0001
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_encdec_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_encdec_0000_0000_0002
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_encdec_0000_0000_0002 = *opaque{
};
// --------------------------------------------------------
// Type: ProtType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ProtType = *opaque{
};
// --------------------------------------------------------
// Type: EncDecEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EncDecEvents = *opaque{
};
// --------------------------------------------------------
// Type: CPRecordingStatus
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CPRecordingStatus = *opaque{
};
// --------------------------------------------------------
// Type: CPEventBitShift
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CPEventBitShift = *opaque{
};
// --------------------------------------------------------
// Type: CPEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CPEvents = *opaque{
};
// --------------------------------------------------------
// Type: RevokedComponent
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RevokedComponent = *opaque{
};
// --------------------------------------------------------
// Type: EnTag_Mode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EnTag_Mode = *opaque{
};
// --------------------------------------------------------
// Type: COPPEventBlockReason
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COPPEventBlockReason = *opaque{
};
// --------------------------------------------------------
// Type: LicenseEventBlockReason
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LicenseEventBlockReason = *opaque{
};
// --------------------------------------------------------
// Type: DownResEventParam
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DownResEventParam = *opaque{
};
// --------------------------------------------------------
// Type: IETFilterConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IETFilterConfig = *opaque{
    // TODO: Method 'InitLicense'
    // TODO: Method 'GetSecureChannelObject'
};
// --------------------------------------------------------
// Type: IDTFilterConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDTFilterConfig = *opaque{
    // TODO: Method 'GetSecureChannelObject'
};
// --------------------------------------------------------
// Type: IXDSCodecConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXDSCodecConfig = *opaque{
    // TODO: Method 'GetSecureChannelObject'
    // TODO: Method 'SetPauseBufferTime'
};
// --------------------------------------------------------
// Type: IDTFilterLicenseRenewal
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDTFilterLicenseRenewal = *opaque{
    // TODO: Method 'GetLicenseRenewalData'
};
// --------------------------------------------------------
// Type: IPTFilterLicenseRenewal
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPTFilterLicenseRenewal = *opaque{
    // TODO: Method 'RenewLicenses'
    // TODO: Method 'CancelLicenseRenewal'
};
// --------------------------------------------------------
// Type: IMceBurnerControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMceBurnerControl = *opaque{
    // TODO: Method 'GetBurnerNoDecryption'
};
// --------------------------------------------------------
// Type: IETFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IETFilter = *opaque{
    // TODO: Method 'get_EvalRatObjOK'
    // TODO: Method 'GetCurrRating'
    // TODO: Method 'GetCurrLicenseExpDate'
    // TODO: Method 'GetLastErrorCode'
    // TODO: Method 'SetRecordingOn'
};
// --------------------------------------------------------
// Type: IETFilterEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IETFilterEvents = *opaque{
};
// --------------------------------------------------------
// Type: IDTFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDTFilter = *opaque{
    // TODO: Method 'get_EvalRatObjOK'
    // TODO: Method 'GetCurrRating'
    // TODO: Method 'get_BlockedRatingAttributes'
    // TODO: Method 'put_BlockedRatingAttributes'
    // TODO: Method 'get_BlockUnRated'
    // TODO: Method 'put_BlockUnRated'
    // TODO: Method 'get_BlockUnRatedDelay'
    // TODO: Method 'put_BlockUnRatedDelay'
};
// --------------------------------------------------------
// Type: IDTFilter2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDTFilter2 = *opaque{
    // TODO: Method 'get_ChallengeUrl'
    // TODO: Method 'GetCurrLicenseExpDate'
    // TODO: Method 'GetLastErrorCode'
};
// --------------------------------------------------------
// Type: IDTFilter3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDTFilter3 = *opaque{
    // TODO: Method 'GetProtectionType'
    // TODO: Method 'LicenseHasExpirationDate'
    // TODO: Method 'SetRights'
};
// --------------------------------------------------------
// Type: IDTFilterEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDTFilterEvents = *opaque{
};
// --------------------------------------------------------
// Type: IXDSCodec
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXDSCodec = *opaque{
    // TODO: Method 'get_XDSToRatObjOK'
    // TODO: Method 'put_CCSubstreamService'
    // TODO: Method 'get_CCSubstreamService'
    // TODO: Method 'GetContentAdvisoryRating'
    // TODO: Method 'GetXDSPacket'
    // TODO: Method 'GetCurrLicenseExpDate'
    // TODO: Method 'GetLastErrorCode'
};
// --------------------------------------------------------
// Type: IXDSCodecEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXDSCodecEvents = *opaque{
};
// --------------------------------------------------------
// Type: IXDSToRat
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXDSToRat = *opaque{
    // TODO: Method 'Init'
    // TODO: Method 'ParseXDSBytePair'
};
// --------------------------------------------------------
// Type: IEvalRat
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEvalRat = *opaque{
    // TODO: Method 'get_BlockedRatingAttributes'
    // TODO: Method 'put_BlockedRatingAttributes'
    // TODO: Method 'get_BlockUnRated'
    // TODO: Method 'put_BlockUnRated'
    // TODO: Method 'MostRestrictiveRating'
    // TODO: Method 'TestRating'
};
// --------------------------------------------------------
// Type: SegDispidList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SegDispidList = *opaque{
};
// --------------------------------------------------------
// Type: SegEventidList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SegEventidList = *opaque{
};
// --------------------------------------------------------
// Type: PositionModeList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PositionModeList = *opaque{
};
// --------------------------------------------------------
// Type: RecordingType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RecordingType = *opaque{
};
// --------------------------------------------------------
// Type: MSVidCCService
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MSVidCCService = *opaque{
};
// --------------------------------------------------------
// Type: MSVidSinkStreams
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MSVidSinkStreams = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidRect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidRect = *opaque{
    // TODO: Method 'get_Top'
    // TODO: Method 'put_Top'
    // TODO: Method 'get_Left'
    // TODO: Method 'put_Left'
    // TODO: Method 'get_Width'
    // TODO: Method 'put_Width'
    // TODO: Method 'get_Height'
    // TODO: Method 'put_Height'
    // TODO: Method 'get_HWnd'
    // TODO: Method 'put_HWnd'
    // TODO: Method 'put_Rect'
};
// --------------------------------------------------------
// Type: IMSVidGraphSegmentContainer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidGraphSegmentContainer = *opaque{
    // TODO: Method 'get_Graph'
    // TODO: Method 'get_Input'
    // TODO: Method 'get_Outputs'
    // TODO: Method 'get_VideoRenderer'
    // TODO: Method 'get_AudioRenderer'
    // TODO: Method 'get_Features'
    // TODO: Method 'get_Composites'
    // TODO: Method 'get_ParentContainer'
    // TODO: Method 'Decompose'
    // TODO: Method 'IsWindowless'
    // TODO: Method 'GetFocus'
};
// --------------------------------------------------------
// Type: MSVidSegmentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MSVidSegmentType = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidGraphSegment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidGraphSegment = *opaque{
    // TODO: Method 'get_Init'
    // TODO: Method 'put_Init'
    // TODO: Method 'EnumFilters'
    // TODO: Method 'get_Container'
    // TODO: Method 'put_Container'
    // TODO: Method 'get_Type'
    // TODO: Method 'get_Category'
    // TODO: Method 'Build'
    // TODO: Method 'PostBuild'
    // TODO: Method 'PreRun'
    // TODO: Method 'PostRun'
    // TODO: Method 'PreStop'
    // TODO: Method 'PostStop'
    // TODO: Method 'OnEventNotify'
    // TODO: Method 'Decompose'
};
// --------------------------------------------------------
// Type: MSVidCtlButtonstate
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MSVidCtlButtonstate = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidGraphSegmentUserInput
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidGraphSegmentUserInput = *opaque{
    // TODO: Method 'Click'
    // TODO: Method 'DblClick'
    // TODO: Method 'KeyDown'
    // TODO: Method 'KeyPress'
    // TODO: Method 'KeyUp'
    // TODO: Method 'MouseDown'
    // TODO: Method 'MouseMove'
    // TODO: Method 'MouseUp'
};
// --------------------------------------------------------
// Type: IMSVidCompositionSegment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidCompositionSegment = *opaque{
    // TODO: Method 'Compose'
    // TODO: Method 'get_Up'
    // TODO: Method 'get_Down'
};
// --------------------------------------------------------
// Type: IEnumMSVidGraphSegment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumMSVidGraphSegment = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IMSVidVRGraphSegment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVRGraphSegment = *opaque{
    // TODO: Method 'put__VMRendererMode'
    // TODO: Method 'put_Owner'
    // TODO: Method 'get_Owner'
    // TODO: Method 'get_UseOverlay'
    // TODO: Method 'put_UseOverlay'
    // TODO: Method 'get_Visible'
    // TODO: Method 'put_Visible'
    // TODO: Method 'get_ColorKey'
    // TODO: Method 'put_ColorKey'
    // TODO: Method 'get_Source'
    // TODO: Method 'put_Source'
    // TODO: Method 'get_Destination'
    // TODO: Method 'put_Destination'
    // TODO: Method 'get_NativeSize'
    // TODO: Method 'get_BorderColor'
    // TODO: Method 'put_BorderColor'
    // TODO: Method 'get_MaintainAspectRatio'
    // TODO: Method 'put_MaintainAspectRatio'
    // TODO: Method 'Refresh'
    // TODO: Method 'DisplayChange'
    // TODO: Method 'RePaint'
};
// --------------------------------------------------------
// Type: IMSVidDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidDevice = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Status'
    // TODO: Method 'put_Power'
    // TODO: Method 'get_Power'
    // TODO: Method 'get_Category'
    // TODO: Method 'get_ClassID'
    // TODO: Method 'get__Category'
    // TODO: Method 'get__ClassID'
    // TODO: Method 'IsEqualDevice'
};
// --------------------------------------------------------
// Type: IMSVidDevice2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidDevice2 = *opaque{
    // TODO: Method 'get_DevicePath'
};
// --------------------------------------------------------
// Type: IMSVidInputDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidInputDevice = *opaque{
    // TODO: Method 'IsViewable'
    // TODO: Method 'View'
};
// --------------------------------------------------------
// Type: IMSVidDeviceEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidDeviceEvent = *opaque{
    // TODO: Method 'StateChange'
};
// --------------------------------------------------------
// Type: IMSVidInputDeviceEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidInputDeviceEvent = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidVideoInputDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVideoInputDevice = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidPlayback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidPlayback = *opaque{
    // TODO: Method 'get_EnableResetOnStop'
    // TODO: Method 'put_EnableResetOnStop'
    // TODO: Method 'Run'
    // TODO: Method 'Pause'
    // TODO: Method 'Stop'
    // TODO: Method 'get_CanStep'
    // TODO: Method 'Step'
    // TODO: Method 'put_Rate'
    // TODO: Method 'get_Rate'
    // TODO: Method 'put_CurrentPosition'
    // TODO: Method 'get_CurrentPosition'
    // TODO: Method 'put_PositionMode'
    // TODO: Method 'get_PositionMode'
    // TODO: Method 'get_Length'
};
// --------------------------------------------------------
// Type: IMSVidPlaybackEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidPlaybackEvent = *opaque{
    // TODO: Method 'EndOfMedia'
};
// --------------------------------------------------------
// Type: IMSVidTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidTuner = *opaque{
    // TODO: Method 'get_Tune'
    // TODO: Method 'put_Tune'
    // TODO: Method 'get_TuningSpace'
    // TODO: Method 'put_TuningSpace'
};
// --------------------------------------------------------
// Type: IMSVidTunerEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidTunerEvent = *opaque{
    // TODO: Method 'TuneChanged'
};
// --------------------------------------------------------
// Type: IMSVidAnalogTuner
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAnalogTuner = *opaque{
    // TODO: Method 'get_Channel'
    // TODO: Method 'put_Channel'
    // TODO: Method 'get_VideoFrequency'
    // TODO: Method 'get_AudioFrequency'
    // TODO: Method 'get_CountryCode'
    // TODO: Method 'put_CountryCode'
    // TODO: Method 'get_SAP'
    // TODO: Method 'put_SAP'
    // TODO: Method 'ChannelAvailable'
};
// --------------------------------------------------------
// Type: IMSVidAnalogTuner2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAnalogTuner2 = *opaque{
    // TODO: Method 'get_TVFormats'
    // TODO: Method 'get_TunerModes'
    // TODO: Method 'get_NumAuxInputs'
};
// --------------------------------------------------------
// Type: IMSVidAnalogTunerEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAnalogTunerEvent = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidFilePlayback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidFilePlayback = *opaque{
    // TODO: Method 'get_FileName'
    // TODO: Method 'put_FileName'
};
// --------------------------------------------------------
// Type: IMSVidFilePlayback2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidFilePlayback2 = *opaque{
    // TODO: Method 'put__SourceFilter'
    // TODO: Method 'put___SourceFilter'
};
// --------------------------------------------------------
// Type: IMSVidFilePlaybackEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidFilePlaybackEvent = *opaque{
};
// --------------------------------------------------------
// Type: DVDMenuIDConstants
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVDMenuIDConstants = *opaque{
};
// --------------------------------------------------------
// Type: DVDFilterState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVDFilterState = *opaque{
};
// --------------------------------------------------------
// Type: DVDTextStringType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVDTextStringType = *opaque{
};
// --------------------------------------------------------
// Type: DVDSPExt
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DVDSPExt = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidWebDVD
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidWebDVD = *opaque{
    // TODO: Method 'OnDVDEvent'
    // TODO: Method 'PlayTitle'
    // TODO: Method 'PlayChapterInTitle'
    // TODO: Method 'PlayChapter'
    // TODO: Method 'PlayChaptersAutoStop'
    // TODO: Method 'PlayAtTime'
    // TODO: Method 'PlayAtTimeInTitle'
    // TODO: Method 'PlayPeriodInTitleAutoStop'
    // TODO: Method 'ReplayChapter'
    // TODO: Method 'PlayPrevChapter'
    // TODO: Method 'PlayNextChapter'
    // TODO: Method 'StillOff'
    // TODO: Method 'get_AudioLanguage'
    // TODO: Method 'ShowMenu'
    // TODO: Method 'Resume'
    // TODO: Method 'ReturnFromSubmenu'
    // TODO: Method 'get_ButtonsAvailable'
    // TODO: Method 'get_CurrentButton'
    // TODO: Method 'SelectAndActivateButton'
    // TODO: Method 'ActivateButton'
    // TODO: Method 'SelectRightButton'
    // TODO: Method 'SelectLeftButton'
    // TODO: Method 'SelectLowerButton'
    // TODO: Method 'SelectUpperButton'
    // TODO: Method 'ActivateAtPosition'
    // TODO: Method 'SelectAtPosition'
    // TODO: Method 'get_ButtonAtPosition'
    // TODO: Method 'get_NumberOfChapters'
    // TODO: Method 'get_TotalTitleTime'
    // TODO: Method 'get_TitlesAvailable'
    // TODO: Method 'get_VolumesAvailable'
    // TODO: Method 'get_CurrentVolume'
    // TODO: Method 'get_CurrentDiscSide'
    // TODO: Method 'get_CurrentDomain'
    // TODO: Method 'get_CurrentChapter'
    // TODO: Method 'get_CurrentTitle'
    // TODO: Method 'get_CurrentTime'
    // TODO: Method 'DVDTimeCode2bstr'
    // TODO: Method 'get_DVDDirectory'
    // TODO: Method 'put_DVDDirectory'
    // TODO: Method 'IsSubpictureStreamEnabled'
    // TODO: Method 'IsAudioStreamEnabled'
    // TODO: Method 'get_CurrentSubpictureStream'
    // TODO: Method 'put_CurrentSubpictureStream'
    // TODO: Method 'get_SubpictureLanguage'
    // TODO: Method 'get_CurrentAudioStream'
    // TODO: Method 'put_CurrentAudioStream'
    // TODO: Method 'get_AudioStreamsAvailable'
    // TODO: Method 'get_AnglesAvailable'
    // TODO: Method 'get_CurrentAngle'
    // TODO: Method 'put_CurrentAngle'
    // TODO: Method 'get_SubpictureStreamsAvailable'
    // TODO: Method 'get_SubpictureOn'
    // TODO: Method 'put_SubpictureOn'
    // TODO: Method 'get_DVDUniqueID'
    // TODO: Method 'AcceptParentalLevelChange'
    // TODO: Method 'NotifyParentalLevelChange'
    // TODO: Method 'SelectParentalCountry'
    // TODO: Method 'SelectParentalLevel'
    // TODO: Method 'get_TitleParentalLevels'
    // TODO: Method 'get_PlayerParentalCountry'
    // TODO: Method 'get_PlayerParentalLevel'
    // TODO: Method 'Eject'
    // TODO: Method 'UOPValid'
    // TODO: Method 'get_SPRM'
    // TODO: Method 'get_GPRM'
    // TODO: Method 'put_GPRM'
    // TODO: Method 'get_DVDTextStringType'
    // TODO: Method 'get_DVDTextString'
    // TODO: Method 'get_DVDTextNumberOfStrings'
    // TODO: Method 'get_DVDTextNumberOfLanguages'
    // TODO: Method 'get_DVDTextLanguageLCID'
    // TODO: Method 'RegionChange'
    // TODO: Method 'get_DVDAdm'
    // TODO: Method 'DeleteBookmark'
    // TODO: Method 'RestoreBookmark'
    // TODO: Method 'SaveBookmark'
    // TODO: Method 'SelectDefaultAudioLanguage'
    // TODO: Method 'SelectDefaultSubpictureLanguage'
    // TODO: Method 'get_PreferredSubpictureStream'
    // TODO: Method 'get_DefaultMenuLanguage'
    // TODO: Method 'put_DefaultMenuLanguage'
    // TODO: Method 'get_DefaultSubpictureLanguage'
    // TODO: Method 'get_DefaultAudioLanguage'
    // TODO: Method 'get_DefaultSubpictureLanguageExt'
    // TODO: Method 'get_DefaultAudioLanguageExt'
    // TODO: Method 'get_LanguageFromLCID'
    // TODO: Method 'get_KaraokeAudioPresentationMode'
    // TODO: Method 'put_KaraokeAudioPresentationMode'
    // TODO: Method 'get_KaraokeChannelContent'
    // TODO: Method 'get_KaraokeChannelAssignment'
    // TODO: Method 'RestorePreferredSettings'
    // TODO: Method 'get_ButtonRect'
    // TODO: Method 'get_DVDScreenInMouseCoordinates'
    // TODO: Method 'put_DVDScreenInMouseCoordinates'
};
// --------------------------------------------------------
// Type: IMSVidWebDVD2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidWebDVD2 = *opaque{
    // TODO: Method 'get_Bookmark'
    // TODO: Method 'put_Bookmark'
};
// --------------------------------------------------------
// Type: IMSVidWebDVDEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidWebDVDEvent = *opaque{
    // TODO: Method 'DVDNotify'
    // TODO: Method 'PlayForwards'
    // TODO: Method 'PlayBackwards'
    // TODO: Method 'ShowMenu'
    // TODO: Method 'Resume'
    // TODO: Method 'SelectOrActivateButton'
    // TODO: Method 'StillOff'
    // TODO: Method 'PauseOn'
    // TODO: Method 'ChangeCurrentAudioStream'
    // TODO: Method 'ChangeCurrentSubpictureStream'
    // TODO: Method 'ChangeCurrentAngle'
    // TODO: Method 'PlayAtTimeInTitle'
    // TODO: Method 'PlayAtTime'
    // TODO: Method 'PlayChapterInTitle'
    // TODO: Method 'PlayChapter'
    // TODO: Method 'ReplayChapter'
    // TODO: Method 'PlayNextChapter'
    // TODO: Method 'Stop'
    // TODO: Method 'ReturnFromSubmenu'
    // TODO: Method 'PlayTitle'
    // TODO: Method 'PlayPrevChapter'
    // TODO: Method 'ChangeKaraokePresMode'
    // TODO: Method 'ChangeVideoPresMode'
};
// --------------------------------------------------------
// Type: IMSVidWebDVDAdm
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidWebDVDAdm = *opaque{
    // TODO: Method 'ChangePassword'
    // TODO: Method 'SaveParentalLevel'
    // TODO: Method 'SaveParentalCountry'
    // TODO: Method 'ConfirmPassword'
    // TODO: Method 'GetParentalLevel'
    // TODO: Method 'GetParentalCountry'
    // TODO: Method 'get_DefaultAudioLCID'
    // TODO: Method 'put_DefaultAudioLCID'
    // TODO: Method 'get_DefaultSubpictureLCID'
    // TODO: Method 'put_DefaultSubpictureLCID'
    // TODO: Method 'get_DefaultMenuLCID'
    // TODO: Method 'put_DefaultMenuLCID'
    // TODO: Method 'get_BookmarkOnStop'
    // TODO: Method 'put_BookmarkOnStop'
};
// --------------------------------------------------------
// Type: IMSVidOutputDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidOutputDevice = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidOutputDeviceEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidOutputDeviceEvent = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidFeature
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidFeature = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidFeatureEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidFeatureEvent = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidEncoder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidEncoder = *opaque{
    // TODO: Method 'get_VideoEncoderInterface'
    // TODO: Method 'get_AudioEncoderInterface'
};
// --------------------------------------------------------
// Type: IMSVidClosedCaptioning
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidClosedCaptioning = *opaque{
    // TODO: Method 'get_Enable'
    // TODO: Method 'put_Enable'
};
// --------------------------------------------------------
// Type: IMSVidClosedCaptioning2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidClosedCaptioning2 = *opaque{
    // TODO: Method 'get_Service'
    // TODO: Method 'put_Service'
};
// --------------------------------------------------------
// Type: IMSVidClosedCaptioning3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidClosedCaptioning3 = *opaque{
    // TODO: Method 'get_TeleTextFilter'
};
// --------------------------------------------------------
// Type: IMSVidXDS
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidXDS = *opaque{
    // TODO: Method 'get_ChannelChangeInterface'
};
// --------------------------------------------------------
// Type: IMSVidXDSEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidXDSEvent = *opaque{
    // TODO: Method 'RatingChange'
};
// --------------------------------------------------------
// Type: IMSVidDataServices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidDataServices = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidDataServicesEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidDataServicesEvent = *opaque{
};
// --------------------------------------------------------
// Type: SourceSizeList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SourceSizeList = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidVideoRenderer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVideoRenderer = *opaque{
    // TODO: Method 'get_CustomCompositorClass'
    // TODO: Method 'put_CustomCompositorClass'
    // TODO: Method 'get__CustomCompositorClass'
    // TODO: Method 'put__CustomCompositorClass'
    // TODO: Method 'get__CustomCompositor'
    // TODO: Method 'put__CustomCompositor'
    // TODO: Method 'get_MixerBitmap'
    // TODO: Method 'get__MixerBitmap'
    // TODO: Method 'put_MixerBitmap'
    // TODO: Method 'put__MixerBitmap'
    // TODO: Method 'get_MixerBitmapPositionRect'
    // TODO: Method 'put_MixerBitmapPositionRect'
    // TODO: Method 'get_MixerBitmapOpacity'
    // TODO: Method 'put_MixerBitmapOpacity'
    // TODO: Method 'SetupMixerBitmap'
    // TODO: Method 'get_SourceSize'
    // TODO: Method 'put_SourceSize'
    // TODO: Method 'get_OverScan'
    // TODO: Method 'put_OverScan'
    // TODO: Method 'get_AvailableSourceRect'
    // TODO: Method 'get_MaxVidRect'
    // TODO: Method 'get_MinVidRect'
    // TODO: Method 'get_ClippedSourceRect'
    // TODO: Method 'put_ClippedSourceRect'
    // TODO: Method 'get_UsingOverlay'
    // TODO: Method 'put_UsingOverlay'
    // TODO: Method 'Capture'
    // TODO: Method 'get_FramesPerSecond'
    // TODO: Method 'get_DecimateInput'
    // TODO: Method 'put_DecimateInput'
};
// --------------------------------------------------------
// Type: IMSVidVideoRendererEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVideoRendererEvent = *opaque{
    // TODO: Method 'OverlayUnavailable'
};
// --------------------------------------------------------
// Type: IMSVidGenericSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidGenericSink = *opaque{
    // TODO: Method 'SetSinkFilter'
    // TODO: Method 'get_SinkStreams'
    // TODO: Method 'put_SinkStreams'
};
// --------------------------------------------------------
// Type: IMSVidGenericSink2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidGenericSink2 = *opaque{
    // TODO: Method 'AddFilter'
    // TODO: Method 'ResetFilterList'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferRecordingControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferRecordingControl = *opaque{
    // TODO: Method 'get_StartTime'
    // TODO: Method 'put_StartTime'
    // TODO: Method 'get_StopTime'
    // TODO: Method 'put_StopTime'
    // TODO: Method 'get_RecordingStopped'
    // TODO: Method 'get_RecordingStarted'
    // TODO: Method 'get_RecordingType'
    // TODO: Method 'get_RecordingAttribute'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSink = *opaque{
    // TODO: Method 'get_ContentRecorder'
    // TODO: Method 'get_ReferenceRecorder'
    // TODO: Method 'get_SinkName'
    // TODO: Method 'put_SinkName'
    // TODO: Method 'NameSetLock'
    // TODO: Method 'get_SBESink'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSink2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSink2 = *opaque{
    // TODO: Method 'UnlockProfile'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSink3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSink3 = *opaque{
    // TODO: Method 'SetMinSeek'
    // TODO: Method 'get_AudioCounter'
    // TODO: Method 'get_VideoCounter'
    // TODO: Method 'get_CCCounter'
    // TODO: Method 'get_WSTCounter'
    // TODO: Method 'put_AudioAnalysisFilter'
    // TODO: Method 'get_AudioAnalysisFilter'
    // TODO: Method 'put__AudioAnalysisFilter'
    // TODO: Method 'get__AudioAnalysisFilter'
    // TODO: Method 'put_VideoAnalysisFilter'
    // TODO: Method 'get_VideoAnalysisFilter'
    // TODO: Method 'put__VideoAnalysisFilter'
    // TODO: Method 'get__VideoAnalysisFilter'
    // TODO: Method 'put_DataAnalysisFilter'
    // TODO: Method 'get_DataAnalysisFilter'
    // TODO: Method 'put__DataAnalysisFilter'
    // TODO: Method 'get__DataAnalysisFilter'
    // TODO: Method 'get_LicenseErrorCode'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSinkEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSinkEvent = *opaque{
    // TODO: Method 'CertificateFailure'
    // TODO: Method 'CertificateSuccess'
    // TODO: Method 'WriteFailure'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSinkEvent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSinkEvent2 = *opaque{
    // TODO: Method 'EncryptionOn'
    // TODO: Method 'EncryptionOff'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSinkEvent3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSinkEvent3 = *opaque{
    // TODO: Method 'LicenseChange'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSinkEvent4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSinkEvent4 = *opaque{
    // TODO: Method 'WriteFailureClear'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSource = *opaque{
    // TODO: Method 'get_Start'
    // TODO: Method 'get_RecordingAttribute'
    // TODO: Method 'CurrentRatings'
    // TODO: Method 'MaxRatingsLevel'
    // TODO: Method 'put_BlockUnrated'
    // TODO: Method 'put_UnratedDelay'
    // TODO: Method 'get_SBESource'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSource2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSource2 = *opaque{
    // TODO: Method 'put_RateEx'
    // TODO: Method 'get_AudioCounter'
    // TODO: Method 'get_VideoCounter'
    // TODO: Method 'get_CCCounter'
    // TODO: Method 'get_WSTCounter'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSourceEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSourceEvent = *opaque{
    // TODO: Method 'CertificateFailure'
    // TODO: Method 'CertificateSuccess'
    // TODO: Method 'RatingsBlocked'
    // TODO: Method 'RatingsUnblocked'
    // TODO: Method 'RatingsChanged'
    // TODO: Method 'TimeHole'
    // TODO: Method 'StaleDataRead'
    // TODO: Method 'ContentBecomingStale'
    // TODO: Method 'StaleFileDeleted'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSourceEvent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSourceEvent2 = *opaque{
    // TODO: Method 'RateChange'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferSourceEvent3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferSourceEvent3 = *opaque{
    // TODO: Method 'BroadcastEvent'
    // TODO: Method 'BroadcastEventEx'
    // TODO: Method 'COPPBlocked'
    // TODO: Method 'COPPUnblocked'
    // TODO: Method 'ContentPrimarilyAudio'
};
// --------------------------------------------------------
// Type: IMSVidStreamBufferV2SourceEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidStreamBufferV2SourceEvent = *opaque{
    // TODO: Method 'RatingsChanged'
    // TODO: Method 'TimeHole'
    // TODO: Method 'StaleDataRead'
    // TODO: Method 'ContentBecomingStale'
    // TODO: Method 'StaleFileDeleted'
    // TODO: Method 'RateChange'
    // TODO: Method 'BroadcastEvent'
    // TODO: Method 'BroadcastEventEx'
    // TODO: Method 'ContentPrimarilyAudio'
};
// --------------------------------------------------------
// Type: IMSVidVideoRenderer2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVideoRenderer2 = *opaque{
    // TODO: Method 'get_Allocator'
    // TODO: Method 'get__Allocator'
    // TODO: Method 'get_Allocator_ID'
    // TODO: Method 'SetAllocator'
    // TODO: Method '_SetAllocator2'
    // TODO: Method 'put_SuppressEffects'
    // TODO: Method 'get_SuppressEffects'
};
// --------------------------------------------------------
// Type: IMSVidVideoRendererEvent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVideoRendererEvent2 = *opaque{
    // TODO: Method 'OverlayUnavailable'
};
// --------------------------------------------------------
// Type: IMSVidVMR9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVMR9 = *opaque{
    // TODO: Method 'get_Allocator_ID'
    // TODO: Method 'SetAllocator'
    // TODO: Method 'put_SuppressEffects'
    // TODO: Method 'get_SuppressEffects'
    // TODO: Method 'get_Allocator'
};
// --------------------------------------------------------
// Type: IMSVidEVR
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidEVR = *opaque{
    // TODO: Method 'get_Presenter'
    // TODO: Method 'put_Presenter'
    // TODO: Method 'put_SuppressEffects'
    // TODO: Method 'get_SuppressEffects'
};
// --------------------------------------------------------
// Type: IMSVidEVREvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidEVREvent = *opaque{
    // TODO: Method 'OnUserEvent'
};
// --------------------------------------------------------
// Type: IMSVidAudioRenderer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAudioRenderer = *opaque{
    // TODO: Method 'put_Volume'
    // TODO: Method 'get_Volume'
    // TODO: Method 'put_Balance'
    // TODO: Method 'get_Balance'
};
// --------------------------------------------------------
// Type: IMSVidAudioRendererEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAudioRendererEvent = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidAudioRendererEvent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAudioRendererEvent2 = *opaque{
    // TODO: Method 'AVDecAudioDualMono'
    // TODO: Method 'AVAudioSampleRate'
    // TODO: Method 'AVAudioChannelConfig'
    // TODO: Method 'AVAudioChannelCount'
    // TODO: Method 'AVDecCommonMeanBitRate'
    // TODO: Method 'AVDDSurroundMode'
    // TODO: Method 'AVDecCommonInputFormat'
    // TODO: Method 'AVDecCommonOutputFormat'
};
// --------------------------------------------------------
// Type: IMSVidInputDevices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidInputDevices = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: IMSVidOutputDevices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidOutputDevices = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: IMSVidVideoRendererDevices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidVideoRendererDevices = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: IMSVidAudioRendererDevices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidAudioRendererDevices = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: IMSVidFeatures
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidFeatures = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: MSVidAnalogTunerDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogTunerDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidBDATunerDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidBDATunerDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidFilePlaybackDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidFilePlaybackDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidWebDVD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidWebDVD = opaque {
};
// --------------------------------------------------------
// Type: MSVidWebDVDAdm
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidWebDVDAdm = opaque {
};
// --------------------------------------------------------
// Type: MSVidVideoRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidVideoRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidVMR9
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidVMR9 = opaque {
};
// --------------------------------------------------------
// Type: MSVidEVR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidEVR = opaque {
};
// --------------------------------------------------------
// Type: MSVidAudioRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAudioRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidGenericSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidGenericSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidStreamBufferSource
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidStreamBufferSource = opaque {
};
// --------------------------------------------------------
// Type: MSVidStreamBufferV2Source
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidStreamBufferV2Source = opaque {
};
// --------------------------------------------------------
// Type: MSVidEncoder
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidEncoder = opaque {
};
// --------------------------------------------------------
// Type: MSVidITVCapture
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidITVCapture = opaque {
};
// --------------------------------------------------------
// Type: MSVidITVPlayback
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidITVPlayback = opaque {
};
// --------------------------------------------------------
// Type: MSVidCCA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidCCA = opaque {
};
// --------------------------------------------------------
// Type: MSVidClosedCaptioning
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidClosedCaptioning = opaque {
};
// --------------------------------------------------------
// Type: MSVidClosedCaptioningSI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidClosedCaptioningSI = opaque {
};
// --------------------------------------------------------
// Type: MSVidDataServices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDataServices = opaque {
};
// --------------------------------------------------------
// Type: MSVidXDS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidXDS = opaque {
};
// --------------------------------------------------------
// Type: MSVidAnalogCaptureToDataServices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogCaptureToDataServices = opaque {
};
// --------------------------------------------------------
// Type: MSVidDataServicesToStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDataServicesToStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidDataServicesToXDS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDataServicesToXDS = opaque {
};
// --------------------------------------------------------
// Type: MSVidAnalogCaptureToXDS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogCaptureToXDS = opaque {
};
// --------------------------------------------------------
// Type: MSVidCtl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidCtl = opaque {
};
// --------------------------------------------------------
// Type: MSVidInputDevices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidInputDevices = opaque {
};
// --------------------------------------------------------
// Type: MSVidOutputDevices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidOutputDevices = opaque {
};
// --------------------------------------------------------
// Type: MSVidVideoRendererDevices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidVideoRendererDevices = opaque {
};
// --------------------------------------------------------
// Type: MSVidAudioRendererDevices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAudioRendererDevices = opaque {
};
// --------------------------------------------------------
// Type: MSVidFeatures
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidFeatures = opaque {
};
// --------------------------------------------------------
// Type: MSVidGenericComposite
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidGenericComposite = opaque {
};
// --------------------------------------------------------
// Type: MSVidAnalogCaptureToOverlayMixer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogCaptureToOverlayMixer = opaque {
};
// --------------------------------------------------------
// Type: MSVidWebDVDToVideoRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidWebDVDToVideoRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidWebDVDToAudioRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidWebDVDToAudioRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidMPEG2DecoderToClosedCaptioning
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidMPEG2DecoderToClosedCaptioning = opaque {
};
// --------------------------------------------------------
// Type: MSVidAnalogCaptureToStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogCaptureToStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidDigitalCaptureToStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDigitalCaptureToStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidITVToStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidITVToStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidCCAToStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidCCAToStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidEncoderToStreamBufferSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidEncoderToStreamBufferSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidFilePlaybackToVideoRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidFilePlaybackToVideoRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidFilePlaybackToAudioRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidFilePlaybackToAudioRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidAnalogTVToEncoder
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogTVToEncoder = opaque {
};
// --------------------------------------------------------
// Type: MSVidStreamBufferSourceToVideoRenderer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidStreamBufferSourceToVideoRenderer = opaque {
};
// --------------------------------------------------------
// Type: MSVidAnalogCaptureToCCA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidAnalogCaptureToCCA = opaque {
};
// --------------------------------------------------------
// Type: MSVidDigitalCaptureToCCA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDigitalCaptureToCCA = opaque {
};
// --------------------------------------------------------
// Type: MSVidDigitalCaptureToITV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDigitalCaptureToITV = opaque {
};
// --------------------------------------------------------
// Type: MSVidSBESourceToITV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidSBESourceToITV = opaque {
};
// --------------------------------------------------------
// Type: MSVidSBESourceToCC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidSBESourceToCC = opaque {
};
// --------------------------------------------------------
// Type: MSVidSBESourceToGenericSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidSBESourceToGenericSink = opaque {
};
// --------------------------------------------------------
// Type: MSVidCCToVMR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidCCToVMR = opaque {
};
// --------------------------------------------------------
// Type: MSVidCCToAR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidCCToAR = opaque {
};
// --------------------------------------------------------
// Type: MSEventBinder
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSEventBinder = opaque {
};
// --------------------------------------------------------
// Type: MSVidStreamBufferRecordingControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidStreamBufferRecordingControl = opaque {
};
// --------------------------------------------------------
// Type: MSVidRect
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidRect = opaque {
};
// --------------------------------------------------------
// Type: MSVidDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidDevice2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidDevice2 = opaque {
};
// --------------------------------------------------------
// Type: MSVidInputDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidInputDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidVideoInputDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidVideoInputDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidVideoPlaybackDevice
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidVideoPlaybackDevice = opaque {
};
// --------------------------------------------------------
// Type: MSVidFeature
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidFeature = opaque {
};
// --------------------------------------------------------
// Type: MSVidOutput
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSVidOutput = opaque {
};
// --------------------------------------------------------
// Type: MSViddispidList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MSViddispidList = *opaque{
};
// --------------------------------------------------------
// Type: DisplaySizeList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DisplaySizeList = *opaque{
};
// --------------------------------------------------------
// Type: MSVidCtlStateList
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MSVidCtlStateList = *opaque{
};
// --------------------------------------------------------
// Type: IMSVidCtl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSVidCtl = *opaque{
    // TODO: Method 'get_AutoSize'
    // TODO: Method 'put_AutoSize'
    // TODO: Method 'get_BackColor'
    // TODO: Method 'put_BackColor'
    // TODO: Method 'get_Enabled'
    // TODO: Method 'put_Enabled'
    // TODO: Method 'get_TabStop'
    // TODO: Method 'put_TabStop'
    // TODO: Method 'get_Window'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_DisplaySize'
    // TODO: Method 'put_DisplaySize'
    // TODO: Method 'get_MaintainAspectRatio'
    // TODO: Method 'put_MaintainAspectRatio'
    // TODO: Method 'get_ColorKey'
    // TODO: Method 'put_ColorKey'
    // TODO: Method 'get_InputsAvailable'
    // TODO: Method 'get_OutputsAvailable'
    // TODO: Method 'get__InputsAvailable'
    // TODO: Method 'get__OutputsAvailable'
    // TODO: Method 'get_VideoRenderersAvailable'
    // TODO: Method 'get_AudioRenderersAvailable'
    // TODO: Method 'get_FeaturesAvailable'
    // TODO: Method 'get_InputActive'
    // TODO: Method 'put_InputActive'
    // TODO: Method 'get_OutputsActive'
    // TODO: Method 'put_OutputsActive'
    // TODO: Method 'get_VideoRendererActive'
    // TODO: Method 'put_VideoRendererActive'
    // TODO: Method 'get_AudioRendererActive'
    // TODO: Method 'put_AudioRendererActive'
    // TODO: Method 'get_FeaturesActive'
    // TODO: Method 'put_FeaturesActive'
    // TODO: Method 'get_State'
    // TODO: Method 'View'
    // TODO: Method 'Build'
    // TODO: Method 'Pause'
    // TODO: Method 'Run'
    // TODO: Method 'Stop'
    // TODO: Method 'Decompose'
    // TODO: Method 'DisableVideo'
    // TODO: Method 'DisableAudio'
    // TODO: Method 'ViewNext'
};
// --------------------------------------------------------
// Type: IMSEventBinder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMSEventBinder = *opaque{
    // TODO: Method 'Bind'
    // TODO: Method 'Unbind'
};
// --------------------------------------------------------
// Type: _IMSVidCtlEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _IMSVidCtlEvents = *opaque{
};
// --------------------------------------------------------
// Type: IStreamBufferInitialize
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferInitialize = *opaque{
    // TODO: Method 'SetHKEY'
    // TODO: Method 'SetSIDs'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_sbe_0000_0001_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_sbe_0000_0001_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IStreamBufferSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferSink = *opaque{
    // TODO: Method 'LockProfile'
    // TODO: Method 'CreateRecorder'
    // TODO: Method 'IsProfileLocked'
};
// --------------------------------------------------------
// Type: IStreamBufferSink2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferSink2 = *opaque{
    // TODO: Method 'UnlockProfile'
};
// --------------------------------------------------------
// Type: IStreamBufferSink3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferSink3 = *opaque{
    // TODO: Method 'SetAvailableFilter'
};
// --------------------------------------------------------
// Type: IStreamBufferSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferSource = *opaque{
    // TODO: Method 'SetStreamSink'
};
// --------------------------------------------------------
// Type: IStreamBufferRecordControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferRecordControl = *opaque{
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
    // TODO: Method 'GetRecordingStatus'
};
// --------------------------------------------------------
// Type: IStreamBufferRecComp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferRecComp = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'Append'
    // TODO: Method 'AppendEx'
    // TODO: Method 'GetCurrentLength'
    // TODO: Method 'Close'
    // TODO: Method 'Cancel'
};
// --------------------------------------------------------
// Type: STREAMBUFFER_ATTR_DATATYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const STREAMBUFFER_ATTR_DATATYPE = *opaque{
};
// --------------------------------------------------------
// Type: IStreamBufferRecordingAttribute
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferRecordingAttribute = *opaque{
    // TODO: Method 'SetAttribute'
    // TODO: Method 'GetAttributeCount'
    // TODO: Method 'GetAttributeByName'
    // TODO: Method 'GetAttributeByIndex'
    // TODO: Method 'EnumAttributes'
};
// --------------------------------------------------------
// Type: STREAMBUFFER_ATTRIBUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const STREAMBUFFER_ATTRIBUTE = extern struct {
    pszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    StreamBufferAttributeType: Windows.Win32.DirectShow.STREAMBUFFER_ATTR_DATATYPE,
    pbAttribute: {"kind""Ptr","child":{"kind":"Byte"}},
    cbLength: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: IEnumStreamBufferRecordingAttrib
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumStreamBufferRecordingAttrib = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IStreamBufferConfigure
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferConfigure = *opaque{
    // TODO: Method 'SetDirectory'
    // TODO: Method 'GetDirectory'
    // TODO: Method 'SetBackingFileCount'
    // TODO: Method 'GetBackingFileCount'
    // TODO: Method 'SetBackingFileDuration'
    // TODO: Method 'GetBackingFileDuration'
};
// --------------------------------------------------------
// Type: IStreamBufferConfigure2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferConfigure2 = *opaque{
    // TODO: Method 'SetMultiplexedPacketSize'
    // TODO: Method 'GetMultiplexedPacketSize'
    // TODO: Method 'SetFFTransitionRates'
    // TODO: Method 'GetFFTransitionRates'
};
// --------------------------------------------------------
// Type: IStreamBufferConfigure3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferConfigure3 = *opaque{
    // TODO: Method 'SetStartRecConfig'
    // TODO: Method 'GetStartRecConfig'
    // TODO: Method 'SetNamespace'
    // TODO: Method 'GetNamespace'
};
// --------------------------------------------------------
// Type: IStreamBufferMediaSeeking
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferMediaSeeking = *opaque{
};
// --------------------------------------------------------
// Type: IStreamBufferMediaSeeking2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferMediaSeeking2 = *opaque{
    // TODO: Method 'SetRateEx'
};
// --------------------------------------------------------
// Type: SBE_PIN_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SBE_PIN_DATA = extern struct {
    cDataBytes: {"kind":"UInt64"},
    cSamplesProcessed: {"kind":"UInt64"},
    cDiscontinuities: {"kind":"UInt64"},
    cSyncPoints: {"kind":"UInt64"},
    cTimestamps: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IStreamBufferDataCounters
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStreamBufferDataCounters = *opaque{
    // TODO: Method 'GetData'
    // TODO: Method 'ResetData'
};
// --------------------------------------------------------
// Type: CROSSBAR_DEFAULT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CROSSBAR_DEFAULT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: SBE2_STREAM_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SBE2_STREAM_DESC = extern struct {
    Version: {"kind":"UInt32"},
    StreamId: {"kind":"UInt32"},
    Default: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DVR_STREAM_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVR_STREAM_DESC = extern struct {
    Version: {"kind":"UInt32"},
    StreamId: {"kind":"UInt32"},
    Default: Windows.Win32.SystemServices.BOOL,
    Creation: Windows.Win32.SystemServices.BOOL,
    Reserved: {"kind":"UInt32"},
    guidSubMediaType: Guid,
    guidFormatType: Guid,
    MediaType: Windows.Win32.DirectShow.AM_MEDIA_TYPE,
};
// --------------------------------------------------------
// Type: ISBE2GlobalEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2GlobalEvent = *opaque{
    // TODO: Method 'GetEvent'
};
// --------------------------------------------------------
// Type: ISBE2GlobalEvent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2GlobalEvent2 = *opaque{
    // TODO: Method 'GetEventEx'
};
// --------------------------------------------------------
// Type: ISBE2SpanningEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2SpanningEvent = *opaque{
    // TODO: Method 'GetEvent'
};
// --------------------------------------------------------
// Type: ISBE2Crossbar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2Crossbar = *opaque{
    // TODO: Method 'EnableDefaultMode'
    // TODO: Method 'GetInitialProfile'
    // TODO: Method 'SetOutputProfile'
    // TODO: Method 'EnumStreams'
};
// --------------------------------------------------------
// Type: ISBE2StreamMap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2StreamMap = *opaque{
    // TODO: Method 'MapStream'
    // TODO: Method 'UnmapStream'
    // TODO: Method 'EnumMappedStreams'
};
// --------------------------------------------------------
// Type: ISBE2EnumStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2EnumStream = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: ISBE2MediaTypeProfile
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2MediaTypeProfile = *opaque{
    // TODO: Method 'GetStreamCount'
    // TODO: Method 'GetStream'
    // TODO: Method 'AddStream'
    // TODO: Method 'DeleteStream'
};
// --------------------------------------------------------
// Type: ISBE2FileScan
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISBE2FileScan = *opaque{
    // TODO: Method 'RepairFile'
};
// --------------------------------------------------------
// Type: SectionList
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SectionList = opaque {
};
// --------------------------------------------------------
// Type: Mpeg2Stream
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Mpeg2Stream = opaque {
};
// --------------------------------------------------------
// Type: Mpeg2Data
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Mpeg2Data = opaque {
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mpeg2structs_0000_0000_0001
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_mpeg2structs_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mpeg2structs_0000_0000_0002
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_mpeg2structs_0000_0000_0002 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mpeg2structs_0000_0000_0003
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const __MIDL___MIDL_itf_mpeg2structs_0000_0000_0003 = extern struct {
    Bits: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: MPEG_CURRENT_NEXT_BIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MPEG_CURRENT_NEXT_BIT = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mpeg2structs_0000_0000_0005
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_mpeg2structs_0000_0000_0005 = *opaque{
};
// --------------------------------------------------------
// Type: SECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SECTION = extern struct {
    TableId: {"kind":"Byte"},
    Header: Windows.Win32.DirectShow.SECTION+_Header_e__Union,
    SectionData: {"kind":"Array","child": {"kind":"Byte"}},
    // --------------------------------------------------------
    // Type: _Header_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Header_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: LONG_SECTION
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const LONG_SECTION = *opaque{
    // --------------------------------------------------------
    // Type: _Header_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Header_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Version_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Version_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DSMCC_SECTION
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const DSMCC_SECTION = *opaque{
    // --------------------------------------------------------
    // Type: _Header_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Header_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Version_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Version_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MPEG_RQST_PACKET
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_RQST_PACKET = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_PACKET_LIST
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_PACKET_LIST = *opaque{
};
// --------------------------------------------------------
// Type: DSMCC_FILTER_OPTIONS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const DSMCC_FILTER_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: ATSC_FILTER_OPTIONS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const ATSC_FILTER_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: DVB_EIT_FILTER_OPTIONS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const DVB_EIT_FILTER_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: MPEG2_FILTER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG2_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: MPEG2_FILTER2
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG2_FILTER2 = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
        pub const _Anonymous_e__Struct = *opaque{
        };
    };
};
// --------------------------------------------------------
// Type: MPEG_STREAM_BUFFER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_STREAM_BUFFER = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MPEG_TIME = extern struct {
    Hours: {"kind":"Byte"},
    Minutes: {"kind":"Byte"},
    Seconds: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: MPEG_DATE
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_DATE = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_DATE_AND_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MPEG_DATE_AND_TIME = extern struct {
    D: Windows.Win32.DirectShow.MPEG_DATE,
    T: Windows.Win32.DirectShow.MPEG_TIME,
};
// --------------------------------------------------------
// Type: MPEG_CONTEXT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MPEG_CONTEXT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_BCS_DEMUX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_BCS_DEMUX = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_WINSOCK
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_WINSOCK = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_CONTEXT
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_CONTEXT = *opaque{
    // --------------------------------------------------------
    // Type: _U_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _U_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MPEG_REQUEST_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MPEG_REQUEST_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mpeg2structs_0000_0000_0033
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_mpeg2structs_0000_0000_0033 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mpeg2structs_0000_0000_0034
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const __MIDL___MIDL_itf_mpeg2structs_0000_0000_0034 = *opaque{
};
// --------------------------------------------------------
// Type: DSMCC_ELEMENT
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const DSMCC_ELEMENT = *opaque{
};
// --------------------------------------------------------
// Type: MPE_ELEMENT
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPE_ELEMENT = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_STREAM_FILTER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_STREAM_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: IMpeg2TableFilter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMpeg2TableFilter = *opaque{
    // TODO: Method 'AddPID'
    // TODO: Method 'AddTable'
    // TODO: Method 'AddExtension'
    // TODO: Method 'RemovePID'
    // TODO: Method 'RemoveTable'
    // TODO: Method 'RemoveExtension'
};
// --------------------------------------------------------
// Type: Mpeg2TableSampleHdr
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const Mpeg2TableSampleHdr = *opaque{
};
// --------------------------------------------------------
// Type: Mpeg2DataLib
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Mpeg2DataLib = opaque {
};
// --------------------------------------------------------
// Type: IMpeg2Data
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMpeg2Data = *opaque{
    // TODO: Method 'GetSection'
    // TODO: Method 'GetTable'
    // TODO: Method 'GetStreamOfSections'
};
// --------------------------------------------------------
// Type: ISectionList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISectionList = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'InitializeWithRawSections'
    // TODO: Method 'CancelPendingRequest'
    // TODO: Method 'GetNumberOfSections'
    // TODO: Method 'GetSectionData'
    // TODO: Method 'GetProgramIdentifier'
    // TODO: Method 'GetTableIdentifier'
};
// --------------------------------------------------------
// Type: IMpeg2Stream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMpeg2Stream = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'SupplyDataBuffer'
};
// --------------------------------------------------------
// Type: IGenericDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGenericDescriptor = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetBody'
};
// --------------------------------------------------------
// Type: IGenericDescriptor2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGenericDescriptor2 = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetLength'
};
// --------------------------------------------------------
// Type: __MIDL_IPAT_0001
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const __MIDL_IPAT_0001 = extern struct {
    wProgramNumber: {"kind":"UInt16"},
    wProgramMapPID: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: IPAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPAT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetTransportStreamId'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordProgramNumber'
    // TODO: Method 'GetRecordProgramMapPid'
    // TODO: Method 'FindRecordProgramMapPid'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
};
// --------------------------------------------------------
// Type: ICAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICAT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
};
// --------------------------------------------------------
// Type: IPMT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPMT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetProgramNumber'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetPcrPid'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordStreamType'
    // TODO: Method 'GetRecordElementaryPid'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'QueryServiceGatewayInfo'
    // TODO: Method 'QueryMPEInfo'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
};
// --------------------------------------------------------
// Type: ITSDT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITSDT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
};
// --------------------------------------------------------
// Type: IPSITables
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPSITables = *opaque{
    // TODO: Method 'GetTable'
};
// --------------------------------------------------------
// Type: IAtscPsipParser
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAtscPsipParser = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetPAT'
    // TODO: Method 'GetCAT'
    // TODO: Method 'GetPMT'
    // TODO: Method 'GetTSDT'
    // TODO: Method 'GetMGT'
    // TODO: Method 'GetVCT'
    // TODO: Method 'GetEIT'
    // TODO: Method 'GetETT'
    // TODO: Method 'GetSTT'
    // TODO: Method 'GetEAS'
};
// --------------------------------------------------------
// Type: IATSC_MGT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSC_MGT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetProtocolVersion'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordType'
    // TODO: Method 'GetRecordTypePid'
    // TODO: Method 'GetRecordVersionNumber'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
};
// --------------------------------------------------------
// Type: IATSC_VCT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSC_VCT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetTransportStreamId'
    // TODO: Method 'GetProtocolVersion'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordName'
    // TODO: Method 'GetRecordMajorChannelNumber'
    // TODO: Method 'GetRecordMinorChannelNumber'
    // TODO: Method 'GetRecordModulationMode'
    // TODO: Method 'GetRecordCarrierFrequency'
    // TODO: Method 'GetRecordTransportStreamId'
    // TODO: Method 'GetRecordProgramNumber'
    // TODO: Method 'GetRecordEtmLocation'
    // TODO: Method 'GetRecordIsAccessControlledBitSet'
    // TODO: Method 'GetRecordIsHiddenBitSet'
    // TODO: Method 'GetRecordIsPathSelectBitSet'
    // TODO: Method 'GetRecordIsOutOfBandBitSet'
    // TODO: Method 'GetRecordIsHideGuideBitSet'
    // TODO: Method 'GetRecordServiceType'
    // TODO: Method 'GetRecordSourceId'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
};
// --------------------------------------------------------
// Type: IATSC_EIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSC_EIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetSourceId'
    // TODO: Method 'GetProtocolVersion'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordEventId'
    // TODO: Method 'GetRecordStartTime'
    // TODO: Method 'GetRecordEtmLocation'
    // TODO: Method 'GetRecordDuration'
    // TODO: Method 'GetRecordTitleText'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
};
// --------------------------------------------------------
// Type: IATSC_ETT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSC_ETT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetProtocolVersion'
    // TODO: Method 'GetEtmId'
    // TODO: Method 'GetExtendedMessageText'
};
// --------------------------------------------------------
// Type: IATSC_STT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IATSC_STT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetProtocolVersion'
    // TODO: Method 'GetSystemTime'
    // TODO: Method 'GetGpsUtcOffset'
    // TODO: Method 'GetDaylightSavings'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
};
// --------------------------------------------------------
// Type: ISCTE_EAS
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISCTE_EAS = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetSequencyNumber'
    // TODO: Method 'GetProtocolVersion'
    // TODO: Method 'GetEASEventID'
    // TODO: Method 'GetOriginatorCode'
    // TODO: Method 'GetEASEventCodeLen'
    // TODO: Method 'GetEASEventCode'
    // TODO: Method 'GetRawNatureOfActivationTextLen'
    // TODO: Method 'GetRawNatureOfActivationText'
    // TODO: Method 'GetNatureOfActivationText'
    // TODO: Method 'GetTimeRemaining'
    // TODO: Method 'GetStartTime'
    // TODO: Method 'GetDuration'
    // TODO: Method 'GetAlertPriority'
    // TODO: Method 'GetDetailsOOBSourceID'
    // TODO: Method 'GetDetailsMajor'
    // TODO: Method 'GetDetailsMinor'
    // TODO: Method 'GetDetailsAudioOOBSourceID'
    // TODO: Method 'GetAlertText'
    // TODO: Method 'GetRawAlertTextLen'
    // TODO: Method 'GetRawAlertText'
    // TODO: Method 'GetLocationCount'
    // TODO: Method 'GetLocationCodes'
    // TODO: Method 'GetExceptionCount'
    // TODO: Method 'GetExceptionService'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
};
// --------------------------------------------------------
// Type: IAtscContentAdvisoryDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAtscContentAdvisoryDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetRatingRegionCount'
    // TODO: Method 'GetRecordRatingRegion'
    // TODO: Method 'GetRecordRatedDimensions'
    // TODO: Method 'GetRecordRatingDimension'
    // TODO: Method 'GetRecordRatingValue'
    // TODO: Method 'GetRecordRatingDescriptionText'
};
// --------------------------------------------------------
// Type: ICaptionServiceDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICaptionServiceDescriptor = *opaque{
    // TODO: Method 'GetNumberOfServices'
    // TODO: Method 'GetLanguageCode'
    // TODO: Method 'GetCaptionServiceNumber'
    // TODO: Method 'GetCCType'
    // TODO: Method 'GetEasyReader'
    // TODO: Method 'GetWideAspectRatio'
};
// --------------------------------------------------------
// Type: IServiceLocationDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IServiceLocationDescriptor = *opaque{
    // TODO: Method 'GetPCR_PID'
    // TODO: Method 'GetNumberOfElements'
    // TODO: Method 'GetElementStreamType'
    // TODO: Method 'GetElementPID'
    // TODO: Method 'GetElementLanguageCode'
};
// --------------------------------------------------------
// Type: IAttributeSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAttributeSet = *opaque{
    // TODO: Method 'SetAttrib'
};
// --------------------------------------------------------
// Type: IAttributeGet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAttributeGet = *opaque{
    // TODO: Method 'GetCount'
    // TODO: Method 'GetAttribIndexed'
    // TODO: Method 'GetAttrib'
};
// --------------------------------------------------------
// Type: UDCR_TAG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UDCR_TAG = extern struct {
    bVersion: {"kind":"Byte"},
    KID: {"kind":"Array","child": {"kind":"Byte"}},
    ullBaseCounter: {"kind":"UInt64"},
    ullBaseCounterRange: {"kind":"UInt64"},
    fScrambled: Windows.Win32.SystemServices.BOOL,
    bStreamMark: {"kind":"Byte"},
    dwReserved1: {"kind":"UInt32"},
    dwReserved2: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PIC_SEQ_SAMPLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PIC_SEQ_SAMPLE = extern struct {
    _bitfield: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SAMPLE_SEQ_OFFSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SAMPLE_SEQ_OFFSET = extern struct {
    _bitfield: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VA_VIDEO_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VA_VIDEO_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: VA_COLOR_PRIMARIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VA_COLOR_PRIMARIES = *opaque{
};
// --------------------------------------------------------
// Type: VA_TRANSFER_CHARACTERISTICS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VA_TRANSFER_CHARACTERISTICS = *opaque{
};
// --------------------------------------------------------
// Type: VA_MATRIX_COEFFICIENTS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VA_MATRIX_COEFFICIENTS = *opaque{
};
// --------------------------------------------------------
// Type: VA_OPTIONAL_VIDEO_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VA_OPTIONAL_VIDEO_PROPERTIES = extern struct {
    dwPictureHeight: {"kind":"UInt16"},
    dwPictureWidth: {"kind":"UInt16"},
    dwAspectRatioX: {"kind":"UInt16"},
    dwAspectRatioY: {"kind":"UInt16"},
    VAVideoFormat: Windows.Win32.DirectShow.VA_VIDEO_FORMAT,
    VAColorPrimaries: Windows.Win32.DirectShow.VA_COLOR_PRIMARIES,
    VATransferCharacteristics: Windows.Win32.DirectShow.VA_TRANSFER_CHARACTERISTICS,
    VAMatrixCoefficients: Windows.Win32.DirectShow.VA_MATRIX_COEFFICIENTS,
};
// --------------------------------------------------------
// Type: TRANSPORT_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORT_PROPERTIES = extern struct {
    PID: {"kind":"UInt32"},
    PCR: {"kind":"Int64"},
    Fields: Windows.Win32.DirectShow.TRANSPORT_PROPERTIES+_Fields_e__Union,
    // --------------------------------------------------------
    // Type: _Fields_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Fields_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Others
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Others = extern struct {
            _bitfield: {"kind":"Int64"},
        };
    };
};
// --------------------------------------------------------
// Type: PBDA_TAG_ATTRIBUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PBDA_TAG_ATTRIBUTE = extern struct {
    TableUUId: Guid,
    TableId: {"kind":"Byte"},
    VersionNo: {"kind":"UInt16"},
    TableDataSize: {"kind":"UInt32"},
    TableData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: CAPTURE_STREAMTIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CAPTURE_STREAMTIME = extern struct {
    StreamTime: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: DSHOW_STREAM_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DSHOW_STREAM_DESC = extern struct {
    VersionNo: {"kind":"UInt32"},
    StreamId: {"kind":"UInt32"},
    Default: Windows.Win32.SystemServices.BOOL,
    Creation: Windows.Win32.SystemServices.BOOL,
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SAMPLE_LIVE_STREAM_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SAMPLE_LIVE_STREAM_TIME = extern struct {
    qwStreamTime: {"kind":"UInt64"},
    qwLiveTime: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: TIFLoad
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const TIFLoad = opaque {
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_dvbsiparser_0000_0000_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_dvbsiparser_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IDvbSiParser
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbSiParser = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetPAT'
    // TODO: Method 'GetCAT'
    // TODO: Method 'GetPMT'
    // TODO: Method 'GetTSDT'
    // TODO: Method 'GetNIT'
    // TODO: Method 'GetSDT'
    // TODO: Method 'GetEIT'
    // TODO: Method 'GetBAT'
    // TODO: Method 'GetRST'
    // TODO: Method 'GetST'
    // TODO: Method 'GetTDT'
    // TODO: Method 'GetTOT'
    // TODO: Method 'GetDIT'
    // TODO: Method 'GetSIT'
};
// --------------------------------------------------------
// Type: IDvbSiParser2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbSiParser2 = *opaque{
    // TODO: Method 'GetEIT2'
};
// --------------------------------------------------------
// Type: IIsdbSiParser2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbSiParser2 = *opaque{
    // TODO: Method 'GetSDT'
    // TODO: Method 'GetBIT'
    // TODO: Method 'GetNBIT'
    // TODO: Method 'GetLDT'
    // TODO: Method 'GetSDTT'
    // TODO: Method 'GetCDT'
    // TODO: Method 'GetEMM'
};
// --------------------------------------------------------
// Type: IDVB_NIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_NIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetNetworkId'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordTransportStreamId'
    // TODO: Method 'GetRecordOriginalNetworkId'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IDVB_SDT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_SDT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetTransportStreamId'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordServiceId'
    // TODO: Method 'GetRecordEITScheduleFlag'
    // TODO: Method 'GetRecordEITPresentFollowingFlag'
    // TODO: Method 'GetRecordRunningStatus'
    // TODO: Method 'GetRecordFreeCAMode'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IISDB_SDT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_SDT = *opaque{
    // TODO: Method 'GetRecordEITUserDefinedFlags'
};
// --------------------------------------------------------
// Type: IDVB_EIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_EIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetServiceId'
    // TODO: Method 'GetTransportStreamId'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetSegmentLastSectionNumber'
    // TODO: Method 'GetLastTableId'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordEventId'
    // TODO: Method 'GetRecordStartTime'
    // TODO: Method 'GetRecordDuration'
    // TODO: Method 'GetRecordRunningStatus'
    // TODO: Method 'GetRecordFreeCAMode'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IDVB_EIT2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_EIT2 = *opaque{
    // TODO: Method 'GetSegmentInfo'
    // TODO: Method 'GetRecordSection'
};
// --------------------------------------------------------
// Type: IDVB_BAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_BAT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetBouquetId'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordTransportStreamId'
    // TODO: Method 'GetRecordOriginalNetworkId'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
};
// --------------------------------------------------------
// Type: IDVB_RST
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_RST = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordTransportStreamId'
    // TODO: Method 'GetRecordOriginalNetworkId'
    // TODO: Method 'GetRecordServiceId'
    // TODO: Method 'GetRecordEventId'
    // TODO: Method 'GetRecordRunningStatus'
};
// --------------------------------------------------------
// Type: IDVB_ST
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_ST = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetDataLength'
    // TODO: Method 'GetData'
};
// --------------------------------------------------------
// Type: IDVB_TDT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_TDT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetUTCTime'
};
// --------------------------------------------------------
// Type: IDVB_TOT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_TOT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetUTCTime'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
};
// --------------------------------------------------------
// Type: IDVB_DIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_DIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetTransitionFlag'
};
// --------------------------------------------------------
// Type: IDVB_SIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDVB_SIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordServiceId'
    // TODO: Method 'GetRecordRunningStatus'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'RegisterForNextTable'
    // TODO: Method 'GetNextTable'
    // TODO: Method 'RegisterForWhenCurrent'
    // TODO: Method 'ConvertNextToCurrent'
};
// --------------------------------------------------------
// Type: IISDB_BIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_BIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetBroadcastViewPropriety'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordBroadcasterId'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IISDB_NBIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_NBIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordInformationId'
    // TODO: Method 'GetRecordInformationType'
    // TODO: Method 'GetRecordDescriptionBodyLocation'
    // TODO: Method 'GetRecordMessageSectionNumber'
    // TODO: Method 'GetRecordUserDefined'
    // TODO: Method 'GetRecordNumberOfKeys'
    // TODO: Method 'GetRecordKeys'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IISDB_LDT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_LDT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetOriginalServiceId'
    // TODO: Method 'GetTransportStreamId'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordDescriptionId'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IISDB_SDTT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_SDTT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetTableIdExt'
    // TODO: Method 'GetTransportStreamId'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetServiceId'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordGroup'
    // TODO: Method 'GetRecordTargetVersion'
    // TODO: Method 'GetRecordNewVersion'
    // TODO: Method 'GetRecordDownloadLevel'
    // TODO: Method 'GetRecordVersionIndicator'
    // TODO: Method 'GetRecordScheduleTimeShiftInformation'
    // TODO: Method 'GetRecordCountOfSchedules'
    // TODO: Method 'GetRecordStartTimeByIndex'
    // TODO: Method 'GetRecordDurationByIndex'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IISDB_CDT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_CDT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetDownloadDataId'
    // TODO: Method 'GetSectionNumber'
    // TODO: Method 'GetOriginalNetworkId'
    // TODO: Method 'GetDataType'
    // TODO: Method 'GetCountOfTableDescriptors'
    // TODO: Method 'GetTableDescriptorByIndex'
    // TODO: Method 'GetTableDescriptorByTag'
    // TODO: Method 'GetSizeOfDataModule'
    // TODO: Method 'GetDataModule'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IISDB_EMM
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IISDB_EMM = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetTableIdExtension'
    // TODO: Method 'GetDataBytes'
    // TODO: Method 'GetSharedEmmMessage'
    // TODO: Method 'GetIndividualEmmMessage'
    // TODO: Method 'GetVersionHash'
};
// --------------------------------------------------------
// Type: IDvbServiceAttributeDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbServiceAttributeDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordServiceId'
    // TODO: Method 'GetRecordNumericSelectionFlag'
    // TODO: Method 'GetRecordVisibleServiceFlag'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_dvbsiparser_0000_0022_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_dvbsiparser_0000_0022_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IDvbContentIdentifierDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbContentIdentifierDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordCrid'
};
// --------------------------------------------------------
// Type: IDvbDefaultAuthorityDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbDefaultAuthorityDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetDefaultAuthority'
};
// --------------------------------------------------------
// Type: IDvbSatelliteDeliverySystemDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbSatelliteDeliverySystemDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetFrequency'
    // TODO: Method 'GetOrbitalPosition'
    // TODO: Method 'GetWestEastFlag'
    // TODO: Method 'GetPolarization'
    // TODO: Method 'GetModulation'
    // TODO: Method 'GetSymbolRate'
    // TODO: Method 'GetFECInner'
};
// --------------------------------------------------------
// Type: IDvbCableDeliverySystemDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbCableDeliverySystemDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetFrequency'
    // TODO: Method 'GetFECOuter'
    // TODO: Method 'GetModulation'
    // TODO: Method 'GetSymbolRate'
    // TODO: Method 'GetFECInner'
};
// --------------------------------------------------------
// Type: IDvbTerrestrialDeliverySystemDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbTerrestrialDeliverySystemDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCentreFrequency'
    // TODO: Method 'GetBandwidth'
    // TODO: Method 'GetConstellation'
    // TODO: Method 'GetHierarchyInformation'
    // TODO: Method 'GetCodeRateHPStream'
    // TODO: Method 'GetCodeRateLPStream'
    // TODO: Method 'GetGuardInterval'
    // TODO: Method 'GetTransmissionMode'
    // TODO: Method 'GetOtherFrequencyFlag'
};
// --------------------------------------------------------
// Type: IDvbTerrestrial2DeliverySystemDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbTerrestrial2DeliverySystemDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetTagExtension'
    // TODO: Method 'GetCentreFrequency'
    // TODO: Method 'GetPLPId'
    // TODO: Method 'GetT2SystemId'
    // TODO: Method 'GetMultipleInputMode'
    // TODO: Method 'GetBandwidth'
    // TODO: Method 'GetGuardInterval'
    // TODO: Method 'GetTransmissionMode'
    // TODO: Method 'GetCellId'
    // TODO: Method 'GetOtherFrequencyFlag'
    // TODO: Method 'GetTFSFlag'
};
// --------------------------------------------------------
// Type: IDvbFrequencyListDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbFrequencyListDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCodingType'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordCentreFrequency'
};
// --------------------------------------------------------
// Type: IDvbPrivateDataSpecifierDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbPrivateDataSpecifierDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetPrivateDataSpecifier'
};
// --------------------------------------------------------
// Type: IDvbLogicalChannelDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbLogicalChannelDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordServiceId'
    // TODO: Method 'GetRecordLogicalChannelNumber'
};
// --------------------------------------------------------
// Type: IDvbLogicalChannelDescriptor2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbLogicalChannelDescriptor2 = *opaque{
    // TODO: Method 'GetRecordLogicalChannelAndVisibility'
};
// --------------------------------------------------------
// Type: IDvbLogicalChannel2Descriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbLogicalChannel2Descriptor = *opaque{
    // TODO: Method 'GetCountOfLists'
    // TODO: Method 'GetListId'
    // TODO: Method 'GetListNameW'
    // TODO: Method 'GetListCountryCode'
    // TODO: Method 'GetListCountOfRecords'
    // TODO: Method 'GetListRecordServiceId'
    // TODO: Method 'GetListRecordLogicalChannelNumber'
    // TODO: Method 'GetListRecordLogicalChannelAndVisibility'
};
// --------------------------------------------------------
// Type: IDvbHDSimulcastLogicalChannelDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbHDSimulcastLogicalChannelDescriptor = *opaque{
};
// --------------------------------------------------------
// Type: IDvbDataBroadcastIDDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbDataBroadcastIDDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetDataBroadcastID'
    // TODO: Method 'GetIDSelectorBytes'
};
// --------------------------------------------------------
// Type: IDvbDataBroadcastDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbDataBroadcastDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetDataBroadcastID'
    // TODO: Method 'GetComponentTag'
    // TODO: Method 'GetSelectorLength'
    // TODO: Method 'GetSelectorBytes'
    // TODO: Method 'GetLangID'
    // TODO: Method 'GetTextLength'
    // TODO: Method 'GetText'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_dvbsiparser_0000_0036_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_dvbsiparser_0000_0036_0001 = *opaque{
};
// --------------------------------------------------------
// Type: IDvbLinkageDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbLinkageDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetTSId'
    // TODO: Method 'GetONId'
    // TODO: Method 'GetServiceId'
    // TODO: Method 'GetLinkageType'
    // TODO: Method 'GetPrivateDataLength'
    // TODO: Method 'GetPrivateData'
};
// --------------------------------------------------------
// Type: IDvbTeletextDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbTeletextDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordLangId'
    // TODO: Method 'GetRecordTeletextType'
    // TODO: Method 'GetRecordMagazineNumber'
    // TODO: Method 'GetRecordPageNumber'
};
// --------------------------------------------------------
// Type: IDvbSubtitlingDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbSubtitlingDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordLangId'
    // TODO: Method 'GetRecordSubtitlingType'
    // TODO: Method 'GetRecordCompositionPageID'
    // TODO: Method 'GetRecordAncillaryPageID'
};
// --------------------------------------------------------
// Type: IDvbServiceDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbServiceDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetServiceType'
    // TODO: Method 'GetServiceProviderName'
    // TODO: Method 'GetServiceProviderNameW'
    // TODO: Method 'GetServiceName'
    // TODO: Method 'GetProcessedServiceName'
    // TODO: Method 'GetServiceNameEmphasized'
};
// --------------------------------------------------------
// Type: IDvbServiceDescriptor2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbServiceDescriptor2 = *opaque{
    // TODO: Method 'GetServiceProviderNameW'
    // TODO: Method 'GetServiceNameW'
};
// --------------------------------------------------------
// Type: IDvbServiceListDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbServiceListDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordServiceId'
    // TODO: Method 'GetRecordServiceType'
};
// --------------------------------------------------------
// Type: IDvbMultilingualServiceNameDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbMultilingualServiceNameDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordLangId'
    // TODO: Method 'GetRecordServiceProviderNameW'
    // TODO: Method 'GetRecordServiceNameW'
};
// --------------------------------------------------------
// Type: IDvbNetworkNameDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbNetworkNameDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetNetworkName'
    // TODO: Method 'GetNetworkNameW'
};
// --------------------------------------------------------
// Type: IDvbShortEventDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbShortEventDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetLanguageCode'
    // TODO: Method 'GetEventNameW'
    // TODO: Method 'GetTextW'
};
// --------------------------------------------------------
// Type: IDvbExtendedEventDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbExtendedEventDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetDescriptorNumber'
    // TODO: Method 'GetLastDescriptorNumber'
    // TODO: Method 'GetLanguageCode'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordItemW'
    // TODO: Method 'GetConcatenatedItemW'
    // TODO: Method 'GetTextW'
    // TODO: Method 'GetConcatenatedTextW'
    // TODO: Method 'GetRecordItemRawBytes'
};
// --------------------------------------------------------
// Type: IDvbComponentDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbComponentDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetStreamContent'
    // TODO: Method 'GetComponentType'
    // TODO: Method 'GetComponentTag'
    // TODO: Method 'GetLanguageCode'
    // TODO: Method 'GetTextW'
};
// --------------------------------------------------------
// Type: IDvbContentDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbContentDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordContentNibbles'
    // TODO: Method 'GetRecordUserNibbles'
};
// --------------------------------------------------------
// Type: IDvbParentalRatingDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDvbParentalRatingDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordRating'
};
// --------------------------------------------------------
// Type: IIsdbTerrestrialDeliverySystemDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbTerrestrialDeliverySystemDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetAreaCode'
    // TODO: Method 'GetGuardInterval'
    // TODO: Method 'GetTransmissionMode'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordFrequency'
};
// --------------------------------------------------------
// Type: IIsdbTSInformationDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbTSInformationDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetRemoteControlKeyId'
    // TODO: Method 'GetTSNameW'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordTransmissionTypeInfo'
    // TODO: Method 'GetRecordNumberOfServices'
    // TODO: Method 'GetRecordServiceIdByIndex'
};
// --------------------------------------------------------
// Type: IIsdbDigitalCopyControlDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbDigitalCopyControlDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCopyControl'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordCopyControl'
};
// --------------------------------------------------------
// Type: IIsdbAudioComponentDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbAudioComponentDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetStreamContent'
    // TODO: Method 'GetComponentType'
    // TODO: Method 'GetComponentTag'
    // TODO: Method 'GetStreamType'
    // TODO: Method 'GetSimulcastGroupTag'
    // TODO: Method 'GetESMultiLingualFlag'
    // TODO: Method 'GetMainComponentFlag'
    // TODO: Method 'GetQualityIndicator'
    // TODO: Method 'GetSamplingRate'
    // TODO: Method 'GetLanguageCode'
    // TODO: Method 'GetLanguageCode2'
    // TODO: Method 'GetTextW'
};
// --------------------------------------------------------
// Type: IIsdbDataContentDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbDataContentDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetDataComponentId'
    // TODO: Method 'GetEntryComponent'
    // TODO: Method 'GetSelectorLength'
    // TODO: Method 'GetSelectorBytes'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordComponentRef'
    // TODO: Method 'GetLanguageCode'
    // TODO: Method 'GetTextW'
};
// --------------------------------------------------------
// Type: IIsdbCAContractInformationDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbCAContractInformationDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCASystemId'
    // TODO: Method 'GetCAUnitId'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordComponentTag'
    // TODO: Method 'GetContractVerificationInfoLength'
    // TODO: Method 'GetContractVerificationInfo'
    // TODO: Method 'GetFeeNameW'
};
// --------------------------------------------------------
// Type: IIsdbEventGroupDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbEventGroupDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetGroupType'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordEvent'
    // TODO: Method 'GetCountOfRefRecords'
    // TODO: Method 'GetRefRecordEvent'
};
// --------------------------------------------------------
// Type: IIsdbComponentGroupDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbComponentGroupDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetComponentGroupType'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordGroupId'
    // TODO: Method 'GetRecordNumberOfCAUnit'
    // TODO: Method 'GetRecordCAUnitCAUnitId'
    // TODO: Method 'GetRecordCAUnitNumberOfComponents'
    // TODO: Method 'GetRecordCAUnitComponentTag'
    // TODO: Method 'GetRecordTotalBitRate'
    // TODO: Method 'GetRecordTextW'
};
// --------------------------------------------------------
// Type: IIsdbSeriesDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbSeriesDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetSeriesId'
    // TODO: Method 'GetRepeatLabel'
    // TODO: Method 'GetProgramPattern'
    // TODO: Method 'GetExpireDate'
    // TODO: Method 'GetEpisodeNumber'
    // TODO: Method 'GetLastEpisodeNumber'
    // TODO: Method 'GetSeriesNameW'
};
// --------------------------------------------------------
// Type: IIsdbDownloadContentDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbDownloadContentDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetFlags'
    // TODO: Method 'GetComponentSize'
    // TODO: Method 'GetDownloadId'
    // TODO: Method 'GetTimeOutValueDII'
    // TODO: Method 'GetLeakRate'
    // TODO: Method 'GetComponentTag'
    // TODO: Method 'GetCompatiblityDescriptorLength'
    // TODO: Method 'GetCompatiblityDescriptor'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordModuleId'
    // TODO: Method 'GetRecordModuleSize'
    // TODO: Method 'GetRecordModuleInfoLength'
    // TODO: Method 'GetRecordModuleInfo'
    // TODO: Method 'GetTextLanguageCode'
    // TODO: Method 'GetTextW'
};
// --------------------------------------------------------
// Type: IIsdbLogoTransmissionDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbLogoTransmissionDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetLogoTransmissionType'
    // TODO: Method 'GetLogoId'
    // TODO: Method 'GetLogoVersion'
    // TODO: Method 'GetDownloadDataId'
    // TODO: Method 'GetLogoCharW'
};
// --------------------------------------------------------
// Type: IIsdbSIParameterDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbSIParameterDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetParameterVersion'
    // TODO: Method 'GetUpdateTime'
    // TODO: Method 'GetRecordNumberOfTable'
    // TODO: Method 'GetTableId'
    // TODO: Method 'GetTableDescriptionLength'
    // TODO: Method 'GetTableDescriptionBytes'
};
// --------------------------------------------------------
// Type: IIsdbEmergencyInformationDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbEmergencyInformationDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetServiceId'
    // TODO: Method 'GetStartEndFlag'
    // TODO: Method 'GetSignalLevel'
    // TODO: Method 'GetAreaCode'
};
// --------------------------------------------------------
// Type: IIsdbCADescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbCADescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCASystemId'
    // TODO: Method 'GetReservedBits'
    // TODO: Method 'GetCAPID'
    // TODO: Method 'GetPrivateDataBytes'
};
// --------------------------------------------------------
// Type: IIsdbCAServiceDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbCAServiceDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetCASystemId'
    // TODO: Method 'GetCABroadcasterGroupId'
    // TODO: Method 'GetMessageControl'
    // TODO: Method 'GetServiceIds'
};
// --------------------------------------------------------
// Type: IIsdbHierarchicalTransmissionDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IIsdbHierarchicalTransmissionDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetFutureUse1'
    // TODO: Method 'GetQualityLevel'
    // TODO: Method 'GetFutureUse2'
    // TODO: Method 'GetReferencePid'
};
// --------------------------------------------------------
// Type: IPBDASiParser
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPBDASiParser = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetEIT'
    // TODO: Method 'GetServices'
};
// --------------------------------------------------------
// Type: IPBDA_EIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPBDA_EIT = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetTableId'
    // TODO: Method 'GetVersionNumber'
    // TODO: Method 'GetServiceIdx'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordEventId'
    // TODO: Method 'GetRecordStartTime'
    // TODO: Method 'GetRecordDuration'
    // TODO: Method 'GetRecordCountOfDescriptors'
    // TODO: Method 'GetRecordDescriptorByIndex'
    // TODO: Method 'GetRecordDescriptorByTag'
};
// --------------------------------------------------------
// Type: IPBDA_Services
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPBDA_Services = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetCountOfRecords'
    // TODO: Method 'GetRecordByIndex'
};
// --------------------------------------------------------
// Type: IPBDAEntitlementDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPBDAEntitlementDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetToken'
};
// --------------------------------------------------------
// Type: IPBDAAttributesDescriptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPBDAAttributesDescriptor = *opaque{
    // TODO: Method 'GetTag'
    // TODO: Method 'GetLength'
    // TODO: Method 'GetAttributePayload'
};
// --------------------------------------------------------
// Type: IBDA_TIF_REGISTRATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IBDA_TIF_REGISTRATION = *opaque{
    // TODO: Method 'RegisterTIFEx'
    // TODO: Method 'UnregisterTIF'
};
// --------------------------------------------------------
// Type: IMPEG2_TIF_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMPEG2_TIF_CONTROL = *opaque{
    // TODO: Method 'RegisterTIF'
    // TODO: Method 'UnregisterTIF'
    // TODO: Method 'AddPIDs'
    // TODO: Method 'DeletePIDs'
    // TODO: Method 'GetPIDCount'
    // TODO: Method 'GetPIDs'
};
// --------------------------------------------------------
// Type: ITuneRequestInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuneRequestInfo = *opaque{
    // TODO: Method 'GetLocatorData'
    // TODO: Method 'GetComponentData'
    // TODO: Method 'CreateComponentList'
    // TODO: Method 'GetNextProgram'
    // TODO: Method 'GetPreviousProgram'
    // TODO: Method 'GetNextLocator'
    // TODO: Method 'GetPreviousLocator'
};
// --------------------------------------------------------
// Type: ITuneRequestInfoEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITuneRequestInfoEx = *opaque{
    // TODO: Method 'CreateComponentListEx'
};
// --------------------------------------------------------
// Type: ISIInbandEPGEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISIInbandEPGEvent = *opaque{
    // TODO: Method 'SIObjectEvent'
};
// --------------------------------------------------------
// Type: ISIInbandEPG
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISIInbandEPG = *opaque{
    // TODO: Method 'StartSIEPGScan'
    // TODO: Method 'StopSIEPGScan'
    // TODO: Method 'IsSIEPGScanRunning'
};
// --------------------------------------------------------
// Type: IGuideDataEvent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGuideDataEvent = *opaque{
    // TODO: Method 'GuideDataAcquired'
    // TODO: Method 'ProgramChanged'
    // TODO: Method 'ServiceChanged'
    // TODO: Method 'ScheduleEntryChanged'
    // TODO: Method 'ProgramDeleted'
    // TODO: Method 'ServiceDeleted'
    // TODO: Method 'ScheduleDeleted'
};
// --------------------------------------------------------
// Type: IGuideDataProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGuideDataProperty = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Language'
    // TODO: Method 'get_Value'
};
// --------------------------------------------------------
// Type: IEnumGuideDataProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumGuideDataProperties = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IEnumTuneRequests
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumTuneRequests = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IGuideData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGuideData = *opaque{
    // TODO: Method 'GetServices'
    // TODO: Method 'GetServiceProperties'
    // TODO: Method 'GetGuideProgramIDs'
    // TODO: Method 'GetProgramProperties'
    // TODO: Method 'GetScheduleEntryIDs'
    // TODO: Method 'GetScheduleEntryProperties'
};
// --------------------------------------------------------
// Type: IGuideDataLoader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGuideDataLoader = *opaque{
    // TODO: Method 'Init'
    // TODO: Method 'Terminate'
};
// --------------------------------------------------------
// Type: KSP_BDA_NODE_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSP_BDA_NODE_PIN = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulNodeType: {"kind":"UInt32"},
    ulInputPinId: {"kind":"UInt32"},
    ulOutputPinId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_PIN = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Anonymous: Windows.Win32.DirectShow.KSM_BDA_PIN+_Anonymous_e__Union,
    Reserved: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSM_BDA_PIN_PAIR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_PIN_PAIR = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Anonymous1: Windows.Win32.DirectShow.KSM_BDA_PIN_PAIR+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.DirectShow.KSM_BDA_PIN_PAIR+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSP_NODE_ESPID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSP_NODE_ESPID = extern struct {
    Property: Windows.Win32.CoreAudio.KSP_NODE,
    EsPid: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_DEBUG_LEVEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_DEBUG_LEVEL = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ucDebugLevel: {"kind":"Byte"},
    ulDebugStringSize: {"kind":"UInt32"},
    argbDebugString: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_DEBUG_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_DEBUG_DATA = extern struct {
    lResult: {"kind":"Int32"},
    uuidDebugDataType: Guid,
    ulDataSize: {"kind":"UInt32"},
    argbDebugData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: BDA_EVENT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_EVENT_DATA = extern struct {
    lResult: {"kind":"Int32"},
    ulEventID: {"kind":"UInt32"},
    uuidEventType: Guid,
    ulEventDataLength: {"kind":"UInt32"},
    argbEventData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_EVENT_COMPLETE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_EVENT_COMPLETE = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulEventID: {"kind":"UInt32"},
    ulEventResult: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_DRM_SETDRM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_DRM_SETDRM = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    NewDRMuuid: Guid,
};
// --------------------------------------------------------
// Type: KSM_BDA_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_BUFFER = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulBufferSize: {"kind":"UInt32"},
    argbBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_WMDRM_LICENSE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_WMDRM_LICENSE = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    uuidKeyID: Guid,
};
// --------------------------------------------------------
// Type: KSM_BDA_WMDRM_RENEWLICENSE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_WMDRM_RENEWLICENSE = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulXMRLicenseLength: {"kind":"UInt32"},
    ulEntitlementTokenLength: {"kind":"UInt32"},
    argbDataBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulDialogRequest: {"kind":"UInt32"},
    cLanguage: {"kind":"Array","child": {"kind":"SByte"}},
    ulPurchaseTokenLength: {"kind":"UInt32"},
    argbDataBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_WMDRMTUNER_SETPIDPROTECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_WMDRMTUNER_SETPIDPROTECTION = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulPID: {"kind":"UInt32"},
    uuidKeyID: Guid,
};
// --------------------------------------------------------
// Type: KSM_BDA_WMDRMTUNER_GETPIDPROTECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_WMDRMTUNER_GETPIDPROTECTION = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulPID: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_WMDRMTUNER_SYNCVALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_WMDRMTUNER_SYNCVALUE = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulSyncValue: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_TUNER_TUNEREQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_TUNER_TUNEREQUEST = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulTuneLength: {"kind":"UInt32"},
    argbTuneData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_GPNV_GETVALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_GPNV_GETVALUE = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulNameLength: {"kind":"UInt32"},
    cLanguage: {"kind":"Array","child": {"kind":"SByte"}},
    argbData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_GPNV_SETVALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_GPNV_SETVALUE = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulDialogRequest: {"kind":"UInt32"},
    cLanguage: {"kind":"Array","child": {"kind":"SByte"}},
    ulNameLength: {"kind":"UInt32"},
    ulValueLength: {"kind":"UInt32"},
    argbName: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_GPNV_NAMEINDEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_GPNV_NAMEINDEX = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulValueNameIndex: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_SCAN_CAPABILTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_SCAN_CAPABILTIES = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    uuidBroadcastStandard: Guid,
};
// --------------------------------------------------------
// Type: KSM_BDA_SCAN_FILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_SCAN_FILTER = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulScanModulationTypeSize: {"kind":"UInt32"},
    AnalogVideoStandards: {"kind":"UInt64"},
    argbScanModulationTypes: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_SCAN_START
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_SCAN_START = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    LowerFrequency: {"kind":"UInt32"},
    HigherFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_GDDS_TUNEXMLFROMIDX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_GDDS_TUNEXMLFROMIDX = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulIdx: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSM_BDA_GDDS_SERVICEFROMTUNEXML
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_GDDS_SERVICEFROMTUNEXML = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulTuneXmlLength: {"kind":"UInt32"},
    argbTuneXml: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_USERACTIVITY_USEREASON
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_USERACTIVITY_USEREASON = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ulUseReason: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_CAS_ENTITLEMENTTOKEN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_CAS_ENTITLEMENTTOKEN = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulDialogRequest: {"kind":"UInt32"},
    cLanguage: {"kind":"Array","child": {"kind":"SByte"}},
    ulRequestType: {"kind":"UInt32"},
    ulEntitlementTokenLen: {"kind":"UInt32"},
    argbEntitlementToken: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_CAS_CAPTURETOKEN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_CAS_CAPTURETOKEN = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulTokenLength: {"kind":"UInt32"},
    argbToken: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_CAS_OPENBROADCASTMMI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_CAS_OPENBROADCASTMMI = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulDialogRequest: {"kind":"UInt32"},
    cLanguage: {"kind":"Array","child": {"kind":"SByte"}},
    ulEventId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_CAS_CLOSEMMIDIALOG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_CAS_CLOSEMMIDIALOG = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulDialogRequest: {"kind":"UInt32"},
    cLanguage: {"kind":"Array","child": {"kind":"SByte"}},
    ulDialogNumber: {"kind":"UInt32"},
    ulReason: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_BDA_ISDBCAS_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_ISDBCAS_REQUEST = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    ulRequestID: {"kind":"UInt32"},
    ulIsdbCommandSize: {"kind":"UInt32"},
    argbIsdbCommandData: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSM_BDA_TS_SELECTOR_SETTSID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_BDA_TS_SELECTOR_SETTSID = extern struct {
    NodeMethod: Windows.Win32.CoreAudio.KSM_NODE,
    usTSID: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: KS_DATARANGE_BDA_ANTENNA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_BDA_ANTENNA = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
};
// --------------------------------------------------------
// Type: BDA_TRANSPORT_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BDA_TRANSPORT_INFO = extern struct {
    ulcbPhyiscalPacket: {"kind":"UInt32"},
    ulcbPhyiscalFrame: {"kind":"UInt32"},
    ulcbPhyiscalFrameAlignment: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KS_DATARANGE_BDA_TRANSPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_BDA_TRANSPORT = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    BdaTransportInfo: Windows.Win32.DirectShow.BDA_TRANSPORT_INFO,
};
// --------------------------------------------------------
// Type: EVENTID_TuningChanging
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_TuningChanging = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_TuningChanged
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_TuningChanged = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_CandidatePostTuneData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_CandidatePostTuneData = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_CADenialCountChanged
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_CADenialCountChanged = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_SignalStatusChanged
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_SignalStatusChanged = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_NewSignalAcquired
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_NewSignalAcquired = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_EASMessageReceived
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_EASMessageReceived = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_PSITable
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_PSITable = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_ServiceTerminated
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_ServiceTerminated = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_CardStatusChanged
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_CardStatusChanged = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_DRMParingStatusChanged
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_DRMParingStatusChanged = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_DRMParingStepComplete
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_DRMParingStepComplete = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_MMIMessage
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_MMIMessage = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_EntitlementChanged
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_EntitlementChanged = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_STBChannelNumber
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_STBChannelNumber = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDAEventingServicePendingEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDAEventingServicePendingEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDAConditionalAccessTAG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDAConditionalAccessTAG = opaque {
};
// --------------------------------------------------------
// Type: EVENTTYPE_CASDescrambleFailureEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTTYPE_CASDescrambleFailureEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_CASFailureSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_CASFailureSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: ChannelChangeSpanningEvent_State
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ChannelChangeSpanningEvent_State = *opaque{
};
// --------------------------------------------------------
// Type: EVENTID_ChannelChangeSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_ChannelChangeSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: ChannelChangeInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ChannelChangeInfo = extern struct {
    state: Windows.Win32.DirectShow.ChannelChangeSpanningEvent_State,
    TimeStamp: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: EVENTID_ChannelTypeSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_ChannelTypeSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: ChannelType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ChannelType = *opaque{
};
// --------------------------------------------------------
// Type: ChannelTypeInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ChannelTypeInfo = extern struct {
    channelType: Windows.Win32.DirectShow.ChannelType,
    timeStamp: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: ChannelInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ChannelInfo = extern struct {
    lFrequency: {"kind":"Int32"},
    Anonymous: Windows.Win32.DirectShow.ChannelInfo+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _ATSC_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _ATSC_e__Struct = extern struct {
            lProgNumber: {"kind":"Int32"},
        };
        // --------------------------------------------------------
        // Type: _DVB_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _DVB_e__Struct = extern struct {
            lONID: {"kind":"Int32"},
            lTSID: {"kind":"Int32"},
            lSID: {"kind":"Int32"},
        };
        // --------------------------------------------------------
        // Type: _DC_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _DC_e__Struct = extern struct {
            lProgNumber: {"kind":"Int32"},
        };
    };
};
// --------------------------------------------------------
// Type: EVENTID_ChannelInfoSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_ChannelInfoSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_RRTSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_RRTSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: SpanningEventDescriptor
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SpanningEventDescriptor = extern struct {
    wDataLen: {"kind":"UInt16"},
    wProgNumber: {"kind":"UInt16"},
    wSID: {"kind":"UInt16"},
    bDescriptor: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: EVENTID_CSDescriptorSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_CSDescriptorSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_CtxADescriptorSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_CtxADescriptorSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: DVBScramblingControlSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DVBScramblingControlSpanningEvent = extern struct {
    ulPID: {"kind":"UInt32"},
    fScrambled: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: EVENTID_DVBScramblingControlSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_DVBScramblingControlSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: SignalAndServiceStatusSpanningEvent_State
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SignalAndServiceStatusSpanningEvent_State = *opaque{
};
// --------------------------------------------------------
// Type: EVENTID_SignalAndServiceStatusSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_SignalAndServiceStatusSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: SpanningEventEmmMessage
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SpanningEventEmmMessage = extern struct {
    bCAbroadcasterGroupId: {"kind":"Byte"},
    bMessageControl: {"kind":"Byte"},
    wServiceId: {"kind":"UInt16"},
    wTableIdExtension: {"kind":"UInt16"},
    bDeletionStatus: {"kind":"Byte"},
    bDisplayingDuration1: {"kind":"Byte"},
    bDisplayingDuration2: {"kind":"Byte"},
    bDisplayingDuration3: {"kind":"Byte"},
    bDisplayingCycle: {"kind":"Byte"},
    bFormatVersion: {"kind":"Byte"},
    bDisplayPosition: {"kind":"Byte"},
    wMessageLength: {"kind":"UInt16"},
    szMessageArea: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: EVENTID_EmmMessageSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_EmmMessageSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_AudioTypeSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_AudioTypeSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_StreamTypeSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_StreamTypeSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_ARIBcontentSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_ARIBcontentSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_LanguageSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_LanguageSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: LanguageInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LanguageInfo = extern struct {
    LangID: {"kind":"UInt16"},
    lISOLangCode: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: EVENTID_DualMonoSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_DualMonoSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: DualMonoInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DualMonoInfo = extern struct {
    LangID1: {"kind":"UInt16"},
    LangID2: {"kind":"UInt16"},
    lISOLangCode1: {"kind":"Int32"},
    lISOLangCode2: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: EVENTID_PIDListSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_PIDListSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: PIDListSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PIDListSpanningEvent = extern struct {
    wPIDCount: {"kind":"UInt16"},
    pulPIDs: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: EVENTID_AudioDescriptorSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_AudioDescriptorSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_SubtitleSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_SubtitleSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_TeletextSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_TeletextSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_StreamIDSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_StreamIDSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_PBDAParentalControlEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_PBDAParentalControlEvent = opaque {
};
// --------------------------------------------------------
// Type: RATING_ATTRIBUTE
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const RATING_ATTRIBUTE = *opaque{
};
// --------------------------------------------------------
// Type: RATING_SYSTEM
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const RATING_SYSTEM = *opaque{
};
// --------------------------------------------------------
// Type: RATING_INFO
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const RATING_INFO = *opaque{
};
// --------------------------------------------------------
// Type: PBDAParentalControl
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const PBDAParentalControl = *opaque{
};
// --------------------------------------------------------
// Type: EVENTID_TuneFailureEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_TuneFailureEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_TuneFailureSpanningEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_TuneFailureSpanningEvent = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_DvbParentalRatingDescriptor
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_DvbParentalRatingDescriptor = opaque {
};
// --------------------------------------------------------
// Type: DvbParentalRatingParam
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DvbParentalRatingParam = extern struct {
    szCountryCode: {"kind":"Array","child": {"kind":"SByte"}},
    bRating: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DvbParentalRatingDescriptor
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DvbParentalRatingDescriptor = extern struct {
    ulNumParams: {"kind":"UInt32"},
    pParams: {"kind":"Array","child": Windows.Win32.DirectShow.DvbParentalRatingParam},
};
// --------------------------------------------------------
// Type: EVENTID_DFNWithNoActualAVData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_DFNWithNoActualAVData = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_BDA_ANTENNA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_BDA_ANTENNA = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_BDA_MPEG2_TRANSPORT = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_BDA_TRANSPORT = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_BDA_IF_SIGNAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_BDA_IF_SIGNAL = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MPEG2_SECTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MPEG2_SECTIONS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_ATSC_SI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_ATSC_SI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_DVB_SI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_DVB_SI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_PSIP = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_BDA_OPENCABLE_OOB_PSIP = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_ISDB_SI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_ISDB_SI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_PBDA_TRANSPORT_RAW = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_BDA_TRANSPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_BDA_TRANSPORT = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_BDA_ANALOG_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_BDA_ANALOG_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_BDA_ANALOG_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_BDA_ANALOG_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_BDA_FM_RADIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_BDA_FM_RADIO = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_BDA_IF_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_BDA_IF_PIN = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_BDA_OPENCABLE_PSIP_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_BDA_OPENCABLE_PSIP_PIN = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaEthernetFilter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaEthernetFilter = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_ETHERNET_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_ETHERNET_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaIPv4Filter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaIPv4Filter = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_IPv4_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_IPv4_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaIPv6Filter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaIPv6Filter = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_IPv6_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_IPv6_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaSignalStats
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaSignalStats = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_SIGNAL_STATS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_SIGNAL_STATS = *opaque{
};
// --------------------------------------------------------
// Type: _BdaLockType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _BdaLockType = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaChangeSync
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaChangeSync = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_CHANGE_SYNC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_CHANGE_SYNC = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaDeviceConfiguration
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaDeviceConfiguration = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_DEVICE_CONFIGURATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_DEVICE_CONFIGURATION = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaTopology
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaTopology = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_TOPOLOGY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_TOPOLOGY = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaPinControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaPinControl = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_PIN_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_PIN_CONTROL = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_BdaPinEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_BdaPinEvent = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_PIN_EVENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_PIN_EVENT = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaVoidTransform
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaVoidTransform = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_VOID_TRANSFORM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_VOID_TRANSFORM = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaNullTransform
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaNullTransform = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_NULL_TRANSFORM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_NULL_TRANSFORM = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaFrequencyFilter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaFrequencyFilter = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_FREQUENCY_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_FREQUENCY_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: _BdaSignalType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _BdaSignalType = *opaque{
};
// --------------------------------------------------------
// Type: BDA_DigitalSignalStandard
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BDA_DigitalSignalStandard = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_RF_TUNER_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_BDA_RF_TUNER_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSP_NODE,
    Mode: {"kind":"UInt32"},
    AnalogStandardsSupported: {"kind":"UInt32"},
    DigitalStandardsSupported: {"kind":"UInt32"},
    MinFrequency: {"kind":"UInt32"},
    MaxFrequency: {"kind":"UInt32"},
    SettlingTime: {"kind":"UInt32"},
    AnalogSensingRange: {"kind":"UInt32"},
    DigitalSensingRange: {"kind":"UInt32"},
    MilliSecondsPerMHz: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSP_NODE,
    CurrentFrequency: {"kind":"UInt32"},
    FrequencyRangeMin: {"kind":"UInt32"},
    FrequencyRangeMax: {"kind":"UInt32"},
    MilliSecondsLeft: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_RF_TUNER_STANDARD_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_BDA_RF_TUNER_STANDARD_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSP_NODE,
    SignalType: Windows.Win32.DirectShow._BdaSignalType,
    SignalStandard: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSP_NODE,
    AutoDetect: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSEVENTSETID_BdaTunerEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_BdaTunerEvent = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_BDA_TUNER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_BDA_TUNER = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTDATA_BDA_RF_TUNER_SCAN_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSEVENTDATA_BDA_RF_TUNER_SCAN_S = extern struct {
    EventData: Windows.Win32.CoreAudio.KSEVENTDATA,
    StartFrequency: {"kind":"UInt32"},
    EndFrequency: {"kind":"UInt32"},
    LockRequested: Windows.Win32.DirectShow._BdaLockType,
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaLNBInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaLNBInfo = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_LNB_INFO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_LNB_INFO = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaDiseqCommand
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaDiseqCommand = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_DISEQC_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_DISEQC_COMMAND = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_BdaDiseqCEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_BdaDiseqCEvent = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_DISEQC_EVENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_DISEQC_EVENT = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaDigitalDemodulator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaDigitalDemodulator = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_DIGITAL_DEMODULATOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_DIGITAL_DEMODULATOR = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaAutodemodulate
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaAutodemodulate = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_AUTODEMODULATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_AUTODEMODULATE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaTableSection
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaTableSection = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_IDS_BDA_TABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_IDS_BDA_TABLE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaPIDFilter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaPIDFilter = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_PIDFILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_PIDFILTER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_BdaCA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BdaCA = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_CA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_CA = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_BdaCAEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_BdaCAEvent = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BDA_CA_EVENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BDA_CA_EVENT = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaDrmService
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaDrmService = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_DRM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_DRM = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaWmdrmSession
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaWmdrmSession = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_WMDRM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_WMDRM = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaWmdrmTuner
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaWmdrmTuner = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_WMDRM_TUNER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_WMDRM_TUNER = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaEventing
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaEventing = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_EVENTING_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_EVENTING_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_BdaEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_BdaEvent = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_BDA_EVENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_BDA_EVENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaDebug
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaDebug = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_DEBUG_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_DEBUG_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaTuner
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaTuner = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_TUNER_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_TUNER_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaNameValueA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaNameValueA = opaque {
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaNameValue
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaNameValue = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_GPNV_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_GPNV_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaMux
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaMux = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_MUX_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_MUX_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaScanning
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaScanning = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_SCAN_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_SCAN_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaGuideDataDeliveryService
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaGuideDataDeliveryService = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_GDDS_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_GDDS_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaConditionalAccessService
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaConditionalAccessService = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_CAS_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_CAS_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaIsdbConditionalAccess
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaIsdbConditionalAccess = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_ISDB_CAS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_ISDB_CAS = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaTSSelector
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaTSSelector = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_TS_SELECTOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_TS_SELECTOR = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_BdaUserActivity
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_BdaUserActivity = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_BDA_USERACTIVITY_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_BDA_USERACTIVITY_SERVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSCATEGORY_BDA_RECEIVER_COMPONENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BDA_RECEIVER_COMPONENT = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_BDA_NETWORK_TUNER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BDA_NETWORK_TUNER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_BDA_NETWORK_EPG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BDA_NETWORK_EPG = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_BDA_IP_SINK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BDA_IP_SINK = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_BDA_NETWORK_PROVIDER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BDA_NETWORK_PROVIDER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_BDA_TRANSPORT_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BDA_TRANSPORT_INFORMATION = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_RF_TUNER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_RF_TUNER = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_ANALOG_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_ANALOG_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_QAM_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_QAM_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_QPSK_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_QPSK_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_8VSB_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_8VSB_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_COFDM_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_COFDM_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_8PSK_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_8PSK_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_ISDB_T_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_ISDB_T_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_ISDB_S_DEMODULATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_ISDB_S_DEMODULATOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_OPENCABLE_POD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_OPENCABLE_POD = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_COMMON_CA_POD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_COMMON_CA_POD = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_PID_FILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_PID_FILTER = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_IP_SINK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_IP_SINK = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_VIDEO_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_VIDEO_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_PBDA_CAS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_PBDA_CAS = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_PBDA_ISDBCAS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_PBDA_ISDBCAS = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_PBDA_TUNER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_PBDA_TUNER = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_PBDA_MUX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_PBDA_MUX = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_PBDA_DRM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_PBDA_DRM = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_DRI_DRM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_DRI_DRM = opaque {
};
// --------------------------------------------------------
// Type: KSNODE_BDA_TS_SELECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODE_BDA_TS_SELECTOR = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_IPSINK_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_IPSINK_INPUT = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_BDA_IP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_BDA_IP = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_BDA_IP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_BDA_IP = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_BDA_IP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_BDA_IP = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_BDA_IP_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_BDA_IP_CONTROL = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_BDA_IP_CONTROL = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_MPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_MPE = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MPE = opaque {
};
// --------------------------------------------------------
// Type: DIGITAL_CABLE_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DIGITAL_CABLE_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ANALOG_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ANALOG_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ANALOG_AUXIN_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ANALOG_AUXIN_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ANALOG_FM_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ANALOG_FM_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ISDB_TERRESTRIAL_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ISDB_TERRESTRIAL_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ISDB_T_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ISDB_T_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ISDB_SATELLITE_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ISDB_SATELLITE_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ISDB_S_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ISDB_S_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ISDB_CABLE_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ISDB_CABLE_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: DIRECT_TV_SATELLITE_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DIRECT_TV_SATELLITE_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ECHOSTAR_SATELLITE_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ECHOSTAR_SATELLITE_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: ATSC_TERRESTRIAL_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ATSC_TERRESTRIAL_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: DVB_TERRESTRIAL_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVB_TERRESTRIAL_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: BSKYB_TERRESTRIAL_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const BSKYB_TERRESTRIAL_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: DVB_SATELLITE_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVB_SATELLITE_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: DVB_CABLE_TV_NETWORK_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DVB_CABLE_TV_NETWORK_TYPE = opaque {
};
// --------------------------------------------------------
// Type: BDA_DEBUG_DATA_AVAILABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const BDA_DEBUG_DATA_AVAILABLE = opaque {
};
// --------------------------------------------------------
// Type: BDA_DEBUG_DATA_TYPE_STRING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const BDA_DEBUG_DATA_TYPE_STRING = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_IsdbCASResponse
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_IsdbCASResponse = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_CASRequestTuner
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_CASRequestTuner = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_CASReleaseTuner
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_CASReleaseTuner = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_CASOpenMMI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_CASOpenMMI = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_CASCloseMMI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_CASCloseMMI = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_CASBroadcastMMI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_CASBroadcastMMI = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_TunerSignalLock
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_TunerSignalLock = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_TunerNoSignal
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_TunerNoSignal = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_GPNVValueUpdate
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_GPNVValueUpdate = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_UpdateDrmStatus
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_UpdateDrmStatus = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_UpdateScanState
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_UpdateScanState = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_GuideDataAvailable
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_GuideDataAvailable = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_GuideServiceInformationUpdated
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_GuideServiceInformationUpdated = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_GuideDataError
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_GuideDataError = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_DiseqCResponseAvailable
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_DiseqCResponseAvailable = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_LbigsOpenConnection
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_LbigsOpenConnection = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_LbigsSendData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_LbigsSendData = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_LbigsCloseConnectionHandle
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_LbigsCloseConnectionHandle = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_EncoderSignalLock
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_EncoderSignalLock = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_FdcStatus
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_FdcStatus = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_FdcTableSection
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_FdcTableSection = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_TransprtStreamSelectorInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_TransprtStreamSelectorInfo = opaque {
};
// --------------------------------------------------------
// Type: EVENTID_BDA_RatingPinReset
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTID_BDA_RatingPinReset = opaque {
};
// --------------------------------------------------------
// Type: PBDA_ALWAYS_TUNE_IN_MUX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PBDA_ALWAYS_TUNE_IN_MUX = opaque {
};
// --------------------------------------------------------
// Type: PID_BITS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const PID_BITS = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_HEADER_BITS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG_HEADER_BITS = *opaque{
};
// --------------------------------------------------------
// Type: MPEG_HEADER_VERSION_BITS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MPEG_HEADER_VERSION_BITS = extern struct {
    _bitfield: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: KSTOPOLOGY_CONNECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTOPOLOGY_CONNECTION = extern struct {
    FromNode: {"kind":"UInt32"},
    FromNodePin: {"kind":"UInt32"},
    ToNode: {"kind":"UInt32"},
    ToNodePin: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: TIMECODE
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const TIMECODE = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        wFrameRate: {"kind":"UInt16"},
        wFrameFract: {"kind":"UInt16"},
        dwFrames: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: TIMECODE_SAMPLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TIMECODE_SAMPLE = extern struct {
    qwTick: {"kind":"Int64"},
    timecode: Windows.Win32.DirectShow.TIMECODE,
    dwUser: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VIDEOENCODER_BITRATE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VIDEOENCODER_BITRATE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: MPEG1WAVEFORMAT
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEG1WAVEFORMAT = *opaque{
};
// --------------------------------------------------------
// Type: MPEGLAYER3WAVEFORMAT
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MPEGLAYER3WAVEFORMAT = *opaque{
};
// --------------------------------------------------------
// Type: HEAACWAVEINFO
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const HEAACWAVEINFO = *opaque{
};
// --------------------------------------------------------
// Type: HEAACWAVEFORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HEAACWAVEFORMAT = extern struct {
    wfInfo: Windows.Win32.DirectShow.HEAACWAVEINFO,
    pbAudioSpecificConfig: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DDCOLORKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCOLORKEY = extern struct {
    dwColorSpaceLowValue: {"kind":"UInt32"},
    dwColorSpaceHighValue: {"kind":"UInt32"},
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "QUARTZ" fn AMGetErrorTextA(
    hr: Windows.Win32.Com.HRESULT,
    pbuffer: {"kind""Ptr","child":{"kind":"SByte"}},
    MaxLen: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "QUARTZ" fn AMGetErrorTextW(
    hr: Windows.Win32.Com.HRESULT,
    pbuffer: {"kind""Ptr","child":{"kind":"UInt16"}},
    MaxLen: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn DMORegister(
    szName: {"kind""Ptr","child":{"kind":"UInt16"}},
    clsidDMO: {"kind""Ptr","child":Guid},
    guidCategory: {"kind""Ptr","child":Guid},
    dwFlags: {"kind":"UInt32"},
    cInTypes: {"kind":"UInt32"},
    pInTypes: {"kind""Ptr","child":Windows.Win32.DirectShow.DMO_PARTIAL_MEDIATYPE},
    cOutTypes: {"kind":"UInt32"},
    pOutTypes: {"kind""Ptr","child":Windows.Win32.DirectShow.DMO_PARTIAL_MEDIATYPE},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn DMOUnregister(
    clsidDMO: {"kind""Ptr","child":Guid},
    guidCategory: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn DMOEnum(
    guidCategory: {"kind""Ptr","child":Guid},
    dwFlags: {"kind":"UInt32"},
    cInTypes: {"kind":"UInt32"},
    pInTypes: {"kind""Ptr","child":Windows.Win32.DirectShow.DMO_PARTIAL_MEDIATYPE},
    cOutTypes: {"kind":"UInt32"},
    pOutTypes: {"kind""Ptr","child":Windows.Win32.DirectShow.DMO_PARTIAL_MEDIATYPE},
    ppEnum: {"kind""Ptr","child":Windows.Win32.DirectShow.IEnumDMO},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn DMOGetTypes(
    clsidDMO: {"kind""Ptr","child":Guid},
    ulInputTypesRequested: {"kind":"UInt32"},
    pulInputTypesSupplied: {"kind""Ptr","child":{"kind":"UInt32"}},
    pInputTypes: {"kind""Ptr","child":Windows.Win32.DirectShow.DMO_PARTIAL_MEDIATYPE},
    ulOutputTypesRequested: {"kind":"UInt32"},
    pulOutputTypesSupplied: {"kind""Ptr","child":{"kind":"UInt32"}},
    pOutputTypes: {"kind""Ptr","child":Windows.Win32.DirectShow.DMO_PARTIAL_MEDIATYPE},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn DMOGetName(
    clsidDMO: {"kind""Ptr","child":Guid},
    szName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn MoInitMediaType(
    pmt: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},
    cbFormat: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn MoFreeMediaType(
    pmt: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn MoCopyMediaType(
    pmtDest: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},
    pmtSrc: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn MoCreateMediaType(
    ppmt: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE}},
    cbFormat: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn MoDeleteMediaType(
    pmt: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "msdmo" fn MoDuplicateMediaType(
    ppmtDest: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE}},
    pmtSrc: {"kind""Ptr","child":Windows.Win32.DirectShow.AM_MEDIA_TYPE},
],

"unicode_aliases": [
     "AMGetErrorText"
]}
