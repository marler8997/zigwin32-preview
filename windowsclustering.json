{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: _HCLUSTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSTER = opaque {
};
// --------------------------------------------------------
// Type: _HNODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNODE = opaque {
};
// --------------------------------------------------------
// Type: _HRESOURCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESOURCE = opaque {
};
// --------------------------------------------------------
// Type: _HGROUP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUP = opaque {
};
// --------------------------------------------------------
// Type: _HNETWORK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETWORK = opaque {
};
// --------------------------------------------------------
// Type: _HNETINTERFACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETINTERFACE = opaque {
};
// --------------------------------------------------------
// Type: _HCHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCHANGE = opaque {
};
// --------------------------------------------------------
// Type: _HCLUSENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSENUM = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPENUM = opaque {
};
// --------------------------------------------------------
// Type: _HRESENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESENUM = opaque {
};
// --------------------------------------------------------
// Type: _HNETWORKENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETWORKENUM = opaque {
};
// --------------------------------------------------------
// Type: _HNODEENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNODEENUM = opaque {
};
// --------------------------------------------------------
// Type: _HNETINTERFACEENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETINTERFACEENUM = opaque {
};
// --------------------------------------------------------
// Type: _HRESTYPEENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESTYPEENUM = opaque {
};
// --------------------------------------------------------
// Type: _HREGBATCH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGBATCH = opaque {
};
// --------------------------------------------------------
// Type: _HREGBATCHPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGBATCHPORT = opaque {
};
// --------------------------------------------------------
// Type: _HREGBATCHNOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGBATCHNOTIFICATION = opaque {
};
// --------------------------------------------------------
// Type: _HREGREADBATCH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGREADBATCH = opaque {
};
// --------------------------------------------------------
// Type: _HREGREADBATCHREPLY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGREADBATCHREPLY = opaque {
};
// --------------------------------------------------------
// Type: _HNODEENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNODEENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HCLUSENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HRESENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPSET = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPSETENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPSETENUM = opaque {
};
// --------------------------------------------------------
// Type: CLUSTER_QUORUM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_QUORUM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTERVERSIONINFO_NT4
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTERVERSIONINFO_NT4 = extern struct {
    dwVersionInfoSize: {"kind":"UInt32"},
    MajorVersion: {"kind":"UInt16"},
    MinorVersion: {"kind":"UInt16"},
    BuildNumber: {"kind":"UInt16"},
    szVendorId: {"kind":"Array","child": {"kind":"UInt16"}},
    szCSDVersion: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSTERVERSIONINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTERVERSIONINFO = extern struct {
    dwVersionInfoSize: {"kind":"UInt32"},
    MajorVersion: {"kind":"UInt16"},
    MinorVersion: {"kind":"UInt16"},
    BuildNumber: {"kind":"UInt16"},
    szVendorId: {"kind":"Array","child": {"kind":"UInt16"}},
    szCSDVersion: {"kind":"Array","child": {"kind":"UInt16"}},
    dwClusterHighestVersion: {"kind":"UInt32"},
    dwClusterLowestVersion: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    dwReserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUS_STARTING_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STARTING_PARAMS = extern struct {
    dwSize: {"kind":"UInt32"},
    bForm: Windows.Win32.SystemServices.BOOL,
    bFirst: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: NODE_CLUSTER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NODE_CLUSTER_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_STATE_CHANGE_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_STATE_CHANGE_REASON = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_REG_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_REG_COMMAND = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT = extern struct {
    dwSize: {"kind":"UInt32"},
    dwVersion: {"kind":"UInt32"},
    eReason: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_STATE_CHANGE_REASON,
};
// --------------------------------------------------------
// Type: CLUSTER_BATCH_COMMAND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_BATCH_COMMAND = extern struct {
    Command: Windows.Win32.WindowsClustering.CLUSTER_REG_COMMAND,
    dwOptions: {"kind":"UInt32"},
    wzName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpData: {"kind""Ptr","child":{"kind":"Byte"}},
    cbData: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_READ_BATCH_COMMAND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_READ_BATCH_COMMAND = extern struct {
    Command: Windows.Win32.WindowsClustering.CLUSTER_REG_COMMAND,
    dwOptions: {"kind":"UInt32"},
    wzSubkeyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    wzValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpData: {"kind""Ptr","child":{"kind":"Byte"}},
    cbData: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_ENUM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_ENUM_ITEM = extern struct {
    dwVersion: {"kind":"UInt32"},
    dwType: {"kind":"UInt32"},
    cbId: {"kind":"UInt32"},
    lpszId: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbName: {"kind":"UInt32"},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSGROUP_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSGROUP_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CREATE_GROUP_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_CREATE_GROUP_INFO = extern struct {
    dwVersion: {"kind":"UInt32"},
    groupType: Windows.Win32.WindowsClustering.CLUSGROUP_TYPE,
};
// --------------------------------------------------------
// Type: CLUSTER_MGMT_POINT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_MGMT_POINT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_MGMT_POINT_RESTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_MGMT_POINT_RESTYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CLOUD_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CLOUD_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_GROUP_START_SETTING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_GROUP_START_SETTING = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_AFFINITY_RULE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_AFFINITY_RULE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_QUORUM_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_QUORUM_VALUE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_PATH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_PATH = extern struct {
    szPath: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_DIRECTORY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_DIRECTORY = extern struct {
    szPath: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_NETNAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_NETNAME = extern struct {
    szNetworkName: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_CSV_FILENAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_CSV_FILENAME = extern struct {
    szFileName: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CLUSTER_SET_PASSWORD_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SET_PASSWORD_STATUS = extern struct {
    NodeId: {"kind":"UInt32"},
    SetAttempted: {"kind":"Byte"},
    ReturnStatus: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_IP_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_IP_ENTRY = extern struct {
    lpszIpAddress: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwPrefixLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CREATE_CLUSTER_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CREATE_CLUSTER_CONFIG = extern struct {
    dwVersion: {"kind":"UInt32"},
    lpszClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cNodes: {"kind":"UInt32"},
    ppszNodeNames: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    cIpEntries: {"kind":"UInt32"},
    pIpEntries: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_IP_ENTRY},
    fEmptyCluster: {"kind":"Byte"},
    managementPointType: Windows.Win32.WindowsClustering.CLUSTER_MGMT_POINT_TYPE,
    managementPointResType: Windows.Win32.WindowsClustering.CLUSTER_MGMT_POINT_RESTYPE,
};
// --------------------------------------------------------
// Type: CREATE_CLUSTER_NAME_ACCOUNT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CREATE_CLUSTER_NAME_ACCOUNT = extern struct {
    dwVersion: {"kind":"UInt32"},
    lpszClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},
    pszUserName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszPassword: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszDomain: {"kind""Ptr","child":{"kind":"UInt16"}},
    managementPointType: Windows.Win32.WindowsClustering.CLUSTER_MGMT_POINT_TYPE,
    managementPointResType: Windows.Win32.WindowsClustering.CLUSTER_MGMT_POINT_RESTYPE,
    bUpgradeVCOs: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_NODE_CLUSTER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_NODE_CLUSTER_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SetClusterName
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SetClusterName = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_INFORMATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_INFORMATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_BACKUP_CLUSTER_DATABASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_BACKUP_CLUSTER_DATABASE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESTORE_CLUSTER_DATABASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESTORE_CLUSTER_DATABASE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_UPGRADE_PHASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_UPGRADE_PHASE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSTER_UPGRADE_PROGRESS_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_UPGRADE_PROGRESS_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_UPGRADE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_UPGRADE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NOTIFICATIONS_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NOTIFICATIONS_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_CLUSTER_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_CLUSTER_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_GROUP_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_GROUP_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_GROUPSET_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_GROUPSET_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_RESOURCE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_RESOURCE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_RESOURCE_TYPE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_RESOURCE_TYPE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NETINTERFACE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NETINTERFACE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NETWORK_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NETWORK_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NODE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NODE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_REGISTRY_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_REGISTRY_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_QUORUM_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_QUORUM_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_SHARED_VOLUME_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_SHARED_VOLUME_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_SPACEPORT_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_SPACEPORT_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_OBJECT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_OBJECT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTERSET_OBJECT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTERSET_OBJECT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NOTIFY_FILTER_AND_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NOTIFY_FILTER_AND_TYPE = extern struct {
    dwObjectType: {"kind":"UInt32"},
    FilterFlags: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: CLUSTER_MEMBERSHIP_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_MEMBERSHIP_INFO = extern struct {
    HasQuorum: Windows.Win32.SystemServices.BOOL,
    UpnodesSize: {"kind":"UInt32"},
    Upnodes: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NOTIFY_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NOTIFY_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REGISTER_CLUSTER_NOTIFY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REGISTER_CLUSTER_NOTIFY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NOTIFY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NOTIFY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_AVAILABILITY_SET_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_AVAILABILITY_SET_CONFIG = extern struct {
    dwVersion: {"kind":"UInt32"},
    dwUpdateDomains: {"kind":"UInt32"},
    dwFaultDomains: {"kind":"UInt32"},
    bReserveSpareNode: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_STORAGENODE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_STORAGENODE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_DRAIN_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_DRAIN_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_NODE_BY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_NODE_BY_ID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NODE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NODE_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NODE_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NODE_ID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_PAUSE_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_PAUSE_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESUME_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESUME_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_EVICT_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_EVICT_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_EVICT_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_EVICT_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_PRIORITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_PRIORITY = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_AUTOFAILBACK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_AUTOFAILBACK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_ENUM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_GROUP_ENUM_ITEM = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbId: {"kind":"UInt32"},
    lpszId: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbName: {"kind":"UInt32"},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    state: Windows.Win32.WindowsClustering.CLUSTER_GROUP_STATE,
    cbOwnerNode: {"kind":"UInt32"},
    lpszOwnerNode: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},
    cbProperties: {"kind":"UInt32"},
    pProperties: {"kind""Ptr","child":{"kind":"Void"}},
    cbRoProperties: {"kind":"UInt32"},
    pRoProperties: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_ENUM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_RESOURCE_ENUM_ITEM = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbId: {"kind":"UInt32"},
    lpszId: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbName: {"kind":"UInt32"},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbOwnerGroupName: {"kind":"UInt32"},
    lpszOwnerGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbOwnerGroupId: {"kind":"UInt32"},
    lpszOwnerGroupId: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbProperties: {"kind":"UInt32"},
    pProperties: {"kind""Ptr","child":{"kind":"Void"}},
    cbRoProperties: {"kind":"UInt32"},
    pRoProperties: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_GROUP_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_GROUP_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_PAUSE_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_PAUSE_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_RESUME_FAILBACK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_RESUME_FAILBACK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESUME_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESUME_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_GROUPEX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_GROUPEX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESTART_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESTART_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_GROUP_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_GROUP_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_GROUP_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_GROUP_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ONLINE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ONLINE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_MOVE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_MOVE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OFFLINE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OFFLINE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DESTROY_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DESTROY_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_RESTART_ACTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_RESTART_ACTION = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_CREATE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_CREATE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_RESOURCE_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_RESOURCE_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_FAIL_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_FAIL_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ONLINE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ONLINE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OFFLINE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OFFLINE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_PROPERTY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_PROPERTY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_PROPERTY_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_PROPERTY_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_PROPERTY_SYNTAX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_PROPERTY_SYNTAX = *opaque{
};
// --------------------------------------------------------
// Type: GROUP_FAILURE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GROUP_FAILURE_INFO = extern struct {
    dwFailoverAttemptsRemaining: {"kind":"UInt32"},
    dwFailoverPeriodRemaining: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: GROUP_FAILURE_INFO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GROUP_FAILURE_INFO_BUFFER = extern struct {
    dwVersion: {"kind":"UInt32"},
    Info: Windows.Win32.WindowsClustering.GROUP_FAILURE_INFO,
};
// --------------------------------------------------------
// Type: RESOURCE_FAILURE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_FAILURE_INFO = extern struct {
    dwRestartAttemptsRemaining: {"kind":"UInt32"},
    dwRestartPeriodRemaining: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: RESOURCE_FAILURE_INFO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_FAILURE_INFO_BUFFER = extern struct {
    dwVersion: {"kind":"UInt32"},
    Info: Windows.Win32.WindowsClustering.RESOURCE_FAILURE_INFO,
};
// --------------------------------------------------------
// Type: RESOURCE_TERMINAL_FAILURE_INFO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_TERMINAL_FAILURE_INFO_BUFFER = extern struct {
    isTerminalFailure: Windows.Win32.SystemServices.BOOL,
    restartPeriodRemaining: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_CONTROL_OBJECT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CONTROL_OBJECT = *opaque{
};
// --------------------------------------------------------
// Type: CLCTL_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLCTL_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_RESOURCE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_TYPE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_RESOURCE_TYPE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_GROUP_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_GROUP_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_NODE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_NODE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_NETWORK_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_NETWORK_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_NETINTERFACE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_NETINTERFACE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_CLUSTER_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_CLUSTER_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_GROUPSET_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_GROUPSET_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_AFFINITYRULE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_AFFINITYRULE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_CLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_CLASS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_RESSUBCLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_RESSUBCLASS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_RESSUBCLASS_STORAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_RESSUBCLASS_STORAGE = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_RESSUBCLASS_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_RESSUBCLASS_NETWORK = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_CHARACTERISTICS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_CHARACTERISTICS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: CLUSPROP_SYNTAX
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const CLUSPROP_SYNTAX = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        wFormat: {"kind":"UInt16"},
        wType: {"kind":"UInt16"},
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_VALUE = extern struct {
    Syntax: Windows.Win32.WindowsClustering.CLUSPROP_SYNTAX,
    cbLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSPROP_BINARY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_BINARY = extern struct {
    __AnonymousBase_clusapi_L5092_C41: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    rgb: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: CLUSPROP_WORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_WORD = extern struct {
    __AnonymousBase_clusapi_L5102_C39: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    w: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CLUSPROP_DWORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_DWORD = extern struct {
    __AnonymousBase_clusapi_L5112_C40: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    dw: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSPROP_LONG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_LONG = extern struct {
    __AnonymousBase_clusapi_L5122_C39: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    l: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: CLUSPROP_SZ
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_SZ = extern struct {
    __AnonymousBase_clusapi_L5132_C37: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    sz: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CLUSPROP_ULARGE_INTEGER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_ULARGE_INTEGER = extern struct {
    __AnonymousBase_clusapi_L5149_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    li: Windows.Win32.SystemServices.ULARGE_INTEGER,
};
// --------------------------------------------------------
// Type: CLUSPROP_LARGE_INTEGER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_LARGE_INTEGER = extern struct {
    __AnonymousBase_clusapi_L5162_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    li: Windows.Win32.SystemServices.LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: CLUSPROP_SECURITY_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_SECURITY_DESCRIPTOR = extern struct {
    __AnonymousBase_clusapi_L5174_C54: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    Anonymous: Windows.Win32.WindowsClustering.CLUSPROP_SECURITY_DESCRIPTOR+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_FILETIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_FILETIME = extern struct {
    __AnonymousBase_clusapi_L5188_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    ft: Windows.Win32.WindowsProgramming.FILETIME,
};
// --------------------------------------------------------
// Type: CLUS_RESOURCE_CLASS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_RESOURCE_CLASS_INFO = extern struct {
    Anonymous: Windows.Win32.WindowsClustering.CLUS_RESOURCE_CLASS_INFO+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            Anonymous: Windows.Win32.WindowsClustering.CLUS_RESOURCE_CLASS_INFO+_Anonymous_e__Union+_Anonymous_e__Struct+_Anonymous_e__Union,
            SubClass: {"kind":"UInt32"},
            // --------------------------------------------------------
            // Type: _Anonymous_e__Union
            // TypeLayoutAttr: explicit
            // not generating the actual code for this type because it has an explicit layout
            pub const _Anonymous_e__Union = *opaque{
            };
        };
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_RESOURCE_CLASS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_RESOURCE_CLASS = extern struct {
    __AnonymousBase_clusapi_L5213_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    rc: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_CLASS,
};
// --------------------------------------------------------
// Type: CLUSPROP_RESOURCE_CLASS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_RESOURCE_CLASS_INFO = extern struct {
    __AnonymousBase_clusapi_L5224_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5225_C14: Windows.Win32.WindowsClustering.CLUS_RESOURCE_CLASS_INFO,
};
// --------------------------------------------------------
// Type: CLUSPROP_REQUIRED_DEPENDENCY
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const CLUSPROP_REQUIRED_DEPENDENCY = *opaque{
};
// --------------------------------------------------------
// Type: CLUSPROP_PIFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSPROP_PIFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_FORCE_QUORUM_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_FORCE_QUORUM_INFO = extern struct {
    dwSize: {"kind":"UInt32"},
    dwNodeBitMask: {"kind":"UInt32"},
    dwMaxNumberofNodes: {"kind":"UInt32"},
    multiszNodeList: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_PARTITION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PARTITION_INFO = extern struct {
    dwFlags: {"kind":"UInt32"},
    szDeviceName: {"kind":"Array","child": {"kind":"UInt16"}},
    szVolumeLabel: {"kind":"Array","child": {"kind":"UInt16"}},
    dwSerialNumber: {"kind":"UInt32"},
    rgdwMaximumComponentLength: {"kind":"UInt32"},
    dwFileSystemFlags: {"kind":"UInt32"},
    szFileSystem: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_PARTITION_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PARTITION_INFO_EX = extern struct {
    dwFlags: {"kind":"UInt32"},
    szDeviceName: {"kind":"Array","child": {"kind":"UInt16"}},
    szVolumeLabel: {"kind":"Array","child": {"kind":"UInt16"}},
    dwSerialNumber: {"kind":"UInt32"},
    rgdwMaximumComponentLength: {"kind":"UInt32"},
    dwFileSystemFlags: {"kind":"UInt32"},
    szFileSystem: {"kind":"Array","child": {"kind":"UInt16"}},
    TotalSizeInBytes: Windows.Win32.SystemServices.ULARGE_INTEGER,
    FreeSizeInBytes: Windows.Win32.SystemServices.ULARGE_INTEGER,
    DeviceNumber: {"kind":"UInt32"},
    PartitionNumber: {"kind":"UInt32"},
    VolumeGuid: Guid,
};
// --------------------------------------------------------
// Type: CLUS_PARTITION_INFO_EX2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PARTITION_INFO_EX2 = extern struct {
    GptPartitionId: Guid,
    szPartitionName: {"kind":"Array","child": {"kind":"UInt16"}},
    EncryptionFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_CSV_VOLUME_FAULT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CSV_VOLUME_FAULT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_BACKUP_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_BACKUP_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_CSV_VOLUME_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CSV_VOLUME_INFO = extern struct {
    VolumeOffset: Windows.Win32.SystemServices.ULARGE_INTEGER,
    PartitionNumber: {"kind":"UInt32"},
    FaultState: Windows.Win32.WindowsClustering.CLUSTER_CSV_VOLUME_FAULT_STATE,
    BackupState: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_BACKUP_STATE,
    szVolumeFriendlyName: {"kind":"Array","child": {"kind":"UInt16"}},
    szVolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_CSV_VOLUME_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CSV_VOLUME_NAME = extern struct {
    VolumeOffset: Windows.Win32.SystemServices.LARGE_INTEGER,
    szVolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
    szRootPath: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_STATE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_STATE_INFO = extern struct {
    szVolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
    szNodeName: {"kind":"Array","child": {"kind":"UInt16"}},
    VolumeState: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_STATE,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_STATE_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_STATE_INFO_EX = extern struct {
    szVolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
    szNodeName: {"kind":"Array","child": {"kind":"UInt16"}},
    VolumeState: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_STATE,
    szVolumeFriendlyName: {"kind":"Array","child": {"kind":"UInt16"}},
    RedirectedIOReason: {"kind":"UInt64"},
    VolumeRedirectedIOReason: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME = extern struct {
    InputType: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE,
    Anonymous: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME = extern struct {
    NewVolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME = extern struct {
    NewVolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
    NewVolumeGuid: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT = extern struct {
    __AnonymousBase_clusapi_L5427_C14: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME,
    __AnonymousBase_clusapi_L5428_C14: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT = extern struct {
    __AnonymousBase_clusapi_L5438_C14: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME,
    __AnonymousBase_clusapi_L5439_C14: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME,
};
// --------------------------------------------------------
// Type: CLUS_CHKDSK_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CHKDSK_INFO = extern struct {
    PartitionNumber: {"kind":"UInt32"},
    ChkdskState: {"kind":"UInt32"},
    FileIdCount: {"kind":"UInt32"},
    FileIdList: {"kind":"Array","child": {"kind":"UInt64"}},
};
// --------------------------------------------------------
// Type: CLUS_DISK_NUMBER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_DISK_NUMBER_INFO = extern struct {
    DiskNumber: {"kind":"UInt32"},
    BytesPerSector: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUS_SHARED_VOLUME_BACKUP_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_SHARED_VOLUME_BACKUP_MODE = extern struct {
    BackupState: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_BACKUP_STATE,
    DelayTimerInSecs: {"kind":"UInt32"},
    VolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSPROP_PARTITION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_PARTITION_INFO = extern struct {
    __AnonymousBase_clusapi_L5470_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5471_C14: Windows.Win32.WindowsClustering.CLUS_PARTITION_INFO,
};
// --------------------------------------------------------
// Type: CLUSPROP_PARTITION_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_PARTITION_INFO_EX = extern struct {
    __AnonymousBase_clusapi_L5482_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5483_C14: Windows.Win32.WindowsClustering.CLUS_PARTITION_INFO_EX,
};
// --------------------------------------------------------
// Type: CLUSPROP_PARTITION_INFO_EX2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_PARTITION_INFO_EX2 = extern struct {
    __AnonymousBase_clusapi_L5496_C14: Windows.Win32.WindowsClustering.CLUSPROP_PARTITION_INFO_EX,
    __AnonymousBase_clusapi_L5497_C14: Windows.Win32.WindowsClustering.CLUS_PARTITION_INFO_EX2,
};
// --------------------------------------------------------
// Type: CLUS_FTSET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_FTSET_INFO = extern struct {
    dwRootSignature: {"kind":"UInt32"},
    dwFtType: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSPROP_FTSET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_FTSET_INFO = extern struct {
    __AnonymousBase_clusapi_L5518_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5519_C14: Windows.Win32.WindowsClustering.CLUS_FTSET_INFO,
};
// --------------------------------------------------------
// Type: CLUS_SCSI_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_SCSI_ADDRESS = extern struct {
    Anonymous: Windows.Win32.WindowsClustering.CLUS_SCSI_ADDRESS+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            PortNumber: {"kind":"Byte"},
            PathId: {"kind":"Byte"},
            TargetId: {"kind":"Byte"},
            Lun: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_SCSI_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_SCSI_ADDRESS = extern struct {
    __AnonymousBase_clusapi_L5546_C14: Windows.Win32.WindowsClustering.CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5547_C14: Windows.Win32.WindowsClustering.CLUS_SCSI_ADDRESS,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_VS_TOKEN_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_VS_TOKEN_INFO = extern struct {
    ProcessID: {"kind":"UInt32"},
    DesiredAccess: {"kind":"UInt32"},
    InheritHandle: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_PWD_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_PWD_INFO = extern struct {
    Flags: {"kind":"UInt32"},
    Password: {"kind":"Array","child": {"kind":"UInt16"}},
    CreatingDC: {"kind":"Array","child": {"kind":"UInt16"}},
    ObjectGuid: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_PWD_INFOEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_PWD_INFOEX = extern struct {
    Flags: {"kind":"UInt32"},
    Password: {"kind":"Array","child": {"kind":"UInt16"}},
    CreatingDC: {"kind":"Array","child": {"kind":"UInt16"}},
    ObjectGuid: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_DNN_LEADER_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_DNN_LEADER_STATUS = extern struct {
    IsOnline: Windows.Win32.SystemServices.BOOL,
    IsFileServerPresent: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: CLUS_DNN_SODAFS_CLONE_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_DNN_SODAFS_CLONE_STATUS = extern struct {
    NodeId: {"kind":"UInt32"},
    Status: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_STATE,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_IP_INFO_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_IP_INFO_ENTRY = extern struct {
    NodeId: {"kind":"UInt32"},
    AddressSize: {"kind":"UInt32"},
    Address: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL = extern struct {
    szName: {"kind":"Array","child": {"kind":"UInt16"}},
    NumEntries: {"kind":"UInt32"},
    IpInfo: {"kind":"Array","child": Windows.Win32.WindowsClustering.CLUS_NETNAME_IP_INFO_ENTRY},
};
// --------------------------------------------------------
// Type: CLUS_MAINTENANCE_MODE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_MAINTENANCE_MODE_INFO = extern struct {
    InMaintenance: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: CLUS_CSV_MAINTENANCE_MODE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CSV_MAINTENANCE_MODE_INFO = extern struct {
    InMaintenance: Windows.Win32.SystemServices.BOOL,
    VolumeName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: MAINTENANCE_MODE_TYPE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAINTENANCE_MODE_TYPE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_MAINTENANCE_MODE_INFOEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_MAINTENANCE_MODE_INFOEX = extern struct {
    InMaintenance: Windows.Win32.SystemServices.BOOL,
    MaintainenceModeType: Windows.Win32.WindowsClustering.MAINTENANCE_MODE_TYPE_ENUM,
    InternalState: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_STATE,
    Signature: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUS_SET_MAINTENANCE_MODE_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_SET_MAINTENANCE_MODE_INPUT = extern struct {
    InMaintenance: Windows.Win32.SystemServices.BOOL,
    ExtraParameterSize: {"kind":"UInt32"},
    ExtraParameter: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: CLUS_STORAGE_SET_DRIVELETTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STORAGE_SET_DRIVELETTER = extern struct {
    PartitionNumber: {"kind":"UInt32"},
    DriveLetterMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS = extern struct {
    AvailDrivelettersMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUS_STORAGE_REMAP_DRIVELETTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STORAGE_REMAP_DRIVELETTER = extern struct {
    CurrentDriveLetterMask: {"kind":"UInt32"},
    TargetDriveLetterMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUS_PROVIDER_STATE_CHANGE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PROVIDER_STATE_CHANGE_INFO = extern struct {
    dwSize: {"kind":"UInt32"},
    resourceState: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_STATE,
    szProviderId: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT = extern struct {
    FileServerName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT = extern struct {
    FileServerName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: CLUSPROP_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_LIST = extern struct {
    nPropertyCount: {"kind":"UInt32"},
    PropertyName: Windows.Win32.WindowsClustering.CLUSPROP_SZ,
};
// --------------------------------------------------------
// Type: CLUSPROP_IPADDR_ENABLENETBIOS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSPROP_IPADDR_ENABLENETBIOS = *opaque{
};
// --------------------------------------------------------
// Type: FILESHARE_CHANGE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FILESHARE_CHANGE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: FILESHARE_CHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FILESHARE_CHANGE = extern struct {
    Change: Windows.Win32.WindowsClustering.FILESHARE_CHANGE_ENUM,
    ShareName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: FILESHARE_CHANGE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FILESHARE_CHANGE_LIST = extern struct {
    NumEntries: {"kind":"UInt32"},
    ChangeEntry: {"kind":"Array","child": Windows.Win32.WindowsClustering.FILESHARE_CHANGE},
};
// --------------------------------------------------------
// Type: CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT = extern struct {
    GetTickCount64: {"kind":"UInt64"},
    GetSystemTime: Windows.Win32.WindowsProgramming.SYSTEMTIME,
    NodeId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSPROP_BUFFER_HELPER
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const CLUSPROP_BUFFER_HELPER = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_TYPE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_TYPE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NETWORK_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETWORK_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NETWORK_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETWORK_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NETWORK_ROLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETWORK_ROLE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NETWORK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NETWORK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NETWORK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NETWORK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_NETWORK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NETWORK_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NETWORK_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_NETWORK_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_NETWORK_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NETWORK_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NETWORK_ID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NETINTERFACE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETINTERFACE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_GROUP_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_GROUP_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NODE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NODE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NETWORK_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NETWORK_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_CREATE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_CREATE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_OPEN_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_OPEN_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_DELETE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_DELETE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_CLOSE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_CLOSE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_ENUM_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_ENUM_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_SET_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_SET_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_DELETE_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_DELETE_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_QUERY_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_QUERY_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_ENUM_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_ENUM_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_SYNC_DATABASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_SYNC_DATABASE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_CREATE_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_CREATE_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_BATCH_ADD_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_BATCH_ADD_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_BATCH_READ_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_BATCH_READ_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_GET_BATCH_NOTIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_GET_BATCH_NOTIFICATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CREATE_READ_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CREATE_READ_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_READ_BATCH_ADD_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_READ_BATCH_ADD_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_READ_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_READ_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_READ_BATCH_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_READ_BATCH_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_READ_BATCH_REPLY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_READ_BATCH_REPLY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_SET_ACCOUNT_ACCESS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_SET_ACCOUNT_ACCESS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_SETUP_PHASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SETUP_PHASE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SETUP_PHASE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SETUP_PHASE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SETUP_PHASE_SEVERITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SETUP_PHASE_SEVERITY = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSTER_SETUP_PROGRESS_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_SETUP_PROGRESS_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_CNOLESS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_CNOLESS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DESTROY_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DESTROY_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PLACEMENT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PLACEMENT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: GRP_PLACEMENT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const GRP_PLACEMENT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO = extern struct {
    PartitionOffset: {"kind":"UInt64"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY = extern struct {
    Count: {"kind":"UInt32"},
    PartitionArray: {"kind":"Array","child": Windows.Win32.WindowsClustering.SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO},
};
// --------------------------------------------------------
// Type: SR_REPLICATED_DISK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SR_REPLICATED_DISK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: SR_DISK_REPLICATION_ELIGIBLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SR_DISK_REPLICATION_ELIGIBLE = *opaque{
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS = extern struct {
    DataDiskGuid: Guid,
    IncludeOfflineDisks: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS = extern struct {
    SourceDataDiskGuid: Guid,
    TargetReplicationGroupGuid: Guid,
    SkipConnectivityCheck: {"kind":"Byte"},
    IncludeOfflineDisks: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS = extern struct {
    DataDiskGuid: Guid,
    IncludeAvailableStoargeDisks: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_DISK_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_DISK_INFO = extern struct {
    Reason: Windows.Win32.WindowsClustering.SR_DISK_REPLICATION_ELIGIBLE,
    DiskGuid: Guid,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT = extern struct {
    Count: {"kind":"UInt16"},
    DiskInfo: {"kind":"Array","child": Windows.Win32.WindowsClustering.SR_RESOURCE_TYPE_DISK_INFO},
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_DISK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_DISK = extern struct {
    Type: Windows.Win32.WindowsClustering.SR_REPLICATED_DISK_TYPE,
    ClusterDiskResourceGuid: Guid,
    ReplicationGroupId: Guid,
    ReplicationGroupName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT = extern struct {
    Count: {"kind":"UInt16"},
    ReplicatedDisks: {"kind":"Array","child": Windows.Win32.WindowsClustering.SR_RESOURCE_TYPE_REPLICATED_DISK},
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT = extern struct {
    dwFlags: {"kind":"UInt32"},
    guidPoolFilter: Guid,
};
// --------------------------------------------------------
// Type: RESOURCE_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_STATUS = extern struct {
    ResourceState: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_STATE,
    CheckPoint: {"kind":"UInt32"},
    WaitHint: {"kind":"UInt32"},
    EventHandle: Windows.Win32.SystemServices.HANDLE,
};
// --------------------------------------------------------
// Type: NodeUtilizationInfoElement
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NodeUtilizationInfoElement = extern struct {
    Id: {"kind":"UInt64"},
    AvailableMemory: {"kind":"UInt64"},
    AvailableMemoryAfterReclamation: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: ResourceUtilizationInfoElement
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ResourceUtilizationInfoElement = extern struct {
    PhysicalNumaId: {"kind":"UInt64"},
    CurrentMemory: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: VM_RESDLL_CONTEXT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VM_RESDLL_CONTEXT = *opaque{
};
// --------------------------------------------------------
// Type: RESDLL_CONTEXT_OPERATION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RESDLL_CONTEXT_OPERATION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: GET_OPERATION_CONTEXT_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GET_OPERATION_CONTEXT_PARAMS = extern struct {
    Size: {"kind":"UInt32"},
    Version: {"kind":"UInt32"},
    Type: Windows.Win32.WindowsClustering.RESDLL_CONTEXT_OPERATION_TYPE,
    Priority: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: RESOURCE_STATUS_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_STATUS_EX = extern struct {
    ResourceState: Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_STATE,
    CheckPoint: {"kind":"UInt32"},
    EventHandle: Windows.Win32.SystemServices.HANDLE,
    ApplicationSpecificErrorCode: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    WaitHint: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_STATUS_ROUTINE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_STATUS_ROUTINE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_STATUS_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_STATUS_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PQUORUM_RESOURCE_LOST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PQUORUM_RESOURCE_LOST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LOG_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LOG_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: PLOG_EVENT_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PLOG_EVENT_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POPEN_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLOSE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLOSE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PONLINE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PONLINE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POFFLINE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POFFLINE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PTERMINATE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PTERMINATE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PIS_ALIVE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PIS_ALIVE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PLOOKS_ALIVE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PLOOKS_ALIVE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PARBITRATE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PARBITRATE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRELEASE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRELEASE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESOURCE_CONTROL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESOURCE_CONTROL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESOURCE_TYPE_CONTROL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESOURCE_TYPE_CONTROL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POPEN_V2_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_V2_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PONLINE_V2_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PONLINE_V2_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POFFLINE_V2_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POFFLINE_V2_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCANCEL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCANCEL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PBEGIN_RESCALL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESCALL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PBEGIN_RESTYPECALL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESTYPECALL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: RESOURCE_EXIT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RESOURCE_EXIT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PBEGIN_RESCALL_AS_USER_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESCALL_AS_USER_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PBEGIN_RESTYPECALL_AS_USER_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESTYPECALL_AS_USER_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLRES_V1_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V1_FUNCTIONS = extern struct {
    Open: Windows.Win32.WindowsClustering.POPEN_ROUTINE,
    Close: Windows.Win32.WindowsClustering.PCLOSE_ROUTINE,
    Online: Windows.Win32.WindowsClustering.PONLINE_ROUTINE,
    Offline: Windows.Win32.WindowsClustering.POFFLINE_ROUTINE,
    Terminate: Windows.Win32.WindowsClustering.PTERMINATE_ROUTINE,
    LooksAlive: Windows.Win32.WindowsClustering.PLOOKS_ALIVE_ROUTINE,
    IsAlive: Windows.Win32.WindowsClustering.PIS_ALIVE_ROUTINE,
    Arbitrate: Windows.Win32.WindowsClustering.PARBITRATE_ROUTINE,
    Release: Windows.Win32.WindowsClustering.PRELEASE_ROUTINE,
    ResourceControl: Windows.Win32.WindowsClustering.PRESOURCE_CONTROL_ROUTINE,
    ResourceTypeControl: Windows.Win32.WindowsClustering.PRESOURCE_TYPE_CONTROL_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_V2_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V2_FUNCTIONS = extern struct {
    Open: Windows.Win32.WindowsClustering.POPEN_V2_ROUTINE,
    Close: Windows.Win32.WindowsClustering.PCLOSE_ROUTINE,
    Online: Windows.Win32.WindowsClustering.PONLINE_V2_ROUTINE,
    Offline: Windows.Win32.WindowsClustering.POFFLINE_V2_ROUTINE,
    Terminate: Windows.Win32.WindowsClustering.PTERMINATE_ROUTINE,
    LooksAlive: Windows.Win32.WindowsClustering.PLOOKS_ALIVE_ROUTINE,
    IsAlive: Windows.Win32.WindowsClustering.PIS_ALIVE_ROUTINE,
    Arbitrate: Windows.Win32.WindowsClustering.PARBITRATE_ROUTINE,
    Release: Windows.Win32.WindowsClustering.PRELEASE_ROUTINE,
    ResourceControl: Windows.Win32.WindowsClustering.PRESOURCE_CONTROL_ROUTINE,
    ResourceTypeControl: Windows.Win32.WindowsClustering.PRESOURCE_TYPE_CONTROL_ROUTINE,
    Cancel: Windows.Win32.WindowsClustering.PCANCEL_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_V3_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V3_FUNCTIONS = extern struct {
    Open: Windows.Win32.WindowsClustering.POPEN_V2_ROUTINE,
    Close: Windows.Win32.WindowsClustering.PCLOSE_ROUTINE,
    Online: Windows.Win32.WindowsClustering.PONLINE_V2_ROUTINE,
    Offline: Windows.Win32.WindowsClustering.POFFLINE_V2_ROUTINE,
    Terminate: Windows.Win32.WindowsClustering.PTERMINATE_ROUTINE,
    LooksAlive: Windows.Win32.WindowsClustering.PLOOKS_ALIVE_ROUTINE,
    IsAlive: Windows.Win32.WindowsClustering.PIS_ALIVE_ROUTINE,
    Arbitrate: Windows.Win32.WindowsClustering.PARBITRATE_ROUTINE,
    Release: Windows.Win32.WindowsClustering.PRELEASE_ROUTINE,
    BeginResourceControl: Windows.Win32.WindowsClustering.PBEGIN_RESCALL_ROUTINE,
    BeginResourceTypeControl: Windows.Win32.WindowsClustering.PBEGIN_RESTYPECALL_ROUTINE,
    Cancel: Windows.Win32.WindowsClustering.PCANCEL_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_V4_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V4_FUNCTIONS = extern struct {
    Open: Windows.Win32.WindowsClustering.POPEN_V2_ROUTINE,
    Close: Windows.Win32.WindowsClustering.PCLOSE_ROUTINE,
    Online: Windows.Win32.WindowsClustering.PONLINE_V2_ROUTINE,
    Offline: Windows.Win32.WindowsClustering.POFFLINE_V2_ROUTINE,
    Terminate: Windows.Win32.WindowsClustering.PTERMINATE_ROUTINE,
    LooksAlive: Windows.Win32.WindowsClustering.PLOOKS_ALIVE_ROUTINE,
    IsAlive: Windows.Win32.WindowsClustering.PIS_ALIVE_ROUTINE,
    Arbitrate: Windows.Win32.WindowsClustering.PARBITRATE_ROUTINE,
    Release: Windows.Win32.WindowsClustering.PRELEASE_ROUTINE,
    BeginResourceControl: Windows.Win32.WindowsClustering.PBEGIN_RESCALL_ROUTINE,
    BeginResourceTypeControl: Windows.Win32.WindowsClustering.PBEGIN_RESTYPECALL_ROUTINE,
    Cancel: Windows.Win32.WindowsClustering.PCANCEL_ROUTINE,
    BeginResourceControlAsUser: Windows.Win32.WindowsClustering.PBEGIN_RESCALL_AS_USER_ROUTINE,
    BeginResourceTypeControlAsUser: Windows.Win32.WindowsClustering.PBEGIN_RESTYPECALL_AS_USER_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_FUNCTION_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_FUNCTION_TABLE = extern struct {
    TableSize: {"kind":"UInt32"},
    Version: {"kind":"UInt32"},
    Anonymous: Windows.Win32.WindowsClustering.CLRES_FUNCTION_TABLE+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: RESUTIL_LARGEINT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_LARGEINT_DATA = extern struct {
    Default: Windows.Win32.SystemServices.LARGE_INTEGER,
    Minimum: Windows.Win32.SystemServices.LARGE_INTEGER,
    Maximum: Windows.Win32.SystemServices.LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: RESUTIL_ULARGEINT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_ULARGEINT_DATA = extern struct {
    Default: Windows.Win32.SystemServices.ULARGE_INTEGER,
    Minimum: Windows.Win32.SystemServices.ULARGE_INTEGER,
    Maximum: Windows.Win32.SystemServices.ULARGE_INTEGER,
};
// --------------------------------------------------------
// Type: RESUTIL_FILETIME_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_FILETIME_DATA = extern struct {
    Default: Windows.Win32.WindowsProgramming.FILETIME,
    Minimum: Windows.Win32.WindowsProgramming.FILETIME,
    Maximum: Windows.Win32.WindowsProgramming.FILETIME,
};
// --------------------------------------------------------
// Type: RESUTIL_PROPERTY_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_PROPERTY_ITEM = extern struct {
    Name: {"kind""Ptr","child":{"kind":"UInt16"}},
    KeyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    Format: {"kind":"UInt32"},
    Anonymous: Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM+_Anonymous_e__Union,
    Minimum: {"kind":"UInt32"},
    Maximum: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    Offset: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: PSTARTUP_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSTARTUP_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FAILURE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FAILURE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_APPLICATION_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_APPLICATION_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_LOCKED_MODE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_LOCKED_MODE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSIGNAL_FAILURE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSIGNAL_FAILURE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEND_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEND_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEND_TYPE_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEND_TYPE_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEXTEND_RES_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEXTEND_RES_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEXTEND_RES_TYPE_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEXTEND_RES_TYPE_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRAISE_RES_TYPE_NOTIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRAISE_RES_TYPE_NOTIFICATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCHANGE_RESOURCE_PROCESS_FOR_DUMPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCHANGE_RESOURCE_PROCESS_FOR_DUMPS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_INTERNAL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_INTERNAL_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLRES_CALLBACK_FUNCTION_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_CALLBACK_FUNCTION_TABLE = extern struct {
    LogEvent: Windows.Win32.WindowsClustering.PLOG_EVENT_ROUTINE,
    SetResourceStatusEx: Windows.Win32.WindowsClustering.PSET_RESOURCE_STATUS_ROUTINE_EX,
    SetResourceLockedMode: Windows.Win32.WindowsClustering.PSET_RESOURCE_LOCKED_MODE_ROUTINE,
    SignalFailure: Windows.Win32.WindowsClustering.PSIGNAL_FAILURE_ROUTINE,
    SetResourceInMemoryNodeLocalProperties: Windows.Win32.WindowsClustering.PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE,
    EndControlCall: Windows.Win32.WindowsClustering.PEND_CONTROL_CALL,
    EndTypeControlCall: Windows.Win32.WindowsClustering.PEND_TYPE_CONTROL_CALL,
    ExtendControlCall: Windows.Win32.WindowsClustering.PEXTEND_RES_CONTROL_CALL,
    ExtendTypeControlCall: Windows.Win32.WindowsClustering.PEXTEND_RES_TYPE_CONTROL_CALL,
    RaiseResTypeNotification: Windows.Win32.WindowsClustering.PRAISE_RES_TYPE_NOTIFICATION,
    ChangeResourceProcessForDumps: Windows.Win32.WindowsClustering.PCHANGE_RESOURCE_PROCESS_FOR_DUMPS,
    ChangeResTypeProcessForDumps: Windows.Win32.WindowsClustering.PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS,
    SetInternalState: Windows.Win32.WindowsClustering.PSET_INTERNAL_STATE,
    SetResourceLockedModeEx: Windows.Win32.WindowsClustering.PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE,
};
// --------------------------------------------------------
// Type: PSTARTUP_EX_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSTARTUP_EX_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: RESOURCE_MONITOR_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RESOURCE_MONITOR_STATE = *opaque{
};
// --------------------------------------------------------
// Type: MONITOR_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MONITOR_STATE = extern struct {
    LastUpdate: Windows.Win32.SystemServices.LARGE_INTEGER,
    State: Windows.Win32.WindowsClustering.RESOURCE_MONITOR_STATE,
    ActiveResource: Windows.Win32.SystemServices.HANDLE,
    ResmonStop: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: POST_UPGRADE_VERSION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const POST_UPGRADE_VERSION_INFO = extern struct {
    newMajorVersion: {"kind":"UInt32"},
    newUpgradeVersion: {"kind":"UInt32"},
    oldMajorVersion: {"kind":"UInt32"},
    oldUpgradeVersion: {"kind":"UInt32"},
    reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_HEALTH_FAULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_HEALTH_FAULT = extern struct {
    Id: {"kind""Ptr","child":{"kind":"UInt16"}},
    ErrorType: {"kind":"UInt32"},
    ErrorCode: {"kind":"UInt32"},
    Description: {"kind""Ptr","child":{"kind":"UInt16"}},
    Provider: {"kind""Ptr","child":{"kind":"UInt16"}},
    Flags: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CLUSTER_HEALTH_FAULT_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_HEALTH_FAULT_ARRAY = extern struct {
    numFaults: {"kind":"UInt32"},
    faults: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT},
};
// --------------------------------------------------------
// Type: PRESUTIL_START_RESOURCE_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_START_RESOURCE_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_RESOURCE_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_RESOURCE_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_STOP_RESOURCE_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_STOP_RESOURCE_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_STOP_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_STOP_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_CREATE_DIRECTORY_TREE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_CREATE_DIRECTORY_TREE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_IS_PATH_VALID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_IS_PATH_VALID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_PRIVATE_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_PRIVATE_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_ALL_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_ALL_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PRIVATE_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PRIVATE_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTY_SIZE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTY_SIZE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_PROPERTY_TABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_PROPERTY_TABLE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_TABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_TABLE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_TABLE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_TABLE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_UNKNOWN_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_UNKNOWN_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_DUP_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_DUP_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FREE_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FREE_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ADD_UNKNOWN_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ADD_UNKNOWN_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PRIVATE_PROPERTY_LIST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PRIVATE_PROPERTY_LIST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_DUP_STRING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_DUP_STRING = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_BINARY_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_BINARY_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_EXPAND_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_EXPAND_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_DWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_DWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_QWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_QWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_BINARY_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_BINARY_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_EXPAND_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_EXPAND_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_MULTI_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_MULTI_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_DWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_DWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_QWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_QWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_BINARY_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_BINARY_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_MULTI_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_MULTI_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_DWORD_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_DWORD_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_LONG_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_LONG_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_FILETIME_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_FILETIME_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FREE_ENVIRONMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FREE_ENVIRONMENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_EXPAND_ENVIRONMENT_STRINGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_EXPAND_ENVIRONMENT_STRINGS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_EXPAND_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_EXPAND_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_EXPANDED_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_EXPANDED_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_DWORD_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_DWORD_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_BINARY_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_BINARY_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_MULTI_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_MULTI_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_LONG_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_LONG_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_ULARGEINTEGER_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_ULARGEINTEGER_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_FILETIME_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_FILETIME_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUS_WORKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_WORKER = extern struct {
    hThread: Windows.Win32.SystemServices.HANDLE,
    Terminate: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: PWORKER_START_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PWORKER_START_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUS_WORKER_CREATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUS_WORKER_CREATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPIClusWorkerCheckTerminate
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPIClusWorkerCheckTerminate = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUS_WORKER_TERMINATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUS_WORKER_TERMINATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPRESOURCE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPRESOURCE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPRESOURCE_CALLBACK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPRESOURCE_CALLBACK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPGROUP_CALLBACK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPGROUP_CALLBACK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPNODE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPNODE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_RESOURCES_EQUAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_RESOURCES_EQUAL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_RESOURCE_TYPES_EQUAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_RESOURCE_TYPES_EQUAL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_IS_RESOURCE_CLASS_EQUAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_IS_RESOURCE_CLASS_EQUAL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_RESOURCES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_RESOURCES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_RESOURCES_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_RESOURCES_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTY_FORMATS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTY_FORMATS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_CORE_CLUSTER_RESOURCES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_CORE_CLUSTER_RESOURCES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_ROLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_ROLE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_ROLE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_ROLE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSTER_IS_PATH_ON_SHARED_VOLUME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_IS_PATH_ON_SHARED_VOLUME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_GET_VOLUME_PATH_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_GET_VOLUME_PATH_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_RESOURCES_EX2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_RESOURCES_EX2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: _HCLUSCRYPTPROVIDER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSCRYPTPROVIDER = opaque {
};
// --------------------------------------------------------
// Type: POPEN_CLUSTER_CRYPT_PROVIDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_CLUSTER_CRYPT_PROVIDER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POPEN_CLUSTER_CRYPT_PROVIDEREX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_CLUSTER_CRYPT_PROVIDEREX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLOSE_CLUSTER_CRYPT_PROVIDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLOSE_CLUSTER_CRYPT_PROVIDER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_ENCRYPT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_ENCRYPT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_DECRYPT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_DECRYPT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PFREE_CLUSTER_CRYPT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFREE_CLUSTER_CRYPT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PaxosTagCStruct
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PaxosTagCStruct = extern struct {
    __padding__PaxosTagVtable: {"kind":"UInt64"},
    __padding__NextEpochVtable: {"kind":"UInt64"},
    __padding__NextEpoch_DateTimeVtable: {"kind":"UInt64"},
    NextEpoch_DateTime_ticks: {"kind":"UInt64"},
    NextEpoch_Value: {"kind":"Int32"},
    __padding__BoundryNextEpoch: {"kind":"UInt32"},
    __padding__EpochVtable: {"kind":"UInt64"},
    __padding__Epoch_DateTimeVtable: {"kind":"UInt64"},
    Epoch_DateTime_ticks: {"kind":"UInt64"},
    Epoch_Value: {"kind":"Int32"},
    __padding__BoundryEpoch: {"kind":"UInt32"},
    Sequence: {"kind":"Int32"},
    __padding__BoundrySequence: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WitnessTagUpdateHelper
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WitnessTagUpdateHelper = extern struct {
    Version: {"kind":"Int32"},
    paxosToSet: Windows.Win32.WindowsClustering.PaxosTagCStruct,
    paxosToValidate: Windows.Win32.WindowsClustering.PaxosTagCStruct,
};
// --------------------------------------------------------
// Type: WitnessTagHelper
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WitnessTagHelper = extern struct {
    Version: {"kind":"Int32"},
    paxosToValidate: Windows.Win32.WindowsClustering.PaxosTagCStruct,
};
// --------------------------------------------------------
// Type: PREGISTER_APPINSTANCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PREGISTER_APPINSTANCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PREGISTER_APPINSTANCE_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PREGISTER_APPINSTANCE_VERSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PQUERY_APPINSTANCE_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PQUERY_APPINSTANCE_VERSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESET_ALL_APPINSTANCE_VERSIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESET_ALL_APPINSTANCE_VERSIONS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: SET_APP_INSTANCE_CSV_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SET_APP_INSTANCE_CSV_FLAGS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUADMEX_OBJECT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUADMEX_OBJECT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IGetClusterUIInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterUIInfo = *opaque{
    // TODO: Method 'GetClusterName'
    // TODO: Method 'GetLocale'
    // TODO: Method 'GetFont'
    // TODO: Method 'GetIcon'
};
// --------------------------------------------------------
// Type: IGetClusterDataInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterDataInfo = *opaque{
    // TODO: Method 'GetClusterName'
    // TODO: Method 'GetClusterHandle'
    // TODO: Method 'GetObjectCount'
};
// --------------------------------------------------------
// Type: IGetClusterObjectInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterObjectInfo = *opaque{
    // TODO: Method 'GetObjectName'
    // TODO: Method 'GetObjectType'
};
// --------------------------------------------------------
// Type: IGetClusterNodeInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterNodeInfo = *opaque{
    // TODO: Method 'GetNodeHandle'
};
// --------------------------------------------------------
// Type: IGetClusterGroupInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterGroupInfo = *opaque{
    // TODO: Method 'GetGroupHandle'
};
// --------------------------------------------------------
// Type: IGetClusterResourceInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterResourceInfo = *opaque{
    // TODO: Method 'GetResourceHandle'
    // TODO: Method 'GetResourceTypeName'
    // TODO: Method 'GetResourceNetworkName'
};
// --------------------------------------------------------
// Type: IGetClusterNetworkInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterNetworkInfo = *opaque{
    // TODO: Method 'GetNetworkHandle'
};
// --------------------------------------------------------
// Type: IGetClusterNetInterfaceInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterNetInterfaceInfo = *opaque{
    // TODO: Method 'GetNetInterfaceHandle'
};
// --------------------------------------------------------
// Type: IWCPropertySheetCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCPropertySheetCallback = *opaque{
    // TODO: Method 'AddPropertySheetPage'
};
// --------------------------------------------------------
// Type: IWEExtendPropertySheet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendPropertySheet = *opaque{
    // TODO: Method 'CreatePropertySheetPages'
};
// --------------------------------------------------------
// Type: IWCWizardCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCWizardCallback = *opaque{
    // TODO: Method 'AddWizardPage'
    // TODO: Method 'EnableNext'
};
// --------------------------------------------------------
// Type: IWEExtendWizard
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendWizard = *opaque{
    // TODO: Method 'CreateWizardPages'
};
// --------------------------------------------------------
// Type: IWCContextMenuCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCContextMenuCallback = *opaque{
    // TODO: Method 'AddExtensionMenuItem'
};
// --------------------------------------------------------
// Type: IWEExtendContextMenu
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendContextMenu = *opaque{
    // TODO: Method 'AddContextMenuItems'
};
// --------------------------------------------------------
// Type: IWEInvokeCommand
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEInvokeCommand = *opaque{
    // TODO: Method 'InvokeCommand'
};
// --------------------------------------------------------
// Type: IWCWizard97Callback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCWizard97Callback = *opaque{
    // TODO: Method 'AddWizard97Page'
    // TODO: Method 'EnableNext'
};
// --------------------------------------------------------
// Type: IWEExtendWizard97
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendWizard97 = *opaque{
    // TODO: Method 'CreateWizard97Pages'
};
// --------------------------------------------------------
// Type: ClusApplication
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusApplication = opaque {
};
// --------------------------------------------------------
// Type: Cluster
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Cluster = opaque {
};
// --------------------------------------------------------
// Type: ClusVersion
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusVersion = opaque {
};
// --------------------------------------------------------
// Type: ClusResType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResType = opaque {
};
// --------------------------------------------------------
// Type: ClusProperty
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusProperty = opaque {
};
// --------------------------------------------------------
// Type: ClusProperties
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusProperties = opaque {
};
// --------------------------------------------------------
// Type: DomainNames
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DomainNames = opaque {
};
// --------------------------------------------------------
// Type: ClusNetwork
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetwork = opaque {
};
// --------------------------------------------------------
// Type: ClusNetInterface
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetInterface = opaque {
};
// --------------------------------------------------------
// Type: ClusNetInterfaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetInterfaces = opaque {
};
// --------------------------------------------------------
// Type: ClusResDependencies
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResDependencies = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroupResources
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroupResources = opaque {
};
// --------------------------------------------------------
// Type: ClusResTypeResources
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResTypeResources = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroupPreferredOwnerNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroupPreferredOwnerNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusResPossibleOwnerNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResPossibleOwnerNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusNetworks
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetworks = opaque {
};
// --------------------------------------------------------
// Type: ClusNetworkNetInterfaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetworkNetInterfaces = opaque {
};
// --------------------------------------------------------
// Type: ClusNodeNetInterfaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNodeNetInterfaces = opaque {
};
// --------------------------------------------------------
// Type: ClusRefObject
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusRefObject = opaque {
};
// --------------------------------------------------------
// Type: ClusterNames
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusterNames = opaque {
};
// --------------------------------------------------------
// Type: ClusNode
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNode = opaque {
};
// --------------------------------------------------------
// Type: ClusNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroup
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroup = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroups
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroups = opaque {
};
// --------------------------------------------------------
// Type: ClusResource
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResource = opaque {
};
// --------------------------------------------------------
// Type: ClusResources
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResources = opaque {
};
// --------------------------------------------------------
// Type: ClusResTypes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResTypes = opaque {
};
// --------------------------------------------------------
// Type: ClusResTypePossibleOwnerNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResTypePossibleOwnerNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusPropertyValue
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPropertyValue = opaque {
};
// --------------------------------------------------------
// Type: ClusPropertyValues
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPropertyValues = opaque {
};
// --------------------------------------------------------
// Type: ClusPropertyValueData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPropertyValueData = opaque {
};
// --------------------------------------------------------
// Type: ClusPartition
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPartition = opaque {
};
// --------------------------------------------------------
// Type: ClusPartitionEx
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPartitionEx = opaque {
};
// --------------------------------------------------------
// Type: ClusPartitions
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPartitions = opaque {
};
// --------------------------------------------------------
// Type: ClusDisk
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusDisk = opaque {
};
// --------------------------------------------------------
// Type: ClusDisks
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusDisks = opaque {
};
// --------------------------------------------------------
// Type: ClusScsiAddress
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusScsiAddress = opaque {
};
// --------------------------------------------------------
// Type: ClusRegistryKeys
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusRegistryKeys = opaque {
};
// --------------------------------------------------------
// Type: ClusCryptoKeys
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusCryptoKeys = opaque {
};
// --------------------------------------------------------
// Type: ClusResDependents
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResDependents = opaque {
};
// --------------------------------------------------------
// Type: ISClusApplication
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusApplication = *opaque{
    // TODO: Method 'get_DomainNames'
    // TODO: Method 'get_ClusterNames'
    // TODO: Method 'OpenCluster'
};
// --------------------------------------------------------
// Type: ISDomainNames
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISDomainNames = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusterNames
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusterNames = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'get_DomainName'
};
// --------------------------------------------------------
// Type: ISClusRefObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusRefObject = *opaque{
    // TODO: Method 'get_Handle'
};
// --------------------------------------------------------
// Type: ISClusVersion
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusVersion = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_MajorVersion'
    // TODO: Method 'get_MinorVersion'
    // TODO: Method 'get_BuildNumber'
    // TODO: Method 'get_VendorId'
    // TODO: Method 'get_CSDVersion'
    // TODO: Method 'get_ClusterHighestVersion'
    // TODO: Method 'get_ClusterLowestVersion'
    // TODO: Method 'get_Flags'
    // TODO: Method 'get_MixedVersion'
};
// --------------------------------------------------------
// Type: ISCluster
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISCluster = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'Open'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_Version'
    // TODO: Method 'put_QuorumResource'
    // TODO: Method 'get_QuorumResource'
    // TODO: Method 'get_QuorumLogSize'
    // TODO: Method 'put_QuorumLogSize'
    // TODO: Method 'get_QuorumPath'
    // TODO: Method 'put_QuorumPath'
    // TODO: Method 'get_Nodes'
    // TODO: Method 'get_ResourceGroups'
    // TODO: Method 'get_Resources'
    // TODO: Method 'get_ResourceTypes'
    // TODO: Method 'get_Networks'
    // TODO: Method 'get_NetInterfaces'
};
// --------------------------------------------------------
// Type: ISClusNode
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNode = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_NodeID'
    // TODO: Method 'get_State'
    // TODO: Method 'Pause'
    // TODO: Method 'Resume'
    // TODO: Method 'Evict'
    // TODO: Method 'get_ResourceGroups'
    // TODO: Method 'get_Cluster'
    // TODO: Method 'get_NetInterfaces'
};
// --------------------------------------------------------
// Type: ISClusNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNetwork
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetwork = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_NetworkID'
    // TODO: Method 'get_State'
    // TODO: Method 'get_NetInterfaces'
    // TODO: Method 'get_Cluster'
};
// --------------------------------------------------------
// Type: ISClusNetworks
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetworks = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNetInterface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetInterface = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_State'
    // TODO: Method 'get_Cluster'
};
// --------------------------------------------------------
// Type: ISClusNetInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetInterfaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNodeNetInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNodeNetInterfaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNetworkNetInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetworkNetInterfaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusResGroup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroup = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_State'
    // TODO: Method 'get_OwnerNode'
    // TODO: Method 'get_Resources'
    // TODO: Method 'get_PreferredOwnerNodes'
    // TODO: Method 'Delete'
    // TODO: Method 'Online'
    // TODO: Method 'Move'
    // TODO: Method 'Offline'
    // TODO: Method 'get_Cluster'
};
// --------------------------------------------------------
// Type: ISClusResGroups
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroups = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResource = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_State'
    // TODO: Method 'get_CoreFlag'
    // TODO: Method 'BecomeQuorumResource'
    // TODO: Method 'Delete'
    // TODO: Method 'Fail'
    // TODO: Method 'Online'
    // TODO: Method 'Offline'
    // TODO: Method 'ChangeResourceGroup'
    // TODO: Method 'AddResourceNode'
    // TODO: Method 'RemoveResourceNode'
    // TODO: Method 'CanResourceBeDependent'
    // TODO: Method 'get_PossibleOwnerNodes'
    // TODO: Method 'get_Dependencies'
    // TODO: Method 'get_Dependents'
    // TODO: Method 'get_Group'
    // TODO: Method 'get_OwnerNode'
    // TODO: Method 'get_Cluster'
    // TODO: Method 'get_ClassInfo'
    // TODO: Method 'get_Disk'
    // TODO: Method 'get_RegistryKeys'
    // TODO: Method 'get_CryptoKeys'
    // TODO: Method 'get_TypeName'
    // TODO: Method 'get_Type'
    // TODO: Method 'get_MaintenanceMode'
    // TODO: Method 'put_MaintenanceMode'
};
// --------------------------------------------------------
// Type: ISClusResDependencies
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResDependencies = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusResGroupResources
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroupResources = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResTypeResources
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResTypeResources = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResources
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResources = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResGroupPreferredOwnerNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroupPreferredOwnerNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'InsertItem'
    // TODO: Method 'RemoveItem'
    // TODO: Method 'get_Modified'
    // TODO: Method 'SaveChanges'
    // TODO: Method 'AddItem'
};
// --------------------------------------------------------
// Type: ISClusResPossibleOwnerNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResPossibleOwnerNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
    // TODO: Method 'get_Modified'
};
// --------------------------------------------------------
// Type: ISClusResTypePossibleOwnerNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResTypePossibleOwnerNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusResType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResType = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Name'
    // TODO: Method 'Delete'
    // TODO: Method 'get_Cluster'
    // TODO: Method 'get_Resources'
    // TODO: Method 'get_PossibleOwnerNodes'
    // TODO: Method 'get_AvailableDisks'
};
// --------------------------------------------------------
// Type: ISClusResTypes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResTypes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusProperty = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Length'
    // TODO: Method 'get_ValueCount'
    // TODO: Method 'get_Values'
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Type'
    // TODO: Method 'put_Type'
    // TODO: Method 'get_Format'
    // TODO: Method 'put_Format'
    // TODO: Method 'get_ReadOnly'
    // TODO: Method 'get_Private'
    // TODO: Method 'get_Common'
    // TODO: Method 'get_Modified'
    // TODO: Method 'UseDefaultValue'
};
// --------------------------------------------------------
// Type: ISClusPropertyValue
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPropertyValue = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Type'
    // TODO: Method 'put_Type'
    // TODO: Method 'get_Format'
    // TODO: Method 'put_Format'
    // TODO: Method 'get_Length'
    // TODO: Method 'get_DataCount'
    // TODO: Method 'get_Data'
};
// --------------------------------------------------------
// Type: ISClusPropertyValues
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPropertyValues = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusProperties = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'UseDefaultValue'
    // TODO: Method 'SaveChanges'
    // TODO: Method 'get_ReadOnly'
    // TODO: Method 'get_Private'
    // TODO: Method 'get_Common'
    // TODO: Method 'get_Modified'
};
// --------------------------------------------------------
// Type: ISClusPropertyValueData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPropertyValueData = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusPartition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPartition = *opaque{
    // TODO: Method 'get_Flags'
    // TODO: Method 'get_DeviceName'
    // TODO: Method 'get_VolumeLabel'
    // TODO: Method 'get_SerialNumber'
    // TODO: Method 'get_MaximumComponentLength'
    // TODO: Method 'get_FileSystemFlags'
    // TODO: Method 'get_FileSystem'
};
// --------------------------------------------------------
// Type: ISClusPartitionEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPartitionEx = *opaque{
    // TODO: Method 'get_TotalSize'
    // TODO: Method 'get_FreeSpace'
    // TODO: Method 'get_DeviceNumber'
    // TODO: Method 'get_PartitionNumber'
    // TODO: Method 'get_VolumeGuid'
};
// --------------------------------------------------------
// Type: ISClusPartitions
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPartitions = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusDisk
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusDisk = *opaque{
    // TODO: Method 'get_Signature'
    // TODO: Method 'get_ScsiAddress'
    // TODO: Method 'get_DiskNumber'
    // TODO: Method 'get_Partitions'
};
// --------------------------------------------------------
// Type: ISClusDisks
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusDisks = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusScsiAddress
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusScsiAddress = *opaque{
    // TODO: Method 'get_PortNumber'
    // TODO: Method 'get_PathId'
    // TODO: Method 'get_TargetId'
    // TODO: Method 'get_Lun'
};
// --------------------------------------------------------
// Type: ISClusRegistryKeys
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusRegistryKeys = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusCryptoKeys
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusCryptoKeys = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusResDependents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResDependents = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetNodeClusterState(
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pdwClusterState: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenCluster(
    lpszClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterEx(
    lpszClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    DesiredAccess: {"kind":"UInt32"},
    GrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CloseCluster(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterName(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNewClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterInformation(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchClusterName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpClusterInfo: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTERVERSIONINFO},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterQuorumResource(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchResourceName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszDeviceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchDeviceName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpdwMaxQuorumLogSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterQuorumResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszDeviceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwMaxQuoLogSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn BackupClusterDatabase(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszPathName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RestoreClusterDatabase(
    lpszPathName: {"kind""Ptr","child":{"kind":"UInt16"}},
    bForce: Windows.Win32.SystemServices.BOOL,
    lpszQuorumDriveLetter: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterNetworkPriorityOrder(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    NetworkCount: {"kind":"UInt32"},
    NetworkList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterServiceAccountPassword(
    lpszClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszNewPassword: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},
    lpReturnStatusBuffer: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_SET_PASSWORD_STATUS},
    lpcbReturnStatusBufferSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterControl(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterUpgradeFunctionalLevel(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    perform: Windows.Win32.SystemServices.BOOL,
    pfnProgressCallback: Windows.Win32.WindowsClustering.PCLUSTER_UPGRADE_PROGRESS_CALLBACK,
    pvCallbackArg: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterNotifyPortV2(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    Filters: {"kind""Ptr","child":Windows.Win32.WindowsClustering.NOTIFY_FILTER_AND_TYPE},
    dwFilterCount: {"kind":"UInt32"},
    dwNotifyKey: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RegisterClusterNotifyV2(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    Filter: Windows.Win32.WindowsClustering.NOTIFY_FILTER_AND_TYPE,
    hObject: Windows.Win32.SystemServices.HANDLE,
    dwNotifyKey: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetNotifyEventHandle(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    lphTargetEvent: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNotifyV2(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    lpdwNotifyKey: {"kind""Ptr","child":{"kind":"UIntPtr"}},
    pFilterAndType: {"kind""Ptr","child":Windows.Win32.WindowsClustering.NOTIFY_FILTER_AND_TYPE},
    buffer: {"kind""Ptr","child":{"kind":"Byte"}},
    lpbBufferSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszObjectId: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchObjectId: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszParentId: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchParentId: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszType: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchType: {"kind""Ptr","child":{"kind":"UInt32"}},
    dwMilliseconds: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterNotifyPort(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    dwFilter: {"kind":"UInt32"},
    dwNotifyKey: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RegisterClusterNotify(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    dwFilterType: {"kind":"UInt32"},
    hObject: Windows.Win32.SystemServices.HANDLE,
    dwNotifyKey: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNotify(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    lpdwNotifyKey: {"kind""Ptr","child":{"kind":"UIntPtr"}},
    lpdwFilterType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},
    dwMilliseconds: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNotifyPort(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterOpenEnum(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    dwType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGetEnumCount(
    hEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterEnum(
    hEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSENUM},
    dwIndex: {"kind":"UInt32"},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterCloseEnum(
    hEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSENUM},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterOpenEnumEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    dwType: {"kind":"UInt32"},
    pOptions: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGetEnumCountEx(
    hClusterEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSENUMEX},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterEnumEx(
    hClusterEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSENUMEX},
    dwIndex: {"kind":"UInt32"},
    pItem: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_ENUM_ITEM},
    cbItem: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterCloseEnumEx(
    hClusterEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSENUMEX},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterGroupSet(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    groupSetName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterGroupSet(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszGroupSetName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterGroupSet(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterGroupSet(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAddGroupToGroupSet(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAddGroupToGroupSetWithDomains(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    faultDomain: {"kind":"UInt32"},
    updateDomain: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRemoveGroupFromGroupSet(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetControl(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterGroupDependency(
    hDependentGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hProviderGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetGroupDependencyExpression(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    lpszDependencyExpression: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterGroupDependency(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hDependsOn: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterGroupSetDependency(
    hDependentGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    hProviderGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterGroupSetDependencyExpression(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    lpszDependencyExprssion: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterGroupSetDependency(
    hGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    hDependsOn: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterGroupToGroupSetDependency(
    hDependentGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hProviderGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterGroupToGroupSetDependency(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hDependsOn: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetOpenEnum(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetGetEnumCount(
    hGroupSetEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSETENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetEnum(
    hGroupSetEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSETENUM},
    dwIndex: {"kind":"UInt32"},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetCloseEnum(
    hGroupSetEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSETENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddCrossClusterGroupSetDependency(
    hDependentGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    lpRemoteClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpRemoteGroupSetName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveCrossClusterGroupSetDependency(
    hDependentGroupSet: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPSET},
    lpRemoteClusterName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpRemoteGroupSetName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterAvailabilitySet(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpAvailabilitySetName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pAvailabilitySetConfig: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_AVAILABILITY_SET_CONFIG},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeReplacement(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeNameCurrent: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszNodeNameNew: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterCreateAffinityRule(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    ruleName: {"kind""Ptr","child":{"kind":"UInt16"}},
    ruleType: Windows.Win32.WindowsClustering.CLUS_AFFINITY_RULE_TYPE,

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRemoveAffinityRule(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    ruleName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAddGroupToAffinityRule(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    ruleName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRemoveGroupFromAffinityRule(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    ruleName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAffinityRuleControl(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    affinityRuleName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNode(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNodeEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},
    lpdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNodeById(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    nodeId: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNode(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNodeState(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNodeId(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    lpszNodeId: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromNode(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn PauseClusterNode(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ResumeClusterNode(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn EvictClusterNode(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceOpenEnum(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszNetworkName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceEnum(
    hNetInterfaceEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACEENUM},
    dwIndex: {"kind":"UInt32"},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceCloseEnum(
    hNetInterfaceEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACEENUM},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeOpenEnum(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwType: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeOpenEnumEx(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwType: {"kind":"UInt32"},
    pOptions: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeGetEnumCountEx(
    hNodeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODEENUMEX},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeEnumEx(
    hNodeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODEENUMEX},
    dwIndex: {"kind":"UInt32"},
    pItem: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_ENUM_ITEM},
    cbItem: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeCloseEnumEx(
    hNodeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODEENUMEX},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeGetEnumCount(
    hNodeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODEENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeCloseEnum(
    hNodeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODEENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeEnum(
    hNodeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODEENUM},
    dwIndex: {"kind":"UInt32"},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn EvictClusterNodeEx(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwTimeOut: {"kind":"UInt32"},
    phrCleanupStatus: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceTypeKey(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    samDesired: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterGroup(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterGroup(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterGroupEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},
    lpdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn PauseClusterNodeEx(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    bDrainNode: Windows.Win32.SystemServices.BOOL,
    dwPauseFlags: {"kind":"UInt32"},
    hNodeDrainTarget: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ResumeClusterNodeEx(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    eResumeFailbackType: Windows.Win32.WindowsClustering.CLUSTER_NODE_RESUME_FAILBACK_TYPE,
    dwResumeFlagsReserved: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterGroupEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pGroupInfo: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_CREATE_GROUP_INFO},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupOpenEnumEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszProperties: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbProperties: {"kind":"UInt32"},
    lpszRoProperties: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbRoProperties: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupGetEnumCountEx(
    hGroupEnumEx: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPENUMEX},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupEnumEx(
    hGroupEnumEx: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPENUMEX},
    dwIndex: {"kind":"UInt32"},
    pItem: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_GROUP_ENUM_ITEM},
    cbItem: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupCloseEnumEx(
    hGroupEnumEx: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPENUMEX},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceOpenEnumEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszProperties: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbProperties: {"kind":"UInt32"},
    lpszRoProperties: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbRoProperties: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceGetEnumCountEx(
    hResourceEnumEx: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESENUMEX},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceEnumEx(
    hResourceEnumEx: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESENUMEX},
    dwIndex: {"kind":"UInt32"},
    pItem: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_RESOURCE_ENUM_ITEM},
    cbItem: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceCloseEnumEx(
    hResourceEnumEx: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESENUMEX},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterGroupEx(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hDestinationNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwOnlineFlags: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Byte"}},
    cbInBufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterGroupEx(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    dwOfflineFlags: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Byte"}},
    cbInBufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterResourceEx(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    dwOnlineFlags: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Byte"}},
    cbInBufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterResourceEx(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    dwOfflineFlags: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Byte"}},
    cbInBufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn MoveClusterGroupEx(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hDestinationNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwMoveFlags: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Byte"}},
    cbInBufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CancelClusterGroupOperation(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    dwCancelFlags_RESERVED: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RestartClusterResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterGroupState(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchNodeName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterGroupName(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    lpszGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterGroupNodeList(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    NodeCount: {"kind":"UInt32"},
    NodeList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hDestinationNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn MoveClusterGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hDestinationNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DestroyClusterGroup(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupOpenEnum(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    dwType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupGetEnumCount(
    hGroupEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupEnum(
    hGroupEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPENUM},
    dwIndex: {"kind":"UInt32"},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupCloseEnum(
    hGroupEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUPENUM},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterResource(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterResource(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterResourceEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},
    lpdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceState(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchNodeName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszGroupName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchGroupName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterResourceName(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn FailClusterResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterResource(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ChangeClusterResourceGroup(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ChangeClusterResourceGroupEx(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    Flags: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterResourceNode(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterResourceNode(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterResourceDependency(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hDependsOn: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterResourceDependency(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hDependsOn: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterResourceDependencyExpression(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszDependencyExpression: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceDependencyExpression(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszDependencyExpression: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchDependencyExpression: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddResourceToClusterSharedVolumes(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveResourceFromClusterSharedVolumes(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn IsFileOnClusterSharedVolume(
    lpszPathName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pbFileIsOnSharedVolume: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterSharedVolumeSetSnapshotState(
    guidSnapshotSet: Guid,
    lpszVolumeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    state: Windows.Win32.WindowsClustering.CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE,

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CanResourceBeDependent(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hResourceDependent: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceControl(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceControlAsUser(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeControl(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeControlAsUser(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupControl(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeControl(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceNetworkName(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpBuffer: {"kind""Ptr","child":{"kind":"UInt16"}},
    nSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceOpenEnum(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    dwType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceGetEnumCount(
    hResEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceEnum(
    hResEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESENUM},
    dwIndex: {"kind":"UInt32"},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceCloseEnum(
    hResEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterResourceType(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszDisplayName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszResourceTypeDll: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwLooksAlivePollInterval: {"kind":"UInt32"},
    dwIsAlivePollInterval: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterResourceType(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeOpenEnum(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszResourceTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeGetEnumCount(
    hResTypeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESTYPEENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeEnum(
    hResTypeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESTYPEENUM},
    dwIndex: {"kind":"UInt32"},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeCloseEnum(
    hResTypeEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESTYPEENUM},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetwork(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNetworkName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetworkEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNetworkName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},
    lpdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNetwork(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromNetwork(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkOpenEnum(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},
    dwType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkGetEnumCount(
    hNetworkEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORKENUM},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkEnum(
    hNetworkEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORKENUM},
    dwIndex: {"kind":"UInt32"},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkCloseEnum(
    hNetworkEnum: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORKENUM},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetworkState(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterNetworkName(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetworkId(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},
    lpszNetworkId: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkControl(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetInterface(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszInterfaceName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetInterfaceEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszInterfaceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},
    lpdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetInterface(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszNetworkName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszInterfaceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchInterfaceName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNetInterface(
    hNetInterface: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromNetInterface(
    hNetInterface: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACE},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetInterfaceState(
    hNetInterface: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceControl(
    hNetInterface: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACE},
    hHostNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    dwControlCode: {"kind":"UInt32"},
    lpInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nInBufferSize: {"kind":"UInt32"},
    lpOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    nOutBufferSize: {"kind":"UInt32"},
    lpBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterKey(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    samDesired: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterGroupKey(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    samDesired: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceKey(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    samDesired: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNodeKey(
    hNode: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNODE},
    samDesired: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetworkKey(
    hNetwork: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETWORK},
    samDesired: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetInterfaceKey(
    hNetInterface: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HNETINTERFACE},
    samDesired: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateKey(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpszSubKey: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwOptions: {"kind":"UInt32"},
    samDesired: {"kind":"UInt32"},
    lpSecurityAttributes: {"kind""Ptr","child":Windows.Win32.SystemServices.SECURITY_ATTRIBUTES},
    phkResult: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.HKEY},
    lpdwDisposition: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegOpenKey(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpszSubKey: {"kind""Ptr","child":{"kind":"UInt16"}},
    samDesired: {"kind":"UInt32"},
    phkResult: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.HKEY},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegDeleteKey(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpszSubKey: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseKey(
    hKey: Windows.Win32.WindowsProgramming.HKEY,

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegEnumKey(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    dwIndex: {"kind":"UInt32"},
    lpszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpftLastWriteTime: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.FILETIME},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegSetValue(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwType: {"kind":"UInt32"},
    lpData: {"kind""Ptr","child":{"kind":"Byte"}},
    cbData: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegDeleteValue(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegQueryValue(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpdwValueType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpData: {"kind""Ptr","child":{"kind":"Byte"}},
    lpcbData: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegEnumValue(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    dwIndex: {"kind":"UInt32"},
    lpszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchValueName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpdwType: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpData: {"kind""Ptr","child":{"kind":"Byte"}},
    lpcbData: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegQueryInfoKey(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    lpcSubKeys: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpcchMaxSubKeyLen: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpcValues: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpcchMaxValueNameLen: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpcbMaxValueLen: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpcbSecurityDescriptor: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpftLastWriteTime: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.FILETIME},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegGetKeySecurity(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    RequestedInformation: {"kind":"UInt32"},
    pSecurityDescriptor: {"kind""Ptr","child":{"kind":"Void"}},
    lpcbSecurityDescriptor: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegSetKeySecurity(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    SecurityInformation: {"kind":"UInt32"},
    pSecurityDescriptor: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegSyncDatabase(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    flags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateBatch(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    pHREGBATCH: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCH}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegBatchAddCommand(
    hRegBatch: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCH},
    dwCommand: Windows.Win32.WindowsClustering.CLUSTER_REG_COMMAND,
    wzName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwOptions: {"kind":"UInt32"},
    lpData: {"kind""Ptr","child":{"kind":"Void"}},
    cbData: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseBatch(
    hRegBatch: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCH},
    bCommit: Windows.Win32.SystemServices.BOOL,
    failedCommandNumber: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseBatchEx(
    hRegBatch: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCH},
    flags: {"kind":"UInt32"},
    failedCommandNumber: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegBatchReadCommand(
    hBatchNotification: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCHNOTIFICATION},
    pBatchCommand: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_BATCH_COMMAND},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegBatchCloseNotification(
    hBatchNotification: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCHNOTIFICATION},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateBatchNotifyPort(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    phBatchNotifyPort: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCHPORT}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseBatchNotifyPort(
    hBatchNotifyPort: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCHPORT},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegGetBatchNotification(
    hBatchNotify: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCHPORT},
    phBatchNotification: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGBATCHNOTIFICATION}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateReadBatch(
    hKey: Windows.Win32.WindowsProgramming.HKEY,
    phRegReadBatch: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCH}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegReadBatchAddCommand(
    hRegReadBatch: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCH},
    wzSubkeyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    wzValueName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseReadBatch(
    hRegReadBatch: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCH},
    phRegReadBatchReply: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCHREPLY}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseReadBatchEx(
    hRegReadBatch: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCH},
    flags: {"kind":"UInt32"},
    phRegReadBatchReply: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCHREPLY}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegReadBatchReplyNextCommand(
    hRegReadBatchReply: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCHREPLY},
    pBatchCommand: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_READ_BATCH_COMMAND},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseReadBatchReply(
    hRegReadBatchReply: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HREGREADBATCHREPLY},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterSetAccountAccess(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    szAccountSID: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwAccess: {"kind":"UInt32"},
    dwControlType: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateCluster(
    pConfig: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CREATE_CLUSTER_CONFIG},
    pfnProgressCallback: Windows.Win32.WindowsClustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterNameAccount(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    pConfig: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CREATE_CLUSTER_NAME_ACCOUNT},
    pfnProgressCallback: Windows.Win32.WindowsClustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterNameAccount(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    bDeleteComputerObjects: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineCNOResTypeFromNodelist(
    cNodes: {"kind":"UInt32"},
    ppszNodeNames: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pCNOResType: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_MGMT_POINT_RESTYPE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineCNOResTypeFromCluster(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    pCNOResType: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_MGMT_POINT_RESTYPE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineClusterCloudTypeFromNodelist(
    cNodes: {"kind":"UInt32"},
    ppszNodeNames: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pCloudType: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_CLOUD_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineClusterCloudTypeFromCluster(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    pCloudType: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_CLOUD_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetNodeCloudTypeDW(
    ppszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    NodeCloudType: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RegisterClusterResourceTypeNotifyV2(
    hChange: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCHANGE},
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    Flags: {"kind":"Int64"},
    resTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwNotifyKey: {"kind":"UIntPtr"},

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterNode(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pfnProgressCallback: Windows.Win32.WindowsClustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterStorageNode(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszNodeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pfnProgressCallback: Windows.Win32.WindowsClustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: {"kind""Ptr","child":{"kind":"Void"}},
    lpszClusterStorageNodeDescription: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszClusterStorageNodeLocation: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterStorageNode(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    lpszClusterStorageEnclosureName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwTimeout: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DestroyCluster(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    pfnProgressCallback: Windows.Win32.WindowsClustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: {"kind""Ptr","child":{"kind":"Void"}},
    fdeleteVirtualComputerObjects: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn InitializeClusterHealthFault(
    clusterHealthFault: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn InitializeClusterHealthFaultArray(
    clusterHealthFaultArray: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT_ARRAY},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn FreeClusterHealthFault(
    clusterHealthFault: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn FreeClusterHealthFaultArray(
    clusterHealthFaultArray: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT_ARRAY},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusGetClusterHealthFaults(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    objects: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT_ARRAY},
    flags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusRemoveClusterHealthFault(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    id: {"kind""Ptr","child":{"kind":"UInt16"}},
    flags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusAddClusterHealthFault(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    failure: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSTER_HEALTH_FAULT},
    param2: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilStartResourceService(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    phServiceHandle: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyResourceService(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilStopResourceService(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyService(
    hServiceHandle: {"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilStopService(
    hServiceHandle: {"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilCreateDirectoryTree(
    pszPath: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilIsPathValid(
    pszPath: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumProperties(
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pszOutProperties: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbOutPropertiesSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumPrivateProperties(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszOutProperties: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbOutPropertiesSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetProperties(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutPropertyListSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetAllProperties(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutPropertyListSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPrivateProperties(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pOutPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbOutPropertyListSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPropertySize(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTableItem: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pcbOutPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pnPropertyCount: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetProperty(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTableItem: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutPropertyItem: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    pcbOutPropertyItemSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyPropertyTable(
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
    bAllowUnknownProperties: Windows.Win32.SystemServices.BOOL,
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyTable(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
    bAllowUnknownProperties: Windows.Win32.SystemServices.BOOL,
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyTableEx(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
    bAllowUnknownProperties: Windows.Win32.SystemServices.BOOL,
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},
    bForceWrite: Windows.Win32.SystemServices.BOOL,
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyParameterBlock(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
    pInParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyParameterBlockEx(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
    pInParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},
    bForceWrite: Windows.Win32.SystemServices.BOOL,
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetUnknownProperties(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPropertiesToParameterBlock(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},
    bCheckForRequiredProperties: Windows.Win32.SystemServices.BOOL,
    pszNameOfPropInError: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilPropertyListFromParameterBlock(
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    pcbOutPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pInParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupParameterBlock(
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pInParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFreeParameterBlock(
    pOutParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pInParams: {"kind""Ptr","child":{"kind":"Byte"}},
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilAddUnknownProperties(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    pcbOutPropertyListSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPrivatePropertyList(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyPrivatePropertyList(
    pInPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbInPropertyListSize: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupString(
    pszInString: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetBinaryValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    ppbOutValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbOutValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetSzValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetDwordValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pdwOutValue: {"kind""Ptr","child":{"kind":"UInt32"}},
    dwDefaultValue: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetQwordValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pqwOutValue: {"kind""Ptr","child":{"kind":"UInt64"}},
    qwDefaultValue: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetBinaryValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pbNewValue: {"kind""Ptr","child":{"kind":"Byte"}},
    cbNewValueSize: {"kind":"UInt32"},
    ppbOutValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbOutValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetSzValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszNewValue: {"kind""Ptr","child":{"kind":"UInt16"}},
    ppszOutString: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetExpandSzValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszNewValue: {"kind""Ptr","child":{"kind":"UInt16"}},
    ppszOutString: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetMultiSzValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszNewValue: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbNewValueSize: {"kind":"UInt32"},
    ppszOutValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pcbOutValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetDwordValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwNewValue: {"kind":"UInt32"},
    pdwOutValue: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetQwordValue(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    pszValueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    qwNewValue: {"kind":"UInt64"},
    pqwOutValue: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetValueEx(
    hkeyClusterKey: Windows.Win32.WindowsProgramming.HKEY,
    valueName: {"kind""Ptr","child":{"kind":"UInt16"}},
    valueType: {"kind":"UInt32"},
    valueData: {"kind""Ptr","child":{"kind":"Byte"}},
    valueSize: {"kind":"UInt32"},
    flags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetBinaryProperty(
    ppbOutValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbOutValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pValueStruct: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSPROP_BINARY},
    pbOldValue: {"kind""Ptr","child":{"kind":"Byte"}},
    cbOldValueSize: {"kind":"UInt32"},
    ppPropertyList: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetSzProperty(
    ppszOutValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pValueStruct: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSPROP_SZ},
    pszOldValue: {"kind""Ptr","child":{"kind":"UInt16"}},
    ppPropertyList: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetMultiSzProperty(
    ppszOutValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pcbOutValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    pValueStruct: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSPROP_SZ},
    pszOldValue: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbOldValueSize: {"kind":"UInt32"},
    ppPropertyList: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetDwordProperty(
    pdwOutValue: {"kind""Ptr","child":{"kind":"UInt32"}},
    pValueStruct: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSPROP_DWORD},
    dwOldValue: {"kind":"UInt32"},
    dwMinimum: {"kind":"UInt32"},
    dwMaximum: {"kind":"UInt32"},
    ppPropertyList: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetLongProperty(
    plOutValue: {"kind""Ptr","child":{"kind":"Int32"}},
    pValueStruct: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSPROP_LONG},
    lOldValue: {"kind":"Int32"},
    lMinimum: {"kind":"Int32"},
    lMaximum: {"kind":"Int32"},
    ppPropertyList: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetFileTimeProperty(
    pftOutValue: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.FILETIME},
    pValueStruct: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSPROP_FILETIME},
    ftOldValue: Windows.Win32.WindowsProgramming.FILETIME,
    ftMinimum: Windows.Win32.WindowsProgramming.FILETIME,
    ftMaximum: Windows.Win32.WindowsProgramming.FILETIME,
    ppPropertyList: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyListSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetEnvironmentWithNetName(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFreeEnvironment(
    lpEnvironment: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilExpandEnvironmentStrings(
    pszSrc: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetResourceServiceEnvironment(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    pfnLogEvent: Windows.Win32.WindowsClustering.PLOG_EVENT_ROUTINE,
    hResourceHandle: {"kind":"IntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilRemoveResourceServiceEnvironment(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pfnLogEvent: Windows.Win32.WindowsClustering.PLOG_EVENT_ROUTINE,
    hResourceHandle: {"kind":"IntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetResourceServiceStartParameters(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    schSCMHandle: {"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__},
    phService: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__}},
    pfnLogEvent: Windows.Win32.WindowsClustering.PLOG_EVENT_ROUTINE,
    hResourceHandle: {"kind":"IntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindSzProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszPropertyValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindExpandSzProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszPropertyValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindExpandedSzProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszPropertyValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindDwordProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pdwPropertyValue: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindBinaryProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pbPropertyValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbPropertyValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindMultiSzProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszPropertyValue: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pcbPropertyValueSize: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindLongProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    plPropertyValue: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindULargeIntegerProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    plPropertyValue: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindFileTimeProperty(
    pPropertyList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyListSize: {"kind":"UInt32"},
    pszPropertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pftPropertyValue: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.FILETIME},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerCreate(
    lpWorker: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_WORKER},
    lpStartAddress: Windows.Win32.WindowsClustering.PWORKER_START_ROUTINE,
    lpParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerCheckTerminate(
    lpWorker: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_WORKER},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerTerminate(
    lpWorker: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_WORKER},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerTerminateEx(
    ClusWorker: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_WORKER},
    TimeoutInMilliseconds: {"kind":"UInt32"},
    WaitOnly: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkersTerminate(
    ClusWorkers: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_WORKER}},
    ClusWorkersCount: {"kind":"UIntPtr"},
    TimeoutInMilliseconds: {"kind":"UInt32"},
    WaitOnly: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilResourcesEqual(
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilResourceTypesEqual(
    lpszResourceTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilIsResourceClassEqual(
    prci: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_RESOURCE_CLASS_INFO},
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumResources(
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszResTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pResCallBack: Windows.Win32.WindowsClustering.LPRESOURCE_CALLBACK,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumResourcesEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszResTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pResCallBack: Windows.Win32.WindowsClustering.LPRESOURCE_CALLBACK_EX,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependency(
    hSelf: Windows.Win32.SystemServices.HANDLE,
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByName(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: Windows.Win32.SystemServices.HANDLE,
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},
    bRecurse: Windows.Win32.SystemServices.BOOL,

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByClass(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: Windows.Win32.SystemServices.HANDLE,
    prci: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_RESOURCE_CLASS_INFO},
    bRecurse: Windows.Win32.SystemServices.BOOL,

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceNameDependency(
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependentIPAddressProps(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    pszAddress: {"kind""Ptr","child":{"kind":"UInt16"}},
    pcchAddress: {"kind""Ptr","child":{"kind":"UInt32"}},
    pszSubnetMask: {"kind""Ptr","child":{"kind":"UInt16"}},
    pcchSubnetMask: {"kind""Ptr","child":{"kind":"UInt32"}},
    pszNetwork: {"kind""Ptr","child":{"kind":"UInt16"}},
    pcchNetwork: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindDependentDiskResourceDriveLetter(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    pszDriveLetter: {"kind""Ptr","child":{"kind":"UInt16"}},
    pcchDriveLetter: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilTerminateServiceProcessFromResDll(
    dwServicePid: {"kind":"UInt32"},
    bOffline: Windows.Win32.SystemServices.BOOL,
    pdwResourceState: {"kind""Ptr","child":{"kind":"UInt32"}},
    pfnLogEvent: Windows.Win32.WindowsClustering.PLOG_EVENT_ROUTINE,
    hResourceHandle: {"kind":"IntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPropertyFormats(
    pPropertyTable: {"kind""Ptr","child":Windows.Win32.WindowsClustering.RESUTIL_PROPERTY_ITEM},
    pOutPropertyFormatList: {"kind""Ptr","child":{"kind":"Void"}},
    cbPropertyFormatListSize: {"kind":"UInt32"},
    pcbBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},
    pcbRequired: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetCoreClusterResources(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    phClusterNameResource: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE}},
    phClusterIPAddressResource: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE}},
    phClusterQuorumResource: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceName(
    hResource: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    pszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pcchResourceNameInOut: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetClusterRoleState(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    eClusterRole: Windows.Win32.WindowsClustering.CLUSTER_ROLE,

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterIsPathOnSharedVolume(
    lpszPathName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ClusterGetVolumePathName(
    lpszFileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszVolumePathName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cchBufferLength: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ClusterGetVolumeNameForVolumeMountPoint(
    lpszVolumeMountPoint: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszVolumeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cchBufferLength: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterPrepareSharedVolumeForBackup(
    lpszFileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszVolumePathName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchVolumePathName: {"kind""Ptr","child":{"kind":"UInt32"}},
    lpszVolumeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpcchVolumeName: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterClearBackupStateForSharedVolume(
    lpszVolumePathName: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetResourceServiceStartParametersEx(
    pszServiceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    schSCMHandle: {"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__},
    phService: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.SC_HANDLE__}},
    dwDesiredAccess: {"kind":"UInt32"},
    pfnLogEvent: Windows.Win32.WindowsClustering.PLOG_EVENT_ROUTINE,
    hResourceHandle: {"kind":"IntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumResourcesEx2(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    lpszResTypeName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pResCallBack: Windows.Win32.WindowsClustering.LPRESOURCE_CALLBACK_EX,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},
    dwDesiredAccess: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyEx(
    hSelf: Windows.Win32.SystemServices.HANDLE,
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByNameEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: Windows.Win32.SystemServices.HANDLE,
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},
    bRecurse: Windows.Win32.SystemServices.BOOL,
    dwDesiredAccess: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByClassEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: Windows.Win32.SystemServices.HANDLE,
    prci: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUS_RESOURCE_CLASS_INFO},
    bRecurse: Windows.Win32.SystemServices.BOOL,
    dwDesiredAccess: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceNameDependencyEx(
    lpszResourceName: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszResourceType: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDesiredAccess: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetCoreClusterResourcesEx(
    hClusterIn: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    phClusterNameResourceOut: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE}},
    phClusterQuorumResourceOut: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE}},
    dwDesiredAccess: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn OpenClusterCryptProvider(
    lpszResource: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszProvider: {"kind""Ptr","child":{"kind":"SByte"}},
    dwType: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn OpenClusterCryptProviderEx(
    lpszResource: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszKeyname: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszProvider: {"kind""Ptr","child":{"kind":"SByte"}},
    dwType: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn CloseClusterCryptProvider(
    hClusCryptProvider: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSCRYPTPROVIDER},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterEncrypt(
    hClusCryptProvider: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSCRYPTPROVIDER},
    pData: {"kind""Ptr","child":{"kind":"Byte"}},
    cbData: {"kind":"UInt32"},
    ppData: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbData: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterDecrypt(
    hClusCryptProvider: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSCRYPTPROVIDER},
    pCryptInput: {"kind""Ptr","child":{"kind":"Byte"}},
    cbCryptInput: {"kind":"UInt32"},
    ppCryptOutput: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pcbCryptOutput: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn FreeClusterCrypt(
    pCryptInfo: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilPaxosComparer(
    left: {"kind""Ptr","child":Windows.Win32.WindowsClustering.PaxosTagCStruct},
    right: {"kind""Ptr","child":Windows.Win32.WindowsClustering.PaxosTagCStruct},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilLeftPaxosIsLessThanRight(
    left: {"kind""Ptr","child":Windows.Win32.WindowsClustering.PaxosTagCStruct},
    right: {"kind""Ptr","child":Windows.Win32.WindowsClustering.PaxosTagCStruct},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilsDeleteKeyTree(
    key: Windows.Win32.WindowsProgramming.HKEY,
    keyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    treatNoKeyAsError: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGroupsEqual(
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    pEqual: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumGroups(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    pResCallBack: Windows.Win32.WindowsClustering.LPGROUP_CALLBACK_EX,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumGroupsEx(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    groupType: Windows.Win32.WindowsClustering.CLUSGROUP_TYPE,
    pResCallBack: Windows.Win32.WindowsClustering.LPGROUP_CALLBACK_EX,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupGroup(
    group: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    copy: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetClusterGroupType(
    hGroup: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HGROUP},
    groupType: {"kind""Ptr","child":Windows.Win32.WindowsClustering.CLUSGROUP_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetCoreGroup(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilResourceDepEnum(
    hSelf: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    enumType: {"kind":"UInt32"},
    pResCallBack: Windows.Win32.WindowsClustering.LPRESOURCE_CALLBACK_EX,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupResource(
    group: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE},
    copy: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsClustering._HRESOURCE}},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetClusterId(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    guid: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilNodeEnum(
    hCluster: {"kind""Ptr","child":Windows.Win32.WindowsClustering._HCLUSTER},
    pNodeCallBack: Windows.Win32.WindowsClustering.LPNODE_CALLBACK,
    pParameter: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn RegisterAppInstance(
    ProcessHandle: Windows.Win32.SystemServices.HANDLE,
    AppInstanceId: {"kind""Ptr","child":Guid},
    ChildrenInheritAppInstance: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn RegisterAppInstanceVersion(
    AppInstanceId: {"kind""Ptr","child":Guid},
    InstanceVersionHigh: {"kind":"UInt64"},
    InstanceVersionLow: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn QueryAppInstanceVersion(
    AppInstanceId: {"kind""Ptr","child":Guid},
    InstanceVersionHigh: {"kind""Ptr","child":{"kind":"UInt64"}},
    InstanceVersionLow: {"kind""Ptr","child":{"kind":"UInt64"}},
    VersionStatus: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn ResetAllAppInstanceVersions(

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn SetAppInstanceCsvFlags(
    ProcessHandle: Windows.Win32.SystemServices.HANDLE,
    Mask: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
],

"unicode_aliases": [
]}
