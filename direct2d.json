{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: PALETTEENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PALETTEENTRY = extern struct {
    peRed: {"kind":"Byte"},
    peGreen: {"kind":"Byte"},
    peBlue: {"kind":"Byte"},
    peFlags: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: D2D1_ALPHA_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_ALPHA_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_PIXEL_FORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_PIXEL_FORMAT = extern struct {
    format: Windows.Win32.Dxgi.DXGI_FORMAT,
    alphaMode: Windows.Win32.Direct2D.D2D1_ALPHA_MODE,
};
// --------------------------------------------------------
// Type: D2D_POINT_2U
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_POINT_2U = extern struct {
    x: {"kind":"UInt32"},
    y: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D_POINT_2F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_POINT_2F = extern struct {
    x: {"kind":"Single"},
    y: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D_VECTOR_2F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_VECTOR_2F = extern struct {
    x: {"kind":"Single"},
    y: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D_VECTOR_3F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_VECTOR_3F = extern struct {
    x: {"kind":"Single"},
    y: {"kind":"Single"},
    z: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D_VECTOR_4F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_VECTOR_4F = extern struct {
    x: {"kind":"Single"},
    y: {"kind":"Single"},
    z: {"kind":"Single"},
    w: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D_RECT_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_RECT_F = extern struct {
    left: {"kind":"Single"},
    top: {"kind":"Single"},
    right: {"kind":"Single"},
    bottom: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D_RECT_U
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_RECT_U = extern struct {
    left: {"kind":"UInt32"},
    top: {"kind":"UInt32"},
    right: {"kind":"UInt32"},
    bottom: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D_SIZE_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_SIZE_F = extern struct {
    width: {"kind":"Single"},
    height: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D_SIZE_U
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_SIZE_U = extern struct {
    width: {"kind":"UInt32"},
    height: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D_MATRIX_3X2_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_MATRIX_3X2_F = extern struct {
    Anonymous: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous2_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous2_e__Struct = extern struct {
            _11: {"kind":"Single"},
            _12: {"kind":"Single"},
            _21: {"kind":"Single"},
            _22: {"kind":"Single"},
            _31: {"kind":"Single"},
            _32: {"kind":"Single"},
        };
        // --------------------------------------------------------
        // Type: _Anonymous1_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous1_e__Struct = extern struct {
            m11: {"kind":"Single"},
            m12: {"kind":"Single"},
            m21: {"kind":"Single"},
            m22: {"kind":"Single"},
            dx: {"kind":"Single"},
            dy: {"kind":"Single"},
        };
    };
};
// --------------------------------------------------------
// Type: D2D_MATRIX_4X3_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_MATRIX_4X3_F = extern struct {
    Anonymous: Windows.Win32.Direct2D.D2D_MATRIX_4X3_F+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _11: {"kind":"Single"},
            _12: {"kind":"Single"},
            _13: {"kind":"Single"},
            _21: {"kind":"Single"},
            _22: {"kind":"Single"},
            _23: {"kind":"Single"},
            _31: {"kind":"Single"},
            _32: {"kind":"Single"},
            _33: {"kind":"Single"},
            _41: {"kind":"Single"},
            _42: {"kind":"Single"},
            _43: {"kind":"Single"},
        };
    };
};
// --------------------------------------------------------
// Type: D2D_MATRIX_4X4_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_MATRIX_4X4_F = extern struct {
    Anonymous: Windows.Win32.Direct2D.D2D_MATRIX_4X4_F+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _11: {"kind":"Single"},
            _12: {"kind":"Single"},
            _13: {"kind":"Single"},
            _14: {"kind":"Single"},
            _21: {"kind":"Single"},
            _22: {"kind":"Single"},
            _23: {"kind":"Single"},
            _24: {"kind":"Single"},
            _31: {"kind":"Single"},
            _32: {"kind":"Single"},
            _33: {"kind":"Single"},
            _34: {"kind":"Single"},
            _41: {"kind":"Single"},
            _42: {"kind":"Single"},
            _43: {"kind":"Single"},
            _44: {"kind":"Single"},
        };
    };
};
// --------------------------------------------------------
// Type: D2D_MATRIX_5X4_F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D_MATRIX_5X4_F = extern struct {
    Anonymous: Windows.Win32.Direct2D.D2D_MATRIX_5X4_F+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _11: {"kind":"Single"},
            _12: {"kind":"Single"},
            _13: {"kind":"Single"},
            _14: {"kind":"Single"},
            _21: {"kind":"Single"},
            _22: {"kind":"Single"},
            _23: {"kind":"Single"},
            _24: {"kind":"Single"},
            _31: {"kind":"Single"},
            _32: {"kind":"Single"},
            _33: {"kind":"Single"},
            _34: {"kind":"Single"},
            _41: {"kind":"Single"},
            _42: {"kind":"Single"},
            _43: {"kind":"Single"},
            _44: {"kind":"Single"},
            _51: {"kind":"Single"},
            _52: {"kind":"Single"},
            _53: {"kind":"Single"},
            _54: {"kind":"Single"},
        };
    };
};
// --------------------------------------------------------
// Type: D2D1_INTERPOLATION_MODE_DEFINITION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_INTERPOLATION_MODE_DEFINITION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GAMMA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GAMMA = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_OPACITY_MASK_CONTENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_OPACITY_MASK_CONTENT = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_EXTEND_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_EXTEND_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_ANTIALIAS_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_ANTIALIAS_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TEXT_ANTIALIAS_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TEXT_ANTIALIAS_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAP_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BITMAP_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DRAW_TEXT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DRAW_TEXT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAP_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BITMAP_PROPERTIES = extern struct {
    pixelFormat: Windows.Win32.Direct2D.D2D1_PIXEL_FORMAT,
    dpiX: {"kind":"Single"},
    dpiY: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_GRADIENT_STOP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_GRADIENT_STOP = extern struct {
    position: {"kind":"Single"},
    color: Windows.Win32.Dxgi.DXGI_RGBA,
};
// --------------------------------------------------------
// Type: D2D1_BRUSH_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BRUSH_PROPERTIES = extern struct {
    opacity: {"kind":"Single"},
    transform: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F,
};
// --------------------------------------------------------
// Type: D2D1_BITMAP_BRUSH_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BITMAP_BRUSH_PROPERTIES = extern struct {
    extendModeX: Windows.Win32.Direct2D.D2D1_EXTEND_MODE,
    extendModeY: Windows.Win32.Direct2D.D2D1_EXTEND_MODE,
    interpolationMode: Windows.Win32.Direct2D.D2D1_BITMAP_INTERPOLATION_MODE,
};
// --------------------------------------------------------
// Type: D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES = extern struct {
    startPoint: Windows.Win32.Direct2D.D2D_POINT_2F,
    endPoint: Windows.Win32.Direct2D.D2D_POINT_2F,
};
// --------------------------------------------------------
// Type: D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES = extern struct {
    center: Windows.Win32.Direct2D.D2D_POINT_2F,
    gradientOriginOffset: Windows.Win32.Direct2D.D2D_POINT_2F,
    radiusX: {"kind":"Single"},
    radiusY: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_ARC_SIZE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_ARC_SIZE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CAP_STYLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CAP_STYLE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DASH_STYLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DASH_STYLE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_LINE_JOIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_LINE_JOIN = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COMBINE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COMBINE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GEOMETRY_RELATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GEOMETRY_RELATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GEOMETRY_SIMPLIFICATION_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GEOMETRY_SIMPLIFICATION_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FIGURE_BEGIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FIGURE_BEGIN = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FIGURE_END
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FIGURE_END = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BEZIER_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BEZIER_SEGMENT = extern struct {
    point1: Windows.Win32.Direct2D.D2D_POINT_2F,
    point2: Windows.Win32.Direct2D.D2D_POINT_2F,
    point3: Windows.Win32.Direct2D.D2D_POINT_2F,
};
// --------------------------------------------------------
// Type: D2D1_TRIANGLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_TRIANGLE = extern struct {
    point1: Windows.Win32.Direct2D.D2D_POINT_2F,
    point2: Windows.Win32.Direct2D.D2D_POINT_2F,
    point3: Windows.Win32.Direct2D.D2D_POINT_2F,
};
// --------------------------------------------------------
// Type: D2D1_PATH_SEGMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PATH_SEGMENT = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SWEEP_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SWEEP_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FILL_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FILL_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_ARC_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_ARC_SEGMENT = extern struct {
    point: Windows.Win32.Direct2D.D2D_POINT_2F,
    size: Windows.Win32.Direct2D.D2D_SIZE_F,
    rotationAngle: {"kind":"Single"},
    sweepDirection: Windows.Win32.Direct2D.D2D1_SWEEP_DIRECTION,
    arcSize: Windows.Win32.Direct2D.D2D1_ARC_SIZE,
};
// --------------------------------------------------------
// Type: D2D1_QUADRATIC_BEZIER_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_QUADRATIC_BEZIER_SEGMENT = extern struct {
    point1: Windows.Win32.Direct2D.D2D_POINT_2F,
    point2: Windows.Win32.Direct2D.D2D_POINT_2F,
};
// --------------------------------------------------------
// Type: D2D1_ELLIPSE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_ELLIPSE = extern struct {
    point: Windows.Win32.Direct2D.D2D_POINT_2F,
    radiusX: {"kind":"Single"},
    radiusY: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_ROUNDED_RECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_ROUNDED_RECT = extern struct {
    rect: Windows.Win32.Direct2D.D2D_RECT_F,
    radiusX: {"kind":"Single"},
    radiusY: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_STROKE_STYLE_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_STROKE_STYLE_PROPERTIES = extern struct {
    startCap: Windows.Win32.Direct2D.D2D1_CAP_STYLE,
    endCap: Windows.Win32.Direct2D.D2D1_CAP_STYLE,
    dashCap: Windows.Win32.Direct2D.D2D1_CAP_STYLE,
    lineJoin: Windows.Win32.Direct2D.D2D1_LINE_JOIN,
    miterLimit: {"kind":"Single"},
    dashStyle: Windows.Win32.Direct2D.D2D1_DASH_STYLE,
    dashOffset: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_LAYER_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_LAYER_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_LAYER_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_LAYER_PARAMETERS = extern struct {
    contentBounds: Windows.Win32.Direct2D.D2D_RECT_F,
    geometricMask: Windows.Win32.Direct2D.ID2D1Geometry,
    maskAntialiasMode: Windows.Win32.Direct2D.D2D1_ANTIALIAS_MODE,
    maskTransform: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F,
    opacity: {"kind":"Single"},
    opacityBrush: Windows.Win32.Direct2D.ID2D1Brush,
    layerOptions: Windows.Win32.Direct2D.D2D1_LAYER_OPTIONS,
};
// --------------------------------------------------------
// Type: D2D1_WINDOW_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_WINDOW_STATE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_RENDER_TARGET_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_RENDER_TARGET_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FEATURE_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FEATURE_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_RENDER_TARGET_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_RENDER_TARGET_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_PRESENT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PRESENT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_RENDER_TARGET_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_RENDER_TARGET_PROPERTIES = extern struct {
    type: Windows.Win32.Direct2D.D2D1_RENDER_TARGET_TYPE,
    pixelFormat: Windows.Win32.Direct2D.D2D1_PIXEL_FORMAT,
    dpiX: {"kind":"Single"},
    dpiY: {"kind":"Single"},
    usage: Windows.Win32.Direct2D.D2D1_RENDER_TARGET_USAGE,
    minLevel: Windows.Win32.Direct2D.D2D1_FEATURE_LEVEL,
};
// --------------------------------------------------------
// Type: D2D1_HWND_RENDER_TARGET_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_HWND_RENDER_TARGET_PROPERTIES = extern struct {
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pixelSize: Windows.Win32.Direct2D.D2D_SIZE_U,
    presentOptions: Windows.Win32.Direct2D.D2D1_PRESENT_OPTIONS,
};
// --------------------------------------------------------
// Type: D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DRAWING_STATE_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_DRAWING_STATE_DESCRIPTION = extern struct {
    antialiasMode: Windows.Win32.Direct2D.D2D1_ANTIALIAS_MODE,
    textAntialiasMode: Windows.Win32.Direct2D.D2D1_TEXT_ANTIALIAS_MODE,
    tag1: {"kind":"UInt64"},
    tag2: {"kind":"UInt64"},
    transform: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F,
};
// --------------------------------------------------------
// Type: D2D1_DC_INITIALIZE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DC_INITIALIZE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DEBUG_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DEBUG_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FACTORY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FACTORY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FACTORY_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_FACTORY_OPTIONS = extern struct {
    debugLevel: Windows.Win32.Direct2D.D2D1_DEBUG_LEVEL,
};
// --------------------------------------------------------
// Type: ID2D1Resource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Resource = *opaque{
    // TODO: Method 'GetFactory'
};
// --------------------------------------------------------
// Type: ID2D1Image
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Image = *opaque{
};
// --------------------------------------------------------
// Type: ID2D1Bitmap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Bitmap = *opaque{
    // TODO: Method 'GetSize'
    // TODO: Method 'GetPixelSize'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'GetDpi'
    // TODO: Method 'CopyFromBitmap'
    // TODO: Method 'CopyFromRenderTarget'
    // TODO: Method 'CopyFromMemory'
};
// --------------------------------------------------------
// Type: ID2D1GradientStopCollection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GradientStopCollection = *opaque{
    // TODO: Method 'GetGradientStopCount'
    // TODO: Method 'GetGradientStops'
    // TODO: Method 'GetColorInterpolationGamma'
    // TODO: Method 'GetExtendMode'
};
// --------------------------------------------------------
// Type: ID2D1Brush
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Brush = *opaque{
    // TODO: Method 'SetOpacity'
    // TODO: Method 'SetTransform'
    // TODO: Method 'GetOpacity'
    // TODO: Method 'GetTransform'
};
// --------------------------------------------------------
// Type: ID2D1BitmapBrush
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1BitmapBrush = *opaque{
    // TODO: Method 'SetExtendModeX'
    // TODO: Method 'SetExtendModeY'
    // TODO: Method 'SetInterpolationMode'
    // TODO: Method 'SetBitmap'
    // TODO: Method 'GetExtendModeX'
    // TODO: Method 'GetExtendModeY'
    // TODO: Method 'GetInterpolationMode'
    // TODO: Method 'GetBitmap'
};
// --------------------------------------------------------
// Type: ID2D1SolidColorBrush
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SolidColorBrush = *opaque{
    // TODO: Method 'SetColor'
    // TODO: Method 'GetColor'
};
// --------------------------------------------------------
// Type: ID2D1LinearGradientBrush
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1LinearGradientBrush = *opaque{
    // TODO: Method 'SetStartPoint'
    // TODO: Method 'SetEndPoint'
    // TODO: Method 'GetStartPoint'
    // TODO: Method 'GetEndPoint'
    // TODO: Method 'GetGradientStopCollection'
};
// --------------------------------------------------------
// Type: ID2D1RadialGradientBrush
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1RadialGradientBrush = *opaque{
    // TODO: Method 'SetCenter'
    // TODO: Method 'SetGradientOriginOffset'
    // TODO: Method 'SetRadiusX'
    // TODO: Method 'SetRadiusY'
    // TODO: Method 'GetCenter'
    // TODO: Method 'GetGradientOriginOffset'
    // TODO: Method 'GetRadiusX'
    // TODO: Method 'GetRadiusY'
    // TODO: Method 'GetGradientStopCollection'
};
// --------------------------------------------------------
// Type: ID2D1StrokeStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1StrokeStyle = *opaque{
    // TODO: Method 'GetStartCap'
    // TODO: Method 'GetEndCap'
    // TODO: Method 'GetDashCap'
    // TODO: Method 'GetMiterLimit'
    // TODO: Method 'GetLineJoin'
    // TODO: Method 'GetDashOffset'
    // TODO: Method 'GetDashStyle'
    // TODO: Method 'GetDashesCount'
    // TODO: Method 'GetDashes'
};
// --------------------------------------------------------
// Type: ID2D1Geometry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Geometry = *opaque{
    // TODO: Method 'GetBounds'
    // TODO: Method 'GetWidenedBounds'
    // TODO: Method 'StrokeContainsPoint'
    // TODO: Method 'FillContainsPoint'
    // TODO: Method 'CompareWithGeometry'
    // TODO: Method 'Simplify'
    // TODO: Method 'Tessellate'
    // TODO: Method 'CombineWithGeometry'
    // TODO: Method 'Outline'
    // TODO: Method 'ComputeArea'
    // TODO: Method 'ComputeLength'
    // TODO: Method 'ComputePointAtLength'
    // TODO: Method 'Widen'
};
// --------------------------------------------------------
// Type: ID2D1RectangleGeometry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1RectangleGeometry = *opaque{
    // TODO: Method 'GetRect'
};
// --------------------------------------------------------
// Type: ID2D1RoundedRectangleGeometry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1RoundedRectangleGeometry = *opaque{
    // TODO: Method 'GetRoundedRect'
};
// --------------------------------------------------------
// Type: ID2D1EllipseGeometry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1EllipseGeometry = *opaque{
    // TODO: Method 'GetEllipse'
};
// --------------------------------------------------------
// Type: ID2D1GeometryGroup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GeometryGroup = *opaque{
    // TODO: Method 'GetFillMode'
    // TODO: Method 'GetSourceGeometryCount'
    // TODO: Method 'GetSourceGeometries'
};
// --------------------------------------------------------
// Type: ID2D1TransformedGeometry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1TransformedGeometry = *opaque{
    // TODO: Method 'GetSourceGeometry'
    // TODO: Method 'GetTransform'
};
// --------------------------------------------------------
// Type: ID2D1SimplifiedGeometrySink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SimplifiedGeometrySink = *opaque{
    // TODO: Method 'SetFillMode'
    // TODO: Method 'SetSegmentFlags'
    // TODO: Method 'BeginFigure'
    // TODO: Method 'AddLines'
    // TODO: Method 'AddBeziers'
    // TODO: Method 'EndFigure'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ID2D1GeometrySink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GeometrySink = *opaque{
    // TODO: Method 'AddLine'
    // TODO: Method 'AddBezier'
    // TODO: Method 'AddQuadraticBezier'
    // TODO: Method 'AddQuadraticBeziers'
    // TODO: Method 'AddArc'
};
// --------------------------------------------------------
// Type: ID2D1TessellationSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1TessellationSink = *opaque{
    // TODO: Method 'AddTriangles'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ID2D1PathGeometry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1PathGeometry = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'Stream'
    // TODO: Method 'GetSegmentCount'
    // TODO: Method 'GetFigureCount'
};
// --------------------------------------------------------
// Type: ID2D1Mesh
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Mesh = *opaque{
    // TODO: Method 'Open'
};
// --------------------------------------------------------
// Type: ID2D1Layer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Layer = *opaque{
    // TODO: Method 'GetSize'
};
// --------------------------------------------------------
// Type: ID2D1DrawingStateBlock
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DrawingStateBlock = *opaque{
    // TODO: Method 'GetDescription'
    // TODO: Method 'SetDescription'
    // TODO: Method 'SetTextRenderingParams'
    // TODO: Method 'GetTextRenderingParams'
};
// --------------------------------------------------------
// Type: ID2D1RenderTarget
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1RenderTarget = *opaque{
    // TODO: Method 'CreateBitmap'
    // TODO: Method 'CreateBitmapFromWicBitmap'
    // TODO: Method 'CreateSharedBitmap'
    // TODO: Method 'CreateBitmapBrush'
    // TODO: Method 'CreateSolidColorBrush'
    // TODO: Method 'CreateGradientStopCollection'
    // TODO: Method 'CreateLinearGradientBrush'
    // TODO: Method 'CreateRadialGradientBrush'
    // TODO: Method 'CreateCompatibleRenderTarget'
    // TODO: Method 'CreateLayer'
    // TODO: Method 'CreateMesh'
    // TODO: Method 'DrawLine'
    // TODO: Method 'DrawRectangle'
    // TODO: Method 'FillRectangle'
    // TODO: Method 'DrawRoundedRectangle'
    // TODO: Method 'FillRoundedRectangle'
    // TODO: Method 'DrawEllipse'
    // TODO: Method 'FillEllipse'
    // TODO: Method 'DrawGeometry'
    // TODO: Method 'FillGeometry'
    // TODO: Method 'FillMesh'
    // TODO: Method 'FillOpacityMask'
    // TODO: Method 'DrawBitmap'
    // TODO: Method 'DrawTextA'
    // TODO: Method 'DrawTextLayout'
    // TODO: Method 'DrawGlyphRun'
    // TODO: Method 'SetTransform'
    // TODO: Method 'GetTransform'
    // TODO: Method 'SetAntialiasMode'
    // TODO: Method 'GetAntialiasMode'
    // TODO: Method 'SetTextAntialiasMode'
    // TODO: Method 'GetTextAntialiasMode'
    // TODO: Method 'SetTextRenderingParams'
    // TODO: Method 'GetTextRenderingParams'
    // TODO: Method 'SetTags'
    // TODO: Method 'GetTags'
    // TODO: Method 'PushLayer'
    // TODO: Method 'PopLayer'
    // TODO: Method 'Flush'
    // TODO: Method 'SaveDrawingState'
    // TODO: Method 'RestoreDrawingState'
    // TODO: Method 'PushAxisAlignedClip'
    // TODO: Method 'PopAxisAlignedClip'
    // TODO: Method 'Clear'
    // TODO: Method 'BeginDraw'
    // TODO: Method 'EndDraw'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'SetDpi'
    // TODO: Method 'GetDpi'
    // TODO: Method 'GetSize'
    // TODO: Method 'GetPixelSize'
    // TODO: Method 'GetMaximumBitmapSize'
    // TODO: Method 'IsSupported'
};
// --------------------------------------------------------
// Type: ID2D1BitmapRenderTarget
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1BitmapRenderTarget = *opaque{
    // TODO: Method 'GetBitmap'
};
// --------------------------------------------------------
// Type: ID2D1HwndRenderTarget
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1HwndRenderTarget = *opaque{
    // TODO: Method 'CheckWindowState'
    // TODO: Method 'Resize'
    // TODO: Method 'GetHwnd'
};
// --------------------------------------------------------
// Type: ID2D1GdiInteropRenderTarget
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GdiInteropRenderTarget = *opaque{
    // TODO: Method 'GetDC'
    // TODO: Method 'ReleaseDC'
};
// --------------------------------------------------------
// Type: ID2D1DCRenderTarget
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DCRenderTarget = *opaque{
    // TODO: Method 'BindDC'
};
// --------------------------------------------------------
// Type: ID2D1Factory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory = *opaque{
    // TODO: Method 'ReloadSystemMetrics'
    // TODO: Method 'GetDesktopDpi'
    // TODO: Method 'CreateRectangleGeometry'
    // TODO: Method 'CreateRoundedRectangleGeometry'
    // TODO: Method 'CreateEllipseGeometry'
    // TODO: Method 'CreateGeometryGroup'
    // TODO: Method 'CreateTransformedGeometry'
    // TODO: Method 'CreatePathGeometry'
    // TODO: Method 'CreateStrokeStyle'
    // TODO: Method 'CreateDrawingStateBlock'
    // TODO: Method 'CreateWicBitmapRenderTarget'
    // TODO: Method 'CreateHwndRenderTarget'
    // TODO: Method 'CreateDxgiSurfaceRenderTarget'
    // TODO: Method 'CreateDCRenderTarget'
};
// --------------------------------------------------------
// Type: D2D1_BORDER_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BORDER_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CHANNEL_SELECTOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CHANNEL_SELECTOR = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAPSOURCE_ORIENTATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BITMAPSOURCE_ORIENTATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GAUSSIANBLUR_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GAUSSIANBLUR_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GAUSSIANBLUR_OPTIMIZATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GAUSSIANBLUR_OPTIMIZATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DIRECTIONALBLUR_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DIRECTIONALBLUR_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DIRECTIONALBLUR_OPTIMIZATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DIRECTIONALBLUR_OPTIMIZATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SHADOW_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SHADOW_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SHADOW_OPTIMIZATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SHADOW_OPTIMIZATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BLEND_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BLEND_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BLEND_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BLEND_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SATURATION_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SATURATION_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HUEROTATION_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HUEROTATION_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLORMATRIX_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLORMATRIX_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLORMATRIX_ALPHA_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLORMATRIX_ALPHA_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAPSOURCE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BITMAPSOURCE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAPSOURCE_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BITMAPSOURCE_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAPSOURCE_ALPHA_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BITMAPSOURCE_ALPHA_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COMPOSITE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COMPOSITE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_3DTRANSFORM_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_3DTRANSFORM_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_3DTRANSFORM_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_3DTRANSFORM_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_3DPERSPECTIVETRANSFORM_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_3DPERSPECTIVETRANSFORM_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_2DAFFINETRANSFORM_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_2DAFFINETRANSFORM_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DPICOMPENSATION_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DPICOMPENSATION_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DPICOMPENSATION_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DPICOMPENSATION_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SCALE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SCALE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SCALE_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SCALE_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TURBULENCE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TURBULENCE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TURBULENCE_NOISE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TURBULENCE_NOISE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DISPLACEMENTMAP_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DISPLACEMENTMAP_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLORMANAGEMENT_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLORMANAGEMENT_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLORMANAGEMENT_ALPHA_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLORMANAGEMENT_ALPHA_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLORMANAGEMENT_QUALITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLORMANAGEMENT_QUALITY = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLORMANAGEMENT_RENDERING_INTENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLORMANAGEMENT_RENDERING_INTENT = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HISTOGRAM_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HISTOGRAM_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_POINTSPECULAR_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_POINTSPECULAR_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_POINTSPECULAR_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_POINTSPECULAR_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SPOTSPECULAR_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SPOTSPECULAR_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SPOTSPECULAR_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SPOTSPECULAR_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DISTANTSPECULAR_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DISTANTSPECULAR_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DISTANTSPECULAR_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DISTANTSPECULAR_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_POINTDIFFUSE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_POINTDIFFUSE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_POINTDIFFUSE_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_POINTDIFFUSE_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SPOTDIFFUSE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SPOTDIFFUSE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SPOTDIFFUSE_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SPOTDIFFUSE_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DISTANTDIFFUSE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DISTANTDIFFUSE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DISTANTDIFFUSE_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DISTANTDIFFUSE_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FLOOD_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FLOOD_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_LINEARTRANSFER_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_LINEARTRANSFER_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GAMMATRANSFER_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GAMMATRANSFER_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TABLETRANSFER_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TABLETRANSFER_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DISCRETETRANSFER_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DISCRETETRANSFER_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CONVOLVEMATRIX_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CONVOLVEMATRIX_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CONVOLVEMATRIX_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CONVOLVEMATRIX_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BRIGHTNESS_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BRIGHTNESS_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_ARITHMETICCOMPOSITE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_ARITHMETICCOMPOSITE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CROP_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CROP_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BORDER_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BORDER_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BORDER_EDGE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BORDER_EDGE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_MORPHOLOGY_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_MORPHOLOGY_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_MORPHOLOGY_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_MORPHOLOGY_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TILE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TILE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_ATLAS_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_ATLAS_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_OPACITYMETADATA_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_OPACITYMETADATA_PROP = *opaque{
};
// --------------------------------------------------------
// Type: PD2D1_EFFECT_FACTORY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PD2D1_EFFECT_FACTORY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: D2D1_PROPERTY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PROPERTY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PROPERTY = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SUBPROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SUBPROPERTY = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAP_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BITMAP_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COMPOSITE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COMPOSITE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BUFFER_PRECISION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BUFFER_PRECISION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_MAP_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_MAP_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_UNIT_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_UNIT_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLOR_SPACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLOR_SPACE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DEVICE_CONTEXT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_DEVICE_CONTEXT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_STROKE_TRANSFORM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_STROKE_TRANSFORM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_PRIMITIVE_BLEND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PRIMITIVE_BLEND = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_THREADING_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_THREADING_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLOR_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLOR_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BITMAP_PROPERTIES1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BITMAP_PROPERTIES1 = extern struct {
    pixelFormat: Windows.Win32.Direct2D.D2D1_PIXEL_FORMAT,
    dpiX: {"kind":"Single"},
    dpiY: {"kind":"Single"},
    bitmapOptions: Windows.Win32.Direct2D.D2D1_BITMAP_OPTIONS,
    colorContext: Windows.Win32.Direct2D.ID2D1ColorContext,
};
// --------------------------------------------------------
// Type: D2D1_MAPPED_RECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_MAPPED_RECT = extern struct {
    pitch: {"kind":"UInt32"},
    bits: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: D2D1_RENDERING_CONTROLS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_RENDERING_CONTROLS = extern struct {
    bufferPrecision: Windows.Win32.Direct2D.D2D1_BUFFER_PRECISION,
    tileSize: Windows.Win32.Direct2D.D2D_SIZE_U,
};
// --------------------------------------------------------
// Type: D2D1_EFFECT_INPUT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_EFFECT_INPUT_DESCRIPTION = extern struct {
    effect: Windows.Win32.Direct2D.ID2D1Effect,
    inputIndex: {"kind":"UInt32"},
    inputRectangle: Windows.Win32.Direct2D.D2D_RECT_F,
};
// --------------------------------------------------------
// Type: D2D1_POINT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_POINT_DESCRIPTION = extern struct {
    point: Windows.Win32.Direct2D.D2D_POINT_2F,
    unitTangentVector: Windows.Win32.Direct2D.D2D_POINT_2F,
    endSegment: {"kind":"UInt32"},
    endFigure: {"kind":"UInt32"},
    lengthToEndSegment: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_IMAGE_BRUSH_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_IMAGE_BRUSH_PROPERTIES = extern struct {
    sourceRectangle: Windows.Win32.Direct2D.D2D_RECT_F,
    extendModeX: Windows.Win32.Direct2D.D2D1_EXTEND_MODE,
    extendModeY: Windows.Win32.Direct2D.D2D1_EXTEND_MODE,
    interpolationMode: Windows.Win32.Direct2D.D2D1_INTERPOLATION_MODE,
};
// --------------------------------------------------------
// Type: D2D1_BITMAP_BRUSH_PROPERTIES1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BITMAP_BRUSH_PROPERTIES1 = extern struct {
    extendModeX: Windows.Win32.Direct2D.D2D1_EXTEND_MODE,
    extendModeY: Windows.Win32.Direct2D.D2D1_EXTEND_MODE,
    interpolationMode: Windows.Win32.Direct2D.D2D1_INTERPOLATION_MODE,
};
// --------------------------------------------------------
// Type: D2D1_STROKE_STYLE_PROPERTIES1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_STROKE_STYLE_PROPERTIES1 = extern struct {
    startCap: Windows.Win32.Direct2D.D2D1_CAP_STYLE,
    endCap: Windows.Win32.Direct2D.D2D1_CAP_STYLE,
    dashCap: Windows.Win32.Direct2D.D2D1_CAP_STYLE,
    lineJoin: Windows.Win32.Direct2D.D2D1_LINE_JOIN,
    miterLimit: {"kind":"Single"},
    dashStyle: Windows.Win32.Direct2D.D2D1_DASH_STYLE,
    dashOffset: {"kind":"Single"},
    transformType: Windows.Win32.Direct2D.D2D1_STROKE_TRANSFORM_TYPE,
};
// --------------------------------------------------------
// Type: D2D1_LAYER_OPTIONS1
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_LAYER_OPTIONS1 = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_LAYER_PARAMETERS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_LAYER_PARAMETERS1 = extern struct {
    contentBounds: Windows.Win32.Direct2D.D2D_RECT_F,
    geometricMask: Windows.Win32.Direct2D.ID2D1Geometry,
    maskAntialiasMode: Windows.Win32.Direct2D.D2D1_ANTIALIAS_MODE,
    maskTransform: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F,
    opacity: {"kind":"Single"},
    opacityBrush: Windows.Win32.Direct2D.ID2D1Brush,
    layerOptions: Windows.Win32.Direct2D.D2D1_LAYER_OPTIONS1,
};
// --------------------------------------------------------
// Type: D2D1_PRINT_FONT_SUBSET_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PRINT_FONT_SUBSET_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_DRAWING_STATE_DESCRIPTION1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_DRAWING_STATE_DESCRIPTION1 = extern struct {
    antialiasMode: Windows.Win32.Direct2D.D2D1_ANTIALIAS_MODE,
    textAntialiasMode: Windows.Win32.Direct2D.D2D1_TEXT_ANTIALIAS_MODE,
    tag1: {"kind":"UInt64"},
    tag2: {"kind":"UInt64"},
    transform: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F,
    primitiveBlend: Windows.Win32.Direct2D.D2D1_PRIMITIVE_BLEND,
    unitMode: Windows.Win32.Direct2D.D2D1_UNIT_MODE,
};
// --------------------------------------------------------
// Type: D2D1_PRINT_CONTROL_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_PRINT_CONTROL_PROPERTIES = extern struct {
    fontSubset: Windows.Win32.Direct2D.D2D1_PRINT_FONT_SUBSET_MODE,
    rasterDPI: {"kind":"Single"},
    colorSpace: Windows.Win32.Direct2D.D2D1_COLOR_SPACE,
};
// --------------------------------------------------------
// Type: D2D1_CREATION_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_CREATION_PROPERTIES = extern struct {
    threadingMode: Windows.Win32.Direct2D.D2D1_THREADING_MODE,
    debugLevel: Windows.Win32.Direct2D.D2D1_DEBUG_LEVEL,
    options: Windows.Win32.Direct2D.D2D1_DEVICE_CONTEXT_OPTIONS,
};
// --------------------------------------------------------
// Type: ID2D1GdiMetafileSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GdiMetafileSink = *opaque{
    // TODO: Method 'ProcessRecord'
};
// --------------------------------------------------------
// Type: ID2D1GdiMetafile
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GdiMetafile = *opaque{
    // TODO: Method 'Stream'
    // TODO: Method 'GetBounds'
};
// --------------------------------------------------------
// Type: ID2D1CommandSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandSink = *opaque{
    // TODO: Method 'BeginDraw'
    // TODO: Method 'EndDraw'
    // TODO: Method 'SetAntialiasMode'
    // TODO: Method 'SetTags'
    // TODO: Method 'SetTextAntialiasMode'
    // TODO: Method 'SetTextRenderingParams'
    // TODO: Method 'SetTransform'
    // TODO: Method 'SetPrimitiveBlend'
    // TODO: Method 'SetUnitMode'
    // TODO: Method 'Clear'
    // TODO: Method 'DrawGlyphRun'
    // TODO: Method 'DrawLine'
    // TODO: Method 'DrawGeometry'
    // TODO: Method 'DrawRectangle'
    // TODO: Method 'DrawBitmap'
    // TODO: Method 'DrawImage'
    // TODO: Method 'DrawGdiMetafile'
    // TODO: Method 'FillMesh'
    // TODO: Method 'FillOpacityMask'
    // TODO: Method 'FillGeometry'
    // TODO: Method 'FillRectangle'
    // TODO: Method 'PushAxisAlignedClip'
    // TODO: Method 'PushLayer'
    // TODO: Method 'PopAxisAlignedClip'
    // TODO: Method 'PopLayer'
};
// --------------------------------------------------------
// Type: ID2D1CommandList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandList = *opaque{
    // TODO: Method 'Stream'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ID2D1PrintControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1PrintControl = *opaque{
    // TODO: Method 'AddPage'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ID2D1ImageBrush
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ImageBrush = *opaque{
    // TODO: Method 'SetImage'
    // TODO: Method 'SetExtendModeX'
    // TODO: Method 'SetExtendModeY'
    // TODO: Method 'SetInterpolationMode'
    // TODO: Method 'SetSourceRectangle'
    // TODO: Method 'GetImage'
    // TODO: Method 'GetExtendModeX'
    // TODO: Method 'GetExtendModeY'
    // TODO: Method 'GetInterpolationMode'
    // TODO: Method 'GetSourceRectangle'
};
// --------------------------------------------------------
// Type: ID2D1BitmapBrush1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1BitmapBrush1 = *opaque{
    // TODO: Method 'SetInterpolationMode1'
    // TODO: Method 'GetInterpolationMode1'
};
// --------------------------------------------------------
// Type: ID2D1StrokeStyle1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1StrokeStyle1 = *opaque{
    // TODO: Method 'GetStrokeTransformType'
};
// --------------------------------------------------------
// Type: ID2D1PathGeometry1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1PathGeometry1 = *opaque{
    // TODO: Method 'ComputePointAndSegmentAtLength'
};
// --------------------------------------------------------
// Type: ID2D1Properties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Properties = *opaque{
    // TODO: Method 'GetPropertyCount'
    // TODO: Method 'GetPropertyName'
    // TODO: Method 'GetPropertyNameLength'
    // TODO: Method 'GetType'
    // TODO: Method 'GetPropertyIndex'
    // TODO: Method 'SetValueByName'
    // TODO: Method 'SetValue'
    // TODO: Method 'GetValueByName'
    // TODO: Method 'GetValue'
    // TODO: Method 'GetValueSize'
    // TODO: Method 'GetSubProperties'
};
// --------------------------------------------------------
// Type: ID2D1Effect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Effect = *opaque{
    // TODO: Method 'SetInput'
    // TODO: Method 'SetInputCount'
    // TODO: Method 'GetInput'
    // TODO: Method 'GetInputCount'
    // TODO: Method 'GetOutput'
};
// --------------------------------------------------------
// Type: ID2D1Bitmap1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Bitmap1 = *opaque{
    // TODO: Method 'GetColorContext'
    // TODO: Method 'GetOptions'
    // TODO: Method 'GetSurface'
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
};
// --------------------------------------------------------
// Type: ID2D1ColorContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ColorContext = *opaque{
    // TODO: Method 'GetColorSpace'
    // TODO: Method 'GetProfileSize'
    // TODO: Method 'GetProfile'
};
// --------------------------------------------------------
// Type: ID2D1GradientStopCollection1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GradientStopCollection1 = *opaque{
    // TODO: Method 'GetGradientStops1'
    // TODO: Method 'GetPreInterpolationSpace'
    // TODO: Method 'GetPostInterpolationSpace'
    // TODO: Method 'GetBufferPrecision'
    // TODO: Method 'GetColorInterpolationMode'
};
// --------------------------------------------------------
// Type: ID2D1DrawingStateBlock1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DrawingStateBlock1 = *opaque{
    // TODO: Method 'GetDescription'
    // TODO: Method 'SetDescription'
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext = *opaque{
    // TODO: Method 'CreateBitmap'
    // TODO: Method 'CreateBitmapFromWicBitmap'
    // TODO: Method 'CreateColorContext'
    // TODO: Method 'CreateColorContextFromFilename'
    // TODO: Method 'CreateColorContextFromWicColorContext'
    // TODO: Method 'CreateBitmapFromDxgiSurface'
    // TODO: Method 'CreateEffect'
    // TODO: Method 'CreateGradientStopCollection'
    // TODO: Method 'CreateImageBrush'
    // TODO: Method 'CreateBitmapBrush'
    // TODO: Method 'CreateCommandList'
    // TODO: Method 'IsDxgiFormatSupported'
    // TODO: Method 'IsBufferPrecisionSupported'
    // TODO: Method 'GetImageLocalBounds'
    // TODO: Method 'GetImageWorldBounds'
    // TODO: Method 'GetGlyphRunWorldBounds'
    // TODO: Method 'GetDevice'
    // TODO: Method 'SetTarget'
    // TODO: Method 'GetTarget'
    // TODO: Method 'SetRenderingControls'
    // TODO: Method 'GetRenderingControls'
    // TODO: Method 'SetPrimitiveBlend'
    // TODO: Method 'GetPrimitiveBlend'
    // TODO: Method 'SetUnitMode'
    // TODO: Method 'GetUnitMode'
    // TODO: Method 'DrawGlyphRun'
    // TODO: Method 'DrawImage'
    // TODO: Method 'DrawGdiMetafile'
    // TODO: Method 'DrawBitmap'
    // TODO: Method 'PushLayer'
    // TODO: Method 'InvalidateEffectInputRectangle'
    // TODO: Method 'GetEffectInvalidRectangleCount'
    // TODO: Method 'GetEffectInvalidRectangles'
    // TODO: Method 'GetEffectRequiredInputRectangles'
    // TODO: Method 'FillOpacityMask'
};
// --------------------------------------------------------
// Type: ID2D1Device
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device = *opaque{
    // TODO: Method 'CreateDeviceContext'
    // TODO: Method 'CreatePrintControl'
    // TODO: Method 'SetMaximumTextureMemory'
    // TODO: Method 'GetMaximumTextureMemory'
    // TODO: Method 'ClearResources'
};
// --------------------------------------------------------
// Type: ID2D1Factory1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory1 = *opaque{
    // TODO: Method 'CreateDevice'
    // TODO: Method 'CreateStrokeStyle'
    // TODO: Method 'CreatePathGeometry'
    // TODO: Method 'CreateDrawingStateBlock'
    // TODO: Method 'CreateGdiMetafile'
    // TODO: Method 'RegisterEffectFromStream'
    // TODO: Method 'RegisterEffectFromString'
    // TODO: Method 'UnregisterEffect'
    // TODO: Method 'GetRegisteredEffects'
    // TODO: Method 'GetEffectProperties'
};
// --------------------------------------------------------
// Type: ID2D1Multithread
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Multithread = *opaque{
    // TODO: Method 'GetMultithreadProtected'
    // TODO: Method 'Enter'
    // TODO: Method 'Leave'
};
// --------------------------------------------------------
// Type: Matrix4x3F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const Matrix4x3F = extern struct {
    __AnonymousBase_d2d1_1helper_L45_C31: Windows.Win32.Direct2D.D2D_MATRIX_4X3_F,
};
// --------------------------------------------------------
// Type: Matrix4x4F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const Matrix4x4F = extern struct {
    __AnonymousBase_d2d1_1helper_L97_C31: Windows.Win32.Direct2D.D2D_MATRIX_4X4_F,
};
// --------------------------------------------------------
// Type: Matrix5x4F
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const Matrix5x4F = extern struct {
    __AnonymousBase_d2d1_1helper_L472_C31: Windows.Win32.Direct2D.D2D_MATRIX_5X4_F,
};
// --------------------------------------------------------
// Type: PD2D1_PROPERTY_SET_FUNCTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PD2D1_PROPERTY_SET_FUNCTION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PD2D1_PROPERTY_GET_FUNCTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PD2D1_PROPERTY_GET_FUNCTION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: D2D1_CHANGE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CHANGE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_PIXEL_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PIXEL_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_VERTEX_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_VERTEX_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_VERTEX_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_VERTEX_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BLEND_OPERATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BLEND_OPERATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_BLEND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_BLEND = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CHANNEL_DEPTH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CHANNEL_DEPTH = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_FEATURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_FEATURE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_PROPERTY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_PROPERTY_BINDING = extern struct {
    propertyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    setFunction: Windows.Win32.Direct2D.PD2D1_PROPERTY_SET_FUNCTION,
    getFunction: Windows.Win32.Direct2D.PD2D1_PROPERTY_GET_FUNCTION,
};
// --------------------------------------------------------
// Type: D2D1_RESOURCE_TEXTURE_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_RESOURCE_TEXTURE_PROPERTIES = extern struct {
    extents: {"kind""Ptr","child":{"kind":"UInt32"}},
    dimensions: {"kind":"UInt32"},
    bufferPrecision: Windows.Win32.Direct2D.D2D1_BUFFER_PRECISION,
    channelDepth: Windows.Win32.Direct2D.D2D1_CHANNEL_DEPTH,
    filter: Windows.Win32.Direct2D.D2D1_FILTER,
    extendModes: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D1_EXTEND_MODE},
};
// --------------------------------------------------------
// Type: D2D1_INPUT_ELEMENT_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_INPUT_ELEMENT_DESC = extern struct {
    semanticName: {"kind""Ptr","child":{"kind":"SByte"}},
    semanticIndex: {"kind":"UInt32"},
    format: Windows.Win32.Dxgi.DXGI_FORMAT,
    inputSlot: {"kind":"UInt32"},
    alignedByteOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D1_VERTEX_BUFFER_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_VERTEX_BUFFER_PROPERTIES = extern struct {
    inputCount: {"kind":"UInt32"},
    usage: Windows.Win32.Direct2D.D2D1_VERTEX_USAGE,
    data: {"kind""Ptr","child":{"kind":"Byte"}},
    byteWidth: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES = extern struct {
    shaderBufferWithInputSignature: {"kind""Ptr","child":{"kind":"Byte"}},
    shaderBufferSize: {"kind":"UInt32"},
    inputElements: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D1_INPUT_ELEMENT_DESC},
    elementCount: {"kind":"UInt32"},
    stride: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D1_VERTEX_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_VERTEX_RANGE = extern struct {
    startVertex: {"kind":"UInt32"},
    vertexCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D1_BLEND_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_BLEND_DESCRIPTION = extern struct {
    sourceBlend: Windows.Win32.Direct2D.D2D1_BLEND,
    destinationBlend: Windows.Win32.Direct2D.D2D1_BLEND,
    blendOperation: Windows.Win32.Direct2D.D2D1_BLEND_OPERATION,
    sourceBlendAlpha: Windows.Win32.Direct2D.D2D1_BLEND,
    destinationBlendAlpha: Windows.Win32.Direct2D.D2D1_BLEND,
    blendOperationAlpha: Windows.Win32.Direct2D.D2D1_BLEND_OPERATION,
    blendFactor: {"kind":"Array","child": {"kind":"Single"}},
};
// --------------------------------------------------------
// Type: D2D1_INPUT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_INPUT_DESCRIPTION = extern struct {
    filter: Windows.Win32.Direct2D.D2D1_FILTER,
    levelOfDetailCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D2D1_FEATURE_DATA_DOUBLES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_FEATURE_DATA_DOUBLES = extern struct {
    doublePrecisionFloatShaderOps: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS = extern struct {
    computeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: ID2D1VertexBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1VertexBuffer = *opaque{
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
};
// --------------------------------------------------------
// Type: ID2D1ResourceTexture
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ResourceTexture = *opaque{
    // TODO: Method 'Update'
};
// --------------------------------------------------------
// Type: ID2D1RenderInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1RenderInfo = *opaque{
    // TODO: Method 'SetInputDescription'
    // TODO: Method 'SetOutputBuffer'
    // TODO: Method 'SetCached'
    // TODO: Method 'SetInstructionCountHint'
};
// --------------------------------------------------------
// Type: ID2D1DrawInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DrawInfo = *opaque{
    // TODO: Method 'SetPixelShaderConstantBuffer'
    // TODO: Method 'SetResourceTexture'
    // TODO: Method 'SetVertexShaderConstantBuffer'
    // TODO: Method 'SetPixelShader'
    // TODO: Method 'SetVertexProcessing'
};
// --------------------------------------------------------
// Type: ID2D1ComputeInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ComputeInfo = *opaque{
    // TODO: Method 'SetComputeShaderConstantBuffer'
    // TODO: Method 'SetComputeShader'
    // TODO: Method 'SetResourceTexture'
};
// --------------------------------------------------------
// Type: ID2D1TransformNode
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1TransformNode = *opaque{
    // TODO: Method 'GetInputCount'
};
// --------------------------------------------------------
// Type: ID2D1TransformGraph
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1TransformGraph = *opaque{
    // TODO: Method 'GetInputCount'
    // TODO: Method 'SetSingleTransformNode'
    // TODO: Method 'AddNode'
    // TODO: Method 'RemoveNode'
    // TODO: Method 'SetOutputNode'
    // TODO: Method 'ConnectNode'
    // TODO: Method 'ConnectToEffectInput'
    // TODO: Method 'Clear'
    // TODO: Method 'SetPassthroughGraph'
};
// --------------------------------------------------------
// Type: ID2D1Transform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Transform = *opaque{
    // TODO: Method 'MapOutputRectToInputRects'
    // TODO: Method 'MapInputRectsToOutputRect'
    // TODO: Method 'MapInvalidRect'
};
// --------------------------------------------------------
// Type: ID2D1DrawTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DrawTransform = *opaque{
    // TODO: Method 'SetDrawInfo'
};
// --------------------------------------------------------
// Type: ID2D1ComputeTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ComputeTransform = *opaque{
    // TODO: Method 'SetComputeInfo'
    // TODO: Method 'CalculateThreadgroups'
};
// --------------------------------------------------------
// Type: ID2D1AnalysisTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1AnalysisTransform = *opaque{
    // TODO: Method 'ProcessAnalysisResults'
};
// --------------------------------------------------------
// Type: ID2D1SourceTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SourceTransform = *opaque{
    // TODO: Method 'SetRenderInfo'
    // TODO: Method 'Draw'
};
// --------------------------------------------------------
// Type: ID2D1ConcreteTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ConcreteTransform = *opaque{
    // TODO: Method 'SetOutputBuffer'
    // TODO: Method 'SetCached'
};
// --------------------------------------------------------
// Type: ID2D1BlendTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1BlendTransform = *opaque{
    // TODO: Method 'SetDescription'
    // TODO: Method 'GetDescription'
};
// --------------------------------------------------------
// Type: ID2D1BorderTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1BorderTransform = *opaque{
    // TODO: Method 'SetExtendModeX'
    // TODO: Method 'SetExtendModeY'
    // TODO: Method 'GetExtendModeX'
    // TODO: Method 'GetExtendModeY'
};
// --------------------------------------------------------
// Type: ID2D1OffsetTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1OffsetTransform = *opaque{
    // TODO: Method 'SetOffset'
    // TODO: Method 'GetOffset'
};
// --------------------------------------------------------
// Type: ID2D1BoundsAdjustmentTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1BoundsAdjustmentTransform = *opaque{
    // TODO: Method 'SetOutputBounds'
    // TODO: Method 'GetOutputBounds'
};
// --------------------------------------------------------
// Type: ID2D1EffectImpl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1EffectImpl = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'PrepareForRender'
    // TODO: Method 'SetGraph'
};
// --------------------------------------------------------
// Type: ID2D1EffectContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1EffectContext = *opaque{
    // TODO: Method 'GetDpi'
    // TODO: Method 'CreateEffect'
    // TODO: Method 'GetMaximumSupportedFeatureLevel'
    // TODO: Method 'CreateTransformNodeFromEffect'
    // TODO: Method 'CreateBlendTransform'
    // TODO: Method 'CreateBorderTransform'
    // TODO: Method 'CreateOffsetTransform'
    // TODO: Method 'CreateBoundsAdjustmentTransform'
    // TODO: Method 'LoadPixelShader'
    // TODO: Method 'LoadVertexShader'
    // TODO: Method 'LoadComputeShader'
    // TODO: Method 'IsShaderLoaded'
    // TODO: Method 'CreateResourceTexture'
    // TODO: Method 'FindResourceTexture'
    // TODO: Method 'CreateVertexBuffer'
    // TODO: Method 'FindVertexBuffer'
    // TODO: Method 'CreateColorContext'
    // TODO: Method 'CreateColorContextFromFilename'
    // TODO: Method 'CreateColorContextFromWicColorContext'
    // TODO: Method 'CheckFeatureSupport'
    // TODO: Method 'IsBufferPrecisionSupported'
};
// --------------------------------------------------------
// Type: D2D1_YCBCR_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_YCBCR_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_YCBCR_CHROMA_SUBSAMPLING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_YCBCR_CHROMA_SUBSAMPLING = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_YCBCR_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_YCBCR_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CONTRAST_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CONTRAST_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_RGBTOHUE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_RGBTOHUE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_RGBTOHUE_OUTPUT_COLOR_SPACE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HUETORGB_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HUETORGB_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HUETORGB_INPUT_COLOR_SPACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HUETORGB_INPUT_COLOR_SPACE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CHROMAKEY_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CHROMAKEY_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_EMBOSS_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_EMBOSS_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_EXPOSURE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_EXPOSURE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_POSTERIZE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_POSTERIZE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SEPIA_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SEPIA_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SHARPEN_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SHARPEN_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_STRAIGHTEN_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_STRAIGHTEN_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_STRAIGHTEN_SCALE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_STRAIGHTEN_SCALE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TEMPERATUREANDTINT_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TEMPERATUREANDTINT_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_VIGNETTE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_VIGNETTE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_EDGEDETECTION_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_EDGEDETECTION_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_EDGEDETECTION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_EDGEDETECTION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HIGHLIGHTSANDSHADOWS_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HIGHLIGHTSANDSHADOWS_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HIGHLIGHTSANDSHADOWS_INPUT_GAMMA = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_LOOKUPTABLE3D_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_LOOKUPTABLE3D_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_OPACITY_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_OPACITY_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_CROSSFADE_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_CROSSFADE_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TINT_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TINT_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_WHITELEVELADJUSTMENT_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_WHITELEVELADJUSTMENT_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HDRTONEMAP_PROP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HDRTONEMAP_PROP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_HDRTONEMAP_DISPLAY_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_HDRTONEMAP_DISPLAY_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_RENDERING_PRIORITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_RENDERING_PRIORITY = *opaque{
};
// --------------------------------------------------------
// Type: ID2D1GeometryRealization
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GeometryRealization = *opaque{
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext1 = *opaque{
    // TODO: Method 'CreateFilledGeometryRealization'
    // TODO: Method 'CreateStrokedGeometryRealization'
    // TODO: Method 'DrawGeometryRealization'
};
// --------------------------------------------------------
// Type: ID2D1Device1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device1 = *opaque{
    // TODO: Method 'GetRenderingPriority'
    // TODO: Method 'SetRenderingPriority'
    // TODO: Method 'CreateDeviceContext'
};
// --------------------------------------------------------
// Type: ID2D1Factory2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory2 = *opaque{
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: ID2D1CommandSink1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandSink1 = *opaque{
    // TODO: Method 'SetPrimitiveBlend1'
};
// --------------------------------------------------------
// Type: D2D1_SVG_PAINT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_PAINT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_LENGTH_UNITS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_LENGTH_UNITS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_DISPLAY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_DISPLAY = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_VISIBILITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_VISIBILITY = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_OVERFLOW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_OVERFLOW = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_LINE_CAP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_LINE_CAP = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_LINE_JOIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_LINE_JOIN = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_ASPECT_ALIGN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_ASPECT_ALIGN = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_ASPECT_SCALING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_ASPECT_SCALING = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_PATH_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_PATH_COMMAND = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_UNIT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_UNIT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_ATTRIBUTE_STRING_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_ATTRIBUTE_STRING_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_ATTRIBUTE_POD_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SVG_ATTRIBUTE_POD_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SVG_LENGTH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_SVG_LENGTH = extern struct {
    value: {"kind":"Single"},
    units: Windows.Win32.Direct2D.D2D1_SVG_LENGTH_UNITS,
};
// --------------------------------------------------------
// Type: D2D1_SVG_PRESERVE_ASPECT_RATIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_SVG_PRESERVE_ASPECT_RATIO = extern struct {
    defer: Windows.Win32.SystemServices.BOOL,
    align: Windows.Win32.Direct2D.D2D1_SVG_ASPECT_ALIGN,
    meetOrSlice: Windows.Win32.Direct2D.D2D1_SVG_ASPECT_SCALING,
};
// --------------------------------------------------------
// Type: D2D1_SVG_VIEWBOX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_SVG_VIEWBOX = extern struct {
    x: {"kind":"Single"},
    y: {"kind":"Single"},
    width: {"kind":"Single"},
    height: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: ID2D1SvgAttribute
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgAttribute = *opaque{
    // TODO: Method 'GetElement'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: ID2D1SvgPaint
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgPaint = *opaque{
    // TODO: Method 'SetPaintType'
    // TODO: Method 'GetPaintType'
    // TODO: Method 'SetColor'
    // TODO: Method 'GetColor'
    // TODO: Method 'SetId'
    // TODO: Method 'GetId'
    // TODO: Method 'GetIdLength'
};
// --------------------------------------------------------
// Type: ID2D1SvgStrokeDashArray
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgStrokeDashArray = *opaque{
    // TODO: Method 'RemoveDashesAtEnd'
    // TODO: Method 'UpdateDashes'
    // TODO: Method 'UpdateDashes'
    // TODO: Method 'GetDashes'
    // TODO: Method 'GetDashes'
    // TODO: Method 'GetDashesCount'
};
// --------------------------------------------------------
// Type: ID2D1SvgPointCollection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgPointCollection = *opaque{
    // TODO: Method 'RemovePointsAtEnd'
    // TODO: Method 'UpdatePoints'
    // TODO: Method 'GetPoints'
    // TODO: Method 'GetPointsCount'
};
// --------------------------------------------------------
// Type: ID2D1SvgPathData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgPathData = *opaque{
    // TODO: Method 'RemoveSegmentDataAtEnd'
    // TODO: Method 'UpdateSegmentData'
    // TODO: Method 'GetSegmentData'
    // TODO: Method 'GetSegmentDataCount'
    // TODO: Method 'RemoveCommandsAtEnd'
    // TODO: Method 'UpdateCommands'
    // TODO: Method 'GetCommands'
    // TODO: Method 'GetCommandsCount'
    // TODO: Method 'CreatePathGeometry'
};
// --------------------------------------------------------
// Type: ID2D1SvgElement
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgElement = *opaque{
    // TODO: Method 'GetDocument'
    // TODO: Method 'GetTagName'
    // TODO: Method 'GetTagNameLength'
    // TODO: Method 'IsTextContent'
    // TODO: Method 'GetParent'
    // TODO: Method 'HasChildren'
    // TODO: Method 'GetFirstChild'
    // TODO: Method 'GetLastChild'
    // TODO: Method 'GetPreviousChild'
    // TODO: Method 'GetNextChild'
    // TODO: Method 'InsertChildBefore'
    // TODO: Method 'AppendChild'
    // TODO: Method 'ReplaceChild'
    // TODO: Method 'RemoveChild'
    // TODO: Method 'CreateChild'
    // TODO: Method 'IsAttributeSpecified'
    // TODO: Method 'GetSpecifiedAttributeCount'
    // TODO: Method 'GetSpecifiedAttributeName'
    // TODO: Method 'GetSpecifiedAttributeNameLength'
    // TODO: Method 'RemoveAttribute'
    // TODO: Method 'SetTextValue'
    // TODO: Method 'GetTextValue'
    // TODO: Method 'GetTextValueLength'
    // TODO: Method 'SetAttributeValue'
    // TODO: Method 'GetAttributeValue'
    // TODO: Method 'GetAttributeValueLength'
    // TODO: Method 'SetAttributeValue'
    // TODO: Method 'GetAttributeValue'
    // TODO: Method 'SetAttributeValue'
    // TODO: Method 'GetAttributeValue'
};
// --------------------------------------------------------
// Type: ID2D1SvgDocument
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgDocument = *opaque{
    // TODO: Method 'SetViewportSize'
    // TODO: Method 'GetViewportSize'
    // TODO: Method 'SetRoot'
    // TODO: Method 'GetRoot'
    // TODO: Method 'FindElementById'
    // TODO: Method 'Serialize'
    // TODO: Method 'Deserialize'
    // TODO: Method 'CreatePaint'
    // TODO: Method 'CreateStrokeDashArray'
    // TODO: Method 'CreatePointCollection'
    // TODO: Method 'CreatePathData'
};
// --------------------------------------------------------
// Type: D2D1_INK_NIB_SHAPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_INK_NIB_SHAPE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_ORIENTATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_ORIENTATION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_IMAGE_SOURCE_LOADING_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_IMAGE_SOURCE_LOADING_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_IMAGE_SOURCE_FROM_DXGI_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_TRANSFORMED_IMAGE_SOURCE_PROPERTIES = extern struct {
    orientation: Windows.Win32.Direct2D.D2D1_ORIENTATION,
    scaleX: {"kind":"Single"},
    scaleY: {"kind":"Single"},
    interpolationMode: Windows.Win32.Direct2D.D2D1_INTERPOLATION_MODE,
    options: Windows.Win32.Direct2D.D2D1_TRANSFORMED_IMAGE_SOURCE_OPTIONS,
};
// --------------------------------------------------------
// Type: D2D1_INK_POINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_INK_POINT = extern struct {
    x: {"kind":"Single"},
    y: {"kind":"Single"},
    radius: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D2D1_INK_BEZIER_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_INK_BEZIER_SEGMENT = extern struct {
    point1: Windows.Win32.Direct2D.D2D1_INK_POINT,
    point2: Windows.Win32.Direct2D.D2D1_INK_POINT,
    point3: Windows.Win32.Direct2D.D2D1_INK_POINT,
};
// --------------------------------------------------------
// Type: D2D1_INK_STYLE_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_INK_STYLE_PROPERTIES = extern struct {
    nibShape: Windows.Win32.Direct2D.D2D1_INK_NIB_SHAPE,
    nibTransform: Windows.Win32.Direct2D.D2D_MATRIX_3X2_F,
};
// --------------------------------------------------------
// Type: D2D1_PATCH_EDGE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_PATCH_EDGE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GRADIENT_MESH_PATCH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_GRADIENT_MESH_PATCH = extern struct {
    point00: Windows.Win32.Direct2D.D2D_POINT_2F,
    point01: Windows.Win32.Direct2D.D2D_POINT_2F,
    point02: Windows.Win32.Direct2D.D2D_POINT_2F,
    point03: Windows.Win32.Direct2D.D2D_POINT_2F,
    point10: Windows.Win32.Direct2D.D2D_POINT_2F,
    point11: Windows.Win32.Direct2D.D2D_POINT_2F,
    point12: Windows.Win32.Direct2D.D2D_POINT_2F,
    point13: Windows.Win32.Direct2D.D2D_POINT_2F,
    point20: Windows.Win32.Direct2D.D2D_POINT_2F,
    point21: Windows.Win32.Direct2D.D2D_POINT_2F,
    point22: Windows.Win32.Direct2D.D2D_POINT_2F,
    point23: Windows.Win32.Direct2D.D2D_POINT_2F,
    point30: Windows.Win32.Direct2D.D2D_POINT_2F,
    point31: Windows.Win32.Direct2D.D2D_POINT_2F,
    point32: Windows.Win32.Direct2D.D2D_POINT_2F,
    point33: Windows.Win32.Direct2D.D2D_POINT_2F,
    color00: Windows.Win32.Dxgi.DXGI_RGBA,
    color03: Windows.Win32.Dxgi.DXGI_RGBA,
    color30: Windows.Win32.Dxgi.DXGI_RGBA,
    color33: Windows.Win32.Dxgi.DXGI_RGBA,
    topEdgeMode: Windows.Win32.Direct2D.D2D1_PATCH_EDGE_MODE,
    leftEdgeMode: Windows.Win32.Direct2D.D2D1_PATCH_EDGE_MODE,
    bottomEdgeMode: Windows.Win32.Direct2D.D2D1_PATCH_EDGE_MODE,
    rightEdgeMode: Windows.Win32.Direct2D.D2D1_PATCH_EDGE_MODE,
};
// --------------------------------------------------------
// Type: D2D1_SPRITE_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_SPRITE_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLOR_BITMAP_GLYPH_SNAP_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_GAMMA1
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_GAMMA1 = *opaque{
};
// --------------------------------------------------------
// Type: D2D1_SIMPLE_COLOR_PROFILE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D2D1_SIMPLE_COLOR_PROFILE = extern struct {
    redPrimary: Windows.Win32.Direct2D.D2D_POINT_2F,
    greenPrimary: Windows.Win32.Direct2D.D2D_POINT_2F,
    bluePrimary: Windows.Win32.Direct2D.D2D_POINT_2F,
    whitePointXZ: Windows.Win32.Direct2D.D2D_POINT_2F,
    gamma: Windows.Win32.Direct2D.D2D1_GAMMA1,
};
// --------------------------------------------------------
// Type: D2D1_COLOR_CONTEXT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D2D1_COLOR_CONTEXT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: ID2D1InkStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1InkStyle = *opaque{
    // TODO: Method 'SetNibTransform'
    // TODO: Method 'GetNibTransform'
    // TODO: Method 'SetNibShape'
    // TODO: Method 'GetNibShape'
};
// --------------------------------------------------------
// Type: ID2D1Ink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Ink = *opaque{
    // TODO: Method 'SetStartPoint'
    // TODO: Method 'GetStartPoint'
    // TODO: Method 'AddSegments'
    // TODO: Method 'RemoveSegmentsAtEnd'
    // TODO: Method 'SetSegments'
    // TODO: Method 'SetSegmentAtEnd'
    // TODO: Method 'GetSegmentCount'
    // TODO: Method 'GetSegments'
    // TODO: Method 'StreamAsGeometry'
    // TODO: Method 'GetBounds'
};
// --------------------------------------------------------
// Type: ID2D1GradientMesh
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GradientMesh = *opaque{
    // TODO: Method 'GetPatchCount'
    // TODO: Method 'GetPatches'
};
// --------------------------------------------------------
// Type: ID2D1ImageSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ImageSource = *opaque{
    // TODO: Method 'OfferResources'
    // TODO: Method 'TryReclaimResources'
};
// --------------------------------------------------------
// Type: ID2D1ImageSourceFromWic
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ImageSourceFromWic = *opaque{
    // TODO: Method 'EnsureCached'
    // TODO: Method 'TrimCache'
    // TODO: Method 'GetSource'
};
// --------------------------------------------------------
// Type: ID2D1TransformedImageSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1TransformedImageSource = *opaque{
    // TODO: Method 'GetSource'
    // TODO: Method 'GetProperties'
};
// --------------------------------------------------------
// Type: ID2D1LookupTable3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1LookupTable3D = *opaque{
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext2 = *opaque{
    // TODO: Method 'CreateInk'
    // TODO: Method 'CreateInkStyle'
    // TODO: Method 'CreateGradientMesh'
    // TODO: Method 'CreateImageSourceFromWic'
    // TODO: Method 'CreateLookupTable3D'
    // TODO: Method 'CreateImageSourceFromDxgi'
    // TODO: Method 'GetGradientMeshWorldBounds'
    // TODO: Method 'DrawInk'
    // TODO: Method 'DrawGradientMesh'
    // TODO: Method 'DrawGdiMetafile'
    // TODO: Method 'CreateTransformedImageSource'
};
// --------------------------------------------------------
// Type: ID2D1Device2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device2 = *opaque{
    // TODO: Method 'CreateDeviceContext'
    // TODO: Method 'FlushDeviceContexts'
    // TODO: Method 'GetDxgiDevice'
};
// --------------------------------------------------------
// Type: ID2D1Factory3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory3 = *opaque{
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: ID2D1CommandSink2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandSink2 = *opaque{
    // TODO: Method 'DrawInk'
    // TODO: Method 'DrawGradientMesh'
    // TODO: Method 'DrawGdiMetafile'
};
// --------------------------------------------------------
// Type: ID2D1GdiMetafile1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GdiMetafile1 = *opaque{
    // TODO: Method 'GetDpi'
    // TODO: Method 'GetSourceBounds'
};
// --------------------------------------------------------
// Type: ID2D1GdiMetafileSink1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1GdiMetafileSink1 = *opaque{
    // TODO: Method 'ProcessRecord'
};
// --------------------------------------------------------
// Type: ID2D1SpriteBatch
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SpriteBatch = *opaque{
    // TODO: Method 'AddSprites'
    // TODO: Method 'SetSprites'
    // TODO: Method 'GetSprites'
    // TODO: Method 'GetSpriteCount'
    // TODO: Method 'Clear'
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext3 = *opaque{
    // TODO: Method 'CreateSpriteBatch'
    // TODO: Method 'DrawSpriteBatch'
};
// --------------------------------------------------------
// Type: ID2D1Device3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device3 = *opaque{
    // TODO: Method 'CreateDeviceContext'
};
// --------------------------------------------------------
// Type: ID2D1Factory4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory4 = *opaque{
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: ID2D1CommandSink3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandSink3 = *opaque{
    // TODO: Method 'DrawSpriteBatch'
};
// --------------------------------------------------------
// Type: ID2D1SvgGlyphStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1SvgGlyphStyle = *opaque{
    // TODO: Method 'SetFill'
    // TODO: Method 'GetFill'
    // TODO: Method 'SetStroke'
    // TODO: Method 'GetStrokeDashesCount'
    // TODO: Method 'GetStroke'
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext4 = *opaque{
    // TODO: Method 'CreateSvgGlyphStyle'
    // TODO: Method 'DrawTextA'
    // TODO: Method 'DrawTextLayout'
    // TODO: Method 'DrawColorBitmapGlyphRun'
    // TODO: Method 'DrawSvgGlyphRun'
    // TODO: Method 'GetColorBitmapGlyphImage'
    // TODO: Method 'GetSvgGlyphImage'
};
// --------------------------------------------------------
// Type: ID2D1Device4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device4 = *opaque{
    // TODO: Method 'CreateDeviceContext'
    // TODO: Method 'SetMaximumColorGlyphCacheMemory'
    // TODO: Method 'GetMaximumColorGlyphCacheMemory'
};
// --------------------------------------------------------
// Type: ID2D1Factory5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory5 = *opaque{
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: ID2D1CommandSink4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandSink4 = *opaque{
    // TODO: Method 'SetPrimitiveBlend2'
};
// --------------------------------------------------------
// Type: ID2D1ColorContext1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1ColorContext1 = *opaque{
    // TODO: Method 'GetColorContextType'
    // TODO: Method 'GetDXGIColorSpace'
    // TODO: Method 'GetSimpleColorProfile'
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext5 = *opaque{
    // TODO: Method 'CreateSvgDocument'
    // TODO: Method 'DrawSvgDocument'
    // TODO: Method 'CreateColorContextFromDxgiColorSpace'
    // TODO: Method 'CreateColorContextFromSimpleColorProfile'
};
// --------------------------------------------------------
// Type: ID2D1Device5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device5 = *opaque{
    // TODO: Method 'CreateDeviceContext'
};
// --------------------------------------------------------
// Type: ID2D1Factory6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory6 = *opaque{
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: ID2D1CommandSink5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1CommandSink5 = *opaque{
    // TODO: Method 'BlendImage'
};
// --------------------------------------------------------
// Type: ID2D1DeviceContext6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1DeviceContext6 = *opaque{
    // TODO: Method 'BlendImage'
};
// --------------------------------------------------------
// Type: ID2D1Device6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Device6 = *opaque{
    // TODO: Method 'CreateDeviceContext'
};
// --------------------------------------------------------
// Type: ID2D1Factory7
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1Factory7 = *opaque{
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: ID2D1EffectContext1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1EffectContext1 = *opaque{
    // TODO: Method 'CreateLookupTable3D'
};
// --------------------------------------------------------
// Type: ID2D1EffectContext2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID2D1EffectContext2 = *opaque{
    // TODO: Method 'CreateColorContextFromDxgiColorSpace'
    // TODO: Method 'CreateColorContextFromSimpleColorProfile'
};
// --------------------------------------------------------
// Type: D3DVSHADERCAPS2_0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3DVSHADERCAPS2_0 = extern struct {
    Caps: {"kind":"UInt32"},
    DynamicFlowControlDepth: {"kind":"Int32"},
    NumTemps: {"kind":"Int32"},
    StaticFlowControlDepth: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: D3DPSHADERCAPS2_0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3DPSHADERCAPS2_0 = extern struct {
    Caps: {"kind":"UInt32"},
    DynamicFlowControlDepth: {"kind":"Int32"},
    NumTemps: {"kind":"Int32"},
    StaticFlowControlDepth: {"kind":"Int32"},
    NumInstructionSlots: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: D3DCAPS9
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3DCAPS9 = extern struct {
    DeviceType: Windows.Win32.Direct3D9.D3DDEVTYPE,
    AdapterOrdinal: {"kind":"UInt32"},
    Caps: {"kind":"UInt32"},
    Caps2: {"kind":"UInt32"},
    Caps3: {"kind":"UInt32"},
    PresentationIntervals: {"kind":"UInt32"},
    CursorCaps: {"kind":"UInt32"},
    DevCaps: {"kind":"UInt32"},
    PrimitiveMiscCaps: {"kind":"UInt32"},
    RasterCaps: {"kind":"UInt32"},
    ZCmpCaps: {"kind":"UInt32"},
    SrcBlendCaps: {"kind":"UInt32"},
    DestBlendCaps: {"kind":"UInt32"},
    AlphaCmpCaps: {"kind":"UInt32"},
    ShadeCaps: {"kind":"UInt32"},
    TextureCaps: {"kind":"UInt32"},
    TextureFilterCaps: {"kind":"UInt32"},
    CubeTextureFilterCaps: {"kind":"UInt32"},
    VolumeTextureFilterCaps: {"kind":"UInt32"},
    TextureAddressCaps: {"kind":"UInt32"},
    VolumeTextureAddressCaps: {"kind":"UInt32"},
    LineCaps: {"kind":"UInt32"},
    MaxTextureWidth: {"kind":"UInt32"},
    MaxTextureHeight: {"kind":"UInt32"},
    MaxVolumeExtent: {"kind":"UInt32"},
    MaxTextureRepeat: {"kind":"UInt32"},
    MaxTextureAspectRatio: {"kind":"UInt32"},
    MaxAnisotropy: {"kind":"UInt32"},
    MaxVertexW: {"kind":"Single"},
    GuardBandLeft: {"kind":"Single"},
    GuardBandTop: {"kind":"Single"},
    GuardBandRight: {"kind":"Single"},
    GuardBandBottom: {"kind":"Single"},
    ExtentsAdjust: {"kind":"Single"},
    StencilCaps: {"kind":"UInt32"},
    FVFCaps: {"kind":"UInt32"},
    TextureOpCaps: {"kind":"UInt32"},
    MaxTextureBlendStages: {"kind":"UInt32"},
    MaxSimultaneousTextures: {"kind":"UInt32"},
    VertexProcessingCaps: {"kind":"UInt32"},
    MaxActiveLights: {"kind":"UInt32"},
    MaxUserClipPlanes: {"kind":"UInt32"},
    MaxVertexBlendMatrices: {"kind":"UInt32"},
    MaxVertexBlendMatrixIndex: {"kind":"UInt32"},
    MaxPointSize: {"kind":"Single"},
    MaxPrimitiveCount: {"kind":"UInt32"},
    MaxVertexIndex: {"kind":"UInt32"},
    MaxStreams: {"kind":"UInt32"},
    MaxStreamStride: {"kind":"UInt32"},
    VertexShaderVersion: {"kind":"UInt32"},
    MaxVertexShaderConst: {"kind":"UInt32"},
    PixelShaderVersion: {"kind":"UInt32"},
    PixelShader1xMaxValue: {"kind":"Single"},
    DevCaps2: {"kind":"UInt32"},
    MaxNpatchTessellationLevel: {"kind":"Single"},
    Reserved5: {"kind":"UInt32"},
    MasterAdapterOrdinal: {"kind":"UInt32"},
    AdapterOrdinalInGroup: {"kind":"UInt32"},
    NumberOfAdaptersInGroup: {"kind":"UInt32"},
    DeclTypes: {"kind":"UInt32"},
    NumSimultaneousRTs: {"kind":"UInt32"},
    StretchRectFilterCaps: {"kind":"UInt32"},
    VS20Caps: Windows.Win32.Direct2D.D3DVSHADERCAPS2_0,
    PS20Caps: Windows.Win32.Direct2D.D3DPSHADERCAPS2_0,
    VertexTextureFilterCaps: {"kind":"UInt32"},
    MaxVShaderInstructionsExecuted: {"kind":"UInt32"},
    MaxPShaderInstructionsExecuted: {"kind":"UInt32"},
    MaxVertexShader30InstructionSlots: {"kind":"UInt32"},
    MaxPixelShader30InstructionSlots: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IDirect3D9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3D9 = *opaque{
    // TODO: Method 'RegisterSoftwareDevice'
    // TODO: Method 'GetAdapterCount'
    // TODO: Method 'GetAdapterIdentifier'
    // TODO: Method 'GetAdapterModeCount'
    // TODO: Method 'EnumAdapterModes'
    // TODO: Method 'GetAdapterDisplayMode'
    // TODO: Method 'CheckDeviceType'
    // TODO: Method 'CheckDeviceFormat'
    // TODO: Method 'CheckDeviceMultiSampleType'
    // TODO: Method 'CheckDepthStencilMatch'
    // TODO: Method 'CheckDeviceFormatConversion'
    // TODO: Method 'GetDeviceCaps'
    // TODO: Method 'GetAdapterMonitor'
    // TODO: Method 'CreateDevice'
};
// --------------------------------------------------------
// Type: IDirect3DDevice9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DDevice9 = *opaque{
    // TODO: Method 'TestCooperativeLevel'
    // TODO: Method 'GetAvailableTextureMem'
    // TODO: Method 'EvictManagedResources'
    // TODO: Method 'GetDirect3D'
    // TODO: Method 'GetDeviceCaps'
    // TODO: Method 'GetDisplayMode'
    // TODO: Method 'GetCreationParameters'
    // TODO: Method 'SetCursorProperties'
    // TODO: Method 'SetCursorPosition'
    // TODO: Method 'ShowCursor'
    // TODO: Method 'CreateAdditionalSwapChain'
    // TODO: Method 'GetSwapChain'
    // TODO: Method 'GetNumberOfSwapChains'
    // TODO: Method 'Reset'
    // TODO: Method 'Present'
    // TODO: Method 'GetBackBuffer'
    // TODO: Method 'GetRasterStatus'
    // TODO: Method 'SetDialogBoxMode'
    // TODO: Method 'SetGammaRamp'
    // TODO: Method 'GetGammaRamp'
    // TODO: Method 'CreateTexture'
    // TODO: Method 'CreateVolumeTexture'
    // TODO: Method 'CreateCubeTexture'
    // TODO: Method 'CreateVertexBuffer'
    // TODO: Method 'CreateIndexBuffer'
    // TODO: Method 'CreateRenderTarget'
    // TODO: Method 'CreateDepthStencilSurface'
    // TODO: Method 'UpdateSurface'
    // TODO: Method 'UpdateTexture'
    // TODO: Method 'GetRenderTargetData'
    // TODO: Method 'GetFrontBufferData'
    // TODO: Method 'StretchRect'
    // TODO: Method 'ColorFill'
    // TODO: Method 'CreateOffscreenPlainSurface'
    // TODO: Method 'SetRenderTarget'
    // TODO: Method 'GetRenderTarget'
    // TODO: Method 'SetDepthStencilSurface'
    // TODO: Method 'GetDepthStencilSurface'
    // TODO: Method 'BeginScene'
    // TODO: Method 'EndScene'
    // TODO: Method 'Clear'
    // TODO: Method 'SetTransform'
    // TODO: Method 'GetTransform'
    // TODO: Method 'MultiplyTransform'
    // TODO: Method 'SetViewport'
    // TODO: Method 'GetViewport'
    // TODO: Method 'SetMaterial'
    // TODO: Method 'GetMaterial'
    // TODO: Method 'SetLight'
    // TODO: Method 'GetLight'
    // TODO: Method 'LightEnable'
    // TODO: Method 'GetLightEnable'
    // TODO: Method 'SetClipPlane'
    // TODO: Method 'GetClipPlane'
    // TODO: Method 'SetRenderState'
    // TODO: Method 'GetRenderState'
    // TODO: Method 'CreateStateBlock'
    // TODO: Method 'BeginStateBlock'
    // TODO: Method 'EndStateBlock'
    // TODO: Method 'SetClipStatus'
    // TODO: Method 'GetClipStatus'
    // TODO: Method 'GetTexture'
    // TODO: Method 'SetTexture'
    // TODO: Method 'GetTextureStageState'
    // TODO: Method 'SetTextureStageState'
    // TODO: Method 'GetSamplerState'
    // TODO: Method 'SetSamplerState'
    // TODO: Method 'ValidateDevice'
    // TODO: Method 'SetPaletteEntries'
    // TODO: Method 'GetPaletteEntries'
    // TODO: Method 'SetCurrentTexturePalette'
    // TODO: Method 'GetCurrentTexturePalette'
    // TODO: Method 'SetScissorRect'
    // TODO: Method 'GetScissorRect'
    // TODO: Method 'SetSoftwareVertexProcessing'
    // TODO: Method 'GetSoftwareVertexProcessing'
    // TODO: Method 'SetNPatchMode'
    // TODO: Method 'GetNPatchMode'
    // TODO: Method 'DrawPrimitive'
    // TODO: Method 'DrawIndexedPrimitive'
    // TODO: Method 'DrawPrimitiveUP'
    // TODO: Method 'DrawIndexedPrimitiveUP'
    // TODO: Method 'ProcessVertices'
    // TODO: Method 'CreateVertexDeclaration'
    // TODO: Method 'SetVertexDeclaration'
    // TODO: Method 'GetVertexDeclaration'
    // TODO: Method 'SetFVF'
    // TODO: Method 'GetFVF'
    // TODO: Method 'CreateVertexShader'
    // TODO: Method 'SetVertexShader'
    // TODO: Method 'GetVertexShader'
    // TODO: Method 'SetVertexShaderConstantF'
    // TODO: Method 'GetVertexShaderConstantF'
    // TODO: Method 'SetVertexShaderConstantI'
    // TODO: Method 'GetVertexShaderConstantI'
    // TODO: Method 'SetVertexShaderConstantB'
    // TODO: Method 'GetVertexShaderConstantB'
    // TODO: Method 'SetStreamSource'
    // TODO: Method 'GetStreamSource'
    // TODO: Method 'SetStreamSourceFreq'
    // TODO: Method 'GetStreamSourceFreq'
    // TODO: Method 'SetIndices'
    // TODO: Method 'GetIndices'
    // TODO: Method 'CreatePixelShader'
    // TODO: Method 'SetPixelShader'
    // TODO: Method 'GetPixelShader'
    // TODO: Method 'SetPixelShaderConstantF'
    // TODO: Method 'GetPixelShaderConstantF'
    // TODO: Method 'SetPixelShaderConstantI'
    // TODO: Method 'GetPixelShaderConstantI'
    // TODO: Method 'SetPixelShaderConstantB'
    // TODO: Method 'GetPixelShaderConstantB'
    // TODO: Method 'DrawRectPatch'
    // TODO: Method 'DrawTriPatch'
    // TODO: Method 'DeletePatch'
    // TODO: Method 'CreateQuery'
};
// --------------------------------------------------------
// Type: IDirect3DStateBlock9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DStateBlock9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'Capture'
    // TODO: Method 'Apply'
};
// --------------------------------------------------------
// Type: IDirect3DSwapChain9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DSwapChain9 = *opaque{
    // TODO: Method 'Present'
    // TODO: Method 'GetFrontBufferData'
    // TODO: Method 'GetBackBuffer'
    // TODO: Method 'GetRasterStatus'
    // TODO: Method 'GetDisplayMode'
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetPresentParameters'
};
// --------------------------------------------------------
// Type: IDirect3DResource9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DResource9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'FreePrivateData'
    // TODO: Method 'SetPriority'
    // TODO: Method 'GetPriority'
    // TODO: Method 'PreLoad'
    // TODO: Method 'GetType'
};
// --------------------------------------------------------
// Type: IDirect3DVertexDeclaration9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DVertexDeclaration9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetDeclaration'
};
// --------------------------------------------------------
// Type: IDirect3DVertexShader9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DVertexShader9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetFunction'
};
// --------------------------------------------------------
// Type: IDirect3DPixelShader9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DPixelShader9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetFunction'
};
// --------------------------------------------------------
// Type: IDirect3DBaseTexture9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DBaseTexture9 = *opaque{
    // TODO: Method 'SetLOD'
    // TODO: Method 'GetLOD'
    // TODO: Method 'GetLevelCount'
    // TODO: Method 'SetAutoGenFilterType'
    // TODO: Method 'GetAutoGenFilterType'
    // TODO: Method 'GenerateMipSubLevels'
};
// --------------------------------------------------------
// Type: IDirect3DTexture9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DTexture9 = *opaque{
    // TODO: Method 'GetLevelDesc'
    // TODO: Method 'GetSurfaceLevel'
    // TODO: Method 'LockRect'
    // TODO: Method 'UnlockRect'
    // TODO: Method 'AddDirtyRect'
};
// --------------------------------------------------------
// Type: IDirect3DVolumeTexture9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DVolumeTexture9 = *opaque{
    // TODO: Method 'GetLevelDesc'
    // TODO: Method 'GetVolumeLevel'
    // TODO: Method 'LockBox'
    // TODO: Method 'UnlockBox'
    // TODO: Method 'AddDirtyBox'
};
// --------------------------------------------------------
// Type: IDirect3DCubeTexture9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DCubeTexture9 = *opaque{
    // TODO: Method 'GetLevelDesc'
    // TODO: Method 'GetCubeMapSurface'
    // TODO: Method 'LockRect'
    // TODO: Method 'UnlockRect'
    // TODO: Method 'AddDirtyRect'
};
// --------------------------------------------------------
// Type: IDirect3DVertexBuffer9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DVertexBuffer9 = *opaque{
    // TODO: Method 'Lock'
    // TODO: Method 'Unlock'
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: IDirect3DIndexBuffer9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DIndexBuffer9 = *opaque{
    // TODO: Method 'Lock'
    // TODO: Method 'Unlock'
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: IDirect3DSurface9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DSurface9 = *opaque{
    // TODO: Method 'GetContainer'
    // TODO: Method 'GetDesc'
    // TODO: Method 'LockRect'
    // TODO: Method 'UnlockRect'
    // TODO: Method 'GetDC'
    // TODO: Method 'ReleaseDC'
};
// --------------------------------------------------------
// Type: IDirect3DVolume9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DVolume9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'FreePrivateData'
    // TODO: Method 'GetContainer'
    // TODO: Method 'GetDesc'
    // TODO: Method 'LockBox'
    // TODO: Method 'UnlockBox'
};
// --------------------------------------------------------
// Type: IDirect3DQuery9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DQuery9 = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetType'
    // TODO: Method 'GetDataSize'
    // TODO: Method 'Issue'
    // TODO: Method 'GetData'
};
// --------------------------------------------------------
// Type: IDirect3D9Ex
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3D9Ex = *opaque{
    // TODO: Method 'GetAdapterModeCountEx'
    // TODO: Method 'EnumAdapterModesEx'
    // TODO: Method 'GetAdapterDisplayModeEx'
    // TODO: Method 'CreateDeviceEx'
    // TODO: Method 'GetAdapterLUID'
};
// --------------------------------------------------------
// Type: IDirect3DDevice9Ex
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DDevice9Ex = *opaque{
    // TODO: Method 'SetConvolutionMonoKernel'
    // TODO: Method 'ComposeRects'
    // TODO: Method 'PresentEx'
    // TODO: Method 'GetGPUThreadPriority'
    // TODO: Method 'SetGPUThreadPriority'
    // TODO: Method 'WaitForVBlank'
    // TODO: Method 'CheckResourceResidency'
    // TODO: Method 'SetMaximumFrameLatency'
    // TODO: Method 'GetMaximumFrameLatency'
    // TODO: Method 'CheckDeviceState'
    // TODO: Method 'CreateRenderTargetEx'
    // TODO: Method 'CreateOffscreenPlainSurfaceEx'
    // TODO: Method 'CreateDepthStencilSurfaceEx'
    // TODO: Method 'ResetEx'
    // TODO: Method 'GetDisplayModeEx'
};
// --------------------------------------------------------
// Type: IDirect3DSwapChain9Ex
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirect3DSwapChain9Ex = *opaque{
    // TODO: Method 'GetLastPresentCount'
    // TODO: Method 'GetPresentStats'
    // TODO: Method 'GetDisplayModeEx'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1CreateFactory(
    factoryType: Windows.Win32.Direct2D.D2D1_FACTORY_TYPE,
    riid: {"kind""Ptr","child":Guid},
    pFactoryOptions: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D1_FACTORY_OPTIONS},
    ppIFactory: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1MakeRotateMatrix(
    angle: {"kind":"Single"},
    center: Windows.Win32.Direct2D.D2D_POINT_2F,
    matrix: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_MATRIX_3X2_F},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1MakeSkewMatrix(
    angleX: {"kind":"Single"},
    angleY: {"kind":"Single"},
    center: Windows.Win32.Direct2D.D2D_POINT_2F,
    matrix: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_MATRIX_3X2_F},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1IsMatrixInvertible(
    matrix: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_MATRIX_3X2_F},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1InvertMatrix(
    matrix: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_MATRIX_3X2_F},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1CreateDevice(
    dxgiDevice: Windows.Win32.Dxgi.IDXGIDevice,
    creationProperties: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D1_CREATION_PROPERTIES},
    d2dDevice: {"kind""Ptr","child":Windows.Win32.Direct2D.ID2D1Device},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1CreateDeviceContext(
    dxgiSurface: Windows.Win32.Dxgi.IDXGISurface,
    creationProperties: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D1_CREATION_PROPERTIES},
    d2dDeviceContext: {"kind""Ptr","child":Windows.Win32.Direct2D.ID2D1DeviceContext},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1ConvertColorSpace(
    sourceColorSpace: Windows.Win32.Direct2D.D2D1_COLOR_SPACE,
    destinationColorSpace: Windows.Win32.Direct2D.D2D1_COLOR_SPACE,
    color: {"kind""Ptr","child":Windows.Win32.Dxgi.DXGI_RGBA},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1SinCos(
    angle: {"kind":"Single"},
    s: {"kind""Ptr","child":{"kind":"Single"}},
    c: {"kind""Ptr","child":{"kind":"Single"}},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1Tan(
    angle: {"kind":"Single"},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1Vec3Length(
    x: {"kind":"Single"},
    y: {"kind":"Single"},
    z: {"kind":"Single"},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1ComputeMaximumScaleFactor(
    matrix: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_MATRIX_3X2_F},

// set_last_errror=False (can and should we use this?)
pub extern "d2d1" fn D2D1GetGradientMeshInteriorPointsFromCoonsPatch(
    pPoint0: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint1: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint2: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint3: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint4: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint5: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint6: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint7: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint8: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint9: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint10: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pPoint11: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pTensorPoint11: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pTensorPoint12: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pTensorPoint21: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},
    pTensorPoint22: {"kind""Ptr","child":Windows.Win32.Direct2D.D2D_POINT_2F},

// set_last_errror=False (can and should we use this?)
pub extern "d3d9" fn Direct3DCreate9(
    SDKVersion: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "d3d9" fn Direct3DCreate9Ex(
    SDKVersion: {"kind":"UInt32"},
    param1: {"kind""Ptr","child":Windows.Win32.Direct2D.IDirect3D9Ex},
],

"unicode_aliases": [
]}
