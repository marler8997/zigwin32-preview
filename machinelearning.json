{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: WINML_TENSOR_DATA_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WINML_TENSOR_DATA_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WINML_FEATURE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WINML_FEATURE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WINML_BINDING_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WINML_BINDING_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WINML_TENSOR_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_TENSOR_BINDING_DESC = extern struct {
    DataType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    NumDimensions: {"kind":"UInt32"},
    pShape: {"kind""Ptr","child":{"kind":"Int64"}},
    DataSize: {"kind":"UInt32"},
    pData: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WINML_SEQUENCE_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_SEQUENCE_BINDING_DESC = extern struct {
    ElementCount: {"kind":"UInt32"},
    ElementType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    Anonymous: Windows.Win32.MachineLearning.WINML_SEQUENCE_BINDING_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: WINML_MAP_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_MAP_BINDING_DESC = extern struct {
    ElementCount: {"kind":"UInt32"},
    KeyType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    Anonymous1: Windows.Win32.MachineLearning.WINML_MAP_BINDING_DESC+_Anonymous1_e__Union,
    Fields: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    Anonymous2: Windows.Win32.MachineLearning.WINML_MAP_BINDING_DESC+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: WINML_IMAGE_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_IMAGE_BINDING_DESC = extern struct {
    ElementType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    NumDimensions: {"kind":"UInt32"},
    pShape: {"kind""Ptr","child":{"kind":"Int64"}},
    DataSize: {"kind":"UInt32"},
    pData: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WINML_RESOURCE_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_RESOURCE_BINDING_DESC = extern struct {
    ElementType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    NumDimensions: {"kind":"UInt32"},
    pShape: {"kind""Ptr","child":{"kind":"Int64"}},
    pResource: Windows.Win32.Direct3D12.ID3D12Resource,
};
// --------------------------------------------------------
// Type: WINML_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_BINDING_DESC = extern struct {
    Name: {"kind""Ptr","child":{"kind":"UInt16"}},
    BindType: Windows.Win32.MachineLearning.WINML_BINDING_TYPE,
    Anonymous: Windows.Win32.MachineLearning.WINML_BINDING_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: WINML_TENSOR_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_TENSOR_VARIABLE_DESC = extern struct {
    ElementType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    NumDimensions: {"kind":"UInt32"},
    pShape: {"kind""Ptr","child":{"kind":"Int64"}},
};
// --------------------------------------------------------
// Type: WINML_SEQUENCE_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_SEQUENCE_VARIABLE_DESC = extern struct {
    ElementType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
};
// --------------------------------------------------------
// Type: WINML_MAP_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_MAP_VARIABLE_DESC = extern struct {
    KeyType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    Fields: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
};
// --------------------------------------------------------
// Type: WINML_IMAGE_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_IMAGE_VARIABLE_DESC = extern struct {
    ElementType: Windows.Win32.MachineLearning.WINML_TENSOR_DATA_TYPE,
    NumDimensions: {"kind":"UInt32"},
    pShape: {"kind""Ptr","child":{"kind":"Int64"}},
};
// --------------------------------------------------------
// Type: WINML_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_VARIABLE_DESC = extern struct {
    Name: {"kind""Ptr","child":{"kind":"UInt16"}},
    Description: {"kind""Ptr","child":{"kind":"UInt16"}},
    FeatureType: Windows.Win32.MachineLearning.WINML_FEATURE_TYPE,
    Required: Windows.Win32.SystemServices.BOOL,
    Anonymous: Windows.Win32.MachineLearning.WINML_VARIABLE_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: WINML_MODEL_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WINML_MODEL_DESC = extern struct {
    Author: {"kind""Ptr","child":{"kind":"UInt16"}},
    Name: {"kind""Ptr","child":{"kind":"UInt16"}},
    Domain: {"kind""Ptr","child":{"kind":"UInt16"}},
    Description: {"kind""Ptr","child":{"kind":"UInt16"}},
    Version: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: IWinMLModel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWinMLModel = *opaque{
    // TODO: Method 'GetDescription'
    // TODO: Method 'EnumerateMetadata'
    // TODO: Method 'EnumerateModelInputs'
    // TODO: Method 'EnumerateModelOutputs'
};
// --------------------------------------------------------
// Type: IWinMLEvaluationContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWinMLEvaluationContext = *opaque{
    // TODO: Method 'BindValue'
    // TODO: Method 'GetValueByName'
    // TODO: Method 'Clear'
};
// --------------------------------------------------------
// Type: IWinMLRuntime
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWinMLRuntime = *opaque{
    // TODO: Method 'LoadModel'
    // TODO: Method 'CreateEvaluationContext'
    // TODO: Method 'EvaluateModel'
};
// --------------------------------------------------------
// Type: WINML_RUNTIME_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WINML_RUNTIME_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IWinMLRuntimeFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWinMLRuntimeFactory = *opaque{
    // TODO: Method 'CreateRuntime'
};
// --------------------------------------------------------
// Type: MLOperatorAttributeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorAttributeType = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorTensorDataType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorTensorDataType = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorEdgeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorEdgeType = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorEdgeDescription
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorEdgeDescription = extern struct {
    edgeType: Windows.Win32.MachineLearning.MLOperatorEdgeType,
    Anonymous: Windows.Win32.MachineLearning.MLOperatorEdgeDescription+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IMLOperatorAttributes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorAttributes = *opaque{
    // TODO: Method 'GetAttributeElementCount'
    // TODO: Method 'GetAttribute'
    // TODO: Method 'GetStringAttributeElementLength'
    // TODO: Method 'GetStringAttributeElement'
};
// --------------------------------------------------------
// Type: IMLOperatorTensorShapeDescription
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorTensorShapeDescription = *opaque{
    // TODO: Method 'GetInputTensorDimensionCount'
    // TODO: Method 'GetInputTensorShape'
    // TODO: Method 'HasOutputShapeDescription'
    // TODO: Method 'GetOutputTensorDimensionCount'
    // TODO: Method 'GetOutputTensorShape'
};
// --------------------------------------------------------
// Type: IMLOperatorKernelCreationContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorKernelCreationContext = *opaque{
    // TODO: Method 'GetInputCount'
    // TODO: Method 'GetOutputCount'
    // TODO: Method 'IsInputValid'
    // TODO: Method 'IsOutputValid'
    // TODO: Method 'GetInputEdgeDescription'
    // TODO: Method 'GetOutputEdgeDescription'
    // TODO: Method 'HasTensorShapeDescription'
    // TODO: Method 'GetTensorShapeDescription'
    // TODO: Method 'GetExecutionInterface'
};
// --------------------------------------------------------
// Type: IMLOperatorTensor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorTensor = *opaque{
    // TODO: Method 'GetDimensionCount'
    // TODO: Method 'GetShape'
    // TODO: Method 'GetTensorDataType'
    // TODO: Method 'IsCpuData'
    // TODO: Method 'IsDataInterface'
    // TODO: Method 'GetData'
    // TODO: Method 'GetDataInterface'
};
// --------------------------------------------------------
// Type: IMLOperatorKernelContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorKernelContext = *opaque{
    // TODO: Method 'GetInputTensor'
    // TODO: Method 'GetOutputTensor'
    // TODO: Method 'GetOutputTensor'
    // TODO: Method 'AllocateTemporaryData'
    // TODO: Method 'GetExecutionInterface'
};
// --------------------------------------------------------
// Type: IMLOperatorKernel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorKernel = *opaque{
    // TODO: Method 'Compute'
};
// --------------------------------------------------------
// Type: MLOperatorParameterOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorParameterOptions = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorSchemaEdgeTypeFormat
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorSchemaEdgeTypeFormat = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorSchemaEdgeDescription
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorSchemaEdgeDescription = extern struct {
    options: Windows.Win32.MachineLearning.MLOperatorParameterOptions,
    typeFormat: Windows.Win32.MachineLearning.MLOperatorSchemaEdgeTypeFormat,
    Anonymous: Windows.Win32.MachineLearning.MLOperatorSchemaEdgeDescription+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MLOperatorEdgeTypeConstraint
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorEdgeTypeConstraint = extern struct {
    typeLabel: {"kind""Ptr","child":{"kind":"SByte"}},
    allowedTypes: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorEdgeDescription},
    allowedTypeCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IMLOperatorShapeInferenceContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorShapeInferenceContext = *opaque{
    // TODO: Method 'GetInputCount'
    // TODO: Method 'GetOutputCount'
    // TODO: Method 'IsInputValid'
    // TODO: Method 'IsOutputValid'
    // TODO: Method 'GetInputEdgeDescription'
    // TODO: Method 'GetInputTensorDimensionCount'
    // TODO: Method 'GetInputTensorShape'
    // TODO: Method 'SetOutputTensorShape'
};
// --------------------------------------------------------
// Type: IMLOperatorTypeInferenceContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorTypeInferenceContext = *opaque{
    // TODO: Method 'GetInputCount'
    // TODO: Method 'GetOutputCount'
    // TODO: Method 'IsInputValid'
    // TODO: Method 'IsOutputValid'
    // TODO: Method 'GetInputEdgeDescription'
    // TODO: Method 'SetOutputEdgeDescription'
};
// --------------------------------------------------------
// Type: IMLOperatorTypeInferrer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorTypeInferrer = *opaque{
    // TODO: Method 'InferOutputTypes'
};
// --------------------------------------------------------
// Type: IMLOperatorShapeInferrer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorShapeInferrer = *opaque{
    // TODO: Method 'InferOutputShapes'
};
// --------------------------------------------------------
// Type: MLOperatorAttribute
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorAttribute = extern struct {
    name: {"kind""Ptr","child":{"kind":"SByte"}},
    type: Windows.Win32.MachineLearning.MLOperatorAttributeType,
    required: {"kind":"Boolean"},
};
// --------------------------------------------------------
// Type: MLOperatorAttributeNameValue
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorAttributeNameValue = extern struct {
    name: {"kind""Ptr","child":{"kind":"SByte"}},
    type: Windows.Win32.MachineLearning.MLOperatorAttributeType,
    valueCount: {"kind":"UInt32"},
    Anonymous: Windows.Win32.MachineLearning.MLOperatorAttributeNameValue+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MLOperatorSchemaDescription
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorSchemaDescription = extern struct {
    name: {"kind""Ptr","child":{"kind":"SByte"}},
    operatorSetVersionAtLastChange: {"kind":"Int32"},
    inputs: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorSchemaEdgeDescription},
    inputCount: {"kind":"UInt32"},
    outputs: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorSchemaEdgeDescription},
    outputCount: {"kind":"UInt32"},
    typeConstraints: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorEdgeTypeConstraint},
    typeConstraintCount: {"kind":"UInt32"},
    attributes: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorAttribute},
    attributeCount: {"kind":"UInt32"},
    defaultAttributes: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorAttributeNameValue},
    defaultAttributeCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: MLOperatorSetId
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorSetId = extern struct {
    domain: {"kind""Ptr","child":{"kind":"SByte"}},
    version: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: MLOperatorKernelOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorKernelOptions = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorExecutionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLOperatorExecutionType = *opaque{
};
// --------------------------------------------------------
// Type: MLOperatorKernelDescription
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLOperatorKernelDescription = extern struct {
    domain: {"kind""Ptr","child":{"kind":"SByte"}},
    name: {"kind""Ptr","child":{"kind":"SByte"}},
    minimumOperatorSetVersion: {"kind":"Int32"},
    executionType: Windows.Win32.MachineLearning.MLOperatorExecutionType,
    typeConstraints: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorEdgeTypeConstraint},
    typeConstraintCount: {"kind":"UInt32"},
    defaultAttributes: {"kind""Ptr","child":Windows.Win32.MachineLearning.MLOperatorAttributeNameValue},
    defaultAttributeCount: {"kind":"UInt32"},
    options: Windows.Win32.MachineLearning.MLOperatorKernelOptions,
    executionOptions: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IMLOperatorKernelFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorKernelFactory = *opaque{
    // TODO: Method 'CreateKernel'
};
// --------------------------------------------------------
// Type: IMLOperatorRegistry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMLOperatorRegistry = *opaque{
    // TODO: Method 'RegisterOperatorSetSchema'
    // TODO: Method 'RegisterOperatorKernel'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "winml" fn WinMLCreateRuntime(
    runtime: {"kind""Ptr","child":Windows.Win32.MachineLearning.IWinMLRuntime},

// set_last_errror=False (can and should we use this?)
pub extern "windows" fn MLCreateOperatorRegistry(
    registry: {"kind""Ptr","child":Windows.Win32.MachineLearning.IMLOperatorRegistry},
],

"unicode_aliases": [
]}
