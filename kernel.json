{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: EXCEPTION_DISPOSITION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EXCEPTION_DISPOSITION = *opaque{
};
// --------------------------------------------------------
// Type: COMPARTMENT_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const COMPARTMENT_ID = *opaque{
};
// --------------------------------------------------------
// Type: LUID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LUID = extern struct {
    LowPart: {"kind":"UInt32"},
    HighPart: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: QUAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const QUAD = extern struct {
    Anonymous: Windows.Win32.Kernel.QUAD+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: EVENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EVENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: TIMER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TIMER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WAIT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WAIT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CSTRING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CSTRING = extern struct {
    Length: {"kind":"UInt16"},
    MaximumLength: {"kind":"UInt16"},
    Buffer: {"kind""Ptr","child":{"kind":"SByte"}},
};
// --------------------------------------------------------
// Type: LIST_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LIST_ENTRY = extern struct {
    Flink: {"kind""Ptr","child":Windows.Win32.Kernel.LIST_ENTRY},
    Blink: {"kind""Ptr","child":Windows.Win32.Kernel.LIST_ENTRY},
};
// --------------------------------------------------------
// Type: SINGLE_LIST_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SINGLE_LIST_ENTRY = extern struct {
    Next: {"kind""Ptr","child":Windows.Win32.Kernel.SINGLE_LIST_ENTRY},
};
// --------------------------------------------------------
// Type: RTL_BALANCED_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RTL_BALANCED_NODE = extern struct {
    Anonymous1: Windows.Win32.Kernel.RTL_BALANCED_NODE+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.Kernel.RTL_BALANCED_NODE+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            Left: {"kind""Ptr","child":Windows.Win32.Kernel.RTL_BALANCED_NODE},
            Right: {"kind""Ptr","child":Windows.Win32.Kernel.RTL_BALANCED_NODE},
        };
    };
};
// --------------------------------------------------------
// Type: LIST_ENTRY32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LIST_ENTRY32 = extern struct {
    Flink: {"kind":"UInt32"},
    Blink: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: LIST_ENTRY64
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LIST_ENTRY64 = extern struct {
    Flink: {"kind":"UInt64"},
    Blink: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: SINGLE_LIST_ENTRY32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SINGLE_LIST_ENTRY32 = extern struct {
    Next: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WNF_STATE_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WNF_STATE_NAME = extern struct {
    Data: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: STRING32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const STRING32 = extern struct {
    Length: {"kind":"UInt16"},
    MaximumLength: {"kind":"UInt16"},
    Buffer: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: STRING64
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const STRING64 = extern struct {
    Length: {"kind":"UInt16"},
    MaximumLength: {"kind":"UInt16"},
    Buffer: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: OBJECT_ATTRIBUTES64
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OBJECT_ATTRIBUTES64 = extern struct {
    Length: {"kind":"UInt32"},
    RootDirectory: {"kind":"UInt64"},
    ObjectName: {"kind":"UInt64"},
    Attributes: {"kind":"UInt32"},
    SecurityDescriptor: {"kind":"UInt64"},
    SecurityQualityOfService: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: OBJECT_ATTRIBUTES32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OBJECT_ATTRIBUTES32 = extern struct {
    Length: {"kind":"UInt32"},
    RootDirectory: {"kind":"UInt32"},
    ObjectName: {"kind":"UInt32"},
    Attributes: {"kind":"UInt32"},
    SecurityDescriptor: {"kind":"UInt32"},
    SecurityQualityOfService: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: OBJECTID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OBJECTID = extern struct {
    Lineage: Guid,
    Uniquifier: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: EXCEPTION_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EXCEPTION_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: NT_PRODUCT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NT_PRODUCT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: SUITE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SUITE_TYPE = *opaque{
};
],

"func_definitions": [
],

"unicode_aliases": [
]}
