//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: WbemDefPath
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemDefPath = opaque {
};
// --------------------------------------------------------
// Type: WbemQuery
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemQuery = opaque {
};
// --------------------------------------------------------
// Type: tag_WBEM_PATH_STATUS_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_PATH_STATUS_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_PATH_CREATE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_PATH_CREATE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_GET_TEXT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_GET_TEXT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_GET_KEY_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_GET_KEY_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IWbemPathKeyList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemPathKeyList = *opaque{
    // TODO: Method 'GetCount'
    // TODO: Method 'SetKey'
    // TODO: Method 'SetKey2'
    // TODO: Method 'GetKey'
    // TODO: Method 'GetKey2'
    // TODO: Method 'RemoveKey'
    // TODO: Method 'RemoveAllKeys'
    // TODO: Method 'MakeSingleton'
    // TODO: Method 'GetInfo'
    // TODO: Method 'GetText'
};
// --------------------------------------------------------
// Type: IWbemPath
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemPath = *opaque{
    // TODO: Method 'SetText'
    // TODO: Method 'GetText'
    // TODO: Method 'GetInfo'
    // TODO: Method 'SetServer'
    // TODO: Method 'GetServer'
    // TODO: Method 'GetNamespaceCount'
    // TODO: Method 'SetNamespaceAt'
    // TODO: Method 'GetNamespaceAt'
    // TODO: Method 'RemoveNamespaceAt'
    // TODO: Method 'RemoveAllNamespaces'
    // TODO: Method 'GetScopeCount'
    // TODO: Method 'SetScope'
    // TODO: Method 'SetScopeFromText'
    // TODO: Method 'GetScope'
    // TODO: Method 'GetScopeAsText'
    // TODO: Method 'RemoveScope'
    // TODO: Method 'RemoveAllScopes'
    // TODO: Method 'SetClassName'
    // TODO: Method 'GetClassNameA'
    // TODO: Method 'GetKeyList'
    // TODO: Method 'CreateClassPart'
    // TODO: Method 'DeleteClassPart'
    // TODO: Method 'IsRelative'
    // TODO: Method 'IsRelativeOrChild'
    // TODO: Method 'IsLocal'
    // TODO: Method 'IsSameClassName'
};
// --------------------------------------------------------
// Type: IWbemQuery
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemQuery = *opaque{
    // TODO: Method 'Empty'
    // TODO: Method 'SetLanguageFeatures'
    // TODO: Method 'TestLanguageFeatures'
    // TODO: Method 'Parse'
    // TODO: Method 'GetAnalysis'
    // TODO: Method 'FreeMemory'
    // TODO: Method 'GetQueryInfo'
};
// --------------------------------------------------------
// Type: WMIQ_ANALYSIS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMIQ_ANALYSIS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMIQ_RPN_TOKEN_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMIQ_RPN_TOKEN_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: WMIQ_ASSOCQ_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMIQ_ASSOCQ_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: SWbemQueryQualifiedName
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SWbemQueryQualifiedName = extern struct {
    m_uVersion: u32,
    m_uTokenType: u32,
    m_uNameListSize: u32,
    m_ppszNameList: ?*?*u16,
    m_bArraysUsed: BOOL,
    m_pbArrayElUsed: ?*i32,
    m_puArrayIndex: ?*u32,
};
// --------------------------------------------------------
// Type: tag_SWbemRpnConst
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const tag_SWbemRpnConst = *opaque{
};
// --------------------------------------------------------
// Type: SWbemRpnQueryToken
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SWbemRpnQueryToken = extern struct {
    m_uVersion: u32,
    m_uTokenType: u32,
    m_uSubexpressionShape: u32,
    m_uOperator: u32,
    m_pRightIdent: ?*SWbemQueryQualifiedName,
    m_pLeftIdent: ?*SWbemQueryQualifiedName,
    m_uConstApparentType: u32,
    m_Const: tag_SWbemRpnConst,
    m_uConst2ApparentType: u32,
    m_Const2: tag_SWbemRpnConst,
    m_pszRightFunc: ?*u16,
    m_pszLeftFunc: ?*u16,
};
// --------------------------------------------------------
// Type: tag_SWbemRpnTokenList
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tag_SWbemRpnTokenList = extern struct {
    m_uVersion: u32,
    m_uTokenType: u32,
    m_uNumTokens: u32,
};
// --------------------------------------------------------
// Type: tag_WMIQ_LANGUAGE_FEATURES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WMIQ_LANGUAGE_FEATURES = *opaque{
};
// --------------------------------------------------------
// Type: tag_WMIQ_RPNQ_FEATURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WMIQ_RPNQ_FEATURE = *opaque{
};
// --------------------------------------------------------
// Type: SWbemRpnEncodedQuery
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SWbemRpnEncodedQuery = extern struct {
    m_uVersion: u32,
    m_uTokenType: u32,
    m_uParsedFeatureMask: u64,
    m_uDetectedArraySize: u32,
    m_puDetectedFeatures: ?*u32,
    m_uSelectListSize: u32,
    m_ppSelectList: ?*?*SWbemQueryQualifiedName,
    m_uFromTargetType: u32,
    m_pszOptionalFromPath: ?*u16,
    m_uFromListSize: u32,
    m_ppszFromList: ?*?*u16,
    m_uWhereClauseSize: u32,
    m_ppRpnWhereClause: ?*?*SWbemRpnQueryToken,
    m_dblWithinPolling: f64,
    m_dblWithinWindow: f64,
    m_uOrderByListSize: u32,
    m_ppszOrderByList: ?*?*u16,
    m_uOrderDirectionEl: ?*u32,
};
// --------------------------------------------------------
// Type: tag_SWbemAnalysisMatrix
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tag_SWbemAnalysisMatrix = extern struct {
    m_uVersion: u32,
    m_uMatrixType: u32,
    m_pszProperty: ?*u16,
    m_uPropertyType: u32,
    m_uEntries: u32,
    m_pValues: ?*?*opaque{},
    m_pbTruthTable: ?*i32,
};
// --------------------------------------------------------
// Type: tag_SWbemAnalysisMatrixList
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tag_SWbemAnalysisMatrixList = extern struct {
    m_uVersion: u32,
    m_uMatrixType: u32,
    m_uNumMatrices: u32,
    m_pMatrices: ?*tag_SWbemAnalysisMatrix,
};
// --------------------------------------------------------
// Type: SWbemAssocQueryInf
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SWbemAssocQueryInf = extern struct {
    m_uVersion: u32,
    m_uAnalysisType: u32,
    m_uFeatureMask: u32,
    m_pPath: IWbemPath,
    m_pszPath: ?*u16,
    m_pszQueryText: ?*u16,
    m_pszResultClass: ?*u16,
    m_pszAssocClass: ?*u16,
    m_pszRole: ?*u16,
    m_pszResultRole: ?*u16,
    m_pszRequiredQualifier: ?*u16,
    m_pszRequiredAssocQualifier: ?*u16,
};
// --------------------------------------------------------
// Type: WbemLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemLocator = opaque {
};
// --------------------------------------------------------
// Type: WbemContext
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemContext = opaque {
};
// --------------------------------------------------------
// Type: UnsecuredApartment
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const UnsecuredApartment = opaque {
};
// --------------------------------------------------------
// Type: WbemClassObject
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemClassObject = opaque {
};
// --------------------------------------------------------
// Type: MofCompiler
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MofCompiler = opaque {
};
// --------------------------------------------------------
// Type: WbemStatusCodeText
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemStatusCodeText = opaque {
};
// --------------------------------------------------------
// Type: WbemBackupRestore
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemBackupRestore = opaque {
};
// --------------------------------------------------------
// Type: WbemRefresher
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemRefresher = opaque {
};
// --------------------------------------------------------
// Type: WbemObjectTextSrc
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemObjectTextSrc = opaque {
};
// --------------------------------------------------------
// Type: WBEM_GENUS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_GENUS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_CHANGE_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_CHANGE_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_GENERIC_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_GENERIC_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_STATUS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_STATUS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_TIMEOUT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_TIMEOUT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_CONDITION_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_CONDITION_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_FLAVOR_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_FLAVOR_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_QUERY_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_QUERY_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_SECURITY_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_SECURITY_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_LIMITATION_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_LIMITATION_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_TEXT_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_TEXT_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_COMPARISON_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_COMPARISON_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_LOCKING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_LOCKING = *opaque{
};
// --------------------------------------------------------
// Type: CIMTYPE_ENUMERATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CIMTYPE_ENUMERATION = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_BACKUP_RESTORE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_BACKUP_RESTORE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_REFRESHER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_REFRESHER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_SHUTDOWN_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_SHUTDOWN_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEMSTATUS_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEMSTATUS_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_LIMITS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_LIMITS = *opaque{
};
// --------------------------------------------------------
// Type: WBEMSTATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEMSTATUS = *opaque{
};
// --------------------------------------------------------
// Type: IWbemClassObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemClassObject = *opaque{
    // TODO: Method 'GetQualifierSet'
    // TODO: Method 'Get'
    // TODO: Method 'Put'
    // TODO: Method 'Delete'
    // TODO: Method 'GetNames'
    // TODO: Method 'BeginEnumeration'
    // TODO: Method 'Next'
    // TODO: Method 'EndEnumeration'
    // TODO: Method 'GetPropertyQualifierSet'
    // TODO: Method 'Clone'
    // TODO: Method 'GetObjectText'
    // TODO: Method 'SpawnDerivedClass'
    // TODO: Method 'SpawnInstance'
    // TODO: Method 'CompareTo'
    // TODO: Method 'GetPropertyOrigin'
    // TODO: Method 'InheritsFrom'
    // TODO: Method 'GetMethod'
    // TODO: Method 'PutMethod'
    // TODO: Method 'DeleteMethod'
    // TODO: Method 'BeginMethodEnumeration'
    // TODO: Method 'NextMethod'
    // TODO: Method 'EndMethodEnumeration'
    // TODO: Method 'GetMethodQualifierSet'
    // TODO: Method 'GetMethodOrigin'
};
// --------------------------------------------------------
// Type: IWbemObjectAccess
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemObjectAccess = *opaque{
    // TODO: Method 'GetPropertyHandle'
    // TODO: Method 'WritePropertyValue'
    // TODO: Method 'ReadPropertyValue'
    // TODO: Method 'ReadDWORD'
    // TODO: Method 'WriteDWORD'
    // TODO: Method 'ReadQWORD'
    // TODO: Method 'WriteQWORD'
    // TODO: Method 'GetPropertyInfoByHandle'
    // TODO: Method 'Lock'
    // TODO: Method 'Unlock'
};
// --------------------------------------------------------
// Type: IWbemQualifierSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemQualifierSet = *opaque{
    // TODO: Method 'Get'
    // TODO: Method 'Put'
    // TODO: Method 'Delete'
    // TODO: Method 'GetNames'
    // TODO: Method 'BeginEnumeration'
    // TODO: Method 'Next'
    // TODO: Method 'EndEnumeration'
};
// --------------------------------------------------------
// Type: IWbemServices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemServices = *opaque{
    // TODO: Method 'OpenNamespace'
    // TODO: Method 'CancelAsyncCall'
    // TODO: Method 'QueryObjectSink'
    // TODO: Method 'GetObjectA'
    // TODO: Method 'GetObjectAsync'
    // TODO: Method 'PutClass'
    // TODO: Method 'PutClassAsync'
    // TODO: Method 'DeleteClass'
    // TODO: Method 'DeleteClassAsync'
    // TODO: Method 'CreateClassEnum'
    // TODO: Method 'CreateClassEnumAsync'
    // TODO: Method 'PutInstance'
    // TODO: Method 'PutInstanceAsync'
    // TODO: Method 'DeleteInstance'
    // TODO: Method 'DeleteInstanceAsync'
    // TODO: Method 'CreateInstanceEnum'
    // TODO: Method 'CreateInstanceEnumAsync'
    // TODO: Method 'ExecQuery'
    // TODO: Method 'ExecQueryAsync'
    // TODO: Method 'ExecNotificationQuery'
    // TODO: Method 'ExecNotificationQueryAsync'
    // TODO: Method 'ExecMethod'
    // TODO: Method 'ExecMethodAsync'
};
// --------------------------------------------------------
// Type: IWbemLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemLocator = *opaque{
    // TODO: Method 'ConnectServer'
};
// --------------------------------------------------------
// Type: IWbemObjectSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemObjectSink = *opaque{
    // TODO: Method 'Indicate'
    // TODO: Method 'SetStatus'
};
// --------------------------------------------------------
// Type: IEnumWbemClassObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumWbemClassObject = *opaque{
    // TODO: Method 'Reset'
    // TODO: Method 'Next'
    // TODO: Method 'NextAsync'
    // TODO: Method 'Clone'
    // TODO: Method 'Skip'
};
// --------------------------------------------------------
// Type: IWbemCallResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemCallResult = *opaque{
    // TODO: Method 'GetResultObject'
    // TODO: Method 'GetResultString'
    // TODO: Method 'GetResultServices'
    // TODO: Method 'GetCallStatus'
};
// --------------------------------------------------------
// Type: IWbemContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemContext = *opaque{
    // TODO: Method 'Clone'
    // TODO: Method 'GetNames'
    // TODO: Method 'BeginEnumeration'
    // TODO: Method 'Next'
    // TODO: Method 'EndEnumeration'
    // TODO: Method 'SetValue'
    // TODO: Method 'GetValue'
    // TODO: Method 'DeleteValue'
    // TODO: Method 'DeleteAll'
};
// --------------------------------------------------------
// Type: IUnsecuredApartment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUnsecuredApartment = *opaque{
    // TODO: Method 'CreateObjectStub'
};
// --------------------------------------------------------
// Type: IWbemUnsecuredApartment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemUnsecuredApartment = *opaque{
    // TODO: Method 'CreateSinkStub'
};
// --------------------------------------------------------
// Type: IWbemStatusCodeText
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemStatusCodeText = *opaque{
    // TODO: Method 'GetErrorCodeText'
    // TODO: Method 'GetFacilityCodeText'
};
// --------------------------------------------------------
// Type: IWbemBackupRestore
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemBackupRestore = *opaque{
    // TODO: Method 'Backup'
    // TODO: Method 'Restore'
};
// --------------------------------------------------------
// Type: IWbemBackupRestoreEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemBackupRestoreEx = *opaque{
    // TODO: Method 'Pause'
    // TODO: Method 'Resume'
};
// --------------------------------------------------------
// Type: IWbemRefresher
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemRefresher = *opaque{
    // TODO: Method 'Refresh'
};
// --------------------------------------------------------
// Type: IWbemHiPerfEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemHiPerfEnum = *opaque{
    // TODO: Method 'AddObjects'
    // TODO: Method 'RemoveObjects'
    // TODO: Method 'GetObjects'
    // TODO: Method 'RemoveAll'
};
// --------------------------------------------------------
// Type: IWbemConfigureRefresher
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemConfigureRefresher = *opaque{
    // TODO: Method 'AddObjectByPath'
    // TODO: Method 'AddObjectByTemplate'
    // TODO: Method 'AddRefresher'
    // TODO: Method 'Remove'
    // TODO: Method 'AddEnum'
};
// --------------------------------------------------------
// Type: IWbemObjectSinkEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemObjectSinkEx = *opaque{
    // TODO: Method 'WriteMessage'
    // TODO: Method 'WriteError'
    // TODO: Method 'PromptUser'
    // TODO: Method 'WriteProgress'
    // TODO: Method 'WriteStreamParameter'
};
// --------------------------------------------------------
// Type: IWbemShutdown
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemShutdown = *opaque{
    // TODO: Method 'Shutdown'
};
// --------------------------------------------------------
// Type: WMI_OBJ_TEXT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMI_OBJ_TEXT = *opaque{
};
// --------------------------------------------------------
// Type: IWbemObjectTextSrc
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemObjectTextSrc = *opaque{
    // TODO: Method 'GetText'
    // TODO: Method 'CreateFromText'
};
// --------------------------------------------------------
// Type: WBEM_COMPILE_STATUS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WBEM_COMPILE_STATUS_INFO = extern struct {
    lPhaseError: i32,
    hRes: HRESULT,
    ObjectNum: i32,
    FirstLine: i32,
    LastLine: i32,
    dwOutFlags: u32,
};
// --------------------------------------------------------
// Type: WBEM_COMPILER_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_COMPILER_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: WBEM_CONNECT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_CONNECT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: IMofCompiler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMofCompiler = *opaque{
    // TODO: Method 'CompileFile'
    // TODO: Method 'CompileBuffer'
    // TODO: Method 'CreateBMOF'
};
// --------------------------------------------------------
// Type: WBEM_UNSECAPP_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WBEM_UNSECAPP_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_INFORMATION_FLAG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_INFORMATION_FLAG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WbemAdministrativeLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemAdministrativeLocator = opaque {
};
// --------------------------------------------------------
// Type: WbemAuthenticatedLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemAuthenticatedLocator = opaque {
};
// --------------------------------------------------------
// Type: WbemUnauthenticatedLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemUnauthenticatedLocator = opaque {
};
// --------------------------------------------------------
// Type: WbemDecoupledRegistrar
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemDecoupledRegistrar = opaque {
};
// --------------------------------------------------------
// Type: WbemDecoupledBasicEventProvider
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WbemDecoupledBasicEventProvider = opaque {
};
// --------------------------------------------------------
// Type: tag_WBEM_PROVIDER_REQUIREMENTS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_PROVIDER_REQUIREMENTS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IWbemPropertyProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemPropertyProvider = *opaque{
    // TODO: Method 'GetProperty'
    // TODO: Method 'PutProperty'
};
// --------------------------------------------------------
// Type: IWbemUnboundObjectSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemUnboundObjectSink = *opaque{
    // TODO: Method 'IndicateToConsumer'
};
// --------------------------------------------------------
// Type: IWbemEventProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemEventProvider = *opaque{
    // TODO: Method 'ProvideEvents'
};
// --------------------------------------------------------
// Type: IWbemEventProviderQuerySink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemEventProviderQuerySink = *opaque{
    // TODO: Method 'NewQuery'
    // TODO: Method 'CancelQuery'
};
// --------------------------------------------------------
// Type: IWbemEventProviderSecurity
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemEventProviderSecurity = *opaque{
    // TODO: Method 'AccessCheck'
};
// --------------------------------------------------------
// Type: IWbemEventConsumerProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemEventConsumerProvider = *opaque{
    // TODO: Method 'FindConsumer'
};
// --------------------------------------------------------
// Type: IWbemProviderInitSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemProviderInitSink = *opaque{
    // TODO: Method 'SetStatus'
};
// --------------------------------------------------------
// Type: IWbemProviderInit
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemProviderInit = *opaque{
    // TODO: Method 'Initialize'
};
// --------------------------------------------------------
// Type: IWbemHiPerfProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemHiPerfProvider = *opaque{
    // TODO: Method 'QueryInstances'
    // TODO: Method 'CreateRefresher'
    // TODO: Method 'CreateRefreshableObject'
    // TODO: Method 'StopRefreshing'
    // TODO: Method 'CreateRefreshableEnum'
    // TODO: Method 'GetObjects'
};
// --------------------------------------------------------
// Type: IWbemDecoupledRegistrar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemDecoupledRegistrar = *opaque{
    // TODO: Method 'Register'
    // TODO: Method 'UnRegister'
};
// --------------------------------------------------------
// Type: IWbemProviderIdentity
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemProviderIdentity = *opaque{
    // TODO: Method 'SetRegistrationObject'
};
// --------------------------------------------------------
// Type: tag_WBEM_EXTRA_RETURN_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_EXTRA_RETURN_CODES = *opaque{
};
// --------------------------------------------------------
// Type: tag_WBEM_PROVIDER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_PROVIDER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IWbemDecoupledBasicEventProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemDecoupledBasicEventProvider = *opaque{
    // TODO: Method 'GetSink'
    // TODO: Method 'GetService'
};
// --------------------------------------------------------
// Type: tag_WBEM_BATCH_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const tag_WBEM_BATCH_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IWbemEventSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWbemEventSink = *opaque{
    // TODO: Method 'SetSinkSecurity'
    // TODO: Method 'IsActive'
    // TODO: Method 'GetRestrictedSink'
    // TODO: Method 'SetBatchingParameters'
};
// --------------------------------------------------------
// Type: SWbemLocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemLocator = opaque {
};
// --------------------------------------------------------
// Type: SWbemNamedValueSet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemNamedValueSet = opaque {
};
// --------------------------------------------------------
// Type: SWbemObjectPath
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemObjectPath = opaque {
};
// --------------------------------------------------------
// Type: SWbemLastError
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemLastError = opaque {
};
// --------------------------------------------------------
// Type: SWbemSink
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemSink = opaque {
};
// --------------------------------------------------------
// Type: SWbemDateTime
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemDateTime = opaque {
};
// --------------------------------------------------------
// Type: SWbemRefresher
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemRefresher = opaque {
};
// --------------------------------------------------------
// Type: SWbemServices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemServices = opaque {
};
// --------------------------------------------------------
// Type: SWbemServicesEx
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemServicesEx = opaque {
};
// --------------------------------------------------------
// Type: SWbemObject
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemObject = opaque {
};
// --------------------------------------------------------
// Type: SWbemObjectEx
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemObjectEx = opaque {
};
// --------------------------------------------------------
// Type: SWbemObjectSet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemObjectSet = opaque {
};
// --------------------------------------------------------
// Type: SWbemNamedValue
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemNamedValue = opaque {
};
// --------------------------------------------------------
// Type: SWbemQualifier
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemQualifier = opaque {
};
// --------------------------------------------------------
// Type: SWbemQualifierSet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemQualifierSet = opaque {
};
// --------------------------------------------------------
// Type: SWbemProperty
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemProperty = opaque {
};
// --------------------------------------------------------
// Type: SWbemPropertySet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemPropertySet = opaque {
};
// --------------------------------------------------------
// Type: SWbemMethod
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemMethod = opaque {
};
// --------------------------------------------------------
// Type: SWbemMethodSet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemMethodSet = opaque {
};
// --------------------------------------------------------
// Type: SWbemEventSource
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemEventSource = opaque {
};
// --------------------------------------------------------
// Type: SWbemSecurity
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemSecurity = opaque {
};
// --------------------------------------------------------
// Type: SWbemPrivilege
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemPrivilege = opaque {
};
// --------------------------------------------------------
// Type: SWbemPrivilegeSet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemPrivilegeSet = opaque {
};
// --------------------------------------------------------
// Type: SWbemRefreshableItem
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const SWbemRefreshableItem = opaque {
};
// --------------------------------------------------------
// Type: WbemChangeFlagEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemChangeFlagEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemFlagEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemFlagEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemQueryFlagEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemQueryFlagEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemTextFlagEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemTextFlagEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemTimeout
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemTimeout = *opaque{
};
// --------------------------------------------------------
// Type: WbemComparisonFlagEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemComparisonFlagEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemCimtypeEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemCimtypeEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemErrorEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemErrorEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemAuthenticationLevelEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemAuthenticationLevelEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemImpersonationLevelEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemImpersonationLevelEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemPrivilegeEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemPrivilegeEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemObjectTextFormatEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemObjectTextFormatEnum = *opaque{
};
// --------------------------------------------------------
// Type: WbemConnectOptionsEnum
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WbemConnectOptionsEnum = *opaque{
};
// --------------------------------------------------------
// Type: ISWbemServices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemServices = *opaque{
    // TODO: Method 'Get'
    // TODO: Method 'GetAsync'
    // TODO: Method 'Delete'
    // TODO: Method 'DeleteAsync'
    // TODO: Method 'InstancesOf'
    // TODO: Method 'InstancesOfAsync'
    // TODO: Method 'SubclassesOf'
    // TODO: Method 'SubclassesOfAsync'
    // TODO: Method 'ExecQuery'
    // TODO: Method 'ExecQueryAsync'
    // TODO: Method 'AssociatorsOf'
    // TODO: Method 'AssociatorsOfAsync'
    // TODO: Method 'ReferencesTo'
    // TODO: Method 'ReferencesToAsync'
    // TODO: Method 'ExecNotificationQuery'
    // TODO: Method 'ExecNotificationQueryAsync'
    // TODO: Method 'ExecMethod'
    // TODO: Method 'ExecMethodAsync'
    // TODO: Method 'get_Security_'
};
// --------------------------------------------------------
// Type: ISWbemLocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemLocator = *opaque{
    // TODO: Method 'ConnectServer'
    // TODO: Method 'get_Security_'
};
// --------------------------------------------------------
// Type: ISWbemObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemObject = *opaque{
    // TODO: Method 'Put_'
    // TODO: Method 'PutAsync_'
    // TODO: Method 'Delete_'
    // TODO: Method 'DeleteAsync_'
    // TODO: Method 'Instances_'
    // TODO: Method 'InstancesAsync_'
    // TODO: Method 'Subclasses_'
    // TODO: Method 'SubclassesAsync_'
    // TODO: Method 'Associators_'
    // TODO: Method 'AssociatorsAsync_'
    // TODO: Method 'References_'
    // TODO: Method 'ReferencesAsync_'
    // TODO: Method 'ExecMethod_'
    // TODO: Method 'ExecMethodAsync_'
    // TODO: Method 'Clone_'
    // TODO: Method 'GetObjectText_'
    // TODO: Method 'SpawnDerivedClass_'
    // TODO: Method 'SpawnInstance_'
    // TODO: Method 'CompareTo_'
    // TODO: Method 'get_Qualifiers_'
    // TODO: Method 'get_Properties_'
    // TODO: Method 'get_Methods_'
    // TODO: Method 'get_Derivation_'
    // TODO: Method 'get_Path_'
    // TODO: Method 'get_Security_'
};
// --------------------------------------------------------
// Type: ISWbemObjectSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemObjectSet = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'get_Security_'
    // TODO: Method 'ItemIndex'
};
// --------------------------------------------------------
// Type: ISWbemNamedValue
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemNamedValue = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Name'
};
// --------------------------------------------------------
// Type: ISWbemNamedValueSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemNamedValueSet = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'Clone'
    // TODO: Method 'DeleteAll'
};
// --------------------------------------------------------
// Type: ISWbemQualifier
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemQualifier = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_IsLocal'
    // TODO: Method 'get_PropagatesToSubclass'
    // TODO: Method 'put_PropagatesToSubclass'
    // TODO: Method 'get_PropagatesToInstance'
    // TODO: Method 'put_PropagatesToInstance'
    // TODO: Method 'get_IsOverridable'
    // TODO: Method 'put_IsOverridable'
    // TODO: Method 'get_IsAmended'
};
// --------------------------------------------------------
// Type: ISWbemQualifierSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemQualifierSet = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: ISWbemProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemProperty = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_IsLocal'
    // TODO: Method 'get_Origin'
    // TODO: Method 'get_CIMType'
    // TODO: Method 'get_Qualifiers_'
    // TODO: Method 'get_IsArray'
};
// --------------------------------------------------------
// Type: ISWbemPropertySet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemPropertySet = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: ISWbemMethod
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemMethod = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Origin'
    // TODO: Method 'get_InParameters'
    // TODO: Method 'get_OutParameters'
    // TODO: Method 'get_Qualifiers_'
};
// --------------------------------------------------------
// Type: ISWbemMethodSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemMethodSet = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
};
// --------------------------------------------------------
// Type: ISWbemEventSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemEventSource = *opaque{
    // TODO: Method 'NextEvent'
    // TODO: Method 'get_Security_'
};
// --------------------------------------------------------
// Type: ISWbemObjectPath
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemObjectPath = *opaque{
    // TODO: Method 'get_Path'
    // TODO: Method 'put_Path'
    // TODO: Method 'get_RelPath'
    // TODO: Method 'put_RelPath'
    // TODO: Method 'get_Server'
    // TODO: Method 'put_Server'
    // TODO: Method 'get_Namespace'
    // TODO: Method 'put_Namespace'
    // TODO: Method 'get_ParentNamespace'
    // TODO: Method 'get_DisplayName'
    // TODO: Method 'put_DisplayName'
    // TODO: Method 'get_Class'
    // TODO: Method 'put_Class'
    // TODO: Method 'get_IsClass'
    // TODO: Method 'SetAsClass'
    // TODO: Method 'get_IsSingleton'
    // TODO: Method 'SetAsSingleton'
    // TODO: Method 'get_Keys'
    // TODO: Method 'get_Security_'
    // TODO: Method 'get_Locale'
    // TODO: Method 'put_Locale'
    // TODO: Method 'get_Authority'
    // TODO: Method 'put_Authority'
};
// --------------------------------------------------------
// Type: ISWbemLastError
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemLastError = *opaque{
};
// --------------------------------------------------------
// Type: ISWbemSinkEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemSinkEvents = *opaque{
};
// --------------------------------------------------------
// Type: ISWbemSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemSink = *opaque{
    // TODO: Method 'Cancel'
};
// --------------------------------------------------------
// Type: ISWbemSecurity
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemSecurity = *opaque{
    // TODO: Method 'get_ImpersonationLevel'
    // TODO: Method 'put_ImpersonationLevel'
    // TODO: Method 'get_AuthenticationLevel'
    // TODO: Method 'put_AuthenticationLevel'
    // TODO: Method 'get_Privileges'
};
// --------------------------------------------------------
// Type: ISWbemPrivilege
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemPrivilege = *opaque{
    // TODO: Method 'get_IsEnabled'
    // TODO: Method 'put_IsEnabled'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_DisplayName'
    // TODO: Method 'get_Identifier'
};
// --------------------------------------------------------
// Type: ISWbemPrivilegeSet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemPrivilegeSet = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
    // TODO: Method 'DeleteAll'
    // TODO: Method 'AddAsString'
};
// --------------------------------------------------------
// Type: ISWbemServicesEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemServicesEx = *opaque{
    // TODO: Method 'Put'
    // TODO: Method 'PutAsync'
};
// --------------------------------------------------------
// Type: ISWbemObjectEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemObjectEx = *opaque{
    // TODO: Method 'Refresh_'
    // TODO: Method 'get_SystemProperties_'
    // TODO: Method 'GetText_'
    // TODO: Method 'SetFromText_'
};
// --------------------------------------------------------
// Type: ISWbemDateTime
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemDateTime = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Year'
    // TODO: Method 'put_Year'
    // TODO: Method 'get_YearSpecified'
    // TODO: Method 'put_YearSpecified'
    // TODO: Method 'get_Month'
    // TODO: Method 'put_Month'
    // TODO: Method 'get_MonthSpecified'
    // TODO: Method 'put_MonthSpecified'
    // TODO: Method 'get_Day'
    // TODO: Method 'put_Day'
    // TODO: Method 'get_DaySpecified'
    // TODO: Method 'put_DaySpecified'
    // TODO: Method 'get_Hours'
    // TODO: Method 'put_Hours'
    // TODO: Method 'get_HoursSpecified'
    // TODO: Method 'put_HoursSpecified'
    // TODO: Method 'get_Minutes'
    // TODO: Method 'put_Minutes'
    // TODO: Method 'get_MinutesSpecified'
    // TODO: Method 'put_MinutesSpecified'
    // TODO: Method 'get_Seconds'
    // TODO: Method 'put_Seconds'
    // TODO: Method 'get_SecondsSpecified'
    // TODO: Method 'put_SecondsSpecified'
    // TODO: Method 'get_Microseconds'
    // TODO: Method 'put_Microseconds'
    // TODO: Method 'get_MicrosecondsSpecified'
    // TODO: Method 'put_MicrosecondsSpecified'
    // TODO: Method 'get_UTC'
    // TODO: Method 'put_UTC'
    // TODO: Method 'get_UTCSpecified'
    // TODO: Method 'put_UTCSpecified'
    // TODO: Method 'get_IsInterval'
    // TODO: Method 'put_IsInterval'
    // TODO: Method 'GetVarDate'
    // TODO: Method 'SetVarDate'
    // TODO: Method 'GetFileTime'
    // TODO: Method 'SetFileTime'
};
// --------------------------------------------------------
// Type: ISWbemRefresher
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemRefresher = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'AddEnum'
    // TODO: Method 'Remove'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_AutoReconnect'
    // TODO: Method 'put_AutoReconnect'
    // TODO: Method 'DeleteAll'
};
// --------------------------------------------------------
// Type: ISWbemRefreshableItem
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISWbemRefreshableItem = *opaque{
    // TODO: Method 'get_Index'
    // TODO: Method 'get_Refresher'
    // TODO: Method 'get_IsSet'
    // TODO: Method 'get_Object'
    // TODO: Method 'get_ObjectSet'
    // TODO: Method 'Remove'
};

//
// functions
//

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const BOOL = @import("systemservices.zig").BOOL;
const HRESULT = @import("com.zig").HRESULT;

test "" {
    const constant_export_count = 0;
    const type_export_count = 162;
    const func_count = 0;
    const unicode_alias_count = 0;
    const type_import_count = 2;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
