//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//
pub const g_dwWMSpecialAttributes : u32 = 20;
pub const g_wszWMDuration = "Duration";
pub const g_wszWMBitrate = "Bitrate";
pub const g_wszWMSeekable = "Seekable";
pub const g_wszWMStridable = "Stridable";
pub const g_wszWMBroadcast = "Broadcast";
pub const g_wszWMProtected = "Is_Protected";
pub const g_wszWMTrusted = "Is_Trusted";
pub const g_wszWMSignature_Name = "Signature_Name";
pub const g_wszWMHasAudio = "HasAudio";
pub const g_wszWMHasImage = "HasImage";
pub const g_wszWMHasScript = "HasScript";
pub const g_wszWMHasVideo = "HasVideo";
pub const g_wszWMCurrentBitrate = "CurrentBitrate";
pub const g_wszWMOptimalBitrate = "OptimalBitrate";
pub const g_wszWMHasAttachedImages = "HasAttachedImages";
pub const g_wszWMSkipBackward = "Can_Skip_Backward";
pub const g_wszWMSkipForward = "Can_Skip_Forward";
pub const g_wszWMNumberOfFrames = "NumberOfFrames";
pub const g_wszWMFileSize = "FileSize";
pub const g_wszWMHasArbitraryDataStream = "HasArbitraryDataStream";
pub const g_wszWMHasFileTransferStream = "HasFileTransferStream";
pub const g_wszWMContainerFormat = "WM/ContainerFormat";
pub const g_dwWMContentAttributes : u32 = 5;
pub const g_wszWMTitle = "Title";
pub const g_wszWMTitleSort = "TitleSort";
pub const g_wszWMAuthor = "Author";
pub const g_wszWMAuthorSort = "AuthorSort";
pub const g_wszWMDescription = "Description";
pub const g_wszWMRating = "Rating";
pub const g_wszWMCopyright = "Copyright";
pub const g_wszWMUse_DRM = "Use_DRM";
pub const g_wszWMDRM_Flags = "DRM_Flags";
pub const g_wszWMDRM_Level = "DRM_Level";
pub const g_wszWMUse_Advanced_DRM = "Use_Advanced_DRM";
pub const g_wszWMDRM_KeySeed = "DRM_KeySeed";
pub const g_wszWMDRM_KeyID = "DRM_KeyID";
pub const g_wszWMDRM_ContentID = "DRM_ContentID";
pub const g_wszWMDRM_SourceID = "DRM_SourceID";
pub const g_wszWMDRM_IndividualizedVersion = "DRM_IndividualizedVersion";
pub const g_wszWMDRM_LicenseAcqURL = "DRM_LicenseAcqURL";
pub const g_wszWMDRM_V1LicenseAcqURL = "DRM_V1LicenseAcqURL";
pub const g_wszWMDRM_HeaderSignPrivKey = "DRM_HeaderSignPrivKey";
pub const g_wszWMDRM_LASignaturePrivKey = "DRM_LASignaturePrivKey";
pub const g_wszWMDRM_LASignatureCert = "DRM_LASignatureCert";
pub const g_wszWMDRM_LASignatureLicSrvCert = "DRM_LASignatureLicSrvCert";
pub const g_wszWMDRM_LASignatureRootCert = "DRM_LASignatureRootCert";
pub const g_wszWMAlbumTitle = "WM/AlbumTitle";
pub const g_wszWMAlbumTitleSort = "WM/AlbumTitleSort";
pub const g_wszWMTrack = "WM/Track";
pub const g_wszWMPromotionURL = "WM/PromotionURL";
pub const g_wszWMAlbumCoverURL = "WM/AlbumCoverURL";
pub const g_wszWMGenre = "WM/Genre";
pub const g_wszWMYear = "WM/Year";
pub const g_wszWMGenreID = "WM/GenreID";
pub const g_wszWMMCDI = "WM/MCDI";
pub const g_wszWMComposer = "WM/Composer";
pub const g_wszWMComposerSort = "WM/ComposerSort";
pub const g_wszWMLyrics = "WM/Lyrics";
pub const g_wszWMTrackNumber = "WM/TrackNumber";
pub const g_wszWMToolName = "WM/ToolName";
pub const g_wszWMToolVersion = "WM/ToolVersion";
pub const g_wszWMIsVBR = "IsVBR";
pub const g_wszWMAlbumArtist = "WM/AlbumArtist";
pub const g_wszWMAlbumArtistSort = "WM/AlbumArtistSort";
pub const g_wszWMBannerImageType = "BannerImageType";
pub const g_wszWMBannerImageData = "BannerImageData";
pub const g_wszWMBannerImageURL = "BannerImageURL";
pub const g_wszWMCopyrightURL = "CopyrightURL";
pub const g_wszWMAspectRatioX = "AspectRatioX";
pub const g_wszWMAspectRatioY = "AspectRatioY";
pub const g_wszASFLeakyBucketPairs = "ASFLeakyBucketPairs";
pub const g_dwWMNSCAttributes : u32 = 5;
pub const g_wszWMNSCName = "NSC_Name";
pub const g_wszWMNSCAddress = "NSC_Address";
pub const g_wszWMNSCPhone = "NSC_Phone";
pub const g_wszWMNSCEmail = "NSC_Email";
pub const g_wszWMNSCDescription = "NSC_Description";
pub const g_wszWMWriter = "WM/Writer";
pub const g_wszWMConductor = "WM/Conductor";
pub const g_wszWMProducer = "WM/Producer";
pub const g_wszWMDirector = "WM/Director";
pub const g_wszWMContentGroupDescription = "WM/ContentGroupDescription";
pub const g_wszWMSubTitle = "WM/SubTitle";
pub const g_wszWMPartOfSet = "WM/PartOfSet";
pub const g_wszWMProtectionType = "WM/ProtectionType";
pub const g_wszWMVideoHeight = "WM/VideoHeight";
pub const g_wszWMVideoWidth = "WM/VideoWidth";
pub const g_wszWMVideoFrameRate = "WM/VideoFrameRate";
pub const g_wszWMMediaClassPrimaryID = "WM/MediaClassPrimaryID";
pub const g_wszWMMediaClassSecondaryID = "WM/MediaClassSecondaryID";
pub const g_wszWMPeriod = "WM/Period";
pub const g_wszWMCategory = "WM/Category";
pub const g_wszWMPicture = "WM/Picture";
pub const g_wszWMLyrics_Synchronised = "WM/Lyrics_Synchronised";
pub const g_wszWMOriginalLyricist = "WM/OriginalLyricist";
pub const g_wszWMOriginalArtist = "WM/OriginalArtist";
pub const g_wszWMOriginalAlbumTitle = "WM/OriginalAlbumTitle";
pub const g_wszWMOriginalReleaseYear = "WM/OriginalReleaseYear";
pub const g_wszWMOriginalFilename = "WM/OriginalFilename";
pub const g_wszWMPublisher = "WM/Publisher";
pub const g_wszWMEncodedBy = "WM/EncodedBy";
pub const g_wszWMEncodingSettings = "WM/EncodingSettings";
pub const g_wszWMEncodingTime = "WM/EncodingTime";
pub const g_wszWMAuthorURL = "WM/AuthorURL";
pub const g_wszWMUserWebURL = "WM/UserWebURL";
pub const g_wszWMAudioFileURL = "WM/AudioFileURL";
pub const g_wszWMAudioSourceURL = "WM/AudioSourceURL";
pub const g_wszWMLanguage = "WM/Language";
pub const g_wszWMParentalRating = "WM/ParentalRating";
pub const g_wszWMBeatsPerMinute = "WM/BeatsPerMinute";
pub const g_wszWMInitialKey = "WM/InitialKey";
pub const g_wszWMMood = "WM/Mood";
pub const g_wszWMText = "WM/Text";
pub const g_wszWMDVDID = "WM/DVDID";
pub const g_wszWMWMContentID = "WM/WMContentID";
pub const g_wszWMWMCollectionID = "WM/WMCollectionID";
pub const g_wszWMWMCollectionGroupID = "WM/WMCollectionGroupID";
pub const g_wszWMUniqueFileIdentifier = "WM/UniqueFileIdentifier";
pub const g_wszWMModifiedBy = "WM/ModifiedBy";
pub const g_wszWMRadioStationName = "WM/RadioStationName";
pub const g_wszWMRadioStationOwner = "WM/RadioStationOwner";
pub const g_wszWMPlaylistDelay = "WM/PlaylistDelay";
pub const g_wszWMCodec = "WM/Codec";
pub const g_wszWMDRM = "WM/DRM";
pub const g_wszWMISRC = "WM/ISRC";
pub const g_wszWMProvider = "WM/Provider";
pub const g_wszWMProviderRating = "WM/ProviderRating";
pub const g_wszWMProviderStyle = "WM/ProviderStyle";
pub const g_wszWMContentDistributor = "WM/ContentDistributor";
pub const g_wszWMSubscriptionContentID = "WM/SubscriptionContentID";
pub const g_wszWMWMADRCPeakReference = "WM/WMADRCPeakReference";
pub const g_wszWMWMADRCPeakTarget = "WM/WMADRCPeakTarget";
pub const g_wszWMWMADRCAverageReference = "WM/WMADRCAverageReference";
pub const g_wszWMWMADRCAverageTarget = "WM/WMADRCAverageTarget";
pub const g_wszWMStreamTypeInfo = "WM/StreamTypeInfo";
pub const g_wszWMPeakBitrate = "WM/PeakBitrate";
pub const g_wszWMASFPacketCount = "WM/ASFPacketCount";
pub const g_wszWMASFSecurityObjectsSize = "WM/ASFSecurityObjectsSize";
pub const g_wszWMSharedUserRating = "WM/SharedUserRating";
pub const g_wszWMSubTitleDescription = "WM/SubTitleDescription";
pub const g_wszWMMediaCredits = "WM/MediaCredits";
pub const g_wszWMParentalRatingReason = "WM/ParentalRatingReason";
pub const g_wszWMOriginalReleaseTime = "WM/OriginalReleaseTime";
pub const g_wszWMMediaStationCallSign = "WM/MediaStationCallSign";
pub const g_wszWMMediaStationName = "WM/MediaStationName";
pub const g_wszWMMediaNetworkAffiliation = "WM/MediaNetworkAffiliation";
pub const g_wszWMMediaOriginalChannel = "WM/MediaOriginalChannel";
pub const g_wszWMMediaOriginalBroadcastDateTime = "WM/MediaOriginalBroadcastDateTime";
pub const g_wszWMMediaIsStereo = "WM/MediaIsStereo";
pub const g_wszWMVideoClosedCaptioning = "WM/VideoClosedCaptioning";
pub const g_wszWMMediaIsRepeat = "WM/MediaIsRepeat";
pub const g_wszWMMediaIsLive = "WM/MediaIsLive";
pub const g_wszWMMediaIsTape = "WM/MediaIsTape";
pub const g_wszWMMediaIsDelay = "WM/MediaIsDelay";
pub const g_wszWMMediaIsSubtitled = "WM/MediaIsSubtitled";
pub const g_wszWMMediaIsPremiere = "WM/MediaIsPremiere";
pub const g_wszWMMediaIsFinale = "WM/MediaIsFinale";
pub const g_wszWMMediaIsSAP = "WM/MediaIsSAP";
pub const g_wszWMProviderCopyright = "WM/ProviderCopyright";
pub const g_wszWMISAN = "WM/ISAN";
pub const g_wszWMADID = "WM/ADID";
pub const g_wszWMWMShadowFileSourceFileType = "WM/WMShadowFileSourceFileType";
pub const g_wszWMWMShadowFileSourceDRMType = "WM/WMShadowFileSourceDRMType";
pub const g_wszWMWMCPDistributor = "WM/WMCPDistributor";
pub const g_wszWMWMCPDistributorID = "WM/WMCPDistributorID";
pub const g_wszWMSeasonNumber = "WM/SeasonNumber";
pub const g_wszWMEpisodeNumber = "WM/EpisodeNumber";
pub const g_wszEarlyDataDelivery = "EarlyDataDelivery";
pub const g_wszJustInTimeDecode = "JustInTimeDecode";
pub const g_wszSingleOutputBuffer = "SingleOutputBuffer";
pub const g_wszSoftwareScaling = "SoftwareScaling";
pub const g_wszDeliverOnReceive = "DeliverOnReceive";
pub const g_wszScrambledAudio = "ScrambledAudio";
pub const g_wszDedicatedDeliveryThread = "DedicatedDeliveryThread";
pub const g_wszEnableDiscreteOutput = "EnableDiscreteOutput";
pub const g_wszSpeakerConfig = "SpeakerConfig";
pub const g_wszDynamicRangeControl = "DynamicRangeControl";
pub const g_wszAllowInterlacedOutput = "AllowInterlacedOutput";
pub const g_wszVideoSampleDurations = "VideoSampleDurations";
pub const g_wszStreamLanguage = "StreamLanguage";
pub const g_wszEnableWMAProSPDIFOutput = "EnableWMAProSPDIFOutput";
pub const g_wszDeinterlaceMode = "DeinterlaceMode";
pub const g_wszInitialPatternForInverseTelecine = "InitialPatternForInverseTelecine";
pub const g_wszJPEGCompressionQuality = "JPEGCompressionQuality";
pub const g_wszWatermarkCLSID = "WatermarkCLSID";
pub const g_wszWatermarkConfig = "WatermarkConfig";
pub const g_wszInterlacedCoding = "InterlacedCoding";
pub const g_wszFixedFrameRate = "FixedFrameRate";
pub const g_wszOriginalSourceFormatTag = "_SOURCEFORMATTAG";
pub const g_wszOriginalWaveFormat = "_ORIGINALWAVEFORMAT";
pub const g_wszEDL = "_EDL";
pub const g_wszComplexity = "_COMPLEXITYEX";
pub const g_wszDecoderComplexityRequested = "_DECODERCOMPLEXITYPROFILE";
pub const g_wszReloadIndexOnSeek = "ReloadIndexOnSeek";
pub const g_wszStreamNumIndexObjects = "StreamNumIndexObjects";
pub const g_wszFailSeekOnError = "FailSeekOnError";
pub const g_wszPermitSeeksBeyondEndOfStream = "PermitSeeksBeyondEndOfStream";
pub const g_wszUsePacketAtSeekPoint = "UsePacketAtSeekPoint";
pub const g_wszSourceBufferTime = "SourceBufferTime";
pub const g_wszSourceMaxBytesAtOnce = "SourceMaxBytesAtOnce";
pub const g_wszVBREnabled = "_VBRENABLED";
pub const g_wszVBRQuality = "_VBRQUALITY";
pub const g_wszVBRBitrateMax = "_RMAX";
pub const g_wszVBRBufferWindowMax = "_BMAX";
pub const g_wszVBRPeak = "VBR Peak";
pub const g_wszBufferAverage = "Buffer Average";
pub const g_wszComplexityMax = "_COMPLEXITYEXMAX";
pub const g_wszComplexityOffline = "_COMPLEXITYEXOFFLINE";
pub const g_wszComplexityLive = "_COMPLEXITYEXLIVE";
pub const g_wszIsVBRSupported = "_ISVBRSUPPORTED";
pub const g_wszNumPasses = "_PASSESUSED";
pub const g_wszMusicSpeechClassMode = "MusicSpeechClassMode";
pub const g_wszMusicClassMode = "MusicClassMode";
pub const g_wszSpeechClassMode = "SpeechClassMode";
pub const g_wszMixedClassMode = "MixedClassMode";
pub const g_wszSpeechCaps = "SpeechFormatCap";
pub const g_wszPeakValue = "PeakValue";
pub const g_wszAverageLevel = "AverageLevel";
pub const g_wszFold6To2Channels3 = "Fold6To2Channels3";
pub const g_wszFoldToChannelsTemplate = "Fold%luTo%luChannels%lu";
pub const g_wszDeviceConformanceTemplate = "DeviceConformanceTemplate";
pub const g_wszEnableFrameInterpolation = "EnableFrameInterpolation";
pub const g_wszNeedsPreviousSample = "NeedsPreviousSample";
pub const g_wszWMIsCompilation = "WM/IsCompilation";

//
// types
//
// --------------------------------------------------------
// Type: IAMWMBufferPass
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMWMBufferPass = *opaque{
    // TODO: Method 'SetNotify'
};
// --------------------------------------------------------
// Type: IAMWMBufferPassCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAMWMBufferPassCallback = *opaque{
    // TODO: Method 'Notify'
};
// --------------------------------------------------------
// Type: _AM_ASFWRITERCONFIG_PARAM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AM_ASFWRITERCONFIG_PARAM = *opaque{
};
// --------------------------------------------------------
// Type: AM_WMT_EVENT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AM_WMT_EVENT_DATA = extern struct {
    hrStatus: HRESULT,
    pData: ?*opaque{},
};
// --------------------------------------------------------
// Type: INSSBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const INSSBuffer = *opaque{
    // TODO: Method 'GetLength'
    // TODO: Method 'SetLength'
    // TODO: Method 'GetMaxLength'
    // TODO: Method 'GetBuffer'
    // TODO: Method 'GetBufferAndLength'
};
// --------------------------------------------------------
// Type: INSSBuffer2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const INSSBuffer2 = *opaque{
    // TODO: Method 'GetSampleProperties'
    // TODO: Method 'SetSampleProperties'
};
// --------------------------------------------------------
// Type: INSSBuffer3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const INSSBuffer3 = *opaque{
    // TODO: Method 'SetProperty'
    // TODO: Method 'GetProperty'
};
// --------------------------------------------------------
// Type: INSSBuffer4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const INSSBuffer4 = *opaque{
    // TODO: Method 'GetPropertyCount'
    // TODO: Method 'GetPropertyByIndex'
};
// --------------------------------------------------------
// Type: IWMSBufferAllocator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSBufferAllocator = *opaque{
    // TODO: Method 'AllocateBuffer'
    // TODO: Method 'AllocatePageSizeBuffer'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0002
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0002 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0003
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0003 = *opaque{
};
// --------------------------------------------------------
// Type: WMT_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: WMT_STREAM_SELECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_STREAM_SELECTION = *opaque{
};
// --------------------------------------------------------
// Type: WMT_IMAGE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_IMAGE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_ATTR_DATATYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_ATTR_DATATYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_ATTR_IMAGETYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_ATTR_IMAGETYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WMT_STORAGE_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_STORAGE_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: WMT_DRMLA_TRUST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_DRMLA_TRUST = *opaque{
};
// --------------------------------------------------------
// Type: WMT_TRANSPORT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_TRANSPORT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_NET_PROTOCOL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_NET_PROTOCOL = *opaque{
};
// --------------------------------------------------------
// Type: WMT_PLAY_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_PLAY_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_PROXY_SETTINGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_PROXY_SETTINGS = *opaque{
};
// --------------------------------------------------------
// Type: WMT_CODEC_INFO_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_CODEC_INFO_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0004
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0004 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0005
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0005 = *opaque{
};
// --------------------------------------------------------
// Type: WMT_OFFSET_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_OFFSET_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: WMT_INDEXER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_INDEXER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_INDEX_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_INDEX_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_FILESINK_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_FILESINK_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_MUSICSPEECH_CLASS_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_MUSICSPEECH_CLASS_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_WATERMARK_ENTRY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_WATERMARK_ENTRY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0006
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0006 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_wmsdkidl_0000_0000_0007
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_wmsdkidl_0000_0000_0007 = *opaque{
};
// --------------------------------------------------------
// Type: WMT_CREDENTIAL_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_CREDENTIAL_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: WM_AETYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WM_AETYPE = *opaque{
};
// --------------------------------------------------------
// Type: WMT_RIGHTS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WMT_RIGHTS = *opaque{
};
// --------------------------------------------------------
// Type: WM_STREAM_PRIORITY_RECORD
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const WM_STREAM_PRIORITY_RECORD = *opaque{
};
// --------------------------------------------------------
// Type: WM_WRITER_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_WRITER_STATISTICS = extern struct {
    qwSampleCount: u64,
    qwByteCount: u64,
    qwDroppedSampleCount: u64,
    qwDroppedByteCount: u64,
    dwCurrentBitrate: u32,
    dwAverageBitrate: u32,
    dwExpectedBitrate: u32,
    dwCurrentSampleRate: u32,
    dwAverageSampleRate: u32,
    dwExpectedSampleRate: u32,
};
// --------------------------------------------------------
// Type: WM_WRITER_STATISTICS_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_WRITER_STATISTICS_EX = extern struct {
    dwBitratePlusOverhead: u32,
    dwCurrentSampleDropRateInQueue: u32,
    dwCurrentSampleDropRateInCodec: u32,
    dwCurrentSampleDropRateInMultiplexer: u32,
    dwTotalSampleDropsInQueue: u32,
    dwTotalSampleDropsInCodec: u32,
    dwTotalSampleDropsInMultiplexer: u32,
};
// --------------------------------------------------------
// Type: WM_READER_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_READER_STATISTICS = extern struct {
    cbSize: u32,
    dwBandwidth: u32,
    cPacketsReceived: u32,
    cPacketsRecovered: u32,
    cPacketsLost: u32,
    wQuality: u16,
};
// --------------------------------------------------------
// Type: WM_READER_CLIENTINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_READER_CLIENTINFO = extern struct {
    cbSize: u32,
    wszLang: ?*u16,
    wszBrowserUserAgent: ?*u16,
    wszBrowserWebPage: ?*u16,
    qwReserved: u64,
    pReserved: ?*LPARAM,
    wszHostExe: ?*u16,
    qwHostVersion: u64,
    wszPlayerUserAgent: ?*u16,
};
// --------------------------------------------------------
// Type: WM_CLIENT_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_CLIENT_PROPERTIES = extern struct {
    dwIPAddress: u32,
    dwPort: u32,
};
// --------------------------------------------------------
// Type: WM_CLIENT_PROPERTIES_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_CLIENT_PROPERTIES_EX = extern struct {
    cbSize: u32,
    pwszIPAddress: ?*u16,
    pwszPort: ?*u16,
    pwszDNSName: ?*u16,
};
// --------------------------------------------------------
// Type: WM_PORT_NUMBER_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_PORT_NUMBER_RANGE = extern struct {
    wPortBegin: u16,
    wPortEnd: u16,
};
// --------------------------------------------------------
// Type: WMT_BUFFER_SEGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_BUFFER_SEGMENT = extern struct {
    pBuffer: INSSBuffer,
    cbOffset: u32,
    cbLength: u32,
};
// --------------------------------------------------------
// Type: WMT_PAYLOAD_FRAGMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_PAYLOAD_FRAGMENT = extern struct {
    dwPayloadIndex: u32,
    segmentData: WMT_BUFFER_SEGMENT,
};
// --------------------------------------------------------
// Type: WMT_FILESINK_DATA_UNIT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_FILESINK_DATA_UNIT = extern struct {
    packetHeaderBuffer: WMT_BUFFER_SEGMENT,
    cPayloads: u32,
    pPayloadHeaderBuffers: ?*WMT_BUFFER_SEGMENT,
    cPayloadDataFragments: u32,
    pPayloadDataFragments: ?*WMT_PAYLOAD_FRAGMENT,
};
// --------------------------------------------------------
// Type: WMT_WEBSTREAM_FORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_WEBSTREAM_FORMAT = extern struct {
    cbSize: u16,
    cbSampleHeaderFixedData: u16,
    wVersion: u16,
    wReserved: u16,
};
// --------------------------------------------------------
// Type: WMT_WEBSTREAM_SAMPLE_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_WEBSTREAM_SAMPLE_HEADER = extern struct {
    cbLength: u16,
    wPart: u16,
    cTotalParts: u16,
    wSampleType: u16,
    wszURL: ?[*]u16,
};
// --------------------------------------------------------
// Type: WM_ADDRESS_ACCESSENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_ADDRESS_ACCESSENTRY = extern struct {
    dwIPAddress: u32,
    dwMask: u32,
};
// --------------------------------------------------------
// Type: WM_PICTURE
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WM_PICTURE = *opaque{
};
// --------------------------------------------------------
// Type: WM_SYNCHRONISED_LYRICS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WM_SYNCHRONISED_LYRICS = *opaque{
};
// --------------------------------------------------------
// Type: WM_USER_WEB_URL
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WM_USER_WEB_URL = *opaque{
};
// --------------------------------------------------------
// Type: WM_USER_TEXT
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WM_USER_TEXT = *opaque{
};
// --------------------------------------------------------
// Type: WM_LEAKY_BUCKET_PAIR
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WM_LEAKY_BUCKET_PAIR = *opaque{
};
// --------------------------------------------------------
// Type: WM_STREAM_TYPE_INFO
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WM_STREAM_TYPE_INFO = *opaque{
};
// --------------------------------------------------------
// Type: WMT_WATERMARK_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_WATERMARK_ENTRY = extern struct {
    wmetType: WMT_WATERMARK_ENTRY_TYPE,
    clsid: Guid,
    cbDisplayName: u32,
    pwszDisplayName: ?*u16,
};
// --------------------------------------------------------
// Type: WMT_VIDEOIMAGE_SAMPLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_VIDEOIMAGE_SAMPLE = extern struct {
    dwMagic: u32,
    cbStruct: u32,
    dwControlFlags: u32,
    dwInputFlagsCur: u32,
    lCurMotionXtoX: i32,
    lCurMotionYtoX: i32,
    lCurMotionXoffset: i32,
    lCurMotionXtoY: i32,
    lCurMotionYtoY: i32,
    lCurMotionYoffset: i32,
    lCurBlendCoef1: i32,
    lCurBlendCoef2: i32,
    dwInputFlagsPrev: u32,
    lPrevMotionXtoX: i32,
    lPrevMotionYtoX: i32,
    lPrevMotionXoffset: i32,
    lPrevMotionXtoY: i32,
    lPrevMotionYtoY: i32,
    lPrevMotionYoffset: i32,
    lPrevBlendCoef1: i32,
    lPrevBlendCoef2: i32,
};
// --------------------------------------------------------
// Type: WMT_VIDEOIMAGE_SAMPLE2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_VIDEOIMAGE_SAMPLE2 = extern struct {
    dwMagic: u32,
    dwStructSize: u32,
    dwControlFlags: u32,
    dwViewportWidth: u32,
    dwViewportHeight: u32,
    dwCurrImageWidth: u32,
    dwCurrImageHeight: u32,
    fCurrRegionX0: f32,
    fCurrRegionY0: f32,
    fCurrRegionWidth: f32,
    fCurrRegionHeight: f32,
    fCurrBlendCoef: f32,
    dwPrevImageWidth: u32,
    dwPrevImageHeight: u32,
    fPrevRegionX0: f32,
    fPrevRegionY0: f32,
    fPrevRegionWidth: f32,
    fPrevRegionHeight: f32,
    fPrevBlendCoef: f32,
    dwEffectType: u32,
    dwNumEffectParas: u32,
    fEffectPara0: f32,
    fEffectPara1: f32,
    fEffectPara2: f32,
    fEffectPara3: f32,
    fEffectPara4: f32,
    bKeepPrevImage: BOOL,
};
// --------------------------------------------------------
// Type: WM_MEDIA_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WM_MEDIA_TYPE = extern struct {
    majortype: Guid,
    subtype: Guid,
    bFixedSizeSamples: BOOL,
    bTemporalCompression: BOOL,
    lSampleSize: u32,
    formattype: Guid,
    pUnk: IUnknown,
    cbFormat: u32,
    pbFormat: ?*u8,
};
// --------------------------------------------------------
// Type: WMVIDEOINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMVIDEOINFOHEADER = extern struct {
    rcSource: RECT,
    rcTarget: RECT,
    dwBitRate: u32,
    dwBitErrorRate: u32,
    AvgTimePerFrame: i64,
    bmiHeader: BITMAPINFOHEADER,
};
// --------------------------------------------------------
// Type: WMVIDEOINFOHEADER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMVIDEOINFOHEADER2 = extern struct {
    rcSource: RECT,
    rcTarget: RECT,
    dwBitRate: u32,
    dwBitErrorRate: u32,
    AvgTimePerFrame: i64,
    dwInterlaceFlags: u32,
    dwCopyProtectFlags: u32,
    dwPictAspectRatioX: u32,
    dwPictAspectRatioY: u32,
    dwReserved1: u32,
    dwReserved2: u32,
    bmiHeader: BITMAPINFOHEADER,
};
// --------------------------------------------------------
// Type: WMMPEG2VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMMPEG2VIDEOINFO = extern struct {
    hdr: WMVIDEOINFOHEADER2,
    dwStartTimeCode: u32,
    cbSequenceHeader: u32,
    dwProfile: u32,
    dwLevel: u32,
    dwFlags: u32,
    dwSequenceHeader: ?[*]u32,
};
// --------------------------------------------------------
// Type: WMSCRIPTFORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMSCRIPTFORMAT = extern struct {
    scriptType: Guid,
};
// --------------------------------------------------------
// Type: WMT_COLORSPACEINFO_EXTENSION_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMT_COLORSPACEINFO_EXTENSION_DATA = extern struct {
    ucColorPrimaries: u8,
    ucColorTransferChar: u8,
    ucColorMatrixCoef: u8,
};
// --------------------------------------------------------
// Type: WMT_TIMECODE_EXTENSION_DATA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=2 Size=0
pub const WMT_TIMECODE_EXTENSION_DATA = *opaque{
};
// --------------------------------------------------------
// Type: DRM_VAL16
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_VAL16 = extern struct {
    val: ?[*]u8,
};
// --------------------------------------------------------
// Type: IWMMediaProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMMediaProps = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'GetMediaType'
    // TODO: Method 'SetMediaType'
};
// --------------------------------------------------------
// Type: IWMVideoMediaProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMVideoMediaProps = *opaque{
    // TODO: Method 'GetMaxKeyFrameSpacing'
    // TODO: Method 'SetMaxKeyFrameSpacing'
    // TODO: Method 'GetQuality'
    // TODO: Method 'SetQuality'
};
// --------------------------------------------------------
// Type: IWMWriter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriter = *opaque{
    // TODO: Method 'SetProfileByID'
    // TODO: Method 'SetProfile'
    // TODO: Method 'SetOutputFilename'
    // TODO: Method 'GetInputCount'
    // TODO: Method 'GetInputProps'
    // TODO: Method 'SetInputProps'
    // TODO: Method 'GetInputFormatCount'
    // TODO: Method 'GetInputFormat'
    // TODO: Method 'BeginWriting'
    // TODO: Method 'EndWriting'
    // TODO: Method 'AllocateSample'
    // TODO: Method 'WriteSample'
    // TODO: Method 'Flush'
};
// --------------------------------------------------------
// Type: IWMDRMWriter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMWriter = *opaque{
    // TODO: Method 'GenerateKeySeed'
    // TODO: Method 'GenerateKeyID'
    // TODO: Method 'GenerateSigningKeyPair'
    // TODO: Method 'SetDRMAttribute'
};
// --------------------------------------------------------
// Type: WMDRM_IMPORT_INIT_STRUCT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WMDRM_IMPORT_INIT_STRUCT = extern struct {
    dwVersion: u32,
    cbEncryptedSessionKeyMessage: u32,
    pbEncryptedSessionKeyMessage: ?*u8,
    cbEncryptedKeyMessage: u32,
    pbEncryptedKeyMessage: ?*u8,
};
// --------------------------------------------------------
// Type: IWMDRMWriter2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMWriter2 = *opaque{
    // TODO: Method 'SetWMDRMNetEncryption'
};
// --------------------------------------------------------
// Type: IWMDRMWriter3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMWriter3 = *opaque{
    // TODO: Method 'SetProtectStreamSamples'
};
// --------------------------------------------------------
// Type: IWMInputMediaProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMInputMediaProps = *opaque{
    // TODO: Method 'GetConnectionName'
    // TODO: Method 'GetGroupName'
};
// --------------------------------------------------------
// Type: IWMPropertyVault
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMPropertyVault = *opaque{
    // TODO: Method 'GetPropertyCount'
    // TODO: Method 'GetPropertyByName'
    // TODO: Method 'SetProperty'
    // TODO: Method 'GetPropertyByIndex'
    // TODO: Method 'CopyPropertiesFrom'
    // TODO: Method 'Clear'
};
// --------------------------------------------------------
// Type: IWMIStreamProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMIStreamProps = *opaque{
    // TODO: Method 'GetProperty'
};
// --------------------------------------------------------
// Type: IWMReader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReader = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'Close'
    // TODO: Method 'GetOutputCount'
    // TODO: Method 'GetOutputProps'
    // TODO: Method 'SetOutputProps'
    // TODO: Method 'GetOutputFormatCount'
    // TODO: Method 'GetOutputFormat'
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
    // TODO: Method 'Pause'
    // TODO: Method 'Resume'
};
// --------------------------------------------------------
// Type: IWMSyncReader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSyncReader = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'Close'
    // TODO: Method 'SetRange'
    // TODO: Method 'SetRangeByFrame'
    // TODO: Method 'GetNextSample'
    // TODO: Method 'SetStreamsSelected'
    // TODO: Method 'GetStreamSelected'
    // TODO: Method 'SetReadStreamSamples'
    // TODO: Method 'GetReadStreamSamples'
    // TODO: Method 'GetOutputSetting'
    // TODO: Method 'SetOutputSetting'
    // TODO: Method 'GetOutputCount'
    // TODO: Method 'GetOutputProps'
    // TODO: Method 'SetOutputProps'
    // TODO: Method 'GetOutputFormatCount'
    // TODO: Method 'GetOutputFormat'
    // TODO: Method 'GetOutputNumberForStream'
    // TODO: Method 'GetStreamNumberForOutput'
    // TODO: Method 'GetMaxOutputSampleSize'
    // TODO: Method 'GetMaxStreamSampleSize'
    // TODO: Method 'OpenStream'
};
// --------------------------------------------------------
// Type: IWMSyncReader2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSyncReader2 = *opaque{
    // TODO: Method 'SetRangeByTimecode'
    // TODO: Method 'SetRangeByFrameEx'
    // TODO: Method 'SetAllocateForOutput'
    // TODO: Method 'GetAllocateForOutput'
    // TODO: Method 'SetAllocateForStream'
    // TODO: Method 'GetAllocateForStream'
};
// --------------------------------------------------------
// Type: IWMOutputMediaProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMOutputMediaProps = *opaque{
    // TODO: Method 'GetStreamGroupName'
    // TODO: Method 'GetConnectionName'
};
// --------------------------------------------------------
// Type: IWMStatusCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMStatusCallback = *opaque{
    // TODO: Method 'OnStatus'
};
// --------------------------------------------------------
// Type: IWMReaderCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderCallback = *opaque{
    // TODO: Method 'OnSample'
};
// --------------------------------------------------------
// Type: IWMCredentialCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMCredentialCallback = *opaque{
    // TODO: Method 'AcquireCredentials'
};
// --------------------------------------------------------
// Type: IWMMetadataEditor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMMetadataEditor = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'Close'
    // TODO: Method 'Flush'
};
// --------------------------------------------------------
// Type: IWMMetadataEditor2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMMetadataEditor2 = *opaque{
    // TODO: Method 'OpenEx'
};
// --------------------------------------------------------
// Type: IWMDRMEditor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMEditor = *opaque{
    // TODO: Method 'GetDRMProperty'
};
// --------------------------------------------------------
// Type: IWMHeaderInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMHeaderInfo = *opaque{
    // TODO: Method 'GetAttributeCount'
    // TODO: Method 'GetAttributeByIndex'
    // TODO: Method 'GetAttributeByName'
    // TODO: Method 'SetAttribute'
    // TODO: Method 'GetMarkerCount'
    // TODO: Method 'GetMarker'
    // TODO: Method 'AddMarker'
    // TODO: Method 'RemoveMarker'
    // TODO: Method 'GetScriptCount'
    // TODO: Method 'GetScript'
    // TODO: Method 'AddScript'
    // TODO: Method 'RemoveScript'
};
// --------------------------------------------------------
// Type: IWMHeaderInfo2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMHeaderInfo2 = *opaque{
    // TODO: Method 'GetCodecInfoCount'
    // TODO: Method 'GetCodecInfo'
};
// --------------------------------------------------------
// Type: IWMHeaderInfo3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMHeaderInfo3 = *opaque{
    // TODO: Method 'GetAttributeCountEx'
    // TODO: Method 'GetAttributeIndices'
    // TODO: Method 'GetAttributeByIndexEx'
    // TODO: Method 'ModifyAttribute'
    // TODO: Method 'AddAttribute'
    // TODO: Method 'DeleteAttribute'
    // TODO: Method 'AddCodecInfo'
};
// --------------------------------------------------------
// Type: IWMProfileManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProfileManager = *opaque{
    // TODO: Method 'CreateEmptyProfile'
    // TODO: Method 'LoadProfileByID'
    // TODO: Method 'LoadProfileByData'
    // TODO: Method 'SaveProfile'
    // TODO: Method 'GetSystemProfileCount'
    // TODO: Method 'LoadSystemProfile'
};
// --------------------------------------------------------
// Type: IWMProfileManager2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProfileManager2 = *opaque{
    // TODO: Method 'GetSystemProfileVersion'
    // TODO: Method 'SetSystemProfileVersion'
};
// --------------------------------------------------------
// Type: IWMProfileManagerLanguage
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProfileManagerLanguage = *opaque{
    // TODO: Method 'GetUserLanguageID'
    // TODO: Method 'SetUserLanguageID'
};
// --------------------------------------------------------
// Type: IWMProfile
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProfile = *opaque{
    // TODO: Method 'GetVersion'
    // TODO: Method 'GetName'
    // TODO: Method 'SetName'
    // TODO: Method 'GetDescription'
    // TODO: Method 'SetDescription'
    // TODO: Method 'GetStreamCount'
    // TODO: Method 'GetStream'
    // TODO: Method 'GetStreamByNumber'
    // TODO: Method 'RemoveStream'
    // TODO: Method 'RemoveStreamByNumber'
    // TODO: Method 'AddStream'
    // TODO: Method 'ReconfigStream'
    // TODO: Method 'CreateNewStream'
    // TODO: Method 'GetMutualExclusionCount'
    // TODO: Method 'GetMutualExclusion'
    // TODO: Method 'RemoveMutualExclusion'
    // TODO: Method 'AddMutualExclusion'
    // TODO: Method 'CreateNewMutualExclusion'
};
// --------------------------------------------------------
// Type: IWMProfile2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProfile2 = *opaque{
    // TODO: Method 'GetProfileID'
};
// --------------------------------------------------------
// Type: IWMProfile3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProfile3 = *opaque{
    // TODO: Method 'GetStorageFormat'
    // TODO: Method 'SetStorageFormat'
    // TODO: Method 'GetBandwidthSharingCount'
    // TODO: Method 'GetBandwidthSharing'
    // TODO: Method 'RemoveBandwidthSharing'
    // TODO: Method 'AddBandwidthSharing'
    // TODO: Method 'CreateNewBandwidthSharing'
    // TODO: Method 'GetStreamPrioritization'
    // TODO: Method 'SetStreamPrioritization'
    // TODO: Method 'RemoveStreamPrioritization'
    // TODO: Method 'CreateNewStreamPrioritization'
    // TODO: Method 'GetExpectedPacketCount'
};
// --------------------------------------------------------
// Type: IWMStreamConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMStreamConfig = *opaque{
    // TODO: Method 'GetStreamType'
    // TODO: Method 'GetStreamNumber'
    // TODO: Method 'SetStreamNumber'
    // TODO: Method 'GetStreamName'
    // TODO: Method 'SetStreamName'
    // TODO: Method 'GetConnectionName'
    // TODO: Method 'SetConnectionName'
    // TODO: Method 'GetBitrate'
    // TODO: Method 'SetBitrate'
    // TODO: Method 'GetBufferWindow'
    // TODO: Method 'SetBufferWindow'
};
// --------------------------------------------------------
// Type: IWMStreamConfig2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMStreamConfig2 = *opaque{
    // TODO: Method 'GetTransportType'
    // TODO: Method 'SetTransportType'
    // TODO: Method 'AddDataUnitExtension'
    // TODO: Method 'GetDataUnitExtensionCount'
    // TODO: Method 'GetDataUnitExtension'
    // TODO: Method 'RemoveAllDataUnitExtensions'
};
// --------------------------------------------------------
// Type: IWMStreamConfig3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMStreamConfig3 = *opaque{
    // TODO: Method 'GetLanguage'
    // TODO: Method 'SetLanguage'
};
// --------------------------------------------------------
// Type: IWMPacketSize
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMPacketSize = *opaque{
    // TODO: Method 'GetMaxPacketSize'
    // TODO: Method 'SetMaxPacketSize'
};
// --------------------------------------------------------
// Type: IWMPacketSize2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMPacketSize2 = *opaque{
    // TODO: Method 'GetMinPacketSize'
    // TODO: Method 'SetMinPacketSize'
};
// --------------------------------------------------------
// Type: IWMStreamList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMStreamList = *opaque{
    // TODO: Method 'GetStreams'
    // TODO: Method 'AddStream'
    // TODO: Method 'RemoveStream'
};
// --------------------------------------------------------
// Type: IWMMutualExclusion
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMMutualExclusion = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'SetType'
};
// --------------------------------------------------------
// Type: IWMMutualExclusion2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMMutualExclusion2 = *opaque{
    // TODO: Method 'GetName'
    // TODO: Method 'SetName'
    // TODO: Method 'GetRecordCount'
    // TODO: Method 'AddRecord'
    // TODO: Method 'RemoveRecord'
    // TODO: Method 'GetRecordName'
    // TODO: Method 'SetRecordName'
    // TODO: Method 'GetStreamsForRecord'
    // TODO: Method 'AddStreamForRecord'
    // TODO: Method 'RemoveStreamForRecord'
};
// --------------------------------------------------------
// Type: IWMBandwidthSharing
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMBandwidthSharing = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'SetType'
    // TODO: Method 'GetBandwidth'
    // TODO: Method 'SetBandwidth'
};
// --------------------------------------------------------
// Type: IWMStreamPrioritization
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMStreamPrioritization = *opaque{
    // TODO: Method 'GetPriorityRecords'
    // TODO: Method 'SetPriorityRecords'
};
// --------------------------------------------------------
// Type: IWMWriterAdvanced
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterAdvanced = *opaque{
    // TODO: Method 'GetSinkCount'
    // TODO: Method 'GetSink'
    // TODO: Method 'AddSink'
    // TODO: Method 'RemoveSink'
    // TODO: Method 'WriteStreamSample'
    // TODO: Method 'SetLiveSource'
    // TODO: Method 'IsRealTime'
    // TODO: Method 'GetWriterTime'
    // TODO: Method 'GetStatistics'
    // TODO: Method 'SetSyncTolerance'
    // TODO: Method 'GetSyncTolerance'
};
// --------------------------------------------------------
// Type: IWMWriterAdvanced2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterAdvanced2 = *opaque{
    // TODO: Method 'GetInputSetting'
    // TODO: Method 'SetInputSetting'
};
// --------------------------------------------------------
// Type: IWMWriterAdvanced3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterAdvanced3 = *opaque{
    // TODO: Method 'GetStatisticsEx'
    // TODO: Method 'SetNonBlocking'
};
// --------------------------------------------------------
// Type: IWMWriterPreprocess
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterPreprocess = *opaque{
    // TODO: Method 'GetMaxPreprocessingPasses'
    // TODO: Method 'SetNumPreprocessingPasses'
    // TODO: Method 'BeginPreprocessingPass'
    // TODO: Method 'PreprocessSample'
    // TODO: Method 'EndPreprocessingPass'
};
// --------------------------------------------------------
// Type: IWMWriterPostViewCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterPostViewCallback = *opaque{
    // TODO: Method 'OnPostViewSample'
    // TODO: Method 'AllocateForPostView'
};
// --------------------------------------------------------
// Type: IWMWriterPostView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterPostView = *opaque{
    // TODO: Method 'SetPostViewCallback'
    // TODO: Method 'SetReceivePostViewSamples'
    // TODO: Method 'GetReceivePostViewSamples'
    // TODO: Method 'GetPostViewProps'
    // TODO: Method 'SetPostViewProps'
    // TODO: Method 'GetPostViewFormatCount'
    // TODO: Method 'GetPostViewFormat'
    // TODO: Method 'SetAllocateForPostView'
    // TODO: Method 'GetAllocateForPostView'
};
// --------------------------------------------------------
// Type: IWMWriterSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterSink = *opaque{
    // TODO: Method 'OnHeader'
    // TODO: Method 'IsRealTime'
    // TODO: Method 'AllocateDataUnit'
    // TODO: Method 'OnDataUnit'
    // TODO: Method 'OnEndWriting'
};
// --------------------------------------------------------
// Type: IWMRegisterCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMRegisterCallback = *opaque{
    // TODO: Method 'Advise'
    // TODO: Method 'Unadvise'
};
// --------------------------------------------------------
// Type: IWMWriterFileSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterFileSink = *opaque{
    // TODO: Method 'Open'
};
// --------------------------------------------------------
// Type: IWMWriterFileSink2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterFileSink2 = *opaque{
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
    // TODO: Method 'IsStopped'
    // TODO: Method 'GetFileDuration'
    // TODO: Method 'GetFileSize'
    // TODO: Method 'Close'
    // TODO: Method 'IsClosed'
};
// --------------------------------------------------------
// Type: IWMWriterFileSink3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterFileSink3 = *opaque{
    // TODO: Method 'SetAutoIndexing'
    // TODO: Method 'GetAutoIndexing'
    // TODO: Method 'SetControlStream'
    // TODO: Method 'GetMode'
    // TODO: Method 'OnDataUnitEx'
    // TODO: Method 'SetUnbufferedIO'
    // TODO: Method 'GetUnbufferedIO'
    // TODO: Method 'CompleteOperations'
};
// --------------------------------------------------------
// Type: IWMWriterNetworkSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterNetworkSink = *opaque{
    // TODO: Method 'SetMaximumClients'
    // TODO: Method 'GetMaximumClients'
    // TODO: Method 'SetNetworkProtocol'
    // TODO: Method 'GetNetworkProtocol'
    // TODO: Method 'GetHostURL'
    // TODO: Method 'Open'
    // TODO: Method 'Disconnect'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: IWMClientConnections
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMClientConnections = *opaque{
    // TODO: Method 'GetClientCount'
    // TODO: Method 'GetClientProperties'
};
// --------------------------------------------------------
// Type: IWMClientConnections2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMClientConnections2 = *opaque{
    // TODO: Method 'GetClientInfo'
};
// --------------------------------------------------------
// Type: IWMReaderAdvanced
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAdvanced = *opaque{
    // TODO: Method 'SetUserProvidedClock'
    // TODO: Method 'GetUserProvidedClock'
    // TODO: Method 'DeliverTime'
    // TODO: Method 'SetManualStreamSelection'
    // TODO: Method 'GetManualStreamSelection'
    // TODO: Method 'SetStreamsSelected'
    // TODO: Method 'GetStreamSelected'
    // TODO: Method 'SetReceiveSelectionCallbacks'
    // TODO: Method 'GetReceiveSelectionCallbacks'
    // TODO: Method 'SetReceiveStreamSamples'
    // TODO: Method 'GetReceiveStreamSamples'
    // TODO: Method 'SetAllocateForOutput'
    // TODO: Method 'GetAllocateForOutput'
    // TODO: Method 'SetAllocateForStream'
    // TODO: Method 'GetAllocateForStream'
    // TODO: Method 'GetStatistics'
    // TODO: Method 'SetClientInfo'
    // TODO: Method 'GetMaxOutputSampleSize'
    // TODO: Method 'GetMaxStreamSampleSize'
    // TODO: Method 'NotifyLateDelivery'
};
// --------------------------------------------------------
// Type: IWMReaderAdvanced2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAdvanced2 = *opaque{
    // TODO: Method 'SetPlayMode'
    // TODO: Method 'GetPlayMode'
    // TODO: Method 'GetBufferProgress'
    // TODO: Method 'GetDownloadProgress'
    // TODO: Method 'GetSaveAsProgress'
    // TODO: Method 'SaveFileAs'
    // TODO: Method 'GetProtocolName'
    // TODO: Method 'StartAtMarker'
    // TODO: Method 'GetOutputSetting'
    // TODO: Method 'SetOutputSetting'
    // TODO: Method 'Preroll'
    // TODO: Method 'SetLogClientID'
    // TODO: Method 'GetLogClientID'
    // TODO: Method 'StopBuffering'
    // TODO: Method 'OpenStream'
};
// --------------------------------------------------------
// Type: IWMReaderAdvanced3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAdvanced3 = *opaque{
    // TODO: Method 'StopNetStreaming'
    // TODO: Method 'StartAtPosition'
};
// --------------------------------------------------------
// Type: IWMReaderAdvanced4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAdvanced4 = *opaque{
    // TODO: Method 'GetLanguageCount'
    // TODO: Method 'GetLanguage'
    // TODO: Method 'GetMaxSpeedFactor'
    // TODO: Method 'IsUsingFastCache'
    // TODO: Method 'AddLogParam'
    // TODO: Method 'SendLogParams'
    // TODO: Method 'CanSaveFileAs'
    // TODO: Method 'CancelSaveFileAs'
    // TODO: Method 'GetURL'
};
// --------------------------------------------------------
// Type: IWMReaderAdvanced5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAdvanced5 = *opaque{
    // TODO: Method 'SetPlayerHook'
};
// --------------------------------------------------------
// Type: IWMReaderAdvanced6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAdvanced6 = *opaque{
    // TODO: Method 'SetProtectStreamSamples'
};
// --------------------------------------------------------
// Type: IWMPlayerHook
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMPlayerHook = *opaque{
    // TODO: Method 'PreDecode'
};
// --------------------------------------------------------
// Type: IWMReaderAllocatorEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAllocatorEx = *opaque{
    // TODO: Method 'AllocateForStreamEx'
    // TODO: Method 'AllocateForOutputEx'
};
// --------------------------------------------------------
// Type: IWMReaderTypeNegotiation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderTypeNegotiation = *opaque{
    // TODO: Method 'TryOutputProps'
};
// --------------------------------------------------------
// Type: IWMReaderCallbackAdvanced
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderCallbackAdvanced = *opaque{
    // TODO: Method 'OnStreamSample'
    // TODO: Method 'OnTime'
    // TODO: Method 'OnStreamSelection'
    // TODO: Method 'OnOutputPropsChanged'
    // TODO: Method 'AllocateForStream'
    // TODO: Method 'AllocateForOutput'
};
// --------------------------------------------------------
// Type: IWMDRMReader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMReader = *opaque{
    // TODO: Method 'AcquireLicense'
    // TODO: Method 'CancelLicenseAcquisition'
    // TODO: Method 'Individualize'
    // TODO: Method 'CancelIndividualization'
    // TODO: Method 'MonitorLicenseAcquisition'
    // TODO: Method 'CancelMonitorLicenseAcquisition'
    // TODO: Method 'SetDRMProperty'
    // TODO: Method 'GetDRMProperty'
};
// --------------------------------------------------------
// Type: DRM_MINIMUM_OUTPUT_PROTECTION_LEVELS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_MINIMUM_OUTPUT_PROTECTION_LEVELS = extern struct {
    wCompressedDigitalVideo: u16,
    wUncompressedDigitalVideo: u16,
    wAnalogVideo: u16,
    wCompressedDigitalAudio: u16,
    wUncompressedDigitalAudio: u16,
};
// --------------------------------------------------------
// Type: DRM_OPL_OUTPUT_IDS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_OPL_OUTPUT_IDS = extern struct {
    cIds: u16,
    rgIds: ?*Guid,
};
// --------------------------------------------------------
// Type: DRM_OUTPUT_PROTECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_OUTPUT_PROTECTION = extern struct {
    guidId: Guid,
    bConfigData: u8,
};
// --------------------------------------------------------
// Type: DRM_VIDEO_OUTPUT_PROTECTION_IDS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_VIDEO_OUTPUT_PROTECTION_IDS = extern struct {
    cEntries: u16,
    rgVop: ?*DRM_OUTPUT_PROTECTION,
};
// --------------------------------------------------------
// Type: DRM_PLAY_OPL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_PLAY_OPL = extern struct {
    minOPL: DRM_MINIMUM_OUTPUT_PROTECTION_LEVELS,
    oplIdReserved: DRM_OPL_OUTPUT_IDS,
    vopi: DRM_VIDEO_OUTPUT_PROTECTION_IDS,
};
// --------------------------------------------------------
// Type: DRM_COPY_OPL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DRM_COPY_OPL = extern struct {
    wMinimumCopyLevel: u16,
    oplIdIncludes: DRM_OPL_OUTPUT_IDS,
    oplIdExcludes: DRM_OPL_OUTPUT_IDS,
};
// --------------------------------------------------------
// Type: IWMDRMReader2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMReader2 = *opaque{
    // TODO: Method 'SetEvaluateOutputLevelLicenses'
    // TODO: Method 'GetPlayOutputLevels'
    // TODO: Method 'GetCopyOutputLevels'
    // TODO: Method 'TryNextLicense'
};
// --------------------------------------------------------
// Type: IWMDRMReader3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMReader3 = *opaque{
    // TODO: Method 'GetInclusionList'
};
// --------------------------------------------------------
// Type: IWMReaderPlaylistBurn
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderPlaylistBurn = *opaque{
    // TODO: Method 'InitPlaylistBurn'
    // TODO: Method 'GetInitResults'
    // TODO: Method 'Cancel'
    // TODO: Method 'EndPlaylistBurn'
};
// --------------------------------------------------------
// Type: IWMReaderNetworkConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderNetworkConfig = *opaque{
    // TODO: Method 'GetBufferingTime'
    // TODO: Method 'SetBufferingTime'
    // TODO: Method 'GetUDPPortRanges'
    // TODO: Method 'SetUDPPortRanges'
    // TODO: Method 'GetProxySettings'
    // TODO: Method 'SetProxySettings'
    // TODO: Method 'GetProxyHostName'
    // TODO: Method 'SetProxyHostName'
    // TODO: Method 'GetProxyPort'
    // TODO: Method 'SetProxyPort'
    // TODO: Method 'GetProxyExceptionList'
    // TODO: Method 'SetProxyExceptionList'
    // TODO: Method 'GetProxyBypassForLocal'
    // TODO: Method 'SetProxyBypassForLocal'
    // TODO: Method 'GetForceRerunAutoProxyDetection'
    // TODO: Method 'SetForceRerunAutoProxyDetection'
    // TODO: Method 'GetEnableMulticast'
    // TODO: Method 'SetEnableMulticast'
    // TODO: Method 'GetEnableHTTP'
    // TODO: Method 'SetEnableHTTP'
    // TODO: Method 'GetEnableUDP'
    // TODO: Method 'SetEnableUDP'
    // TODO: Method 'GetEnableTCP'
    // TODO: Method 'SetEnableTCP'
    // TODO: Method 'ResetProtocolRollover'
    // TODO: Method 'GetConnectionBandwidth'
    // TODO: Method 'SetConnectionBandwidth'
    // TODO: Method 'GetNumProtocolsSupported'
    // TODO: Method 'GetSupportedProtocolName'
    // TODO: Method 'AddLoggingUrl'
    // TODO: Method 'GetLoggingUrl'
    // TODO: Method 'GetLoggingUrlCount'
    // TODO: Method 'ResetLoggingUrlList'
};
// --------------------------------------------------------
// Type: IWMReaderNetworkConfig2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderNetworkConfig2 = *opaque{
    // TODO: Method 'GetEnableContentCaching'
    // TODO: Method 'SetEnableContentCaching'
    // TODO: Method 'GetEnableFastCache'
    // TODO: Method 'SetEnableFastCache'
    // TODO: Method 'GetAcceleratedStreamingDuration'
    // TODO: Method 'SetAcceleratedStreamingDuration'
    // TODO: Method 'GetAutoReconnectLimit'
    // TODO: Method 'SetAutoReconnectLimit'
    // TODO: Method 'GetEnableResends'
    // TODO: Method 'SetEnableResends'
    // TODO: Method 'GetEnableThinning'
    // TODO: Method 'SetEnableThinning'
    // TODO: Method 'GetMaxNetPacketSize'
};
// --------------------------------------------------------
// Type: IWMReaderStreamClock
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderStreamClock = *opaque{
    // TODO: Method 'GetTime'
    // TODO: Method 'SetTimer'
    // TODO: Method 'KillTimer'
};
// --------------------------------------------------------
// Type: IWMIndexer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMIndexer = *opaque{
    // TODO: Method 'StartIndexing'
    // TODO: Method 'Cancel'
};
// --------------------------------------------------------
// Type: IWMIndexer2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMIndexer2 = *opaque{
    // TODO: Method 'Configure'
};
// --------------------------------------------------------
// Type: IWMLicenseBackup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMLicenseBackup = *opaque{
    // TODO: Method 'BackupLicenses'
    // TODO: Method 'CancelLicenseBackup'
};
// --------------------------------------------------------
// Type: IWMLicenseRestore
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMLicenseRestore = *opaque{
    // TODO: Method 'RestoreLicenses'
    // TODO: Method 'CancelLicenseRestore'
};
// --------------------------------------------------------
// Type: IWMBackupRestoreProps
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMBackupRestoreProps = *opaque{
    // TODO: Method 'GetPropCount'
    // TODO: Method 'GetPropByIndex'
    // TODO: Method 'GetPropByName'
    // TODO: Method 'SetPropA'
    // TODO: Method 'RemovePropA'
    // TODO: Method 'RemoveAllProps'
};
// --------------------------------------------------------
// Type: IWMCodecInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMCodecInfo = *opaque{
    // TODO: Method 'GetCodecInfoCount'
    // TODO: Method 'GetCodecFormatCount'
    // TODO: Method 'GetCodecFormat'
};
// --------------------------------------------------------
// Type: IWMCodecInfo2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMCodecInfo2 = *opaque{
    // TODO: Method 'GetCodecName'
    // TODO: Method 'GetCodecFormatDesc'
};
// --------------------------------------------------------
// Type: IWMCodecInfo3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMCodecInfo3 = *opaque{
    // TODO: Method 'GetCodecFormatProp'
    // TODO: Method 'GetCodecProp'
    // TODO: Method 'SetCodecEnumerationSetting'
    // TODO: Method 'GetCodecEnumerationSetting'
};
// --------------------------------------------------------
// Type: IWMLanguageList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMLanguageList = *opaque{
    // TODO: Method 'GetLanguageCount'
    // TODO: Method 'GetLanguageDetails'
    // TODO: Method 'AddLanguageByRFC1766String'
};
// --------------------------------------------------------
// Type: IWMWriterPushSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWriterPushSink = *opaque{
    // TODO: Method 'Connect'
    // TODO: Method 'Disconnect'
    // TODO: Method 'EndSession'
};
// --------------------------------------------------------
// Type: IWMDeviceRegistration
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDeviceRegistration = *opaque{
    // TODO: Method 'RegisterDevice'
    // TODO: Method 'UnregisterDevice'
    // TODO: Method 'GetRegistrationStats'
    // TODO: Method 'GetFirstRegisteredDevice'
    // TODO: Method 'GetNextRegisteredDevice'
    // TODO: Method 'GetRegisteredDeviceByID'
};
// --------------------------------------------------------
// Type: IWMRegisteredDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMRegisteredDevice = *opaque{
    // TODO: Method 'GetDeviceSerialNumber'
    // TODO: Method 'GetDeviceCertificate'
    // TODO: Method 'GetDeviceType'
    // TODO: Method 'GetAttributeCount'
    // TODO: Method 'GetAttributeByIndex'
    // TODO: Method 'GetAttributeByName'
    // TODO: Method 'SetAttributeByName'
    // TODO: Method 'Approve'
    // TODO: Method 'IsValid'
    // TODO: Method 'IsApproved'
    // TODO: Method 'IsWmdrmCompliant'
    // TODO: Method 'IsOpened'
    // TODO: Method 'Open'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: IWMProximityDetection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMProximityDetection = *opaque{
    // TODO: Method 'StartDetection'
};
// --------------------------------------------------------
// Type: IWMDRMMessageParser
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMMessageParser = *opaque{
    // TODO: Method 'ParseRegistrationReqMsg'
    // TODO: Method 'ParseLicenseRequestMsg'
};
// --------------------------------------------------------
// Type: IWMDRMTranscryptor
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMTranscryptor = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'Seek'
    // TODO: Method 'Read'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: IWMDRMTranscryptor2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMTranscryptor2 = *opaque{
    // TODO: Method 'SeekEx'
    // TODO: Method 'ZeroAdjustTimestamps'
    // TODO: Method 'GetSeekStartTime'
    // TODO: Method 'GetDuration'
};
// --------------------------------------------------------
// Type: IWMDRMTranscryptionManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMDRMTranscryptionManager = *opaque{
    // TODO: Method 'CreateTranscryptor'
};
// --------------------------------------------------------
// Type: IWMWatermarkInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMWatermarkInfo = *opaque{
    // TODO: Method 'GetWatermarkEntryCount'
    // TODO: Method 'GetWatermarkEntry'
};
// --------------------------------------------------------
// Type: IWMReaderAccelerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderAccelerator = *opaque{
    // TODO: Method 'GetCodecInterface'
    // TODO: Method 'Notify'
};
// --------------------------------------------------------
// Type: IWMReaderTimecode
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMReaderTimecode = *opaque{
    // TODO: Method 'GetTimecodeRangeCount'
    // TODO: Method 'GetTimecodeRangeBounds'
};
// --------------------------------------------------------
// Type: IWMAddressAccess
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMAddressAccess = *opaque{
    // TODO: Method 'GetAccessEntryCount'
    // TODO: Method 'GetAccessEntry'
    // TODO: Method 'AddAccessEntry'
    // TODO: Method 'RemoveAccessEntry'
};
// --------------------------------------------------------
// Type: IWMAddressAccess2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMAddressAccess2 = *opaque{
    // TODO: Method 'GetAccessEntryEx'
    // TODO: Method 'AddAccessEntryEx'
};
// --------------------------------------------------------
// Type: IWMImageInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMImageInfo = *opaque{
    // TODO: Method 'GetImageCount'
    // TODO: Method 'GetImage'
};
// --------------------------------------------------------
// Type: IWMLicenseRevocationAgent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMLicenseRevocationAgent = *opaque{
    // TODO: Method 'GetLRBChallenge'
    // TODO: Method 'ProcessLRB'
};
// --------------------------------------------------------
// Type: IWMAuthorizer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMAuthorizer = *opaque{
    // TODO: Method 'GetCertCount'
    // TODO: Method 'GetCert'
    // TODO: Method 'GetSharedData'
};
// --------------------------------------------------------
// Type: IWMSecureChannel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSecureChannel = *opaque{
    // TODO: Method 'WMSC_AddCertificate'
    // TODO: Method 'WMSC_AddSignature'
    // TODO: Method 'WMSC_Connect'
    // TODO: Method 'WMSC_IsConnected'
    // TODO: Method 'WMSC_Disconnect'
    // TODO: Method 'WMSC_GetValidCertificate'
    // TODO: Method 'WMSC_Encrypt'
    // TODO: Method 'WMSC_Decrypt'
    // TODO: Method 'WMSC_Lock'
    // TODO: Method 'WMSC_Unlock'
    // TODO: Method 'WMSC_SetSharedData'
};
// --------------------------------------------------------
// Type: IWMGetSecureChannel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMGetSecureChannel = *opaque{
    // TODO: Method 'GetPeerSecureChannelInterface'
};
// --------------------------------------------------------
// Type: INSNetSourceCreator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const INSNetSourceCreator = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'CreateNetSource'
    // TODO: Method 'GetNetSourceProperties'
    // TODO: Method 'GetNetSourceSharedNamespace'
    // TODO: Method 'GetNetSourceAdminInterface'
    // TODO: Method 'GetNumProtocolsSupported'
    // TODO: Method 'GetProtocolName'
    // TODO: Method 'Shutdown'
};
// --------------------------------------------------------
// Type: IWMPlayerTimestampHook
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMPlayerTimestampHook = *opaque{
    // TODO: Method 'MapTimestamp'
};
// --------------------------------------------------------
// Type: IWMCodecAMVideoAccelerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMCodecAMVideoAccelerator = *opaque{
    // TODO: Method 'SetAcceleratorInterface'
    // TODO: Method 'NegotiateConnection'
    // TODO: Method 'SetPlayerNotify'
};
// --------------------------------------------------------
// Type: IWMCodecVideoAccelerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMCodecVideoAccelerator = *opaque{
    // TODO: Method 'NegotiateConnection'
    // TODO: Method 'SetPlayerNotify'
};
// --------------------------------------------------------
// Type: NETSOURCE_URLCREDPOLICY_SETTINGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NETSOURCE_URLCREDPOLICY_SETTINGS = *opaque{
};
// --------------------------------------------------------
// Type: IWMSInternalAdminNetSource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSInternalAdminNetSource = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetNetSourceCreator'
    // TODO: Method 'SetCredentials'
    // TODO: Method 'GetCredentials'
    // TODO: Method 'DeleteCredentials'
    // TODO: Method 'GetCredentialFlags'
    // TODO: Method 'SetCredentialFlags'
    // TODO: Method 'FindProxyForURL'
    // TODO: Method 'RegisterProxyFailure'
    // TODO: Method 'ShutdownProxyContext'
    // TODO: Method 'IsUsingIE'
};
// --------------------------------------------------------
// Type: IWMSInternalAdminNetSource2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSInternalAdminNetSource2 = *opaque{
    // TODO: Method 'SetCredentialsEx'
    // TODO: Method 'GetCredentialsEx'
    // TODO: Method 'DeleteCredentialsEx'
    // TODO: Method 'FindProxyForURLEx'
};
// --------------------------------------------------------
// Type: IWMSInternalAdminNetSource3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWMSInternalAdminNetSource3 = *opaque{
    // TODO: Method 'GetNetSourceCreator2'
    // TODO: Method 'FindProxyForURLEx2'
    // TODO: Method 'RegisterProxyFailure2'
    // TODO: Method 'ShutdownProxyContext2'
    // TODO: Method 'IsUsingIE2'
    // TODO: Method 'SetCredentialsEx2'
    // TODO: Method 'GetCredentialsEx2'
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMIsContentProtected(
    pwszFileName: ?*u16,
    pfIsProtected: ?*i32,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateWriter(
    pUnkCert: IUnknown,
    ppWriter: ?*IWMWriter,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateReader(
    pUnkCert: IUnknown,
    dwRights: u32,
    ppReader: ?*IWMReader,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateSyncReader(
    pUnkCert: IUnknown,
    dwRights: u32,
    ppSyncReader: ?*IWMSyncReader,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateEditor(
    ppEditor: ?*IWMMetadataEditor,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateIndexer(
    ppIndexer: ?*IWMIndexer,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateBackupRestorer(
    pCallback: IUnknown,
    ppBackup: ?*IWMLicenseBackup,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateProfileManager(
    ppProfileManager: ?*IWMProfileManager,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateWriterFileSink(
    ppSink: ?*IWMWriterFileSink,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateWriterNetworkSink(
    ppSink: ?*IWMWriterNetworkSink,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "WMVCore" fn WMCreateWriterPushSink(
    ppSink: ?*IWMWriterPushSink,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const Guid = @import("../zig.zig").Guid;
const HRESULT = @import("com.zig").HRESULT;
const LPARAM = @import("windowsandmessaging.zig").LPARAM;
const BOOL = @import("systemservices.zig").BOOL;
const IUnknown = @import("com.zig").IUnknown;
const RECT = @import("displaydevices.zig").RECT;
const BITMAPINFOHEADER = @import("directshow.zig").BITMAPINFOHEADER;

test "" {
    const constant_export_count = 225;
    const type_export_count = 180;
    const func_count = 11;
    const unicode_alias_count = 0;
    const type_import_count = 7;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
