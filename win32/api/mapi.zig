//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: MapiFileDesc
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiFileDesc = extern struct {
    ulReserved: u32,
    flFlags: u32,
    nPosition: u32,
    lpszPathName: ?*i8,
    lpszFileName: ?*i8,
    lpFileType: ?*opaque{},
};
// --------------------------------------------------------
// Type: MapiFileDescW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiFileDescW = extern struct {
    ulReserved: u32,
    flFlags: u32,
    nPosition: u32,
    lpszPathName: ?*u16,
    lpszFileName: ?*u16,
    lpFileType: ?*opaque{},
};
// --------------------------------------------------------
// Type: MapiFileTagExt
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiFileTagExt = extern struct {
    ulReserved: u32,
    cbTag: u32,
    lpTag: ?*u8,
    cbEncoding: u32,
    lpEncoding: ?*u8,
};
// --------------------------------------------------------
// Type: MapiRecipDesc
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiRecipDesc = extern struct {
    ulReserved: u32,
    ulRecipClass: u32,
    lpszName: ?*i8,
    lpszAddress: ?*i8,
    ulEIDSize: u32,
    lpEntryID: ?*opaque{},
};
// --------------------------------------------------------
// Type: MapiRecipDescW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiRecipDescW = extern struct {
    ulReserved: u32,
    ulRecipClass: u32,
    lpszName: ?*u16,
    lpszAddress: ?*u16,
    ulEIDSize: u32,
    lpEntryID: ?*opaque{},
};
// --------------------------------------------------------
// Type: MapiMessage
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiMessage = extern struct {
    ulReserved: u32,
    lpszSubject: ?*i8,
    lpszNoteText: ?*i8,
    lpszMessageType: ?*i8,
    lpszDateReceived: ?*i8,
    lpszConversationID: ?*i8,
    flFlags: u32,
    lpOriginator: ?*MapiRecipDesc,
    nRecipCount: u32,
    lpRecips: ?*MapiRecipDesc,
    nFileCount: u32,
    lpFiles: ?*MapiFileDesc,
};
// --------------------------------------------------------
// Type: MapiMessageW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MapiMessageW = extern struct {
    ulReserved: u32,
    lpszSubject: ?*u16,
    lpszNoteText: ?*u16,
    lpszMessageType: ?*u16,
    lpszDateReceived: ?*u16,
    lpszConversationID: ?*u16,
    flFlags: u32,
    lpOriginator: ?*MapiRecipDescW,
    nRecipCount: u32,
    lpRecips: ?*MapiRecipDescW,
    nFileCount: u32,
    lpFiles: ?*MapiFileDescW,
};
// --------------------------------------------------------
// Type: MAPILOGON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPILOGON = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPILOGOFF
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPILOGOFF = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPISENDMAIL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPISENDMAIL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPISENDMAILW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPISENDMAILW = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPISENDDOCUMENTS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPISENDDOCUMENTS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPIFINDNEXT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPIFINDNEXT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPIREADMAIL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPIREADMAIL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPISAVEMAIL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPISAVEMAIL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPIDELETEMAIL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPIDELETEMAIL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPIADDRESS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPIADDRESS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPIDETAILS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPIDETAILS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MAPIRESOLVENAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAPIRESOLVENAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "MAPI32" fn MAPIFreeBuffer(
    pv: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//

test "" {
    const constant_export_count = 0;
    const type_export_count = 19;
    const func_count = 1;
    const unicode_alias_count = 0;
    const type_import_count = 0;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
