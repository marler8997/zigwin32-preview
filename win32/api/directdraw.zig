//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: _DDFXROP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _DDFXROP = opaque {
};
// --------------------------------------------------------
// Type: LPDDENUMCALLBACKA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMCALLBACKA = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMCALLBACKW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMCALLBACKW = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMCALLBACKEXA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMCALLBACKEXA = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMCALLBACKEXW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMCALLBACKEXW = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDIRECTDRAWENUMERATEEXA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDIRECTDRAWENUMERATEEXA = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDIRECTDRAWENUMERATEEXW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDIRECTDRAWENUMERATEEXW = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMCALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMCALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMCALLBACKEX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMCALLBACKEX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDIRECTDRAWENUMERATEEX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDIRECTDRAWENUMERATEEX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMMODESCALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMMODESCALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMMODESCALLBACK2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMMODESCALLBACK2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMSURFACESCALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMSURFACESCALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMSURFACESCALLBACK2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMSURFACESCALLBACK2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPDDENUMSURFACESCALLBACK7
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPDDENUMSURFACESCALLBACK7 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: DDARGB
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDARGB = extern struct {
    blue: u8,
    green: u8,
    red: u8,
    alpha: u8,
};
// --------------------------------------------------------
// Type: DDRGBA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDRGBA = extern struct {
    red: u8,
    green: u8,
    blue: u8,
    alpha: u8,
};
// --------------------------------------------------------
// Type: DDBLTFX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDBLTFX = extern struct {
    dwSize: u32,
    dwDDFX: u32,
    dwROP: u32,
    dwDDROP: u32,
    dwRotationAngle: u32,
    dwZBufferOpCode: u32,
    dwZBufferLow: u32,
    dwZBufferHigh: u32,
    dwZBufferBaseDest: u32,
    dwZDestConstBitDepth: u32,
    Anonymous1: _Anonymous1_e__Union,
    dwZSrcConstBitDepth: u32,
    Anonymous2: _Anonymous2_e__Union,
    dwAlphaEdgeBlendBitDepth: u32,
    dwAlphaEdgeBlend: u32,
    dwReserved: u32,
    dwAlphaDestConstBitDepth: u32,
    Anonymous3: _Anonymous3_e__Union,
    dwAlphaSrcConstBitDepth: u32,
    Anonymous4: _Anonymous4_e__Union,
    Anonymous5: _Anonymous5_e__Union,
    ddckDestColorkey: DDCOLORKEY,
    ddckSrcColorkey: DDCOLORKEY,
    // --------------------------------------------------------
    // Type: _Anonymous4_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous4_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous5_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous5_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDSCAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDSCAPS = extern struct {
    dwCaps: u32,
};
// --------------------------------------------------------
// Type: DDOSCAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDOSCAPS = extern struct {
    dwCaps: u32,
};
// --------------------------------------------------------
// Type: DDSCAPSEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDSCAPSEX = extern struct {
    dwCaps2: u32,
    dwCaps3: u32,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDSCAPS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDSCAPS2 = extern struct {
    dwCaps: u32,
    dwCaps2: u32,
    dwCaps3: u32,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDCAPS_DX1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCAPS_DX1 = extern struct {
    dwSize: u32,
    dwCaps: u32,
    dwCaps2: u32,
    dwCKeyCaps: u32,
    dwFXCaps: u32,
    dwFXAlphaCaps: u32,
    dwPalCaps: u32,
    dwSVCaps: u32,
    dwAlphaBltConstBitDepths: u32,
    dwAlphaBltPixelBitDepths: u32,
    dwAlphaBltSurfaceBitDepths: u32,
    dwAlphaOverlayConstBitDepths: u32,
    dwAlphaOverlayPixelBitDepths: u32,
    dwAlphaOverlaySurfaceBitDepths: u32,
    dwZBufferBitDepths: u32,
    dwVidMemTotal: u32,
    dwVidMemFree: u32,
    dwMaxVisibleOverlays: u32,
    dwCurrVisibleOverlays: u32,
    dwNumFourCCCodes: u32,
    dwAlignBoundarySrc: u32,
    dwAlignSizeSrc: u32,
    dwAlignBoundaryDest: u32,
    dwAlignSizeDest: u32,
    dwAlignStrideAlign: u32,
    dwRops: ?[*]u32,
    ddsCaps: DDSCAPS,
    dwMinOverlayStretch: u32,
    dwMaxOverlayStretch: u32,
    dwMinLiveVideoStretch: u32,
    dwMaxLiveVideoStretch: u32,
    dwMinHwCodecStretch: u32,
    dwMaxHwCodecStretch: u32,
    dwReserved1: u32,
    dwReserved2: u32,
    dwReserved3: u32,
};
// --------------------------------------------------------
// Type: DDCAPS_DX3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCAPS_DX3 = extern struct {
    dwSize: u32,
    dwCaps: u32,
    dwCaps2: u32,
    dwCKeyCaps: u32,
    dwFXCaps: u32,
    dwFXAlphaCaps: u32,
    dwPalCaps: u32,
    dwSVCaps: u32,
    dwAlphaBltConstBitDepths: u32,
    dwAlphaBltPixelBitDepths: u32,
    dwAlphaBltSurfaceBitDepths: u32,
    dwAlphaOverlayConstBitDepths: u32,
    dwAlphaOverlayPixelBitDepths: u32,
    dwAlphaOverlaySurfaceBitDepths: u32,
    dwZBufferBitDepths: u32,
    dwVidMemTotal: u32,
    dwVidMemFree: u32,
    dwMaxVisibleOverlays: u32,
    dwCurrVisibleOverlays: u32,
    dwNumFourCCCodes: u32,
    dwAlignBoundarySrc: u32,
    dwAlignSizeSrc: u32,
    dwAlignBoundaryDest: u32,
    dwAlignSizeDest: u32,
    dwAlignStrideAlign: u32,
    dwRops: ?[*]u32,
    ddsCaps: DDSCAPS,
    dwMinOverlayStretch: u32,
    dwMaxOverlayStretch: u32,
    dwMinLiveVideoStretch: u32,
    dwMaxLiveVideoStretch: u32,
    dwMinHwCodecStretch: u32,
    dwMaxHwCodecStretch: u32,
    dwReserved1: u32,
    dwReserved2: u32,
    dwReserved3: u32,
    dwSVBCaps: u32,
    dwSVBCKeyCaps: u32,
    dwSVBFXCaps: u32,
    dwSVBRops: ?[*]u32,
    dwVSBCaps: u32,
    dwVSBCKeyCaps: u32,
    dwVSBFXCaps: u32,
    dwVSBRops: ?[*]u32,
    dwSSBCaps: u32,
    dwSSBCKeyCaps: u32,
    dwSSBFXCaps: u32,
    dwSSBRops: ?[*]u32,
    dwReserved4: u32,
    dwReserved5: u32,
    dwReserved6: u32,
};
// --------------------------------------------------------
// Type: DDCAPS_DX5
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCAPS_DX5 = extern struct {
    dwSize: u32,
    dwCaps: u32,
    dwCaps2: u32,
    dwCKeyCaps: u32,
    dwFXCaps: u32,
    dwFXAlphaCaps: u32,
    dwPalCaps: u32,
    dwSVCaps: u32,
    dwAlphaBltConstBitDepths: u32,
    dwAlphaBltPixelBitDepths: u32,
    dwAlphaBltSurfaceBitDepths: u32,
    dwAlphaOverlayConstBitDepths: u32,
    dwAlphaOverlayPixelBitDepths: u32,
    dwAlphaOverlaySurfaceBitDepths: u32,
    dwZBufferBitDepths: u32,
    dwVidMemTotal: u32,
    dwVidMemFree: u32,
    dwMaxVisibleOverlays: u32,
    dwCurrVisibleOverlays: u32,
    dwNumFourCCCodes: u32,
    dwAlignBoundarySrc: u32,
    dwAlignSizeSrc: u32,
    dwAlignBoundaryDest: u32,
    dwAlignSizeDest: u32,
    dwAlignStrideAlign: u32,
    dwRops: ?[*]u32,
    ddsCaps: DDSCAPS,
    dwMinOverlayStretch: u32,
    dwMaxOverlayStretch: u32,
    dwMinLiveVideoStretch: u32,
    dwMaxLiveVideoStretch: u32,
    dwMinHwCodecStretch: u32,
    dwMaxHwCodecStretch: u32,
    dwReserved1: u32,
    dwReserved2: u32,
    dwReserved3: u32,
    dwSVBCaps: u32,
    dwSVBCKeyCaps: u32,
    dwSVBFXCaps: u32,
    dwSVBRops: ?[*]u32,
    dwVSBCaps: u32,
    dwVSBCKeyCaps: u32,
    dwVSBFXCaps: u32,
    dwVSBRops: ?[*]u32,
    dwSSBCaps: u32,
    dwSSBCKeyCaps: u32,
    dwSSBFXCaps: u32,
    dwSSBRops: ?[*]u32,
    dwMaxVideoPorts: u32,
    dwCurrVideoPorts: u32,
    dwSVBCaps2: u32,
    dwNLVBCaps: u32,
    dwNLVBCaps2: u32,
    dwNLVBCKeyCaps: u32,
    dwNLVBFXCaps: u32,
    dwNLVBRops: ?[*]u32,
};
// --------------------------------------------------------
// Type: DDCAPS_DX6
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCAPS_DX6 = extern struct {
    dwSize: u32,
    dwCaps: u32,
    dwCaps2: u32,
    dwCKeyCaps: u32,
    dwFXCaps: u32,
    dwFXAlphaCaps: u32,
    dwPalCaps: u32,
    dwSVCaps: u32,
    dwAlphaBltConstBitDepths: u32,
    dwAlphaBltPixelBitDepths: u32,
    dwAlphaBltSurfaceBitDepths: u32,
    dwAlphaOverlayConstBitDepths: u32,
    dwAlphaOverlayPixelBitDepths: u32,
    dwAlphaOverlaySurfaceBitDepths: u32,
    dwZBufferBitDepths: u32,
    dwVidMemTotal: u32,
    dwVidMemFree: u32,
    dwMaxVisibleOverlays: u32,
    dwCurrVisibleOverlays: u32,
    dwNumFourCCCodes: u32,
    dwAlignBoundarySrc: u32,
    dwAlignSizeSrc: u32,
    dwAlignBoundaryDest: u32,
    dwAlignSizeDest: u32,
    dwAlignStrideAlign: u32,
    dwRops: ?[*]u32,
    ddsOldCaps: DDSCAPS,
    dwMinOverlayStretch: u32,
    dwMaxOverlayStretch: u32,
    dwMinLiveVideoStretch: u32,
    dwMaxLiveVideoStretch: u32,
    dwMinHwCodecStretch: u32,
    dwMaxHwCodecStretch: u32,
    dwReserved1: u32,
    dwReserved2: u32,
    dwReserved3: u32,
    dwSVBCaps: u32,
    dwSVBCKeyCaps: u32,
    dwSVBFXCaps: u32,
    dwSVBRops: ?[*]u32,
    dwVSBCaps: u32,
    dwVSBCKeyCaps: u32,
    dwVSBFXCaps: u32,
    dwVSBRops: ?[*]u32,
    dwSSBCaps: u32,
    dwSSBCKeyCaps: u32,
    dwSSBFXCaps: u32,
    dwSSBRops: ?[*]u32,
    dwMaxVideoPorts: u32,
    dwCurrVideoPorts: u32,
    dwSVBCaps2: u32,
    dwNLVBCaps: u32,
    dwNLVBCaps2: u32,
    dwNLVBCKeyCaps: u32,
    dwNLVBFXCaps: u32,
    dwNLVBRops: ?[*]u32,
    ddsCaps: DDSCAPS2,
};
// --------------------------------------------------------
// Type: DDCAPS_DX7
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCAPS_DX7 = extern struct {
    dwSize: u32,
    dwCaps: u32,
    dwCaps2: u32,
    dwCKeyCaps: u32,
    dwFXCaps: u32,
    dwFXAlphaCaps: u32,
    dwPalCaps: u32,
    dwSVCaps: u32,
    dwAlphaBltConstBitDepths: u32,
    dwAlphaBltPixelBitDepths: u32,
    dwAlphaBltSurfaceBitDepths: u32,
    dwAlphaOverlayConstBitDepths: u32,
    dwAlphaOverlayPixelBitDepths: u32,
    dwAlphaOverlaySurfaceBitDepths: u32,
    dwZBufferBitDepths: u32,
    dwVidMemTotal: u32,
    dwVidMemFree: u32,
    dwMaxVisibleOverlays: u32,
    dwCurrVisibleOverlays: u32,
    dwNumFourCCCodes: u32,
    dwAlignBoundarySrc: u32,
    dwAlignSizeSrc: u32,
    dwAlignBoundaryDest: u32,
    dwAlignSizeDest: u32,
    dwAlignStrideAlign: u32,
    dwRops: ?[*]u32,
    ddsOldCaps: DDSCAPS,
    dwMinOverlayStretch: u32,
    dwMaxOverlayStretch: u32,
    dwMinLiveVideoStretch: u32,
    dwMaxLiveVideoStretch: u32,
    dwMinHwCodecStretch: u32,
    dwMaxHwCodecStretch: u32,
    dwReserved1: u32,
    dwReserved2: u32,
    dwReserved3: u32,
    dwSVBCaps: u32,
    dwSVBCKeyCaps: u32,
    dwSVBFXCaps: u32,
    dwSVBRops: ?[*]u32,
    dwVSBCaps: u32,
    dwVSBCKeyCaps: u32,
    dwVSBFXCaps: u32,
    dwVSBRops: ?[*]u32,
    dwSSBCaps: u32,
    dwSSBCKeyCaps: u32,
    dwSSBFXCaps: u32,
    dwSSBRops: ?[*]u32,
    dwMaxVideoPorts: u32,
    dwCurrVideoPorts: u32,
    dwSVBCaps2: u32,
    dwNLVBCaps: u32,
    dwNLVBCaps2: u32,
    dwNLVBCKeyCaps: u32,
    dwNLVBFXCaps: u32,
    dwNLVBRops: ?[*]u32,
    ddsCaps: DDSCAPS2,
};
// --------------------------------------------------------
// Type: DDPIXELFORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDPIXELFORMAT = extern struct {
    dwSize: u32,
    dwFlags: u32,
    dwFourCC: u32,
    Anonymous1: _Anonymous1_e__Union,
    Anonymous2: _Anonymous2_e__Union,
    Anonymous3: _Anonymous3_e__Union,
    Anonymous4: _Anonymous4_e__Union,
    Anonymous5: _Anonymous5_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous5_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous5_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _MultiSampleCaps_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _MultiSampleCaps_e__Struct = extern struct {
            wFlipMSTypes: u16,
            wBltMSTypes: u16,
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous4_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous4_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDOVERLAYFX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDOVERLAYFX = extern struct {
    dwSize: u32,
    dwAlphaEdgeBlendBitDepth: u32,
    dwAlphaEdgeBlend: u32,
    dwReserved: u32,
    dwAlphaDestConstBitDepth: u32,
    Anonymous1: _Anonymous1_e__Union,
    dwAlphaSrcConstBitDepth: u32,
    Anonymous2: _Anonymous2_e__Union,
    dckDestColorkey: DDCOLORKEY,
    dckSrcColorkey: DDCOLORKEY,
    dwDDFX: u32,
    dwFlags: u32,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDBLTBATCH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDBLTBATCH = extern struct {
    lprDest: ?*RECT,
    lpDDSSrc: IDirectDrawSurface,
    lprSrc: ?*RECT,
    dwFlags: u32,
    lpDDBltFx: ?*DDBLTFX,
};
// --------------------------------------------------------
// Type: DDGAMMARAMP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDGAMMARAMP = extern struct {
    red: ?[*]u16,
    green: ?[*]u16,
    blue: ?[*]u16,
};
// --------------------------------------------------------
// Type: DDDEVICEIDENTIFIER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDDEVICEIDENTIFIER = extern struct {
    szDriver: ?[*]i8,
    szDescription: ?[*]i8,
    liDriverVersion: LARGE_INTEGER,
    dwVendorId: u32,
    dwDeviceId: u32,
    dwSubSysId: u32,
    dwRevision: u32,
    guidDeviceIdentifier: Guid,
};
// --------------------------------------------------------
// Type: DDDEVICEIDENTIFIER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDDEVICEIDENTIFIER2 = extern struct {
    szDriver: ?[*]i8,
    szDescription: ?[*]i8,
    liDriverVersion: LARGE_INTEGER,
    dwVendorId: u32,
    dwDeviceId: u32,
    dwSubSysId: u32,
    dwRevision: u32,
    guidDeviceIdentifier: Guid,
    dwWHQLLevel: u32,
};
// --------------------------------------------------------
// Type: LPCLIPPERCALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPCLIPPERCALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IDirectDraw
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDraw = *opaque{
    // TODO: Method 'Compact'
    // TODO: Method 'CreateClipper'
    // TODO: Method 'CreatePalette'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'DuplicateSurface'
    // TODO: Method 'EnumDisplayModes'
    // TODO: Method 'EnumSurfaces'
    // TODO: Method 'FlipToGDISurface'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetDisplayMode'
    // TODO: Method 'GetFourCCCodes'
    // TODO: Method 'GetGDISurface'
    // TODO: Method 'GetMonitorFrequency'
    // TODO: Method 'GetScanLine'
    // TODO: Method 'GetVerticalBlankStatus'
    // TODO: Method 'Initialize'
    // TODO: Method 'RestoreDisplayMode'
    // TODO: Method 'SetCooperativeLevel'
    // TODO: Method 'SetDisplayMode'
    // TODO: Method 'WaitForVerticalBlank'
};
// --------------------------------------------------------
// Type: IDirectDraw2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDraw2 = *opaque{
    // TODO: Method 'Compact'
    // TODO: Method 'CreateClipper'
    // TODO: Method 'CreatePalette'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'DuplicateSurface'
    // TODO: Method 'EnumDisplayModes'
    // TODO: Method 'EnumSurfaces'
    // TODO: Method 'FlipToGDISurface'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetDisplayMode'
    // TODO: Method 'GetFourCCCodes'
    // TODO: Method 'GetGDISurface'
    // TODO: Method 'GetMonitorFrequency'
    // TODO: Method 'GetScanLine'
    // TODO: Method 'GetVerticalBlankStatus'
    // TODO: Method 'Initialize'
    // TODO: Method 'RestoreDisplayMode'
    // TODO: Method 'SetCooperativeLevel'
    // TODO: Method 'SetDisplayMode'
    // TODO: Method 'WaitForVerticalBlank'
    // TODO: Method 'GetAvailableVidMem'
};
// --------------------------------------------------------
// Type: IDirectDraw4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDraw4 = *opaque{
    // TODO: Method 'Compact'
    // TODO: Method 'CreateClipper'
    // TODO: Method 'CreatePalette'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'DuplicateSurface'
    // TODO: Method 'EnumDisplayModes'
    // TODO: Method 'EnumSurfaces'
    // TODO: Method 'FlipToGDISurface'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetDisplayMode'
    // TODO: Method 'GetFourCCCodes'
    // TODO: Method 'GetGDISurface'
    // TODO: Method 'GetMonitorFrequency'
    // TODO: Method 'GetScanLine'
    // TODO: Method 'GetVerticalBlankStatus'
    // TODO: Method 'Initialize'
    // TODO: Method 'RestoreDisplayMode'
    // TODO: Method 'SetCooperativeLevel'
    // TODO: Method 'SetDisplayMode'
    // TODO: Method 'WaitForVerticalBlank'
    // TODO: Method 'GetAvailableVidMem'
    // TODO: Method 'GetSurfaceFromDC'
    // TODO: Method 'RestoreAllSurfaces'
    // TODO: Method 'TestCooperativeLevel'
    // TODO: Method 'GetDeviceIdentifier'
};
// --------------------------------------------------------
// Type: IDirectDraw7
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDraw7 = *opaque{
    // TODO: Method 'Compact'
    // TODO: Method 'CreateClipper'
    // TODO: Method 'CreatePalette'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'DuplicateSurface'
    // TODO: Method 'EnumDisplayModes'
    // TODO: Method 'EnumSurfaces'
    // TODO: Method 'FlipToGDISurface'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetDisplayMode'
    // TODO: Method 'GetFourCCCodes'
    // TODO: Method 'GetGDISurface'
    // TODO: Method 'GetMonitorFrequency'
    // TODO: Method 'GetScanLine'
    // TODO: Method 'GetVerticalBlankStatus'
    // TODO: Method 'Initialize'
    // TODO: Method 'RestoreDisplayMode'
    // TODO: Method 'SetCooperativeLevel'
    // TODO: Method 'SetDisplayMode'
    // TODO: Method 'WaitForVerticalBlank'
    // TODO: Method 'GetAvailableVidMem'
    // TODO: Method 'GetSurfaceFromDC'
    // TODO: Method 'RestoreAllSurfaces'
    // TODO: Method 'TestCooperativeLevel'
    // TODO: Method 'GetDeviceIdentifier'
    // TODO: Method 'StartModeTest'
    // TODO: Method 'EvaluateMode'
};
// --------------------------------------------------------
// Type: IDirectDrawPalette
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawPalette = *opaque{
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetEntries'
    // TODO: Method 'Initialize'
    // TODO: Method 'SetEntries'
};
// --------------------------------------------------------
// Type: IDirectDrawClipper
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawClipper = *opaque{
    // TODO: Method 'GetClipList'
    // TODO: Method 'GetHWnd'
    // TODO: Method 'Initialize'
    // TODO: Method 'IsClipListChanged'
    // TODO: Method 'SetClipList'
    // TODO: Method 'SetHWnd'
};
// --------------------------------------------------------
// Type: IDirectDrawSurface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawSurface = *opaque{
    // TODO: Method 'AddAttachedSurface'
    // TODO: Method 'AddOverlayDirtyRect'
    // TODO: Method 'Blt'
    // TODO: Method 'BltBatch'
    // TODO: Method 'BltFast'
    // TODO: Method 'DeleteAttachedSurface'
    // TODO: Method 'EnumAttachedSurfaces'
    // TODO: Method 'EnumOverlayZOrders'
    // TODO: Method 'Flip'
    // TODO: Method 'GetAttachedSurface'
    // TODO: Method 'GetBltStatus'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetClipper'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'GetDC'
    // TODO: Method 'GetFlipStatus'
    // TODO: Method 'GetOverlayPosition'
    // TODO: Method 'GetPalette'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'GetSurfaceDesc'
    // TODO: Method 'Initialize'
    // TODO: Method 'IsLost'
    // TODO: Method 'Lock'
    // TODO: Method 'ReleaseDC'
    // TODO: Method 'Restore'
    // TODO: Method 'SetClipper'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'SetOverlayPosition'
    // TODO: Method 'SetPalette'
    // TODO: Method 'Unlock'
    // TODO: Method 'UpdateOverlay'
    // TODO: Method 'UpdateOverlayDisplay'
    // TODO: Method 'UpdateOverlayZOrder'
};
// --------------------------------------------------------
// Type: IDirectDrawSurface2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawSurface2 = *opaque{
    // TODO: Method 'AddAttachedSurface'
    // TODO: Method 'AddOverlayDirtyRect'
    // TODO: Method 'Blt'
    // TODO: Method 'BltBatch'
    // TODO: Method 'BltFast'
    // TODO: Method 'DeleteAttachedSurface'
    // TODO: Method 'EnumAttachedSurfaces'
    // TODO: Method 'EnumOverlayZOrders'
    // TODO: Method 'Flip'
    // TODO: Method 'GetAttachedSurface'
    // TODO: Method 'GetBltStatus'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetClipper'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'GetDC'
    // TODO: Method 'GetFlipStatus'
    // TODO: Method 'GetOverlayPosition'
    // TODO: Method 'GetPalette'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'GetSurfaceDesc'
    // TODO: Method 'Initialize'
    // TODO: Method 'IsLost'
    // TODO: Method 'Lock'
    // TODO: Method 'ReleaseDC'
    // TODO: Method 'Restore'
    // TODO: Method 'SetClipper'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'SetOverlayPosition'
    // TODO: Method 'SetPalette'
    // TODO: Method 'Unlock'
    // TODO: Method 'UpdateOverlay'
    // TODO: Method 'UpdateOverlayDisplay'
    // TODO: Method 'UpdateOverlayZOrder'
    // TODO: Method 'GetDDInterface'
    // TODO: Method 'PageLock'
    // TODO: Method 'PageUnlock'
};
// --------------------------------------------------------
// Type: IDirectDrawSurface3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawSurface3 = *opaque{
    // TODO: Method 'AddAttachedSurface'
    // TODO: Method 'AddOverlayDirtyRect'
    // TODO: Method 'Blt'
    // TODO: Method 'BltBatch'
    // TODO: Method 'BltFast'
    // TODO: Method 'DeleteAttachedSurface'
    // TODO: Method 'EnumAttachedSurfaces'
    // TODO: Method 'EnumOverlayZOrders'
    // TODO: Method 'Flip'
    // TODO: Method 'GetAttachedSurface'
    // TODO: Method 'GetBltStatus'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetClipper'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'GetDC'
    // TODO: Method 'GetFlipStatus'
    // TODO: Method 'GetOverlayPosition'
    // TODO: Method 'GetPalette'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'GetSurfaceDesc'
    // TODO: Method 'Initialize'
    // TODO: Method 'IsLost'
    // TODO: Method 'Lock'
    // TODO: Method 'ReleaseDC'
    // TODO: Method 'Restore'
    // TODO: Method 'SetClipper'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'SetOverlayPosition'
    // TODO: Method 'SetPalette'
    // TODO: Method 'Unlock'
    // TODO: Method 'UpdateOverlay'
    // TODO: Method 'UpdateOverlayDisplay'
    // TODO: Method 'UpdateOverlayZOrder'
    // TODO: Method 'GetDDInterface'
    // TODO: Method 'PageLock'
    // TODO: Method 'PageUnlock'
    // TODO: Method 'SetSurfaceDesc'
};
// --------------------------------------------------------
// Type: IDirectDrawSurface4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawSurface4 = *opaque{
    // TODO: Method 'AddAttachedSurface'
    // TODO: Method 'AddOverlayDirtyRect'
    // TODO: Method 'Blt'
    // TODO: Method 'BltBatch'
    // TODO: Method 'BltFast'
    // TODO: Method 'DeleteAttachedSurface'
    // TODO: Method 'EnumAttachedSurfaces'
    // TODO: Method 'EnumOverlayZOrders'
    // TODO: Method 'Flip'
    // TODO: Method 'GetAttachedSurface'
    // TODO: Method 'GetBltStatus'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetClipper'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'GetDC'
    // TODO: Method 'GetFlipStatus'
    // TODO: Method 'GetOverlayPosition'
    // TODO: Method 'GetPalette'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'GetSurfaceDesc'
    // TODO: Method 'Initialize'
    // TODO: Method 'IsLost'
    // TODO: Method 'Lock'
    // TODO: Method 'ReleaseDC'
    // TODO: Method 'Restore'
    // TODO: Method 'SetClipper'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'SetOverlayPosition'
    // TODO: Method 'SetPalette'
    // TODO: Method 'Unlock'
    // TODO: Method 'UpdateOverlay'
    // TODO: Method 'UpdateOverlayDisplay'
    // TODO: Method 'UpdateOverlayZOrder'
    // TODO: Method 'GetDDInterface'
    // TODO: Method 'PageLock'
    // TODO: Method 'PageUnlock'
    // TODO: Method 'SetSurfaceDesc'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'FreePrivateData'
    // TODO: Method 'GetUniquenessValue'
    // TODO: Method 'ChangeUniquenessValue'
};
// --------------------------------------------------------
// Type: IDirectDrawSurface7
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawSurface7 = *opaque{
    // TODO: Method 'AddAttachedSurface'
    // TODO: Method 'AddOverlayDirtyRect'
    // TODO: Method 'Blt'
    // TODO: Method 'BltBatch'
    // TODO: Method 'BltFast'
    // TODO: Method 'DeleteAttachedSurface'
    // TODO: Method 'EnumAttachedSurfaces'
    // TODO: Method 'EnumOverlayZOrders'
    // TODO: Method 'Flip'
    // TODO: Method 'GetAttachedSurface'
    // TODO: Method 'GetBltStatus'
    // TODO: Method 'GetCaps'
    // TODO: Method 'GetClipper'
    // TODO: Method 'GetColorKey'
    // TODO: Method 'GetDC'
    // TODO: Method 'GetFlipStatus'
    // TODO: Method 'GetOverlayPosition'
    // TODO: Method 'GetPalette'
    // TODO: Method 'GetPixelFormat'
    // TODO: Method 'GetSurfaceDesc'
    // TODO: Method 'Initialize'
    // TODO: Method 'IsLost'
    // TODO: Method 'Lock'
    // TODO: Method 'ReleaseDC'
    // TODO: Method 'Restore'
    // TODO: Method 'SetClipper'
    // TODO: Method 'SetColorKey'
    // TODO: Method 'SetOverlayPosition'
    // TODO: Method 'SetPalette'
    // TODO: Method 'Unlock'
    // TODO: Method 'UpdateOverlay'
    // TODO: Method 'UpdateOverlayDisplay'
    // TODO: Method 'UpdateOverlayZOrder'
    // TODO: Method 'GetDDInterface'
    // TODO: Method 'PageLock'
    // TODO: Method 'PageUnlock'
    // TODO: Method 'SetSurfaceDesc'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'FreePrivateData'
    // TODO: Method 'GetUniquenessValue'
    // TODO: Method 'ChangeUniquenessValue'
    // TODO: Method 'SetPriority'
    // TODO: Method 'GetPriority'
    // TODO: Method 'SetLOD'
    // TODO: Method 'GetLOD'
};
// --------------------------------------------------------
// Type: IDirectDrawColorControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawColorControl = *opaque{
    // TODO: Method 'GetColorControls'
    // TODO: Method 'SetColorControls'
};
// --------------------------------------------------------
// Type: IDirectDrawGammaControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDirectDrawGammaControl = *opaque{
    // TODO: Method 'GetGammaRamp'
    // TODO: Method 'SetGammaRamp'
};
// --------------------------------------------------------
// Type: DDSURFACEDESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDSURFACEDESC = extern struct {
    dwSize: u32,
    dwFlags: u32,
    dwHeight: u32,
    dwWidth: u32,
    Anonymous1: _Anonymous1_e__Union,
    dwBackBufferCount: u32,
    Anonymous2: _Anonymous2_e__Union,
    dwAlphaBitDepth: u32,
    dwReserved: u32,
    lpSurface: ?*opaque{},
    ddckCKDestOverlay: DDCOLORKEY,
    ddckCKDestBlt: DDCOLORKEY,
    ddckCKSrcOverlay: DDCOLORKEY,
    ddckCKSrcBlt: DDCOLORKEY,
    ddpfPixelFormat: DDPIXELFORMAT,
    ddsCaps: DDSCAPS,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDSURFACEDESC2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDSURFACEDESC2 = extern struct {
    dwSize: u32,
    dwFlags: u32,
    dwHeight: u32,
    dwWidth: u32,
    Anonymous1: _Anonymous1_e__Union,
    Anonymous2: _Anonymous2_e__Union,
    Anonymous3: _Anonymous3_e__Union,
    dwAlphaBitDepth: u32,
    dwReserved: u32,
    lpSurface: ?*opaque{},
    Anonymous4: _Anonymous4_e__Union,
    ddckCKDestBlt: DDCOLORKEY,
    ddckCKSrcOverlay: DDCOLORKEY,
    ddckCKSrcBlt: DDCOLORKEY,
    Anonymous5: _Anonymous5_e__Union,
    ddsCaps: DDSCAPS2,
    dwTextureStage: u32,
    // --------------------------------------------------------
    // Type: _Anonymous4_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous4_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous5_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous5_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DDOPTSURFACEDESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDOPTSURFACEDESC = extern struct {
    dwSize: u32,
    dwFlags: u32,
    ddSCaps: DDSCAPS2,
    ddOSCaps: DDOSCAPS,
    guid: Guid,
    dwCompressionRatio: u32,
};
// --------------------------------------------------------
// Type: DDCOLORCONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDCOLORCONTROL = extern struct {
    dwSize: u32,
    dwFlags: u32,
    lBrightness: i32,
    lContrast: i32,
    lHue: i32,
    lSaturation: i32,
    lSharpness: i32,
    lGamma: i32,
    lColorEnable: i32,
    dwReserved1: u32,
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawEnumerateW(
    lpCallback: LPDDENUMCALLBACKW,
    lpContext: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawEnumerateA(
    lpCallback: LPDDENUMCALLBACKA,
    lpContext: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawEnumerateExW(
    lpCallback: LPDDENUMCALLBACKEXW,
    lpContext: ?*opaque{},
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawEnumerateExA(
    lpCallback: LPDDENUMCALLBACKEXA,
    lpContext: ?*opaque{},
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawCreate(
    lpGUID: ?*Guid,
    lplpDD: ?*IDirectDraw,
    pUnkOuter: IUnknown,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawCreateEx(
    lpGuid: ?*Guid,
    lplpDD: ?*?*opaque{},
    iid: ?*Guid,
    pUnkOuter: IUnknown,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DDRAW" fn DirectDrawCreateClipper(
    dwFlags: u32,
    lplpDDClipper: ?*IDirectDrawClipper,
    pUnkOuter: IUnknown,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
        pub const DirectDrawEnumerate = DirectDrawEnumerateA;
        pub const DirectDrawEnumerateEx = DirectDrawEnumerateExA;
    },
    .wide => struct {
        pub const DirectDrawEnumerate = DirectDrawEnumerateW;
        pub const DirectDrawEnumerateEx = DirectDrawEnumerateExW;
    },
    else => if (@import("builtin").is_test) struct {
        pub const DirectDrawEnumerate = *opaque{};
        pub const DirectDrawEnumerateEx = *opaque{};
    } else struct {
        pub const DirectDrawEnumerate = @compileError("'DirectDrawEnumerate' requires that UNICODE be set to true or false in the root module");
        pub const DirectDrawEnumerateEx = @compileError("'DirectDrawEnumerateEx' requires that UNICODE be set to true or false in the root module");
    },
};

//
// type imports
//
const Guid = @import("../zig.zig").Guid;
const DDCOLORKEY = @import("directshow.zig").DDCOLORKEY;
const RECT = @import("displaydevices.zig").RECT;
const LARGE_INTEGER = @import("systemservices.zig").LARGE_INTEGER;
const HRESULT = @import("com.zig").HRESULT;
const IUnknown = @import("com.zig").IUnknown;

test "" {
    const constant_export_count = 0;
    const type_export_count = 51;
    const func_count = 7;
    const unicode_alias_count = 2;
    const type_import_count = 6;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
