//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//
pub const DML_TENSOR_DIMENSION_COUNT_MAX : u32 = 5;
pub const DML_TEMPORARY_BUFFER_ALIGNMENT : u32 = 256;
pub const DML_PERSISTENT_BUFFER_ALIGNMENT : u32 = 256;
pub const DML_MINIMUM_BUFFER_TENSOR_ALIGNMENT : u32 = 16;

//
// types
//
// --------------------------------------------------------
// Type: DML_TENSOR_DATA_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_TENSOR_DATA_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DML_TENSOR_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_TENSOR_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DML_TENSOR_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_TENSOR_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DML_BUFFER_TENSOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BUFFER_TENSOR_DESC = extern struct {
    DataType: DML_TENSOR_DATA_TYPE,
    Flags: DML_TENSOR_FLAGS,
    DimensionCount: u32,
    Sizes: ?*u32,
    Strides: ?*u32,
    TotalTensorSizeInBytes: u64,
    GuaranteedBaseOffsetAlignment: u32,
};
// --------------------------------------------------------
// Type: DML_TENSOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_TENSOR_DESC = extern struct {
    Type: DML_TENSOR_TYPE,
    Desc: ?*opaque{},
};
// --------------------------------------------------------
// Type: DML_OPERATOR_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_OPERATOR_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DML_REDUCE_FUNCTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_REDUCE_FUNCTION = *opaque{
};
// --------------------------------------------------------
// Type: DML_MATRIX_TRANSFORM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_MATRIX_TRANSFORM = *opaque{
};
// --------------------------------------------------------
// Type: DML_CONVOLUTION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_CONVOLUTION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DML_CONVOLUTION_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_CONVOLUTION_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: DML_PADDING_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_PADDING_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DML_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DML_SCALE_BIAS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_SCALE_BIAS = extern struct {
    Scale: f32,
    Bias: f32,
};
// --------------------------------------------------------
// Type: DML_SIZE_2D
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_SIZE_2D = extern struct {
    Width: u32,
    Height: u32,
};
// --------------------------------------------------------
// Type: DML_RECURRENT_NETWORK_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_RECURRENT_NETWORK_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: DML_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_OPERATOR_DESC = extern struct {
    Type: DML_OPERATOR_TYPE,
    Desc: ?*opaque{},
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_IDENTITY_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ABS_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ABS_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ACOS_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ACOS_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ADD_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ADD_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ADD1_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ADD1_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    FusedActivation: ?*DML_OPERATOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ASIN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ASIN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ATAN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ATAN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_CEIL_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_CEIL_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_CLIP_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_CLIP_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
    Min: f32,
    Max: f32,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_COS_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_COS_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_DIVIDE_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_EXP_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_EXP_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_FLOOR_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOG_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOG_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_AND_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_EQUALS_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_GREATER_THAN_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_LESS_THAN_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_NOT_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_OR_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_LOGICAL_XOR_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_MAX_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_MAX_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_MEAN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_MEAN_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_MIN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_MIN_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_MULTIPLY_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_POW_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_POW_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    ExponentTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_CONSTANT_POW_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
    Exponent: f32,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_RECIP_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_RECIP_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_SIN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_SIN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_SQRT_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_SQRT_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_SUBTRACT_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_TAN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_TAN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_THRESHOLD_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
    Min: f32,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_QUANTIZE_LINEAR_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    ScaleTensor: ?*DML_TENSOR_DESC,
    ZeroPointTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_DEQUANTIZE_LINEAR_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    ScaleTensor: ?*DML_TENSOR_DESC,
    ZeroPointTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_ELU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_ELU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_HARDMAX_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_HARDMAX_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_HARD_SIGMOID_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
    Beta: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_IDENTITY_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_IDENTITY_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_LEAKY_RELU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_LINEAR_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_LINEAR_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
    Beta: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_LOG_SOFTMAX_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_PARAMETERIZED_RELU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    SlopeTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_PARAMETRIC_SOFTPLUS_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
    Beta: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_RELU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_RELU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SCALED_ELU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
    Gamma: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SCALED_TANH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
    Beta: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SIGMOID_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SIGMOID_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SOFTMAX_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SOFTMAX_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SOFTPLUS_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Steepness: f32,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SOFTSIGN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_TANH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_TANH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_THRESHOLDED_RELU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Alpha: f32,
};
// --------------------------------------------------------
// Type: DML_CONVOLUTION_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_CONVOLUTION_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    FilterTensor: ?*DML_TENSOR_DESC,
    BiasTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Mode: DML_CONVOLUTION_MODE,
    Direction: DML_CONVOLUTION_DIRECTION,
    DimensionCount: u32,
    Strides: ?*u32,
    Dilations: ?*u32,
    StartPadding: ?*u32,
    EndPadding: ?*u32,
    OutputPadding: ?*u32,
    GroupCount: u32,
    FusedActivation: ?*DML_OPERATOR_DESC,
};
// --------------------------------------------------------
// Type: DML_GEMM_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_GEMM_OPERATOR_DESC = extern struct {
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    CTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    TransA: DML_MATRIX_TRANSFORM,
    TransB: DML_MATRIX_TRANSFORM,
    Alpha: f32,
    Beta: f32,
    FusedActivation: ?*DML_OPERATOR_DESC,
};
// --------------------------------------------------------
// Type: DML_REDUCE_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_REDUCE_OPERATOR_DESC = extern struct {
    Function: DML_REDUCE_FUNCTION,
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    AxisCount: u32,
    Axes: ?*u32,
};
// --------------------------------------------------------
// Type: DML_AVERAGE_POOLING_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_AVERAGE_POOLING_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    DimensionCount: u32,
    Strides: ?*u32,
    WindowSize: ?*u32,
    StartPadding: ?*u32,
    EndPadding: ?*u32,
    IncludePadding: BOOL,
};
// --------------------------------------------------------
// Type: DML_LP_POOLING_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_LP_POOLING_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    DimensionCount: u32,
    Strides: ?*u32,
    WindowSize: ?*u32,
    StartPadding: ?*u32,
    EndPadding: ?*u32,
    P: u32,
};
// --------------------------------------------------------
// Type: DML_MAX_POOLING_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_MAX_POOLING_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    DimensionCount: u32,
    Strides: ?*u32,
    WindowSize: ?*u32,
    StartPadding: ?*u32,
    EndPadding: ?*u32,
};
// --------------------------------------------------------
// Type: DML_MAX_POOLING1_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_MAX_POOLING1_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    OutputIndicesTensor: ?*DML_TENSOR_DESC,
    DimensionCount: u32,
    Strides: ?*u32,
    WindowSize: ?*u32,
    StartPadding: ?*u32,
    EndPadding: ?*u32,
};
// --------------------------------------------------------
// Type: DML_ROI_POOLING_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ROI_POOLING_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    ROITensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    SpatialScale: f32,
    PooledSize: DML_SIZE_2D,
};
// --------------------------------------------------------
// Type: DML_SLICE_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_SLICE_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    DimensionCount: u32,
    Offsets: ?*u32,
    Sizes: ?*u32,
    Strides: ?*u32,
};
// --------------------------------------------------------
// Type: DML_CAST_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_CAST_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_SPLIT_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_SPLIT_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputCount: u32,
    OutputTensors: ?*DML_TENSOR_DESC,
    Axis: u32,
};
// --------------------------------------------------------
// Type: DML_JOIN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_JOIN_OPERATOR_DESC = extern struct {
    InputCount: u32,
    InputTensors: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Axis: u32,
};
// --------------------------------------------------------
// Type: DML_PADDING_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_PADDING_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    PaddingMode: DML_PADDING_MODE,
    PaddingValue: f32,
    DimensionCount: u32,
    StartPadding: ?*u32,
    EndPadding: ?*u32,
};
// --------------------------------------------------------
// Type: DML_VALUE_SCALE_2D_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_VALUE_SCALE_2D_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Scale: f32,
    ChannelCount: u32,
    Bias: ?*f32,
};
// --------------------------------------------------------
// Type: DML_UPSAMPLE_2D_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_UPSAMPLE_2D_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleSize: DML_SIZE_2D,
    InterpolationMode: DML_INTERPOLATION_MODE,
};
// --------------------------------------------------------
// Type: DML_GATHER_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_GATHER_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    IndicesTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Axis: u32,
    IndexDimensions: u32,
};
// --------------------------------------------------------
// Type: DML_SPACE_TO_DEPTH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_SPACE_TO_DEPTH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    BlockSize: u32,
};
// --------------------------------------------------------
// Type: DML_DEPTH_TO_SPACE_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_DEPTH_TO_SPACE_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    BlockSize: u32,
};
// --------------------------------------------------------
// Type: DML_TILE_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_TILE_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    RepeatsCount: u32,
    Repeats: ?*u32,
};
// --------------------------------------------------------
// Type: DML_TOP_K_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_TOP_K_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputValueTensor: ?*DML_TENSOR_DESC,
    OutputIndexTensor: ?*DML_TENSOR_DESC,
    Axis: u32,
    K: u32,
};
// --------------------------------------------------------
// Type: DML_BATCH_NORMALIZATION_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BATCH_NORMALIZATION_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    MeanTensor: ?*DML_TENSOR_DESC,
    VarianceTensor: ?*DML_TENSOR_DESC,
    ScaleTensor: ?*DML_TENSOR_DESC,
    BiasTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Spatial: BOOL,
    Epsilon: f32,
    FusedActivation: ?*DML_OPERATOR_DESC,
};
// --------------------------------------------------------
// Type: DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_MEAN_VARIANCE_NORMALIZATION_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    ScaleTensor: ?*DML_TENSOR_DESC,
    BiasTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    CrossChannel: BOOL,
    NormalizeVariance: BOOL,
    Epsilon: f32,
    FusedActivation: ?*DML_OPERATOR_DESC,
};
// --------------------------------------------------------
// Type: DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_LOCAL_RESPONSE_NORMALIZATION_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    CrossChannel: BOOL,
    LocalSize: u32,
    Alpha: f32,
    Beta: f32,
    Bias: f32,
};
// --------------------------------------------------------
// Type: DML_LP_NORMALIZATION_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_LP_NORMALIZATION_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Axis: u32,
    Epsilon: f32,
    P: u32,
};
// --------------------------------------------------------
// Type: DML_RNN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_RNN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    WeightTensor: ?*DML_TENSOR_DESC,
    RecurrenceTensor: ?*DML_TENSOR_DESC,
    BiasTensor: ?*DML_TENSOR_DESC,
    HiddenInitTensor: ?*DML_TENSOR_DESC,
    SequenceLengthsTensor: ?*DML_TENSOR_DESC,
    OutputSequenceTensor: ?*DML_TENSOR_DESC,
    OutputSingleTensor: ?*DML_TENSOR_DESC,
    ActivationDescCount: u32,
    ActivationDescs: ?*DML_OPERATOR_DESC,
    Direction: DML_RECURRENT_NETWORK_DIRECTION,
};
// --------------------------------------------------------
// Type: DML_LSTM_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_LSTM_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    WeightTensor: ?*DML_TENSOR_DESC,
    RecurrenceTensor: ?*DML_TENSOR_DESC,
    BiasTensor: ?*DML_TENSOR_DESC,
    HiddenInitTensor: ?*DML_TENSOR_DESC,
    CellMemInitTensor: ?*DML_TENSOR_DESC,
    SequenceLengthsTensor: ?*DML_TENSOR_DESC,
    PeepholeTensor: ?*DML_TENSOR_DESC,
    OutputSequenceTensor: ?*DML_TENSOR_DESC,
    OutputSingleTensor: ?*DML_TENSOR_DESC,
    OutputCellSingleTensor: ?*DML_TENSOR_DESC,
    ActivationDescCount: u32,
    ActivationDescs: ?*DML_OPERATOR_DESC,
    Direction: DML_RECURRENT_NETWORK_DIRECTION,
    ClipThreshold: f32,
    UseClipThreshold: BOOL,
    CoupleInputForget: BOOL,
};
// --------------------------------------------------------
// Type: DML_GRU_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_GRU_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    WeightTensor: ?*DML_TENSOR_DESC,
    RecurrenceTensor: ?*DML_TENSOR_DESC,
    BiasTensor: ?*DML_TENSOR_DESC,
    HiddenInitTensor: ?*DML_TENSOR_DESC,
    SequenceLengthsTensor: ?*DML_TENSOR_DESC,
    OutputSequenceTensor: ?*DML_TENSOR_DESC,
    OutputSingleTensor: ?*DML_TENSOR_DESC,
    ActivationDescCount: u32,
    ActivationDescs: ?*DML_OPERATOR_DESC,
    Direction: DML_RECURRENT_NETWORK_DIRECTION,
    LinearBeforeReset: BOOL,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_SIGN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_SIGN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_IS_NAN_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ERF_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ERF_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_SINH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_SINH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_COSH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_COSH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_TANH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_TANH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ASINH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ASINH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ACOSH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_ATANH_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_ATANH_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    ScaleBias: ?*DML_SCALE_BIAS,
};
// --------------------------------------------------------
// Type: DML_ELEMENT_WISE_IF_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ELEMENT_WISE_IF_OPERATOR_DESC = extern struct {
    ConditionTensor: ?*DML_TENSOR_DESC,
    ATensor: ?*DML_TENSOR_DESC,
    BTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_ACTIVATION_SHRINK_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ACTIVATION_SHRINK_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Bias: f32,
    Threshold: f32,
};
// --------------------------------------------------------
// Type: DML_MAX_UNPOOLING_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_MAX_UNPOOLING_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    IndicesTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
};
// --------------------------------------------------------
// Type: DML_DIAGONAL_MATRIX_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_DIAGONAL_MATRIX_OPERATOR_DESC = extern struct {
    OutputTensor: ?*DML_TENSOR_DESC,
    Offset: i32,
    Value: f32,
};
// --------------------------------------------------------
// Type: DML_SCATTER_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_SCATTER_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    IndicesTensor: ?*DML_TENSOR_DESC,
    UpdatesTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Axis: u32,
};
// --------------------------------------------------------
// Type: DML_ONE_HOT_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_ONE_HOT_OPERATOR_DESC = extern struct {
    IndicesTensor: ?*DML_TENSOR_DESC,
    ValuesTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    Axis: u32,
};
// --------------------------------------------------------
// Type: DML_RESAMPLE_OPERATOR_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_RESAMPLE_OPERATOR_DESC = extern struct {
    InputTensor: ?*DML_TENSOR_DESC,
    OutputTensor: ?*DML_TENSOR_DESC,
    InterpolationMode: DML_INTERPOLATION_MODE,
    ScaleCount: u32,
    Scales: ?*f32,
};
// --------------------------------------------------------
// Type: DML_FEATURE_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_FEATURE_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: DML_FEATURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_FEATURE = *opaque{
};
// --------------------------------------------------------
// Type: DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_FEATURE_QUERY_TENSOR_DATA_TYPE_SUPPORT = extern struct {
    DataType: DML_TENSOR_DATA_TYPE,
};
// --------------------------------------------------------
// Type: DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_FEATURE_DATA_TENSOR_DATA_TYPE_SUPPORT = extern struct {
    IsSupported: BOOL,
};
// --------------------------------------------------------
// Type: DML_FEATURE_QUERY_FEATURE_LEVELS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_FEATURE_QUERY_FEATURE_LEVELS = extern struct {
    RequestedFeatureLevelCount: u32,
    RequestedFeatureLevels: ?*DML_FEATURE_LEVEL,
};
// --------------------------------------------------------
// Type: DML_FEATURE_DATA_FEATURE_LEVELS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_FEATURE_DATA_FEATURE_LEVELS = extern struct {
    MaxSupportedFeatureLevel: DML_FEATURE_LEVEL,
};
// --------------------------------------------------------
// Type: DML_BINDING_TABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BINDING_TABLE_DESC = extern struct {
    Dispatchable: IDMLDispatchable,
    CPUDescriptorHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
    GPUDescriptorHandle: D3D12_GPU_DESCRIPTOR_HANDLE,
    SizeInDescriptors: u32,
};
// --------------------------------------------------------
// Type: DML_EXECUTION_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_EXECUTION_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: DML_CREATE_DEVICE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_CREATE_DEVICE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IDMLObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLObject = *opaque{
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'SetPrivateDataInterface'
    // TODO: Method 'SetName'
};
// --------------------------------------------------------
// Type: IDMLDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLDevice = *opaque{
    // TODO: Method 'CheckFeatureSupport'
    // TODO: Method 'CreateOperator'
    // TODO: Method 'CompileOperator'
    // TODO: Method 'CreateOperatorInitializer'
    // TODO: Method 'CreateCommandRecorder'
    // TODO: Method 'CreateBindingTable'
    // TODO: Method 'Evict'
    // TODO: Method 'MakeResident'
    // TODO: Method 'GetDeviceRemovedReason'
    // TODO: Method 'GetParentDevice'
};
// --------------------------------------------------------
// Type: IDMLDeviceChild
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLDeviceChild = *opaque{
    // TODO: Method 'GetDevice'
};
// --------------------------------------------------------
// Type: IDMLPageable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLPageable = *opaque{
};
// --------------------------------------------------------
// Type: IDMLOperator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLOperator = *opaque{
};
// --------------------------------------------------------
// Type: DML_BINDING_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BINDING_PROPERTIES = extern struct {
    RequiredDescriptorCount: u32,
    TemporaryResourceSize: u64,
    PersistentResourceSize: u64,
};
// --------------------------------------------------------
// Type: IDMLDispatchable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLDispatchable = *opaque{
    // TODO: Method 'GetBindingProperties'
};
// --------------------------------------------------------
// Type: IDMLCompiledOperator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLCompiledOperator = *opaque{
};
// --------------------------------------------------------
// Type: IDMLOperatorInitializer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLOperatorInitializer = *opaque{
    // TODO: Method 'Reset'
};
// --------------------------------------------------------
// Type: DML_BINDING_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DML_BINDING_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DML_BINDING_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BINDING_DESC = extern struct {
    Type: DML_BINDING_TYPE,
    Desc: ?*opaque{},
};
// --------------------------------------------------------
// Type: DML_BUFFER_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BUFFER_BINDING = extern struct {
    Buffer: ID3D12Resource,
    Offset: u64,
    SizeInBytes: u64,
};
// --------------------------------------------------------
// Type: DML_BUFFER_ARRAY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DML_BUFFER_ARRAY_BINDING = extern struct {
    BindingCount: u32,
    Bindings: ?*DML_BUFFER_BINDING,
};
// --------------------------------------------------------
// Type: IDMLBindingTable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLBindingTable = *opaque{
    // TODO: Method 'BindInputs'
    // TODO: Method 'BindOutputs'
    // TODO: Method 'BindTemporaryResource'
    // TODO: Method 'BindPersistentResource'
    // TODO: Method 'Reset'
};
// --------------------------------------------------------
// Type: IDMLCommandRecorder
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLCommandRecorder = *opaque{
    // TODO: Method 'RecordDispatch'
};
// --------------------------------------------------------
// Type: IDMLDebugDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDMLDebugDevice = *opaque{
    // TODO: Method 'SetMuteDebugOutput'
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "DirectML" fn DMLCreateDevice(
    d3d12Device: ID3D12Device,
    flags: DML_CREATE_DEVICE_FLAGS,
    riid: ?*Guid,
    ppv: ?*?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "DirectML" fn DMLCreateDevice1(
    d3d12Device: ID3D12Device,
    flags: DML_CREATE_DEVICE_FLAGS,
    minimumFeatureLevel: DML_FEATURE_LEVEL,
    riid: ?*Guid,
    ppv: ?*?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const Guid = @import("../zig.zig").Guid;
const BOOL = @import("systemservices.zig").BOOL;
const D3D12_CPU_DESCRIPTOR_HANDLE = @import("direct3d12.zig").D3D12_CPU_DESCRIPTOR_HANDLE;
const D3D12_GPU_DESCRIPTOR_HANDLE = @import("direct3d12.zig").D3D12_GPU_DESCRIPTOR_HANDLE;
const ID3D12Resource = @import("direct3d12.zig").ID3D12Resource;
const ID3D12Device = @import("direct3d12.zig").ID3D12Device;
const HRESULT = @import("com.zig").HRESULT;

test "" {
    const constant_export_count = 4;
    const type_export_count = 137;
    const func_count = 2;
    const unicode_alias_count = 0;
    const type_import_count = 7;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
