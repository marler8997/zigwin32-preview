//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: DCOMPOSITION_BITMAP_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DCOMPOSITION_BITMAP_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DCOMPOSITION_BORDER_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DCOMPOSITION_BORDER_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DCOMPOSITION_COMPOSITE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DCOMPOSITION_COMPOSITE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DCOMPOSITION_BACKFACE_VISIBILITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DCOMPOSITION_BACKFACE_VISIBILITY = *opaque{
};
// --------------------------------------------------------
// Type: DCOMPOSITION_OPACITY_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DCOMPOSITION_OPACITY_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DCOMPOSITION_DEPTH_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DCOMPOSITION_DEPTH_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DCOMPOSITION_FRAME_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DCOMPOSITION_FRAME_STATISTICS = extern struct {
    lastFrameTime: LARGE_INTEGER,
    currentCompositionRate: DXGI_RATIONAL,
    currentTime: LARGE_INTEGER,
    timeFrequency: LARGE_INTEGER,
    nextEstimatedFrameTime: LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: IDCompositionAnimation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionAnimation = *opaque{
    // TODO: Method 'Reset'
    // TODO: Method 'SetAbsoluteBeginTime'
    // TODO: Method 'AddCubic'
    // TODO: Method 'AddSinusoidal'
    // TODO: Method 'AddRepeat'
    // TODO: Method 'End'
};
// --------------------------------------------------------
// Type: IDCompositionDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionDevice = *opaque{
    // TODO: Method 'Commit'
    // TODO: Method 'WaitForCommitCompletion'
    // TODO: Method 'GetFrameStatistics'
    // TODO: Method 'CreateTargetForHwnd'
    // TODO: Method 'CreateVisual'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'CreateVirtualSurface'
    // TODO: Method 'CreateSurfaceFromHandle'
    // TODO: Method 'CreateSurfaceFromHwnd'
    // TODO: Method 'CreateTranslateTransform'
    // TODO: Method 'CreateScaleTransform'
    // TODO: Method 'CreateRotateTransform'
    // TODO: Method 'CreateSkewTransform'
    // TODO: Method 'CreateMatrixTransform'
    // TODO: Method 'CreateTransformGroup'
    // TODO: Method 'CreateTranslateTransform3D'
    // TODO: Method 'CreateScaleTransform3D'
    // TODO: Method 'CreateRotateTransform3D'
    // TODO: Method 'CreateMatrixTransform3D'
    // TODO: Method 'CreateTransform3DGroup'
    // TODO: Method 'CreateEffectGroup'
    // TODO: Method 'CreateRectangleClip'
    // TODO: Method 'CreateAnimation'
    // TODO: Method 'CheckDeviceState'
};
// --------------------------------------------------------
// Type: IDCompositionTarget
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTarget = *opaque{
    // TODO: Method 'SetRoot'
};
// --------------------------------------------------------
// Type: IDCompositionVisual
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionVisual = *opaque{
    // TODO: Method 'SetOffsetX'
    // TODO: Method 'SetOffsetX'
    // TODO: Method 'SetOffsetY'
    // TODO: Method 'SetOffsetY'
    // TODO: Method 'SetTransform'
    // TODO: Method 'SetTransform'
    // TODO: Method 'SetTransformParent'
    // TODO: Method 'SetEffect'
    // TODO: Method 'SetBitmapInterpolationMode'
    // TODO: Method 'SetBorderMode'
    // TODO: Method 'SetClip'
    // TODO: Method 'SetClip'
    // TODO: Method 'SetContent'
    // TODO: Method 'AddVisual'
    // TODO: Method 'RemoveVisual'
    // TODO: Method 'RemoveAllVisuals'
    // TODO: Method 'SetCompositeMode'
};
// --------------------------------------------------------
// Type: IDCompositionEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionEffect = *opaque{
};
// --------------------------------------------------------
// Type: IDCompositionTransform3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTransform3D = *opaque{
};
// --------------------------------------------------------
// Type: IDCompositionTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTransform = *opaque{
};
// --------------------------------------------------------
// Type: IDCompositionTranslateTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTranslateTransform = *opaque{
    // TODO: Method 'SetOffsetX'
    // TODO: Method 'SetOffsetX'
    // TODO: Method 'SetOffsetY'
    // TODO: Method 'SetOffsetY'
};
// --------------------------------------------------------
// Type: IDCompositionScaleTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionScaleTransform = *opaque{
    // TODO: Method 'SetScaleX'
    // TODO: Method 'SetScaleX'
    // TODO: Method 'SetScaleY'
    // TODO: Method 'SetScaleY'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterY'
};
// --------------------------------------------------------
// Type: IDCompositionRotateTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionRotateTransform = *opaque{
    // TODO: Method 'SetAngle'
    // TODO: Method 'SetAngle'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterY'
};
// --------------------------------------------------------
// Type: IDCompositionSkewTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionSkewTransform = *opaque{
    // TODO: Method 'SetAngleX'
    // TODO: Method 'SetAngleX'
    // TODO: Method 'SetAngleY'
    // TODO: Method 'SetAngleY'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterY'
};
// --------------------------------------------------------
// Type: IDCompositionMatrixTransform
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionMatrixTransform = *opaque{
    // TODO: Method 'SetMatrix'
    // TODO: Method 'SetMatrixElement'
    // TODO: Method 'SetMatrixElement'
};
// --------------------------------------------------------
// Type: IDCompositionEffectGroup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionEffectGroup = *opaque{
    // TODO: Method 'SetOpacity'
    // TODO: Method 'SetOpacity'
    // TODO: Method 'SetTransform3D'
};
// --------------------------------------------------------
// Type: IDCompositionTranslateTransform3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTranslateTransform3D = *opaque{
    // TODO: Method 'SetOffsetX'
    // TODO: Method 'SetOffsetX'
    // TODO: Method 'SetOffsetY'
    // TODO: Method 'SetOffsetY'
    // TODO: Method 'SetOffsetZ'
    // TODO: Method 'SetOffsetZ'
};
// --------------------------------------------------------
// Type: IDCompositionScaleTransform3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionScaleTransform3D = *opaque{
    // TODO: Method 'SetScaleX'
    // TODO: Method 'SetScaleX'
    // TODO: Method 'SetScaleY'
    // TODO: Method 'SetScaleY'
    // TODO: Method 'SetScaleZ'
    // TODO: Method 'SetScaleZ'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterZ'
    // TODO: Method 'SetCenterZ'
};
// --------------------------------------------------------
// Type: IDCompositionRotateTransform3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionRotateTransform3D = *opaque{
    // TODO: Method 'SetAngle'
    // TODO: Method 'SetAngle'
    // TODO: Method 'SetAxisX'
    // TODO: Method 'SetAxisX'
    // TODO: Method 'SetAxisY'
    // TODO: Method 'SetAxisY'
    // TODO: Method 'SetAxisZ'
    // TODO: Method 'SetAxisZ'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterX'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterY'
    // TODO: Method 'SetCenterZ'
    // TODO: Method 'SetCenterZ'
};
// --------------------------------------------------------
// Type: IDCompositionMatrixTransform3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionMatrixTransform3D = *opaque{
    // TODO: Method 'SetMatrix'
    // TODO: Method 'SetMatrixElement'
    // TODO: Method 'SetMatrixElement'
};
// --------------------------------------------------------
// Type: IDCompositionClip
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionClip = *opaque{
};
// --------------------------------------------------------
// Type: IDCompositionRectangleClip
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionRectangleClip = *opaque{
    // TODO: Method 'SetLeft'
    // TODO: Method 'SetLeft'
    // TODO: Method 'SetTop'
    // TODO: Method 'SetTop'
    // TODO: Method 'SetRight'
    // TODO: Method 'SetRight'
    // TODO: Method 'SetBottom'
    // TODO: Method 'SetBottom'
    // TODO: Method 'SetTopLeftRadiusX'
    // TODO: Method 'SetTopLeftRadiusX'
    // TODO: Method 'SetTopLeftRadiusY'
    // TODO: Method 'SetTopLeftRadiusY'
    // TODO: Method 'SetTopRightRadiusX'
    // TODO: Method 'SetTopRightRadiusX'
    // TODO: Method 'SetTopRightRadiusY'
    // TODO: Method 'SetTopRightRadiusY'
    // TODO: Method 'SetBottomLeftRadiusX'
    // TODO: Method 'SetBottomLeftRadiusX'
    // TODO: Method 'SetBottomLeftRadiusY'
    // TODO: Method 'SetBottomLeftRadiusY'
    // TODO: Method 'SetBottomRightRadiusX'
    // TODO: Method 'SetBottomRightRadiusX'
    // TODO: Method 'SetBottomRightRadiusY'
    // TODO: Method 'SetBottomRightRadiusY'
};
// --------------------------------------------------------
// Type: IDCompositionSurface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionSurface = *opaque{
    // TODO: Method 'BeginDraw'
    // TODO: Method 'EndDraw'
    // TODO: Method 'SuspendDraw'
    // TODO: Method 'ResumeDraw'
    // TODO: Method 'Scroll'
};
// --------------------------------------------------------
// Type: IDCompositionVirtualSurface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionVirtualSurface = *opaque{
    // TODO: Method 'Resize'
    // TODO: Method 'Trim'
};
// --------------------------------------------------------
// Type: IDCompositionDevice2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionDevice2 = *opaque{
    // TODO: Method 'Commit'
    // TODO: Method 'WaitForCommitCompletion'
    // TODO: Method 'GetFrameStatistics'
    // TODO: Method 'CreateVisual'
    // TODO: Method 'CreateSurfaceFactory'
    // TODO: Method 'CreateSurface'
    // TODO: Method 'CreateVirtualSurface'
    // TODO: Method 'CreateTranslateTransform'
    // TODO: Method 'CreateScaleTransform'
    // TODO: Method 'CreateRotateTransform'
    // TODO: Method 'CreateSkewTransform'
    // TODO: Method 'CreateMatrixTransform'
    // TODO: Method 'CreateTransformGroup'
    // TODO: Method 'CreateTranslateTransform3D'
    // TODO: Method 'CreateScaleTransform3D'
    // TODO: Method 'CreateRotateTransform3D'
    // TODO: Method 'CreateMatrixTransform3D'
    // TODO: Method 'CreateTransform3DGroup'
    // TODO: Method 'CreateEffectGroup'
    // TODO: Method 'CreateRectangleClip'
    // TODO: Method 'CreateAnimation'
};
// --------------------------------------------------------
// Type: IDCompositionDesktopDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionDesktopDevice = *opaque{
    // TODO: Method 'CreateTargetForHwnd'
    // TODO: Method 'CreateSurfaceFromHandle'
    // TODO: Method 'CreateSurfaceFromHwnd'
};
// --------------------------------------------------------
// Type: IDCompositionDeviceDebug
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionDeviceDebug = *opaque{
    // TODO: Method 'EnableDebugCounters'
    // TODO: Method 'DisableDebugCounters'
};
// --------------------------------------------------------
// Type: IDCompositionSurfaceFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionSurfaceFactory = *opaque{
    // TODO: Method 'CreateSurface'
    // TODO: Method 'CreateVirtualSurface'
};
// --------------------------------------------------------
// Type: IDCompositionVisual2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionVisual2 = *opaque{
    // TODO: Method 'SetOpacityMode'
    // TODO: Method 'SetBackFaceVisibility'
};
// --------------------------------------------------------
// Type: IDCompositionVisualDebug
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionVisualDebug = *opaque{
    // TODO: Method 'EnableHeatMap'
    // TODO: Method 'DisableHeatMap'
    // TODO: Method 'EnableRedrawRegions'
    // TODO: Method 'DisableRedrawRegions'
};
// --------------------------------------------------------
// Type: IDCompositionVisual3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionVisual3 = *opaque{
    // TODO: Method 'SetDepthMode'
    // TODO: Method 'SetOffsetZ'
    // TODO: Method 'SetOffsetZ'
    // TODO: Method 'SetOpacity'
    // TODO: Method 'SetOpacity'
    // TODO: Method 'SetTransform'
    // TODO: Method 'SetTransform'
    // TODO: Method 'SetVisible'
};
// --------------------------------------------------------
// Type: IDCompositionDevice3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionDevice3 = *opaque{
    // TODO: Method 'CreateGaussianBlurEffect'
    // TODO: Method 'CreateBrightnessEffect'
    // TODO: Method 'CreateColorMatrixEffect'
    // TODO: Method 'CreateShadowEffect'
    // TODO: Method 'CreateHueRotationEffect'
    // TODO: Method 'CreateSaturationEffect'
    // TODO: Method 'CreateTurbulenceEffect'
    // TODO: Method 'CreateLinearTransferEffect'
    // TODO: Method 'CreateTableTransferEffect'
    // TODO: Method 'CreateCompositeEffect'
    // TODO: Method 'CreateBlendEffect'
    // TODO: Method 'CreateArithmeticCompositeEffect'
    // TODO: Method 'CreateAffineTransform2DEffect'
};
// --------------------------------------------------------
// Type: IDCompositionFilterEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionFilterEffect = *opaque{
    // TODO: Method 'SetInput'
};
// --------------------------------------------------------
// Type: IDCompositionGaussianBlurEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionGaussianBlurEffect = *opaque{
    // TODO: Method 'SetStandardDeviation'
    // TODO: Method 'SetStandardDeviation'
    // TODO: Method 'SetBorderMode'
};
// --------------------------------------------------------
// Type: IDCompositionBrightnessEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionBrightnessEffect = *opaque{
    // TODO: Method 'SetWhitePoint'
    // TODO: Method 'SetBlackPoint'
    // TODO: Method 'SetWhitePointX'
    // TODO: Method 'SetWhitePointX'
    // TODO: Method 'SetWhitePointY'
    // TODO: Method 'SetWhitePointY'
    // TODO: Method 'SetBlackPointX'
    // TODO: Method 'SetBlackPointX'
    // TODO: Method 'SetBlackPointY'
    // TODO: Method 'SetBlackPointY'
};
// --------------------------------------------------------
// Type: IDCompositionColorMatrixEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionColorMatrixEffect = *opaque{
    // TODO: Method 'SetMatrix'
    // TODO: Method 'SetMatrixElement'
    // TODO: Method 'SetMatrixElement'
    // TODO: Method 'SetAlphaMode'
    // TODO: Method 'SetClampOutput'
};
// --------------------------------------------------------
// Type: IDCompositionShadowEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionShadowEffect = *opaque{
    // TODO: Method 'SetStandardDeviation'
    // TODO: Method 'SetStandardDeviation'
    // TODO: Method 'SetColor'
    // TODO: Method 'SetRed'
    // TODO: Method 'SetRed'
    // TODO: Method 'SetGreen'
    // TODO: Method 'SetGreen'
    // TODO: Method 'SetBlue'
    // TODO: Method 'SetBlue'
    // TODO: Method 'SetAlpha'
    // TODO: Method 'SetAlpha'
};
// --------------------------------------------------------
// Type: IDCompositionHueRotationEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionHueRotationEffect = *opaque{
    // TODO: Method 'SetAngle'
    // TODO: Method 'SetAngle'
};
// --------------------------------------------------------
// Type: IDCompositionSaturationEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionSaturationEffect = *opaque{
    // TODO: Method 'SetSaturation'
    // TODO: Method 'SetSaturation'
};
// --------------------------------------------------------
// Type: IDCompositionTurbulenceEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTurbulenceEffect = *opaque{
    // TODO: Method 'SetOffset'
    // TODO: Method 'SetBaseFrequency'
    // TODO: Method 'SetSize'
    // TODO: Method 'SetNumOctaves'
    // TODO: Method 'SetSeed'
    // TODO: Method 'SetNoise'
    // TODO: Method 'SetStitchable'
};
// --------------------------------------------------------
// Type: IDCompositionLinearTransferEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionLinearTransferEffect = *opaque{
    // TODO: Method 'SetRedYIntercept'
    // TODO: Method 'SetRedYIntercept'
    // TODO: Method 'SetRedSlope'
    // TODO: Method 'SetRedSlope'
    // TODO: Method 'SetRedDisable'
    // TODO: Method 'SetGreenYIntercept'
    // TODO: Method 'SetGreenYIntercept'
    // TODO: Method 'SetGreenSlope'
    // TODO: Method 'SetGreenSlope'
    // TODO: Method 'SetGreenDisable'
    // TODO: Method 'SetBlueYIntercept'
    // TODO: Method 'SetBlueYIntercept'
    // TODO: Method 'SetBlueSlope'
    // TODO: Method 'SetBlueSlope'
    // TODO: Method 'SetBlueDisable'
    // TODO: Method 'SetAlphaYIntercept'
    // TODO: Method 'SetAlphaYIntercept'
    // TODO: Method 'SetAlphaSlope'
    // TODO: Method 'SetAlphaSlope'
    // TODO: Method 'SetAlphaDisable'
    // TODO: Method 'SetClampOutput'
};
// --------------------------------------------------------
// Type: IDCompositionTableTransferEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionTableTransferEffect = *opaque{
    // TODO: Method 'SetRedTable'
    // TODO: Method 'SetGreenTable'
    // TODO: Method 'SetBlueTable'
    // TODO: Method 'SetAlphaTable'
    // TODO: Method 'SetRedDisable'
    // TODO: Method 'SetGreenDisable'
    // TODO: Method 'SetBlueDisable'
    // TODO: Method 'SetAlphaDisable'
    // TODO: Method 'SetClampOutput'
    // TODO: Method 'SetRedTableValue'
    // TODO: Method 'SetRedTableValue'
    // TODO: Method 'SetGreenTableValue'
    // TODO: Method 'SetGreenTableValue'
    // TODO: Method 'SetBlueTableValue'
    // TODO: Method 'SetBlueTableValue'
    // TODO: Method 'SetAlphaTableValue'
    // TODO: Method 'SetAlphaTableValue'
};
// --------------------------------------------------------
// Type: IDCompositionCompositeEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionCompositeEffect = *opaque{
    // TODO: Method 'SetMode'
};
// --------------------------------------------------------
// Type: IDCompositionBlendEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionBlendEffect = *opaque{
    // TODO: Method 'SetMode'
};
// --------------------------------------------------------
// Type: IDCompositionArithmeticCompositeEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionArithmeticCompositeEffect = *opaque{
    // TODO: Method 'SetCoefficients'
    // TODO: Method 'SetClampOutput'
    // TODO: Method 'SetCoefficient1'
    // TODO: Method 'SetCoefficient1'
    // TODO: Method 'SetCoefficient2'
    // TODO: Method 'SetCoefficient2'
    // TODO: Method 'SetCoefficient3'
    // TODO: Method 'SetCoefficient3'
    // TODO: Method 'SetCoefficient4'
    // TODO: Method 'SetCoefficient4'
};
// --------------------------------------------------------
// Type: IDCompositionAffineTransform2DEffect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDCompositionAffineTransform2DEffect = *opaque{
    // TODO: Method 'SetInterpolationMode'
    // TODO: Method 'SetBorderMode'
    // TODO: Method 'SetTransformMatrix'
    // TODO: Method 'SetTransformMatrixElement'
    // TODO: Method 'SetTransformMatrixElement'
    // TODO: Method 'SetSharpness'
    // TODO: Method 'SetSharpness'
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "dcomp" fn DCompositionCreateDevice(
    dxgiDevice: IDXGIDevice,
    iid: ?*Guid,
    dcompositionDevice: ?*?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "dcomp" fn DCompositionCreateDevice2(
    renderingDevice: IUnknown,
    iid: ?*Guid,
    dcompositionDevice: ?*?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "dcomp" fn DCompositionCreateDevice3(
    renderingDevice: IUnknown,
    iid: ?*Guid,
    dcompositionDevice: ?*?*opaque{},
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "dcomp" fn DCompositionCreateSurfaceHandle(
    desiredAccess: u32,
    securityAttributes: ?*SECURITY_ATTRIBUTES,
    surfaceHandle: ?*HANDLE,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "dcomp" fn DCompositionAttachMouseWheelToHwnd(
    visual: IDCompositionVisual,
    hwnd: HWND,
    enable: BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "dcomp" fn DCompositionAttachMouseDragToHwnd(
    visual: IDCompositionVisual,
    hwnd: HWND,
    enable: BOOL,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const Guid = @import("../zig.zig").Guid;
const LARGE_INTEGER = @import("systemservices.zig").LARGE_INTEGER;
const DXGI_RATIONAL = @import("dxgi.zig").DXGI_RATIONAL;
const IDXGIDevice = @import("dxgi.zig").IDXGIDevice;
const HRESULT = @import("com.zig").HRESULT;
const IUnknown = @import("com.zig").IUnknown;
const SECURITY_ATTRIBUTES = @import("systemservices.zig").SECURITY_ATTRIBUTES;
const HANDLE = @import("systemservices.zig").HANDLE;
const HWND = @import("windowsandmessaging.zig").HWND;
const BOOL = @import("systemservices.zig").BOOL;

test "" {
    const constant_export_count = 0;
    const type_export_count = 50;
    const func_count = 6;
    const unicode_alias_count = 0;
    const type_import_count = 10;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
