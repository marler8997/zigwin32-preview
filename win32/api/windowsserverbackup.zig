//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: IWsbApplicationBackupSupport
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWsbApplicationBackupSupport = *opaque{
    // TODO: Method 'CheckConsistency'
};
// --------------------------------------------------------
// Type: IWsbApplicationRestoreSupport
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWsbApplicationRestoreSupport = *opaque{
    // TODO: Method 'PreRestore'
    // TODO: Method 'PostRestore'
    // TODO: Method 'OrderComponents'
    // TODO: Method 'IsRollForwardSupported'
};
// --------------------------------------------------------
// Type: IWsbApplicationAsync
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWsbApplicationAsync = *opaque{
    // TODO: Method 'QueryStatus'
    // TODO: Method 'Abort'
};
// --------------------------------------------------------
// Type: WSB_OB_STATUS_ENTRY_PAIR_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WSB_OB_STATUS_ENTRY_PAIR_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WSB_OB_STATUS_ENTRY_VALUE_TYPE_PAIR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WSB_OB_STATUS_ENTRY_VALUE_TYPE_PAIR = extern struct {
    m_wszObStatusEntryPairValue: ?*u16,
    m_ObStatusEntryPairType: WSB_OB_STATUS_ENTRY_PAIR_TYPE,
};
// --------------------------------------------------------
// Type: WSB_OB_STATUS_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WSB_OB_STATUS_ENTRY = extern struct {
    m_dwIcon: u32,
    m_dwStatusEntryName: u32,
    m_dwStatusEntryValue: u32,
    m_cValueTypePair: u32,
    m_rgValueTypePair: ?*WSB_OB_STATUS_ENTRY_VALUE_TYPE_PAIR,
};
// --------------------------------------------------------
// Type: WSB_OB_STATUS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WSB_OB_STATUS_INFO = extern struct {
    m_guidSnapinId: Guid,
    m_cStatusEntry: u32,
    m_rgStatusEntry: ?*WSB_OB_STATUS_ENTRY,
};
// --------------------------------------------------------
// Type: WSB_OB_REGISTRATION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WSB_OB_REGISTRATION_INFO = extern struct {
    m_wszResourceDLL: ?*u16,
    m_guidSnapinId: Guid,
    m_dwProviderName: u32,
    m_dwProviderIcon: u32,
    m_bSupportsRemoting: u8,
};

//
// functions
//

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const Guid = @import("../zig.zig").Guid;

test "" {
    const constant_export_count = 0;
    const type_export_count = 8;
    const func_count = 0;
    const unicode_alias_count = 0;
    const type_import_count = 1;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
