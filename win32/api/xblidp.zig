//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: XblIdpAuthManager
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const XblIdpAuthManager = opaque {
};
// --------------------------------------------------------
// Type: XblIdpAuthTokenResult
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const XblIdpAuthTokenResult = opaque {
};
// --------------------------------------------------------
// Type: XBL_IDP_AUTH_TOKEN_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const XBL_IDP_AUTH_TOKEN_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: IXblIdpAuthManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXblIdpAuthManager = *opaque{
    // TODO: Method 'SetGamerAccount'
    // TODO: Method 'GetGamerAccount'
    // TODO: Method 'SetAppViewInitialized'
    // TODO: Method 'GetEnvironment'
    // TODO: Method 'GetSandbox'
    // TODO: Method 'GetTokenAndSignatureWithTokenResult'
};
// --------------------------------------------------------
// Type: IXblIdpAuthTokenResult
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXblIdpAuthTokenResult = *opaque{
    // TODO: Method 'GetStatus'
    // TODO: Method 'GetErrorCode'
    // TODO: Method 'GetToken'
    // TODO: Method 'GetSignature'
    // TODO: Method 'GetSandbox'
    // TODO: Method 'GetEnvironment'
    // TODO: Method 'GetMsaAccountId'
    // TODO: Method 'GetXuid'
    // TODO: Method 'GetGamertag'
    // TODO: Method 'GetAgeGroup'
    // TODO: Method 'GetPrivileges'
    // TODO: Method 'GetMsaTarget'
    // TODO: Method 'GetMsaPolicy'
    // TODO: Method 'GetMsaAppId'
    // TODO: Method 'GetRedirect'
    // TODO: Method 'GetMessageA'
    // TODO: Method 'GetHelpId'
    // TODO: Method 'GetEnforcementBans'
    // TODO: Method 'GetRestrictions'
    // TODO: Method 'GetTitleRestrictions'
};
// --------------------------------------------------------
// Type: IXblIdpAuthTokenResult2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IXblIdpAuthTokenResult2 = *opaque{
    // TODO: Method 'GetModernGamertag'
    // TODO: Method 'GetModernGamertagSuffix'
    // TODO: Method 'GetUniqueModernGamertag'
};

//
// functions
//

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//

test "" {
    const constant_export_count = 0;
    const type_export_count = 6;
    const func_count = 0;
    const unicode_alias_count = 0;
    const type_import_count = 0;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
