//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: _HCLUSTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSTER = opaque {
};
// --------------------------------------------------------
// Type: _HNODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNODE = opaque {
};
// --------------------------------------------------------
// Type: _HRESOURCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESOURCE = opaque {
};
// --------------------------------------------------------
// Type: _HGROUP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUP = opaque {
};
// --------------------------------------------------------
// Type: _HNETWORK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETWORK = opaque {
};
// --------------------------------------------------------
// Type: _HNETINTERFACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETINTERFACE = opaque {
};
// --------------------------------------------------------
// Type: _HCHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCHANGE = opaque {
};
// --------------------------------------------------------
// Type: _HCLUSENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSENUM = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPENUM = opaque {
};
// --------------------------------------------------------
// Type: _HRESENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESENUM = opaque {
};
// --------------------------------------------------------
// Type: _HNETWORKENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETWORKENUM = opaque {
};
// --------------------------------------------------------
// Type: _HNODEENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNODEENUM = opaque {
};
// --------------------------------------------------------
// Type: _HNETINTERFACEENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNETINTERFACEENUM = opaque {
};
// --------------------------------------------------------
// Type: _HRESTYPEENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESTYPEENUM = opaque {
};
// --------------------------------------------------------
// Type: _HREGBATCH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGBATCH = opaque {
};
// --------------------------------------------------------
// Type: _HREGBATCHPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGBATCHPORT = opaque {
};
// --------------------------------------------------------
// Type: _HREGBATCHNOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGBATCHNOTIFICATION = opaque {
};
// --------------------------------------------------------
// Type: _HREGREADBATCH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGREADBATCH = opaque {
};
// --------------------------------------------------------
// Type: _HREGREADBATCHREPLY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HREGREADBATCHREPLY = opaque {
};
// --------------------------------------------------------
// Type: _HNODEENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HNODEENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HCLUSENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HRESENUMEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HRESENUMEX = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPSET = opaque {
};
// --------------------------------------------------------
// Type: _HGROUPSETENUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HGROUPSETENUM = opaque {
};
// --------------------------------------------------------
// Type: CLUSTER_QUORUM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_QUORUM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTERVERSIONINFO_NT4
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTERVERSIONINFO_NT4 = extern struct {
    dwVersionInfoSize: u32,
    MajorVersion: u16,
    MinorVersion: u16,
    BuildNumber: u16,
    szVendorId: ?[*]u16,
    szCSDVersion: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUSTERVERSIONINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTERVERSIONINFO = extern struct {
    dwVersionInfoSize: u32,
    MajorVersion: u16,
    MinorVersion: u16,
    BuildNumber: u16,
    szVendorId: ?[*]u16,
    szCSDVersion: ?[*]u16,
    dwClusterHighestVersion: u32,
    dwClusterLowestVersion: u32,
    dwFlags: u32,
    dwReserved: u32,
};
// --------------------------------------------------------
// Type: CLUS_STARTING_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STARTING_PARAMS = extern struct {
    dwSize: u32,
    bForm: BOOL,
    bFirst: BOOL,
};
// --------------------------------------------------------
// Type: NODE_CLUSTER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NODE_CLUSTER_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_STATE_CHANGE_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_STATE_CHANGE_REASON = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_REG_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_REG_COMMAND = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT = extern struct {
    dwSize: u32,
    dwVersion: u32,
    eReason: CLUSTER_RESOURCE_STATE_CHANGE_REASON,
};
// --------------------------------------------------------
// Type: CLUSTER_BATCH_COMMAND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_BATCH_COMMAND = extern struct {
    Command: CLUSTER_REG_COMMAND,
    dwOptions: u32,
    wzName: ?*u16,
    lpData: ?*u8,
    cbData: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_READ_BATCH_COMMAND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_READ_BATCH_COMMAND = extern struct {
    Command: CLUSTER_REG_COMMAND,
    dwOptions: u32,
    wzSubkeyName: ?*u16,
    wzValueName: ?*u16,
    lpData: ?*u8,
    cbData: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_ENUM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_ENUM_ITEM = extern struct {
    dwVersion: u32,
    dwType: u32,
    cbId: u32,
    lpszId: ?*u16,
    cbName: u32,
    lpszName: ?*u16,
};
// --------------------------------------------------------
// Type: CLUSGROUP_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSGROUP_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CREATE_GROUP_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_CREATE_GROUP_INFO = extern struct {
    dwVersion: u32,
    groupType: CLUSGROUP_TYPE,
};
// --------------------------------------------------------
// Type: CLUSTER_MGMT_POINT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_MGMT_POINT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_MGMT_POINT_RESTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_MGMT_POINT_RESTYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CLOUD_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CLOUD_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_GROUP_START_SETTING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_GROUP_START_SETTING = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_AFFINITY_RULE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_AFFINITY_RULE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_QUORUM_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_QUORUM_VALUE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_PATH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_PATH = extern struct {
    szPath: u16,
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_DIRECTORY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_DIRECTORY = extern struct {
    szPath: u16,
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_NETNAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_NETNAME = extern struct {
    szNetworkName: u16,
};
// --------------------------------------------------------
// Type: CLUSTER_VALIDATE_CSV_FILENAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_VALIDATE_CSV_FILENAME = extern struct {
    szFileName: u16,
};
// --------------------------------------------------------
// Type: CLUSTER_SET_PASSWORD_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SET_PASSWORD_STATUS = extern struct {
    NodeId: u32,
    SetAttempted: u8,
    ReturnStatus: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_IP_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_IP_ENTRY = extern struct {
    lpszIpAddress: ?*u16,
    dwPrefixLength: u32,
};
// --------------------------------------------------------
// Type: CREATE_CLUSTER_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CREATE_CLUSTER_CONFIG = extern struct {
    dwVersion: u32,
    lpszClusterName: ?*u16,
    cNodes: u32,
    ppszNodeNames: ?*?*u16,
    cIpEntries: u32,
    pIpEntries: ?*CLUSTER_IP_ENTRY,
    fEmptyCluster: u8,
    managementPointType: CLUSTER_MGMT_POINT_TYPE,
    managementPointResType: CLUSTER_MGMT_POINT_RESTYPE,
};
// --------------------------------------------------------
// Type: CREATE_CLUSTER_NAME_ACCOUNT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CREATE_CLUSTER_NAME_ACCOUNT = extern struct {
    dwVersion: u32,
    lpszClusterName: ?*u16,
    dwFlags: u32,
    pszUserName: ?*u16,
    pszPassword: ?*u16,
    pszDomain: ?*u16,
    managementPointType: CLUSTER_MGMT_POINT_TYPE,
    managementPointResType: CLUSTER_MGMT_POINT_RESTYPE,
    bUpgradeVCOs: u8,
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_NODE_CLUSTER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_NODE_CLUSTER_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SetClusterName
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SetClusterName = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_INFORMATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_INFORMATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_BACKUP_CLUSTER_DATABASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_BACKUP_CLUSTER_DATABASE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESTORE_CLUSTER_DATABASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESTORE_CLUSTER_DATABASE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_UPGRADE_PHASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_UPGRADE_PHASE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSTER_UPGRADE_PROGRESS_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_UPGRADE_PROGRESS_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_UPGRADE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_UPGRADE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NOTIFICATIONS_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NOTIFICATIONS_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_CLUSTER_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_CLUSTER_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_GROUP_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_GROUP_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_GROUPSET_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_GROUPSET_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_RESOURCE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_RESOURCE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_RESOURCE_TYPE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_RESOURCE_TYPE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NETINTERFACE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NETINTERFACE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NETWORK_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NETWORK_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NODE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NODE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_REGISTRY_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_REGISTRY_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_QUORUM_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_QUORUM_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_SHARED_VOLUME_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_SHARED_VOLUME_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_SPACEPORT_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_SPACEPORT_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2 = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_OBJECT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_OBJECT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTERSET_OBJECT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTERSET_OBJECT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NOTIFY_FILTER_AND_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NOTIFY_FILTER_AND_TYPE = extern struct {
    dwObjectType: u32,
    FilterFlags: i64,
};
// --------------------------------------------------------
// Type: CLUSTER_MEMBERSHIP_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_MEMBERSHIP_INFO = extern struct {
    HasQuorum: BOOL,
    UpnodesSize: u32,
    Upnodes: ?[*]u8,
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NOTIFY_V2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NOTIFY_V2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REGISTER_CLUSTER_NOTIFY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REGISTER_CLUSTER_NOTIFY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NOTIFY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NOTIFY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_AVAILABILITY_SET_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_AVAILABILITY_SET_CONFIG = extern struct {
    dwVersion: u32,
    dwUpdateDomains: u32,
    dwFaultDomains: u32,
    bReserveSpareNode: BOOL,
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_STORAGENODE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_STORAGENODE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_DRAIN_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_DRAIN_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_NODE_BY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_NODE_BY_ID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NODE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NODE_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NODE_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NODE_ID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_PAUSE_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_PAUSE_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESUME_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESUME_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_EVICT_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_EVICT_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_EVICT_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_EVICT_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_PRIORITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_PRIORITY = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_AUTOFAILBACK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_GROUP_AUTOFAILBACK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_GROUP_ENUM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_GROUP_ENUM_ITEM = extern struct {
    dwVersion: u32,
    cbId: u32,
    lpszId: ?*u16,
    cbName: u32,
    lpszName: ?*u16,
    state: CLUSTER_GROUP_STATE,
    cbOwnerNode: u32,
    lpszOwnerNode: ?*u16,
    dwFlags: u32,
    cbProperties: u32,
    pProperties: ?*opaque{},
    cbRoProperties: u32,
    pRoProperties: ?*opaque{},
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_ENUM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_RESOURCE_ENUM_ITEM = extern struct {
    dwVersion: u32,
    cbId: u32,
    lpszId: ?*u16,
    cbName: u32,
    lpszName: ?*u16,
    cbOwnerGroupName: u32,
    lpszOwnerGroupName: ?*u16,
    cbOwnerGroupId: u32,
    lpszOwnerGroupId: ?*u16,
    cbProperties: u32,
    pProperties: ?*opaque{},
    cbRoProperties: u32,
    pRoProperties: ?*opaque{},
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_GROUP_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_GROUP_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_PAUSE_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_PAUSE_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NODE_RESUME_FAILBACK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NODE_RESUME_FAILBACK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESUME_CLUSTER_NODE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESUME_CLUSTER_NODE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_GROUPEX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_GROUPEX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_RESTART_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_RESTART_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_GROUP_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_GROUP_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_GROUP_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_GROUP_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ONLINE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ONLINE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_MOVE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_MOVE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OFFLINE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OFFLINE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DESTROY_CLUSTER_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DESTROY_CLUSTER_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_RESTART_ACTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_RESTART_ACTION = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_CREATE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_CREATE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_RESOURCE_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_RESOURCE_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_FAIL_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_FAIL_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ONLINE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ONLINE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OFFLINE_CLUSTER_RESOURCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OFFLINE_CLUSTER_RESOURCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_GROUP_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_GROUP_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NODE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NODE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_PROPERTY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_PROPERTY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_PROPERTY_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_PROPERTY_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_PROPERTY_SYNTAX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_PROPERTY_SYNTAX = *opaque{
};
// --------------------------------------------------------
// Type: GROUP_FAILURE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GROUP_FAILURE_INFO = extern struct {
    dwFailoverAttemptsRemaining: u32,
    dwFailoverPeriodRemaining: u32,
};
// --------------------------------------------------------
// Type: GROUP_FAILURE_INFO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GROUP_FAILURE_INFO_BUFFER = extern struct {
    dwVersion: u32,
    Info: GROUP_FAILURE_INFO,
};
// --------------------------------------------------------
// Type: RESOURCE_FAILURE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_FAILURE_INFO = extern struct {
    dwRestartAttemptsRemaining: u32,
    dwRestartPeriodRemaining: u32,
};
// --------------------------------------------------------
// Type: RESOURCE_FAILURE_INFO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_FAILURE_INFO_BUFFER = extern struct {
    dwVersion: u32,
    Info: RESOURCE_FAILURE_INFO,
};
// --------------------------------------------------------
// Type: RESOURCE_TERMINAL_FAILURE_INFO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_TERMINAL_FAILURE_INFO_BUFFER = extern struct {
    isTerminalFailure: BOOL,
    restartPeriodRemaining: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_CONTROL_OBJECT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CONTROL_OBJECT = *opaque{
};
// --------------------------------------------------------
// Type: CLCTL_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLCTL_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_RESOURCE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_TYPE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_RESOURCE_TYPE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_GROUP_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_GROUP_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_NODE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_NODE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_NETWORK_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_NETWORK_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_NETINTERFACE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_NETINTERFACE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_CLUSTER_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_CLUSTER_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_GROUPSET_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_GROUPSET_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSCTL_AFFINITYRULE_CODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSCTL_AFFINITYRULE_CODES = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_CLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_CLASS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_RESSUBCLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_RESSUBCLASS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_RESSUBCLASS_STORAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_RESSUBCLASS_STORAGE = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_RESSUBCLASS_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_RESSUBCLASS_NETWORK = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_CHARACTERISTICS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_CHARACTERISTICS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUS_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: CLUSPROP_SYNTAX
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const CLUSPROP_SYNTAX = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        wFormat: u16,
        wType: u16,
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_VALUE = extern struct {
    Syntax: CLUSPROP_SYNTAX,
    cbLength: u32,
};
// --------------------------------------------------------
// Type: CLUSPROP_BINARY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_BINARY = extern struct {
    __AnonymousBase_clusapi_L5092_C41: CLUSPROP_VALUE,
    rgb: u8,
};
// --------------------------------------------------------
// Type: CLUSPROP_WORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_WORD = extern struct {
    __AnonymousBase_clusapi_L5102_C39: CLUSPROP_VALUE,
    w: u16,
};
// --------------------------------------------------------
// Type: CLUSPROP_DWORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_DWORD = extern struct {
    __AnonymousBase_clusapi_L5112_C40: CLUSPROP_VALUE,
    dw: u32,
};
// --------------------------------------------------------
// Type: CLUSPROP_LONG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_LONG = extern struct {
    __AnonymousBase_clusapi_L5122_C39: CLUSPROP_VALUE,
    l: i32,
};
// --------------------------------------------------------
// Type: CLUSPROP_SZ
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_SZ = extern struct {
    __AnonymousBase_clusapi_L5132_C37: CLUSPROP_VALUE,
    sz: u16,
};
// --------------------------------------------------------
// Type: CLUSPROP_ULARGE_INTEGER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_ULARGE_INTEGER = extern struct {
    __AnonymousBase_clusapi_L5149_C14: CLUSPROP_VALUE,
    li: ULARGE_INTEGER,
};
// --------------------------------------------------------
// Type: CLUSPROP_LARGE_INTEGER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_LARGE_INTEGER = extern struct {
    __AnonymousBase_clusapi_L5162_C14: CLUSPROP_VALUE,
    li: LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: CLUSPROP_SECURITY_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_SECURITY_DESCRIPTOR = extern struct {
    __AnonymousBase_clusapi_L5174_C54: CLUSPROP_VALUE,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_FILETIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_FILETIME = extern struct {
    __AnonymousBase_clusapi_L5188_C14: CLUSPROP_VALUE,
    ft: FILETIME,
};
// --------------------------------------------------------
// Type: CLUS_RESOURCE_CLASS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_RESOURCE_CLASS_INFO = extern struct {
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            Anonymous: _Anonymous_e__Union,
            SubClass: u32,
            // --------------------------------------------------------
            // Type: _Anonymous_e__Union
            // TypeLayoutAttr: explicit
            // not generating the actual code for this type because it has an explicit layout
            pub const _Anonymous_e__Union = *opaque{
            };
        };
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_RESOURCE_CLASS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_RESOURCE_CLASS = extern struct {
    __AnonymousBase_clusapi_L5213_C14: CLUSPROP_VALUE,
    rc: CLUSTER_RESOURCE_CLASS,
};
// --------------------------------------------------------
// Type: CLUSPROP_RESOURCE_CLASS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_RESOURCE_CLASS_INFO = extern struct {
    __AnonymousBase_clusapi_L5224_C14: CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5225_C14: CLUS_RESOURCE_CLASS_INFO,
};
// --------------------------------------------------------
// Type: CLUSPROP_REQUIRED_DEPENDENCY
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const CLUSPROP_REQUIRED_DEPENDENCY = *opaque{
};
// --------------------------------------------------------
// Type: CLUSPROP_PIFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSPROP_PIFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_FORCE_QUORUM_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_FORCE_QUORUM_INFO = extern struct {
    dwSize: u32,
    dwNodeBitMask: u32,
    dwMaxNumberofNodes: u32,
    multiszNodeList: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_PARTITION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PARTITION_INFO = extern struct {
    dwFlags: u32,
    szDeviceName: ?[*]u16,
    szVolumeLabel: ?[*]u16,
    dwSerialNumber: u32,
    rgdwMaximumComponentLength: u32,
    dwFileSystemFlags: u32,
    szFileSystem: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_PARTITION_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PARTITION_INFO_EX = extern struct {
    dwFlags: u32,
    szDeviceName: ?[*]u16,
    szVolumeLabel: ?[*]u16,
    dwSerialNumber: u32,
    rgdwMaximumComponentLength: u32,
    dwFileSystemFlags: u32,
    szFileSystem: ?[*]u16,
    TotalSizeInBytes: ULARGE_INTEGER,
    FreeSizeInBytes: ULARGE_INTEGER,
    DeviceNumber: u32,
    PartitionNumber: u32,
    VolumeGuid: Guid,
};
// --------------------------------------------------------
// Type: CLUS_PARTITION_INFO_EX2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PARTITION_INFO_EX2 = extern struct {
    GptPartitionId: Guid,
    szPartitionName: ?[*]u16,
    EncryptionFlags: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_CSV_VOLUME_FAULT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_CSV_VOLUME_FAULT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_BACKUP_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_BACKUP_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_CSV_VOLUME_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CSV_VOLUME_INFO = extern struct {
    VolumeOffset: ULARGE_INTEGER,
    PartitionNumber: u32,
    FaultState: CLUSTER_CSV_VOLUME_FAULT_STATE,
    BackupState: CLUSTER_SHARED_VOLUME_BACKUP_STATE,
    szVolumeFriendlyName: ?[*]u16,
    szVolumeName: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_CSV_VOLUME_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CSV_VOLUME_NAME = extern struct {
    VolumeOffset: LARGE_INTEGER,
    szVolumeName: ?[*]u16,
    szRootPath: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_STATE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_STATE_INFO = extern struct {
    szVolumeName: ?[*]u16,
    szNodeName: ?[*]u16,
    VolumeState: CLUSTER_SHARED_VOLUME_STATE,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_STATE_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_STATE_INFO_EX = extern struct {
    szVolumeName: ?[*]u16,
    szNodeName: ?[*]u16,
    VolumeState: CLUSTER_SHARED_VOLUME_STATE,
    szVolumeFriendlyName: ?[*]u16,
    RedirectedIOReason: u64,
    VolumeRedirectedIOReason: u64,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME = extern struct {
    InputType: CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME = extern struct {
    NewVolumeName: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME = extern struct {
    NewVolumeName: ?[*]u16,
    NewVolumeGuid: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_INPUT = extern struct {
    __AnonymousBase_clusapi_L5427_C14: CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME,
    __AnonymousBase_clusapi_L5428_C14: CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME,
};
// --------------------------------------------------------
// Type: CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT = extern struct {
    __AnonymousBase_clusapi_L5438_C14: CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME,
    __AnonymousBase_clusapi_L5439_C14: CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME,
};
// --------------------------------------------------------
// Type: CLUS_CHKDSK_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CHKDSK_INFO = extern struct {
    PartitionNumber: u32,
    ChkdskState: u32,
    FileIdCount: u32,
    FileIdList: ?[*]u64,
};
// --------------------------------------------------------
// Type: CLUS_DISK_NUMBER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_DISK_NUMBER_INFO = extern struct {
    DiskNumber: u32,
    BytesPerSector: u32,
};
// --------------------------------------------------------
// Type: CLUS_SHARED_VOLUME_BACKUP_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_SHARED_VOLUME_BACKUP_MODE = extern struct {
    BackupState: CLUSTER_SHARED_VOLUME_BACKUP_STATE,
    DelayTimerInSecs: u32,
    VolumeName: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUSPROP_PARTITION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_PARTITION_INFO = extern struct {
    __AnonymousBase_clusapi_L5470_C14: CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5471_C14: CLUS_PARTITION_INFO,
};
// --------------------------------------------------------
// Type: CLUSPROP_PARTITION_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_PARTITION_INFO_EX = extern struct {
    __AnonymousBase_clusapi_L5482_C14: CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5483_C14: CLUS_PARTITION_INFO_EX,
};
// --------------------------------------------------------
// Type: CLUSPROP_PARTITION_INFO_EX2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_PARTITION_INFO_EX2 = extern struct {
    __AnonymousBase_clusapi_L5496_C14: CLUSPROP_PARTITION_INFO_EX,
    __AnonymousBase_clusapi_L5497_C14: CLUS_PARTITION_INFO_EX2,
};
// --------------------------------------------------------
// Type: CLUS_FTSET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_FTSET_INFO = extern struct {
    dwRootSignature: u32,
    dwFtType: u32,
};
// --------------------------------------------------------
// Type: CLUSPROP_FTSET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_FTSET_INFO = extern struct {
    __AnonymousBase_clusapi_L5518_C14: CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5519_C14: CLUS_FTSET_INFO,
};
// --------------------------------------------------------
// Type: CLUS_SCSI_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_SCSI_ADDRESS = extern struct {
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            PortNumber: u8,
            PathId: u8,
            TargetId: u8,
            Lun: u8,
        };
    };
};
// --------------------------------------------------------
// Type: CLUSPROP_SCSI_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_SCSI_ADDRESS = extern struct {
    __AnonymousBase_clusapi_L5546_C14: CLUSPROP_VALUE,
    __AnonymousBase_clusapi_L5547_C14: CLUS_SCSI_ADDRESS,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_VS_TOKEN_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_VS_TOKEN_INFO = extern struct {
    ProcessID: u32,
    DesiredAccess: u32,
    InheritHandle: BOOL,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_PWD_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_PWD_INFO = extern struct {
    Flags: u32,
    Password: ?[*]u16,
    CreatingDC: ?[*]u16,
    ObjectGuid: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_PWD_INFOEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_PWD_INFOEX = extern struct {
    Flags: u32,
    Password: ?[*]u16,
    CreatingDC: ?[*]u16,
    ObjectGuid: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_DNN_LEADER_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_DNN_LEADER_STATUS = extern struct {
    IsOnline: BOOL,
    IsFileServerPresent: BOOL,
};
// --------------------------------------------------------
// Type: CLUS_DNN_SODAFS_CLONE_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_DNN_SODAFS_CLONE_STATUS = extern struct {
    NodeId: u32,
    Status: CLUSTER_RESOURCE_STATE,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_IP_INFO_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_IP_INFO_ENTRY = extern struct {
    NodeId: u32,
    AddressSize: u32,
    Address: ?[*]u8,
};
// --------------------------------------------------------
// Type: CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL = extern struct {
    szName: ?[*]u16,
    NumEntries: u32,
    IpInfo: ?[*]CLUS_NETNAME_IP_INFO_ENTRY,
};
// --------------------------------------------------------
// Type: CLUS_MAINTENANCE_MODE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_MAINTENANCE_MODE_INFO = extern struct {
    InMaintenance: BOOL,
};
// --------------------------------------------------------
// Type: CLUS_CSV_MAINTENANCE_MODE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CSV_MAINTENANCE_MODE_INFO = extern struct {
    InMaintenance: BOOL,
    VolumeName: ?[*]u16,
};
// --------------------------------------------------------
// Type: MAINTENANCE_MODE_TYPE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MAINTENANCE_MODE_TYPE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUS_MAINTENANCE_MODE_INFOEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_MAINTENANCE_MODE_INFOEX = extern struct {
    InMaintenance: BOOL,
    MaintainenceModeType: MAINTENANCE_MODE_TYPE_ENUM,
    InternalState: CLUSTER_RESOURCE_STATE,
    Signature: u32,
};
// --------------------------------------------------------
// Type: CLUS_SET_MAINTENANCE_MODE_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_SET_MAINTENANCE_MODE_INPUT = extern struct {
    InMaintenance: BOOL,
    ExtraParameterSize: u32,
    ExtraParameter: ?[*]u8,
};
// --------------------------------------------------------
// Type: CLUS_STORAGE_SET_DRIVELETTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STORAGE_SET_DRIVELETTER = extern struct {
    PartitionNumber: u32,
    DriveLetterMask: u32,
};
// --------------------------------------------------------
// Type: CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS = extern struct {
    AvailDrivelettersMask: u32,
};
// --------------------------------------------------------
// Type: CLUS_STORAGE_REMAP_DRIVELETTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_STORAGE_REMAP_DRIVELETTER = extern struct {
    CurrentDriveLetterMask: u32,
    TargetDriveLetterMask: u32,
};
// --------------------------------------------------------
// Type: CLUS_PROVIDER_STATE_CHANGE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_PROVIDER_STATE_CHANGE_INFO = extern struct {
    dwSize: u32,
    resourceState: CLUSTER_RESOURCE_STATE,
    szProviderId: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT = extern struct {
    FileServerName: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT = extern struct {
    FileServerName: ?[*]u16,
};
// --------------------------------------------------------
// Type: CLUSPROP_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSPROP_LIST = extern struct {
    nPropertyCount: u32,
    PropertyName: CLUSPROP_SZ,
};
// --------------------------------------------------------
// Type: CLUSPROP_IPADDR_ENABLENETBIOS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSPROP_IPADDR_ENABLENETBIOS = *opaque{
};
// --------------------------------------------------------
// Type: FILESHARE_CHANGE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FILESHARE_CHANGE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: FILESHARE_CHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FILESHARE_CHANGE = extern struct {
    Change: FILESHARE_CHANGE_ENUM,
    ShareName: ?[*]u16,
};
// --------------------------------------------------------
// Type: FILESHARE_CHANGE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FILESHARE_CHANGE_LIST = extern struct {
    NumEntries: u32,
    ChangeEntry: ?[*]FILESHARE_CHANGE,
};
// --------------------------------------------------------
// Type: CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT = extern struct {
    GetTickCount64: u64,
    GetSystemTime: SYSTEMTIME,
    NodeId: u32,
};
// --------------------------------------------------------
// Type: CLUSPROP_BUFFER_HELPER
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const CLUSPROP_BUFFER_HELPER = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_TYPE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_TYPE_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NETWORK_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETWORK_ENUM = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NETWORK_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETWORK_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_NETWORK_ROLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETWORK_ROLE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NETWORK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NETWORK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NETWORK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NETWORK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_NETWORK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_NETWORK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NETWORK_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NETWORK_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_SET_CLUSTER_NETWORK_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_SET_CLUSTER_NETWORK_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NETWORK_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NETWORK_ID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NETWORK_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NETWORK_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_NETINTERFACE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_NETINTERFACE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_GROUP_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_GROUP_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_RESOURCE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_RESOURCE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NODE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NODE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NETWORK_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NETWORK_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_CREATE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_CREATE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_OPEN_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_OPEN_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_DELETE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_DELETE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_CLOSE_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_CLOSE_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_ENUM_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_ENUM_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_SET_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_SET_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_DELETE_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_DELETE_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_QUERY_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_QUERY_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_ENUM_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_ENUM_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_SYNC_DATABASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_SYNC_DATABASE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUSTER_REG_CREATE_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUSTER_REG_CREATE_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_BATCH_ADD_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_BATCH_ADD_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_BATCH_READ_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_BATCH_READ_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_GET_BATCH_NOTIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_GET_BATCH_NOTIFICATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CREATE_READ_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CREATE_READ_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_READ_BATCH_ADD_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_READ_BATCH_ADD_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_READ_BATCH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_READ_BATCH = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_READ_BATCH_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_READ_BATCH_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_REG_CLOSE_READ_BATCH_REPLY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_REG_CLOSE_READ_BATCH_REPLY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_SET_ACCOUNT_ACCESS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_SET_ACCOUNT_ACCESS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_SETUP_PHASE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SETUP_PHASE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SETUP_PHASE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SETUP_PHASE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_SETUP_PHASE_SEVERITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_SETUP_PHASE_SEVERITY = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSTER_SETUP_PROGRESS_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_SETUP_PROGRESS_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_CNOLESS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_CNOLESS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_ADD_CLUSTER_NODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_ADD_CLUSTER_NODE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_DESTROY_CLUSTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_DESTROY_CLUSTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PLACEMENT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PLACEMENT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: GRP_PLACEMENT_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const GRP_PLACEMENT_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO = extern struct {
    PartitionOffset: u64,
    Capabilities: u32,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY = extern struct {
    Count: u32,
    PartitionArray: ?[*]SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO,
};
// --------------------------------------------------------
// Type: SR_REPLICATED_DISK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SR_REPLICATED_DISK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: SR_DISK_REPLICATION_ELIGIBLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SR_DISK_REPLICATION_ELIGIBLE = *opaque{
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS = extern struct {
    DataDiskGuid: Guid,
    IncludeOfflineDisks: u8,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS = extern struct {
    SourceDataDiskGuid: Guid,
    TargetReplicationGroupGuid: Guid,
    SkipConnectivityCheck: u8,
    IncludeOfflineDisks: u8,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS = extern struct {
    DataDiskGuid: Guid,
    IncludeAvailableStoargeDisks: u8,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_DISK_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_DISK_INFO = extern struct {
    Reason: SR_DISK_REPLICATION_ELIGIBLE,
    DiskGuid: Guid,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT = extern struct {
    Count: u16,
    DiskInfo: ?[*]SR_RESOURCE_TYPE_DISK_INFO,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_DISK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_DISK = extern struct {
    Type: SR_REPLICATED_DISK_TYPE,
    ClusterDiskResourceGuid: Guid,
    ReplicationGroupId: Guid,
    ReplicationGroupName: ?[*]u16,
};
// --------------------------------------------------------
// Type: SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT = extern struct {
    Count: u16,
    ReplicatedDisks: ?[*]SR_RESOURCE_TYPE_REPLICATED_DISK,
};
// --------------------------------------------------------
// Type: CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT = extern struct {
    dwFlags: u32,
    guidPoolFilter: Guid,
};
// --------------------------------------------------------
// Type: RESOURCE_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_STATUS = extern struct {
    ResourceState: CLUSTER_RESOURCE_STATE,
    CheckPoint: u32,
    WaitHint: u32,
    EventHandle: HANDLE,
};
// --------------------------------------------------------
// Type: NodeUtilizationInfoElement
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NodeUtilizationInfoElement = extern struct {
    Id: u64,
    AvailableMemory: u64,
    AvailableMemoryAfterReclamation: u64,
};
// --------------------------------------------------------
// Type: ResourceUtilizationInfoElement
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ResourceUtilizationInfoElement = extern struct {
    PhysicalNumaId: u64,
    CurrentMemory: u64,
};
// --------------------------------------------------------
// Type: VM_RESDLL_CONTEXT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VM_RESDLL_CONTEXT = *opaque{
};
// --------------------------------------------------------
// Type: RESDLL_CONTEXT_OPERATION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RESDLL_CONTEXT_OPERATION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: GET_OPERATION_CONTEXT_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GET_OPERATION_CONTEXT_PARAMS = extern struct {
    Size: u32,
    Version: u32,
    Type: RESDLL_CONTEXT_OPERATION_TYPE,
    Priority: u32,
};
// --------------------------------------------------------
// Type: RESOURCE_STATUS_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESOURCE_STATUS_EX = extern struct {
    ResourceState: CLUSTER_RESOURCE_STATE,
    CheckPoint: u32,
    EventHandle: HANDLE,
    ApplicationSpecificErrorCode: u32,
    Flags: u32,
    WaitHint: u32,
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_STATUS_ROUTINE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_STATUS_ROUTINE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_STATUS_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_STATUS_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PQUORUM_RESOURCE_LOST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PQUORUM_RESOURCE_LOST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LOG_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LOG_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: PLOG_EVENT_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PLOG_EVENT_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POPEN_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLOSE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLOSE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PONLINE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PONLINE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POFFLINE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POFFLINE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PTERMINATE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PTERMINATE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PIS_ALIVE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PIS_ALIVE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PLOOKS_ALIVE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PLOOKS_ALIVE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PARBITRATE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PARBITRATE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRELEASE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRELEASE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESOURCE_CONTROL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESOURCE_CONTROL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESOURCE_TYPE_CONTROL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESOURCE_TYPE_CONTROL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POPEN_V2_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_V2_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PONLINE_V2_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PONLINE_V2_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POFFLINE_V2_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POFFLINE_V2_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCANCEL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCANCEL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PBEGIN_RESCALL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESCALL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PBEGIN_RESTYPECALL_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESTYPECALL_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: RESOURCE_EXIT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RESOURCE_EXIT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PBEGIN_RESCALL_AS_USER_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESCALL_AS_USER_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PBEGIN_RESTYPECALL_AS_USER_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PBEGIN_RESTYPECALL_AS_USER_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLRES_V1_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V1_FUNCTIONS = extern struct {
    Open: POPEN_ROUTINE,
    Close: PCLOSE_ROUTINE,
    Online: PONLINE_ROUTINE,
    Offline: POFFLINE_ROUTINE,
    Terminate: PTERMINATE_ROUTINE,
    LooksAlive: PLOOKS_ALIVE_ROUTINE,
    IsAlive: PIS_ALIVE_ROUTINE,
    Arbitrate: PARBITRATE_ROUTINE,
    Release: PRELEASE_ROUTINE,
    ResourceControl: PRESOURCE_CONTROL_ROUTINE,
    ResourceTypeControl: PRESOURCE_TYPE_CONTROL_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_V2_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V2_FUNCTIONS = extern struct {
    Open: POPEN_V2_ROUTINE,
    Close: PCLOSE_ROUTINE,
    Online: PONLINE_V2_ROUTINE,
    Offline: POFFLINE_V2_ROUTINE,
    Terminate: PTERMINATE_ROUTINE,
    LooksAlive: PLOOKS_ALIVE_ROUTINE,
    IsAlive: PIS_ALIVE_ROUTINE,
    Arbitrate: PARBITRATE_ROUTINE,
    Release: PRELEASE_ROUTINE,
    ResourceControl: PRESOURCE_CONTROL_ROUTINE,
    ResourceTypeControl: PRESOURCE_TYPE_CONTROL_ROUTINE,
    Cancel: PCANCEL_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_V3_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V3_FUNCTIONS = extern struct {
    Open: POPEN_V2_ROUTINE,
    Close: PCLOSE_ROUTINE,
    Online: PONLINE_V2_ROUTINE,
    Offline: POFFLINE_V2_ROUTINE,
    Terminate: PTERMINATE_ROUTINE,
    LooksAlive: PLOOKS_ALIVE_ROUTINE,
    IsAlive: PIS_ALIVE_ROUTINE,
    Arbitrate: PARBITRATE_ROUTINE,
    Release: PRELEASE_ROUTINE,
    BeginResourceControl: PBEGIN_RESCALL_ROUTINE,
    BeginResourceTypeControl: PBEGIN_RESTYPECALL_ROUTINE,
    Cancel: PCANCEL_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_V4_FUNCTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_V4_FUNCTIONS = extern struct {
    Open: POPEN_V2_ROUTINE,
    Close: PCLOSE_ROUTINE,
    Online: PONLINE_V2_ROUTINE,
    Offline: POFFLINE_V2_ROUTINE,
    Terminate: PTERMINATE_ROUTINE,
    LooksAlive: PLOOKS_ALIVE_ROUTINE,
    IsAlive: PIS_ALIVE_ROUTINE,
    Arbitrate: PARBITRATE_ROUTINE,
    Release: PRELEASE_ROUTINE,
    BeginResourceControl: PBEGIN_RESCALL_ROUTINE,
    BeginResourceTypeControl: PBEGIN_RESTYPECALL_ROUTINE,
    Cancel: PCANCEL_ROUTINE,
    BeginResourceControlAsUser: PBEGIN_RESCALL_AS_USER_ROUTINE,
    BeginResourceTypeControlAsUser: PBEGIN_RESTYPECALL_AS_USER_ROUTINE,
};
// --------------------------------------------------------
// Type: CLRES_FUNCTION_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_FUNCTION_TABLE = extern struct {
    TableSize: u32,
    Version: u32,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: RESUTIL_LARGEINT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_LARGEINT_DATA = extern struct {
    Default: LARGE_INTEGER,
    Minimum: LARGE_INTEGER,
    Maximum: LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: RESUTIL_ULARGEINT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_ULARGEINT_DATA = extern struct {
    Default: ULARGE_INTEGER,
    Minimum: ULARGE_INTEGER,
    Maximum: ULARGE_INTEGER,
};
// --------------------------------------------------------
// Type: RESUTIL_FILETIME_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_FILETIME_DATA = extern struct {
    Default: FILETIME,
    Minimum: FILETIME,
    Maximum: FILETIME,
};
// --------------------------------------------------------
// Type: RESUTIL_PROPERTY_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESUTIL_PROPERTY_ITEM = extern struct {
    Name: ?*u16,
    KeyName: ?*u16,
    Format: u32,
    Anonymous: _Anonymous_e__Union,
    Minimum: u32,
    Maximum: u32,
    Flags: u32,
    Offset: u32,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: PSTARTUP_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSTARTUP_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FAILURE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FAILURE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_RESOURCE_APPLICATION_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_RESOURCE_APPLICATION_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_LOCKED_MODE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_LOCKED_MODE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSIGNAL_FAILURE_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSIGNAL_FAILURE_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEND_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEND_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEND_TYPE_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEND_TYPE_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEXTEND_RES_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEXTEND_RES_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PEXTEND_RES_TYPE_CONTROL_CALL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PEXTEND_RES_TYPE_CONTROL_CALL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRAISE_RES_TYPE_NOTIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRAISE_RES_TYPE_NOTIFICATION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCHANGE_RESOURCE_PROCESS_FOR_DUMPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCHANGE_RESOURCE_PROCESS_FOR_DUMPS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_INTERNAL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_INTERNAL_STATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLRES_CALLBACK_FUNCTION_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLRES_CALLBACK_FUNCTION_TABLE = extern struct {
    LogEvent: PLOG_EVENT_ROUTINE,
    SetResourceStatusEx: PSET_RESOURCE_STATUS_ROUTINE_EX,
    SetResourceLockedMode: PSET_RESOURCE_LOCKED_MODE_ROUTINE,
    SignalFailure: PSIGNAL_FAILURE_ROUTINE,
    SetResourceInMemoryNodeLocalProperties: PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE,
    EndControlCall: PEND_CONTROL_CALL,
    EndTypeControlCall: PEND_TYPE_CONTROL_CALL,
    ExtendControlCall: PEXTEND_RES_CONTROL_CALL,
    ExtendTypeControlCall: PEXTEND_RES_TYPE_CONTROL_CALL,
    RaiseResTypeNotification: PRAISE_RES_TYPE_NOTIFICATION,
    ChangeResourceProcessForDumps: PCHANGE_RESOURCE_PROCESS_FOR_DUMPS,
    ChangeResTypeProcessForDumps: PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS,
    SetInternalState: PSET_INTERNAL_STATE,
    SetResourceLockedModeEx: PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE,
};
// --------------------------------------------------------
// Type: PSTARTUP_EX_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PSTARTUP_EX_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: RESOURCE_MONITOR_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RESOURCE_MONITOR_STATE = *opaque{
};
// --------------------------------------------------------
// Type: MONITOR_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MONITOR_STATE = extern struct {
    LastUpdate: LARGE_INTEGER,
    State: RESOURCE_MONITOR_STATE,
    ActiveResource: HANDLE,
    ResmonStop: BOOL,
};
// --------------------------------------------------------
// Type: POST_UPGRADE_VERSION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const POST_UPGRADE_VERSION_INFO = extern struct {
    newMajorVersion: u32,
    newUpgradeVersion: u32,
    oldMajorVersion: u32,
    oldUpgradeVersion: u32,
    reserved: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_HEALTH_FAULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_HEALTH_FAULT = extern struct {
    Id: ?*u16,
    ErrorType: u32,
    ErrorCode: u32,
    Description: ?*u16,
    Provider: ?*u16,
    Flags: u32,
    Reserved: u32,
};
// --------------------------------------------------------
// Type: CLUSTER_HEALTH_FAULT_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUSTER_HEALTH_FAULT_ARRAY = extern struct {
    numFaults: u32,
    faults: ?*CLUSTER_HEALTH_FAULT,
};
// --------------------------------------------------------
// Type: PRESUTIL_START_RESOURCE_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_START_RESOURCE_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_RESOURCE_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_RESOURCE_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_STOP_RESOURCE_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_STOP_RESOURCE_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_STOP_SERVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_STOP_SERVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_CREATE_DIRECTORY_TREE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_CREATE_DIRECTORY_TREE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_IS_PATH_VALID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_IS_PATH_VALID = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_PRIVATE_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_PRIVATE_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_ALL_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_ALL_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PRIVATE_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PRIVATE_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTY_SIZE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTY_SIZE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_PROPERTY_TABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_PROPERTY_TABLE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_TABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_TABLE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_TABLE_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_TABLE_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_UNKNOWN_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_UNKNOWN_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_DUP_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_DUP_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FREE_PARAMETER_BLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FREE_PARAMETER_BLOCK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ADD_UNKNOWN_PROPERTIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ADD_UNKNOWN_PROPERTIES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_PRIVATE_PROPERTY_LIST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_PRIVATE_PROPERTY_LIST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_DUP_STRING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_DUP_STRING = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_BINARY_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_BINARY_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_EXPAND_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_EXPAND_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_DWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_DWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_QWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_QWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_BINARY_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_BINARY_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_EXPAND_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_EXPAND_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_MULTI_SZ_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_MULTI_SZ_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_DWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_DWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_QWORD_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_QWORD_VALUE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_BINARY_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_BINARY_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_MULTI_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_MULTI_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_DWORD_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_DWORD_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_LONG_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_LONG_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_FILETIME_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_FILETIME_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FREE_ENVIRONMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FREE_ENVIRONMENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_EXPAND_ENVIRONMENT_STRINGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_EXPAND_ENVIRONMENT_STRINGS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_EXPAND_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_EXPAND_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_EXPANDED_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_EXPANDED_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_DWORD_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_DWORD_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_BINARY_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_BINARY_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_MULTI_SZ_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_MULTI_SZ_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_LONG_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_LONG_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_ULARGEINTEGER_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_ULARGEINTEGER_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_FILETIME_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_FILETIME_PROPERTY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUS_WORKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CLUS_WORKER = extern struct {
    hThread: HANDLE,
    Terminate: BOOL,
};
// --------------------------------------------------------
// Type: PWORKER_START_ROUTINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PWORKER_START_ROUTINE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUS_WORKER_CREATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUS_WORKER_CREATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPIClusWorkerCheckTerminate
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPIClusWorkerCheckTerminate = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSAPI_CLUS_WORKER_TERMINATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSAPI_CLUS_WORKER_TERMINATE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPRESOURCE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPRESOURCE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPRESOURCE_CALLBACK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPRESOURCE_CALLBACK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPGROUP_CALLBACK_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPGROUP_CALLBACK_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPNODE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPNODE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_RESOURCES_EQUAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_RESOURCES_EQUAL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_RESOURCE_TYPES_EQUAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_RESOURCE_TYPES_EQUAL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_IS_RESOURCE_CLASS_EQUAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_IS_RESOURCE_CLASS_EQUAL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_RESOURCES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_RESOURCES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_RESOURCES_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_RESOURCES_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_PROPERTY_FORMATS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_PROPERTY_FORMATS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_CORE_CLUSTER_RESOURCES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_CORE_CLUSTER_RESOURCES = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUSTER_ROLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_ROLE = *opaque{
};
// --------------------------------------------------------
// Type: CLUSTER_ROLE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUSTER_ROLE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: PCLUSTER_IS_PATH_ON_SHARED_VOLUME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_IS_PATH_ON_SHARED_VOLUME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_GET_VOLUME_PATH_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_GET_VOLUME_PATH_NAME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_ENUM_RESOURCES_EX2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_ENUM_RESOURCES_EX2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: _HCLUSCRYPTPROVIDER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const _HCLUSCRYPTPROVIDER = opaque {
};
// --------------------------------------------------------
// Type: POPEN_CLUSTER_CRYPT_PROVIDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_CLUSTER_CRYPT_PROVIDER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: POPEN_CLUSTER_CRYPT_PROVIDEREX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const POPEN_CLUSTER_CRYPT_PROVIDEREX = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLOSE_CLUSTER_CRYPT_PROVIDER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLOSE_CLUSTER_CRYPT_PROVIDER = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_ENCRYPT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_ENCRYPT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PCLUSTER_DECRYPT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PCLUSTER_DECRYPT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PFREE_CLUSTER_CRYPT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFREE_CLUSTER_CRYPT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PaxosTagCStruct
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PaxosTagCStruct = extern struct {
    __padding__PaxosTagVtable: u64,
    __padding__NextEpochVtable: u64,
    __padding__NextEpoch_DateTimeVtable: u64,
    NextEpoch_DateTime_ticks: u64,
    NextEpoch_Value: i32,
    __padding__BoundryNextEpoch: u32,
    __padding__EpochVtable: u64,
    __padding__Epoch_DateTimeVtable: u64,
    Epoch_DateTime_ticks: u64,
    Epoch_Value: i32,
    __padding__BoundryEpoch: u32,
    Sequence: i32,
    __padding__BoundrySequence: u32,
};
// --------------------------------------------------------
// Type: WitnessTagUpdateHelper
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WitnessTagUpdateHelper = extern struct {
    Version: i32,
    paxosToSet: PaxosTagCStruct,
    paxosToValidate: PaxosTagCStruct,
};
// --------------------------------------------------------
// Type: WitnessTagHelper
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WitnessTagHelper = extern struct {
    Version: i32,
    paxosToValidate: PaxosTagCStruct,
};
// --------------------------------------------------------
// Type: PREGISTER_APPINSTANCE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PREGISTER_APPINSTANCE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PREGISTER_APPINSTANCE_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PREGISTER_APPINSTANCE_VERSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PQUERY_APPINSTANCE_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PQUERY_APPINSTANCE_VERSION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PRESET_ALL_APPINSTANCE_VERSIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PRESET_ALL_APPINSTANCE_VERSIONS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: SET_APP_INSTANCE_CSV_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SET_APP_INSTANCE_CSV_FLAGS = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CLUADMEX_OBJECT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CLUADMEX_OBJECT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IGetClusterUIInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterUIInfo = *opaque{
    // TODO: Method 'GetClusterName'
    // TODO: Method 'GetLocale'
    // TODO: Method 'GetFont'
    // TODO: Method 'GetIcon'
};
// --------------------------------------------------------
// Type: IGetClusterDataInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterDataInfo = *opaque{
    // TODO: Method 'GetClusterName'
    // TODO: Method 'GetClusterHandle'
    // TODO: Method 'GetObjectCount'
};
// --------------------------------------------------------
// Type: IGetClusterObjectInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterObjectInfo = *opaque{
    // TODO: Method 'GetObjectName'
    // TODO: Method 'GetObjectType'
};
// --------------------------------------------------------
// Type: IGetClusterNodeInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterNodeInfo = *opaque{
    // TODO: Method 'GetNodeHandle'
};
// --------------------------------------------------------
// Type: IGetClusterGroupInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterGroupInfo = *opaque{
    // TODO: Method 'GetGroupHandle'
};
// --------------------------------------------------------
// Type: IGetClusterResourceInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterResourceInfo = *opaque{
    // TODO: Method 'GetResourceHandle'
    // TODO: Method 'GetResourceTypeName'
    // TODO: Method 'GetResourceNetworkName'
};
// --------------------------------------------------------
// Type: IGetClusterNetworkInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterNetworkInfo = *opaque{
    // TODO: Method 'GetNetworkHandle'
};
// --------------------------------------------------------
// Type: IGetClusterNetInterfaceInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGetClusterNetInterfaceInfo = *opaque{
    // TODO: Method 'GetNetInterfaceHandle'
};
// --------------------------------------------------------
// Type: IWCPropertySheetCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCPropertySheetCallback = *opaque{
    // TODO: Method 'AddPropertySheetPage'
};
// --------------------------------------------------------
// Type: IWEExtendPropertySheet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendPropertySheet = *opaque{
    // TODO: Method 'CreatePropertySheetPages'
};
// --------------------------------------------------------
// Type: IWCWizardCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCWizardCallback = *opaque{
    // TODO: Method 'AddWizardPage'
    // TODO: Method 'EnableNext'
};
// --------------------------------------------------------
// Type: IWEExtendWizard
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendWizard = *opaque{
    // TODO: Method 'CreateWizardPages'
};
// --------------------------------------------------------
// Type: IWCContextMenuCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCContextMenuCallback = *opaque{
    // TODO: Method 'AddExtensionMenuItem'
};
// --------------------------------------------------------
// Type: IWEExtendContextMenu
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendContextMenu = *opaque{
    // TODO: Method 'AddContextMenuItems'
};
// --------------------------------------------------------
// Type: IWEInvokeCommand
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEInvokeCommand = *opaque{
    // TODO: Method 'InvokeCommand'
};
// --------------------------------------------------------
// Type: IWCWizard97Callback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWCWizard97Callback = *opaque{
    // TODO: Method 'AddWizard97Page'
    // TODO: Method 'EnableNext'
};
// --------------------------------------------------------
// Type: IWEExtendWizard97
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWEExtendWizard97 = *opaque{
    // TODO: Method 'CreateWizard97Pages'
};
// --------------------------------------------------------
// Type: ClusApplication
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusApplication = opaque {
};
// --------------------------------------------------------
// Type: Cluster
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Cluster = opaque {
};
// --------------------------------------------------------
// Type: ClusVersion
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusVersion = opaque {
};
// --------------------------------------------------------
// Type: ClusResType
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResType = opaque {
};
// --------------------------------------------------------
// Type: ClusProperty
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusProperty = opaque {
};
// --------------------------------------------------------
// Type: ClusProperties
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusProperties = opaque {
};
// --------------------------------------------------------
// Type: DomainNames
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DomainNames = opaque {
};
// --------------------------------------------------------
// Type: ClusNetwork
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetwork = opaque {
};
// --------------------------------------------------------
// Type: ClusNetInterface
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetInterface = opaque {
};
// --------------------------------------------------------
// Type: ClusNetInterfaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetInterfaces = opaque {
};
// --------------------------------------------------------
// Type: ClusResDependencies
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResDependencies = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroupResources
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroupResources = opaque {
};
// --------------------------------------------------------
// Type: ClusResTypeResources
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResTypeResources = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroupPreferredOwnerNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroupPreferredOwnerNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusResPossibleOwnerNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResPossibleOwnerNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusNetworks
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetworks = opaque {
};
// --------------------------------------------------------
// Type: ClusNetworkNetInterfaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNetworkNetInterfaces = opaque {
};
// --------------------------------------------------------
// Type: ClusNodeNetInterfaces
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNodeNetInterfaces = opaque {
};
// --------------------------------------------------------
// Type: ClusRefObject
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusRefObject = opaque {
};
// --------------------------------------------------------
// Type: ClusterNames
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusterNames = opaque {
};
// --------------------------------------------------------
// Type: ClusNode
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNode = opaque {
};
// --------------------------------------------------------
// Type: ClusNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroup
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroup = opaque {
};
// --------------------------------------------------------
// Type: ClusResGroups
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResGroups = opaque {
};
// --------------------------------------------------------
// Type: ClusResource
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResource = opaque {
};
// --------------------------------------------------------
// Type: ClusResources
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResources = opaque {
};
// --------------------------------------------------------
// Type: ClusResTypes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResTypes = opaque {
};
// --------------------------------------------------------
// Type: ClusResTypePossibleOwnerNodes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResTypePossibleOwnerNodes = opaque {
};
// --------------------------------------------------------
// Type: ClusPropertyValue
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPropertyValue = opaque {
};
// --------------------------------------------------------
// Type: ClusPropertyValues
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPropertyValues = opaque {
};
// --------------------------------------------------------
// Type: ClusPropertyValueData
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPropertyValueData = opaque {
};
// --------------------------------------------------------
// Type: ClusPartition
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPartition = opaque {
};
// --------------------------------------------------------
// Type: ClusPartitionEx
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPartitionEx = opaque {
};
// --------------------------------------------------------
// Type: ClusPartitions
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusPartitions = opaque {
};
// --------------------------------------------------------
// Type: ClusDisk
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusDisk = opaque {
};
// --------------------------------------------------------
// Type: ClusDisks
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusDisks = opaque {
};
// --------------------------------------------------------
// Type: ClusScsiAddress
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusScsiAddress = opaque {
};
// --------------------------------------------------------
// Type: ClusRegistryKeys
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusRegistryKeys = opaque {
};
// --------------------------------------------------------
// Type: ClusCryptoKeys
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusCryptoKeys = opaque {
};
// --------------------------------------------------------
// Type: ClusResDependents
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ClusResDependents = opaque {
};
// --------------------------------------------------------
// Type: ISClusApplication
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusApplication = *opaque{
    // TODO: Method 'get_DomainNames'
    // TODO: Method 'get_ClusterNames'
    // TODO: Method 'OpenCluster'
};
// --------------------------------------------------------
// Type: ISDomainNames
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISDomainNames = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusterNames
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusterNames = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'get_DomainName'
};
// --------------------------------------------------------
// Type: ISClusRefObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusRefObject = *opaque{
    // TODO: Method 'get_Handle'
};
// --------------------------------------------------------
// Type: ISClusVersion
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusVersion = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_MajorVersion'
    // TODO: Method 'get_MinorVersion'
    // TODO: Method 'get_BuildNumber'
    // TODO: Method 'get_VendorId'
    // TODO: Method 'get_CSDVersion'
    // TODO: Method 'get_ClusterHighestVersion'
    // TODO: Method 'get_ClusterLowestVersion'
    // TODO: Method 'get_Flags'
    // TODO: Method 'get_MixedVersion'
};
// --------------------------------------------------------
// Type: ISCluster
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISCluster = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'Open'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_Version'
    // TODO: Method 'put_QuorumResource'
    // TODO: Method 'get_QuorumResource'
    // TODO: Method 'get_QuorumLogSize'
    // TODO: Method 'put_QuorumLogSize'
    // TODO: Method 'get_QuorumPath'
    // TODO: Method 'put_QuorumPath'
    // TODO: Method 'get_Nodes'
    // TODO: Method 'get_ResourceGroups'
    // TODO: Method 'get_Resources'
    // TODO: Method 'get_ResourceTypes'
    // TODO: Method 'get_Networks'
    // TODO: Method 'get_NetInterfaces'
};
// --------------------------------------------------------
// Type: ISClusNode
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNode = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_NodeID'
    // TODO: Method 'get_State'
    // TODO: Method 'Pause'
    // TODO: Method 'Resume'
    // TODO: Method 'Evict'
    // TODO: Method 'get_ResourceGroups'
    // TODO: Method 'get_Cluster'
    // TODO: Method 'get_NetInterfaces'
};
// --------------------------------------------------------
// Type: ISClusNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNetwork
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetwork = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_NetworkID'
    // TODO: Method 'get_State'
    // TODO: Method 'get_NetInterfaces'
    // TODO: Method 'get_Cluster'
};
// --------------------------------------------------------
// Type: ISClusNetworks
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetworks = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNetInterface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetInterface = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_State'
    // TODO: Method 'get_Cluster'
};
// --------------------------------------------------------
// Type: ISClusNetInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetInterfaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNodeNetInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNodeNetInterfaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusNetworkNetInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusNetworkNetInterfaces = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusResGroup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroup = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_State'
    // TODO: Method 'get_OwnerNode'
    // TODO: Method 'get_Resources'
    // TODO: Method 'get_PreferredOwnerNodes'
    // TODO: Method 'Delete'
    // TODO: Method 'Online'
    // TODO: Method 'Move'
    // TODO: Method 'Offline'
    // TODO: Method 'get_Cluster'
};
// --------------------------------------------------------
// Type: ISClusResGroups
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroups = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResource = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Handle'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_State'
    // TODO: Method 'get_CoreFlag'
    // TODO: Method 'BecomeQuorumResource'
    // TODO: Method 'Delete'
    // TODO: Method 'Fail'
    // TODO: Method 'Online'
    // TODO: Method 'Offline'
    // TODO: Method 'ChangeResourceGroup'
    // TODO: Method 'AddResourceNode'
    // TODO: Method 'RemoveResourceNode'
    // TODO: Method 'CanResourceBeDependent'
    // TODO: Method 'get_PossibleOwnerNodes'
    // TODO: Method 'get_Dependencies'
    // TODO: Method 'get_Dependents'
    // TODO: Method 'get_Group'
    // TODO: Method 'get_OwnerNode'
    // TODO: Method 'get_Cluster'
    // TODO: Method 'get_ClassInfo'
    // TODO: Method 'get_Disk'
    // TODO: Method 'get_RegistryKeys'
    // TODO: Method 'get_CryptoKeys'
    // TODO: Method 'get_TypeName'
    // TODO: Method 'get_Type'
    // TODO: Method 'get_MaintenanceMode'
    // TODO: Method 'put_MaintenanceMode'
};
// --------------------------------------------------------
// Type: ISClusResDependencies
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResDependencies = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusResGroupResources
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroupResources = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResTypeResources
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResTypeResources = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResources
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResources = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusResGroupPreferredOwnerNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResGroupPreferredOwnerNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'InsertItem'
    // TODO: Method 'RemoveItem'
    // TODO: Method 'get_Modified'
    // TODO: Method 'SaveChanges'
    // TODO: Method 'AddItem'
};
// --------------------------------------------------------
// Type: ISClusResPossibleOwnerNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResPossibleOwnerNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
    // TODO: Method 'get_Modified'
};
// --------------------------------------------------------
// Type: ISClusResTypePossibleOwnerNodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResTypePossibleOwnerNodes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusResType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResType = *opaque{
    // TODO: Method 'get_CommonProperties'
    // TODO: Method 'get_PrivateProperties'
    // TODO: Method 'get_CommonROProperties'
    // TODO: Method 'get_PrivateROProperties'
    // TODO: Method 'get_Name'
    // TODO: Method 'Delete'
    // TODO: Method 'get_Cluster'
    // TODO: Method 'get_Resources'
    // TODO: Method 'get_PossibleOwnerNodes'
    // TODO: Method 'get_AvailableDisks'
};
// --------------------------------------------------------
// Type: ISClusResTypes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResTypes = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
};
// --------------------------------------------------------
// Type: ISClusProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusProperty = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Length'
    // TODO: Method 'get_ValueCount'
    // TODO: Method 'get_Values'
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Type'
    // TODO: Method 'put_Type'
    // TODO: Method 'get_Format'
    // TODO: Method 'put_Format'
    // TODO: Method 'get_ReadOnly'
    // TODO: Method 'get_Private'
    // TODO: Method 'get_Common'
    // TODO: Method 'get_Modified'
    // TODO: Method 'UseDefaultValue'
};
// --------------------------------------------------------
// Type: ISClusPropertyValue
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPropertyValue = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Type'
    // TODO: Method 'put_Type'
    // TODO: Method 'get_Format'
    // TODO: Method 'put_Format'
    // TODO: Method 'get_Length'
    // TODO: Method 'get_DataCount'
    // TODO: Method 'get_Data'
};
// --------------------------------------------------------
// Type: ISClusPropertyValues
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPropertyValues = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusProperties = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'UseDefaultValue'
    // TODO: Method 'SaveChanges'
    // TODO: Method 'get_ReadOnly'
    // TODO: Method 'get_Private'
    // TODO: Method 'get_Common'
    // TODO: Method 'get_Modified'
};
// --------------------------------------------------------
// Type: ISClusPropertyValueData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPropertyValueData = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusPartition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPartition = *opaque{
    // TODO: Method 'get_Flags'
    // TODO: Method 'get_DeviceName'
    // TODO: Method 'get_VolumeLabel'
    // TODO: Method 'get_SerialNumber'
    // TODO: Method 'get_MaximumComponentLength'
    // TODO: Method 'get_FileSystemFlags'
    // TODO: Method 'get_FileSystem'
};
// --------------------------------------------------------
// Type: ISClusPartitionEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPartitionEx = *opaque{
    // TODO: Method 'get_TotalSize'
    // TODO: Method 'get_FreeSpace'
    // TODO: Method 'get_DeviceNumber'
    // TODO: Method 'get_PartitionNumber'
    // TODO: Method 'get_VolumeGuid'
};
// --------------------------------------------------------
// Type: ISClusPartitions
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusPartitions = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusDisk
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusDisk = *opaque{
    // TODO: Method 'get_Signature'
    // TODO: Method 'get_ScsiAddress'
    // TODO: Method 'get_DiskNumber'
    // TODO: Method 'get_Partitions'
};
// --------------------------------------------------------
// Type: ISClusDisks
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusDisks = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
};
// --------------------------------------------------------
// Type: ISClusScsiAddress
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusScsiAddress = *opaque{
    // TODO: Method 'get_PortNumber'
    // TODO: Method 'get_PathId'
    // TODO: Method 'get_TargetId'
    // TODO: Method 'get_Lun'
};
// --------------------------------------------------------
// Type: ISClusRegistryKeys
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusRegistryKeys = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusCryptoKeys
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusCryptoKeys = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};
// --------------------------------------------------------
// Type: ISClusResDependents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISClusResDependents = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Refresh'
    // TODO: Method 'get_Item'
    // TODO: Method 'CreateItem'
    // TODO: Method 'DeleteItem'
    // TODO: Method 'AddItem'
    // TODO: Method 'RemoveItem'
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetNodeClusterState(
    lpszNodeName: ?*u16,
    pdwClusterState: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenCluster(
    lpszClusterName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterEx(
    lpszClusterName: ?*u16,
    DesiredAccess: u32,
    GrantedAccess: ?*u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CloseCluster(
    hCluster: ?*_HCLUSTER,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterName(
    hCluster: ?*_HCLUSTER,
    lpszNewClusterName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterInformation(
    hCluster: ?*_HCLUSTER,
    lpszClusterName: ?*u16,
    lpcchClusterName: ?*u32,
    lpClusterInfo: ?*CLUSTERVERSIONINFO,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterQuorumResource(
    hCluster: ?*_HCLUSTER,
    lpszResourceName: ?*u16,
    lpcchResourceName: ?*u32,
    lpszDeviceName: ?*u16,
    lpcchDeviceName: ?*u32,
    lpdwMaxQuorumLogSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterQuorumResource(
    hResource: ?*_HRESOURCE,
    lpszDeviceName: ?*u16,
    dwMaxQuoLogSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn BackupClusterDatabase(
    hCluster: ?*_HCLUSTER,
    lpszPathName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RestoreClusterDatabase(
    lpszPathName: ?*u16,
    bForce: BOOL,
    lpszQuorumDriveLetter: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterNetworkPriorityOrder(
    hCluster: ?*_HCLUSTER,
    NetworkCount: u32,
    NetworkList: ?*?*_HNETWORK,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterServiceAccountPassword(
    lpszClusterName: ?*u16,
    lpszNewPassword: ?*u16,
    dwFlags: u32,
    lpReturnStatusBuffer: ?*CLUSTER_SET_PASSWORD_STATUS,
    lpcbReturnStatusBufferSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterControl(
    hCluster: ?*_HCLUSTER,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterUpgradeFunctionalLevel(
    hCluster: ?*_HCLUSTER,
    perform: BOOL,
    pfnProgressCallback: PCLUSTER_UPGRADE_PROGRESS_CALLBACK,
    pvCallbackArg: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterNotifyPortV2(
    hChange: ?*_HCHANGE,
    hCluster: ?*_HCLUSTER,
    Filters: ?*NOTIFY_FILTER_AND_TYPE,
    dwFilterCount: u32,
    dwNotifyKey: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) ?*_HCHANGE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RegisterClusterNotifyV2(
    hChange: ?*_HCHANGE,
    Filter: NOTIFY_FILTER_AND_TYPE,
    hObject: HANDLE,
    dwNotifyKey: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetNotifyEventHandle(
    hChange: ?*_HCHANGE,
    lphTargetEvent: ?*?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNotifyV2(
    hChange: ?*_HCHANGE,
    lpdwNotifyKey: ?*?*opaque{},
    pFilterAndType: ?*NOTIFY_FILTER_AND_TYPE,
    buffer: ?*u8,
    lpbBufferSize: ?*u32,
    lpszObjectId: ?*u16,
    lpcchObjectId: ?*u32,
    lpszParentId: ?*u16,
    lpcchParentId: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
    lpszType: ?*u16,
    lpcchType: ?*u32,
    dwMilliseconds: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterNotifyPort(
    hChange: ?*_HCHANGE,
    hCluster: ?*_HCLUSTER,
    dwFilter: u32,
    dwNotifyKey: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) ?*_HCHANGE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RegisterClusterNotify(
    hChange: ?*_HCHANGE,
    dwFilterType: u32,
    hObject: HANDLE,
    dwNotifyKey: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNotify(
    hChange: ?*_HCHANGE,
    lpdwNotifyKey: ?*?*opaque{},
    lpdwFilterType: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
    dwMilliseconds: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNotifyPort(
    hChange: ?*_HCHANGE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterOpenEnum(
    hCluster: ?*_HCLUSTER,
    dwType: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGetEnumCount(
    hEnum: ?*_HCLUSENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterEnum(
    hEnum: ?*_HCLUSENUM,
    dwIndex: u32,
    lpdwType: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterCloseEnum(
    hEnum: ?*_HCLUSENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterOpenEnumEx(
    hCluster: ?*_HCLUSTER,
    dwType: u32,
    pOptions: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSENUMEX;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGetEnumCountEx(
    hClusterEnum: ?*_HCLUSENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterEnumEx(
    hClusterEnum: ?*_HCLUSENUMEX,
    dwIndex: u32,
    pItem: ?*CLUSTER_ENUM_ITEM,
    cbItem: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterCloseEnumEx(
    hClusterEnum: ?*_HCLUSENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterGroupSet(
    hCluster: ?*_HCLUSTER,
    groupSetName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUPSET;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterGroupSet(
    hCluster: ?*_HCLUSTER,
    lpszGroupSetName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUPSET;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterGroupSet(
    hGroupSet: ?*_HGROUPSET,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterGroupSet(
    hGroupSet: ?*_HGROUPSET,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAddGroupToGroupSet(
    hGroupSet: ?*_HGROUPSET,
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAddGroupToGroupSetWithDomains(
    hGroupSet: ?*_HGROUPSET,
    hGroup: ?*_HGROUP,
    faultDomain: u32,
    updateDomain: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRemoveGroupFromGroupSet(
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetControl(
    hGroupSet: ?*_HGROUPSET,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    cbInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    cbOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterGroupDependency(
    hDependentGroup: ?*_HGROUP,
    hProviderGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetGroupDependencyExpression(
    hGroup: ?*_HGROUP,
    lpszDependencyExpression: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterGroupDependency(
    hGroup: ?*_HGROUP,
    hDependsOn: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterGroupSetDependency(
    hDependentGroupSet: ?*_HGROUPSET,
    hProviderGroupSet: ?*_HGROUPSET,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterGroupSetDependencyExpression(
    hGroupSet: ?*_HGROUPSET,
    lpszDependencyExprssion: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterGroupSetDependency(
    hGroupSet: ?*_HGROUPSET,
    hDependsOn: ?*_HGROUPSET,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterGroupToGroupSetDependency(
    hDependentGroup: ?*_HGROUP,
    hProviderGroupSet: ?*_HGROUPSET,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterGroupToGroupSetDependency(
    hGroup: ?*_HGROUP,
    hDependsOn: ?*_HGROUPSET,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetOpenEnum(
    hCluster: ?*_HCLUSTER,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUPSETENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetGetEnumCount(
    hGroupSetEnum: ?*_HGROUPSETENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetEnum(
    hGroupSetEnum: ?*_HGROUPSETENUM,
    dwIndex: u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupSetCloseEnum(
    hGroupSetEnum: ?*_HGROUPSETENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddCrossClusterGroupSetDependency(
    hDependentGroupSet: ?*_HGROUPSET,
    lpRemoteClusterName: ?*u16,
    lpRemoteGroupSetName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveCrossClusterGroupSetDependency(
    hDependentGroupSet: ?*_HGROUPSET,
    lpRemoteClusterName: ?*u16,
    lpRemoteGroupSetName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterAvailabilitySet(
    hCluster: ?*_HCLUSTER,
    lpAvailabilitySetName: ?*u16,
    pAvailabilitySetConfig: ?*CLUSTER_AVAILABILITY_SET_CONFIG,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUPSET;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeReplacement(
    hCluster: ?*_HCLUSTER,
    lpszNodeNameCurrent: ?*u16,
    lpszNodeNameNew: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterCreateAffinityRule(
    hCluster: ?*_HCLUSTER,
    ruleName: ?*u16,
    ruleType: CLUS_AFFINITY_RULE_TYPE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRemoveAffinityRule(
    hCluster: ?*_HCLUSTER,
    ruleName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAddGroupToAffinityRule(
    hCluster: ?*_HCLUSTER,
    ruleName: ?*u16,
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRemoveGroupFromAffinityRule(
    hCluster: ?*_HCLUSTER,
    ruleName: ?*u16,
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterAffinityRuleControl(
    hCluster: ?*_HCLUSTER,
    affinityRuleName: ?*u16,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    cbInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    cbOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNode(
    hCluster: ?*_HCLUSTER,
    lpszNodeName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HNODE;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNodeEx(
    hCluster: ?*_HCLUSTER,
    lpszNodeName: ?*u16,
    dwDesiredAccess: u32,
    lpdwGrantedAccess: ?*u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HNODE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNodeById(
    hCluster: ?*_HCLUSTER,
    nodeId: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HNODE;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNode(
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNodeState(
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) CLUSTER_NODE_STATE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNodeId(
    hNode: ?*_HNODE,
    lpszNodeId: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromNode(
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn PauseClusterNode(
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ResumeClusterNode(
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn EvictClusterNode(
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceOpenEnum(
    hCluster: ?*_HCLUSTER,
    lpszNodeName: ?*u16,
    lpszNetworkName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HNETINTERFACEENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceEnum(
    hNetInterfaceEnum: ?*_HNETINTERFACEENUM,
    dwIndex: u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceCloseEnum(
    hNetInterfaceEnum: ?*_HNETINTERFACEENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeOpenEnum(
    hNode: ?*_HNODE,
    dwType: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HNODEENUM;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeOpenEnumEx(
    hNode: ?*_HNODE,
    dwType: u32,
    pOptions: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) ?*_HNODEENUMEX;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeGetEnumCountEx(
    hNodeEnum: ?*_HNODEENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeEnumEx(
    hNodeEnum: ?*_HNODEENUMEX,
    dwIndex: u32,
    pItem: ?*CLUSTER_ENUM_ITEM,
    cbItem: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeCloseEnumEx(
    hNodeEnum: ?*_HNODEENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeGetEnumCount(
    hNodeEnum: ?*_HNODEENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeCloseEnum(
    hNodeEnum: ?*_HNODEENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeEnum(
    hNodeEnum: ?*_HNODEENUM,
    dwIndex: u32,
    lpdwType: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn EvictClusterNodeEx(
    hNode: ?*_HNODE,
    dwTimeOut: u32,
    phrCleanupStatus: ?*i32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceTypeKey(
    hCluster: ?*_HCLUSTER,
    lpszTypeName: ?*u16,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterGroup(
    hCluster: ?*_HCLUSTER,
    lpszGroupName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUP;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterGroup(
    hCluster: ?*_HCLUSTER,
    lpszGroupName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUP;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterGroupEx(
    hCluster: ?*_HCLUSTER,
    lpszGroupName: ?*u16,
    dwDesiredAccess: u32,
    lpdwGrantedAccess: ?*u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUP;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn PauseClusterNodeEx(
    hNode: ?*_HNODE,
    bDrainNode: BOOL,
    dwPauseFlags: u32,
    hNodeDrainTarget: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ResumeClusterNodeEx(
    hNode: ?*_HNODE,
    eResumeFailbackType: CLUSTER_NODE_RESUME_FAILBACK_TYPE,
    dwResumeFlagsReserved: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterGroupEx(
    hCluster: ?*_HCLUSTER,
    lpszGroupName: ?*u16,
    pGroupInfo: ?*CLUSTER_CREATE_GROUP_INFO,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUP;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupOpenEnumEx(
    hCluster: ?*_HCLUSTER,
    lpszProperties: ?*u16,
    cbProperties: u32,
    lpszRoProperties: ?*u16,
    cbRoProperties: u32,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUPENUMEX;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupGetEnumCountEx(
    hGroupEnumEx: ?*_HGROUPENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupEnumEx(
    hGroupEnumEx: ?*_HGROUPENUMEX,
    dwIndex: u32,
    pItem: ?*CLUSTER_GROUP_ENUM_ITEM,
    cbItem: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupCloseEnumEx(
    hGroupEnumEx: ?*_HGROUPENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceOpenEnumEx(
    hCluster: ?*_HCLUSTER,
    lpszProperties: ?*u16,
    cbProperties: u32,
    lpszRoProperties: ?*u16,
    cbRoProperties: u32,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESENUMEX;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceGetEnumCountEx(
    hResourceEnumEx: ?*_HRESENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceEnumEx(
    hResourceEnumEx: ?*_HRESENUMEX,
    dwIndex: u32,
    pItem: ?*CLUSTER_RESOURCE_ENUM_ITEM,
    cbItem: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceCloseEnumEx(
    hResourceEnumEx: ?*_HRESENUMEX,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterGroupEx(
    hGroup: ?*_HGROUP,
    hDestinationNode: ?*_HNODE,
    dwOnlineFlags: u32,
    lpInBuffer: ?*u8,
    cbInBufferSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterGroupEx(
    hGroup: ?*_HGROUP,
    dwOfflineFlags: u32,
    lpInBuffer: ?*u8,
    cbInBufferSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterResourceEx(
    hResource: ?*_HRESOURCE,
    dwOnlineFlags: u32,
    lpInBuffer: ?*u8,
    cbInBufferSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterResourceEx(
    hResource: ?*_HRESOURCE,
    dwOfflineFlags: u32,
    lpInBuffer: ?*u8,
    cbInBufferSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn MoveClusterGroupEx(
    hGroup: ?*_HGROUP,
    hDestinationNode: ?*_HNODE,
    dwMoveFlags: u32,
    lpInBuffer: ?*u8,
    cbInBufferSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CancelClusterGroupOperation(
    hGroup: ?*_HGROUP,
    dwCancelFlags_RESERVED: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RestartClusterResource(
    hResource: ?*_HRESOURCE,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterGroup(
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromGroup(
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterGroupState(
    hGroup: ?*_HGROUP,
    lpszNodeName: ?*u16,
    lpcchNodeName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) CLUSTER_GROUP_STATE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterGroupName(
    hGroup: ?*_HGROUP,
    lpszGroupName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterGroupNodeList(
    hGroup: ?*_HGROUP,
    NodeCount: u32,
    NodeList: ?*?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterGroup(
    hGroup: ?*_HGROUP,
    hDestinationNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn MoveClusterGroup(
    hGroup: ?*_HGROUP,
    hDestinationNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterGroup(
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterGroup(
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DestroyClusterGroup(
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupOpenEnum(
    hGroup: ?*_HGROUP,
    dwType: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUPENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupGetEnumCount(
    hGroupEnum: ?*_HGROUPENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupEnum(
    hGroupEnum: ?*_HGROUPENUM,
    dwIndex: u32,
    lpdwType: ?*u32,
    lpszResourceName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupCloseEnum(
    hGroupEnum: ?*_HGROUPENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterResource(
    hGroup: ?*_HGROUP,
    lpszResourceName: ?*u16,
    lpszResourceType: ?*u16,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterResource(
    hCluster: ?*_HCLUSTER,
    lpszResourceName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterResourceEx(
    hCluster: ?*_HCLUSTER,
    lpszResourceName: ?*u16,
    dwDesiredAccess: u32,
    lpdwGrantedAccess: ?*u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterResource(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromResource(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterResource(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceState(
    hResource: ?*_HRESOURCE,
    lpszNodeName: ?*u16,
    lpcchNodeName: ?*u32,
    lpszGroupName: ?*u16,
    lpcchGroupName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) CLUSTER_RESOURCE_STATE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterResourceName(
    hResource: ?*_HRESOURCE,
    lpszResourceName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn FailClusterResource(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OnlineClusterResource(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn OfflineClusterResource(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ChangeClusterResourceGroup(
    hResource: ?*_HRESOURCE,
    hGroup: ?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ChangeClusterResourceGroupEx(
    hResource: ?*_HRESOURCE,
    hGroup: ?*_HGROUP,
    Flags: u64,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterResourceNode(
    hResource: ?*_HRESOURCE,
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterResourceNode(
    hResource: ?*_HRESOURCE,
    hNode: ?*_HNODE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterResourceDependency(
    hResource: ?*_HRESOURCE,
    hDependsOn: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterResourceDependency(
    hResource: ?*_HRESOURCE,
    hDependsOn: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterResourceDependencyExpression(
    hResource: ?*_HRESOURCE,
    lpszDependencyExpression: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceDependencyExpression(
    hResource: ?*_HRESOURCE,
    lpszDependencyExpression: ?*u16,
    lpcchDependencyExpression: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddResourceToClusterSharedVolumes(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveResourceFromClusterSharedVolumes(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn IsFileOnClusterSharedVolume(
    lpszPathName: ?*u16,
    pbFileIsOnSharedVolume: ?*i32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterSharedVolumeSetSnapshotState(
    guidSnapshotSet: Guid,
    lpszVolumeName: ?*u16,
    state: CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CanResourceBeDependent(
    hResource: ?*_HRESOURCE,
    hResourceDependent: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceControl(
    hResource: ?*_HRESOURCE,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    cbInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    cbOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceControlAsUser(
    hResource: ?*_HRESOURCE,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    cbInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    cbOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeControl(
    hCluster: ?*_HCLUSTER,
    lpszResourceTypeName: ?*u16,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeControlAsUser(
    hCluster: ?*_HCLUSTER,
    lpszResourceTypeName: ?*u16,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterGroupControl(
    hGroup: ?*_HGROUP,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNodeControl(
    hNode: ?*_HNODE,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceNetworkName(
    hResource: ?*_HRESOURCE,
    lpBuffer: ?*u16,
    nSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceOpenEnum(
    hResource: ?*_HRESOURCE,
    dwType: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceGetEnumCount(
    hResEnum: ?*_HRESENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceEnum(
    hResEnum: ?*_HRESENUM,
    dwIndex: u32,
    lpdwType: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceCloseEnum(
    hResEnum: ?*_HRESENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterResourceType(
    hCluster: ?*_HCLUSTER,
    lpszResourceTypeName: ?*u16,
    lpszDisplayName: ?*u16,
    lpszResourceTypeDll: ?*u16,
    dwLooksAlivePollInterval: u32,
    dwIsAlivePollInterval: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DeleteClusterResourceType(
    hCluster: ?*_HCLUSTER,
    lpszResourceTypeName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeOpenEnum(
    hCluster: ?*_HCLUSTER,
    lpszResourceTypeName: ?*u16,
    dwType: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESTYPEENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeGetEnumCount(
    hResTypeEnum: ?*_HRESTYPEENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeEnum(
    hResTypeEnum: ?*_HRESTYPEENUM,
    dwIndex: u32,
    lpdwType: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterResourceTypeCloseEnum(
    hResTypeEnum: ?*_HRESTYPEENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetwork(
    hCluster: ?*_HCLUSTER,
    lpszNetworkName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HNETWORK;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetworkEx(
    hCluster: ?*_HCLUSTER,
    lpszNetworkName: ?*u16,
    dwDesiredAccess: u32,
    lpdwGrantedAccess: ?*u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HNETWORK;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNetwork(
    hNetwork: ?*_HNETWORK,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromNetwork(
    hNetwork: ?*_HNETWORK,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkOpenEnum(
    hNetwork: ?*_HNETWORK,
    dwType: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HNETWORKENUM;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkGetEnumCount(
    hNetworkEnum: ?*_HNETWORKENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkEnum(
    hNetworkEnum: ?*_HNETWORKENUM,
    dwIndex: u32,
    lpdwType: ?*u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkCloseEnum(
    hNetworkEnum: ?*_HNETWORKENUM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetworkState(
    hNetwork: ?*_HNETWORK,
) callconv(@import("std").os.windows.WINAPI) CLUSTER_NETWORK_STATE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn SetClusterNetworkName(
    hNetwork: ?*_HNETWORK,
    lpszName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetworkId(
    hNetwork: ?*_HNETWORK,
    lpszNetworkId: ?*u16,
    lpcchName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetworkControl(
    hNetwork: ?*_HNETWORK,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetInterface(
    hCluster: ?*_HCLUSTER,
    lpszInterfaceName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HNETINTERFACE;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn OpenClusterNetInterfaceEx(
    hCluster: ?*_HCLUSTER,
    lpszInterfaceName: ?*u16,
    dwDesiredAccess: u32,
    lpdwGrantedAccess: ?*u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HNETINTERFACE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetInterface(
    hCluster: ?*_HCLUSTER,
    lpszNodeName: ?*u16,
    lpszNetworkName: ?*u16,
    lpszInterfaceName: ?*u16,
    lpcchInterfaceName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CloseClusterNetInterface(
    hNetInterface: ?*_HNETINTERFACE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterFromNetInterface(
    hNetInterface: ?*_HNETINTERFACE,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetInterfaceState(
    hNetInterface: ?*_HNETINTERFACE,
) callconv(@import("std").os.windows.WINAPI) CLUSTER_NETINTERFACE_STATE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterNetInterfaceControl(
    hNetInterface: ?*_HNETINTERFACE,
    hHostNode: ?*_HNODE,
    dwControlCode: u32,
    lpInBuffer: ?*opaque{},
    nInBufferSize: u32,
    lpOutBuffer: ?*opaque{},
    nOutBufferSize: u32,
    lpBytesReturned: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterKey(
    hCluster: ?*_HCLUSTER,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterGroupKey(
    hGroup: ?*_HGROUP,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterResourceKey(
    hResource: ?*_HRESOURCE,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNodeKey(
    hNode: ?*_HNODE,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetworkKey(
    hNetwork: ?*_HNETWORK,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn GetClusterNetInterfaceKey(
    hNetInterface: ?*_HNETINTERFACE,
    samDesired: u32,
) callconv(@import("std").os.windows.WINAPI) HKEY;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateKey(
    hKey: HKEY,
    lpszSubKey: ?*u16,
    dwOptions: u32,
    samDesired: u32,
    lpSecurityAttributes: ?*SECURITY_ATTRIBUTES,
    phkResult: ?*HKEY,
    lpdwDisposition: ?*u32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegOpenKey(
    hKey: HKEY,
    lpszSubKey: ?*u16,
    samDesired: u32,
    phkResult: ?*HKEY,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegDeleteKey(
    hKey: HKEY,
    lpszSubKey: ?*u16,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseKey(
    hKey: HKEY,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegEnumKey(
    hKey: HKEY,
    dwIndex: u32,
    lpszName: ?*u16,
    lpcchName: ?*u32,
    lpftLastWriteTime: ?*FILETIME,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegSetValue(
    hKey: HKEY,
    lpszValueName: ?*u16,
    dwType: u32,
    lpData: ?*u8,
    cbData: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegDeleteValue(
    hKey: HKEY,
    lpszValueName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegQueryValue(
    hKey: HKEY,
    lpszValueName: ?*u16,
    lpdwValueType: ?*u32,
    lpData: ?*u8,
    lpcbData: ?*u32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegEnumValue(
    hKey: HKEY,
    dwIndex: u32,
    lpszValueName: ?*u16,
    lpcchValueName: ?*u32,
    lpdwType: ?*u32,
    lpData: ?*u8,
    lpcbData: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegQueryInfoKey(
    hKey: HKEY,
    lpcSubKeys: ?*u32,
    lpcchMaxSubKeyLen: ?*u32,
    lpcValues: ?*u32,
    lpcchMaxValueNameLen: ?*u32,
    lpcbMaxValueLen: ?*u32,
    lpcbSecurityDescriptor: ?*u32,
    lpftLastWriteTime: ?*FILETIME,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegGetKeySecurity(
    hKey: HKEY,
    RequestedInformation: u32,
    pSecurityDescriptor: ?*opaque{},
    lpcbSecurityDescriptor: ?*u32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegSetKeySecurity(
    hKey: HKEY,
    SecurityInformation: u32,
    pSecurityDescriptor: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegSyncDatabase(
    hCluster: ?*_HCLUSTER,
    flags: u32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateBatch(
    hKey: HKEY,
    pHREGBATCH: ?*?*_HREGBATCH,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegBatchAddCommand(
    hRegBatch: ?*_HREGBATCH,
    dwCommand: CLUSTER_REG_COMMAND,
    wzName: ?*u16,
    dwOptions: u32,
    lpData: ?*opaque{},
    cbData: u32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseBatch(
    hRegBatch: ?*_HREGBATCH,
    bCommit: BOOL,
    failedCommandNumber: ?*i32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseBatchEx(
    hRegBatch: ?*_HREGBATCH,
    flags: u32,
    failedCommandNumber: ?*i32,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegBatchReadCommand(
    hBatchNotification: ?*_HREGBATCHNOTIFICATION,
    pBatchCommand: ?*CLUSTER_BATCH_COMMAND,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegBatchCloseNotification(
    hBatchNotification: ?*_HREGBATCHNOTIFICATION,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateBatchNotifyPort(
    hKey: HKEY,
    phBatchNotifyPort: ?*?*_HREGBATCHPORT,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseBatchNotifyPort(
    hBatchNotifyPort: ?*_HREGBATCHPORT,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegGetBatchNotification(
    hBatchNotify: ?*_HREGBATCHPORT,
    phBatchNotification: ?*?*_HREGBATCHNOTIFICATION,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCreateReadBatch(
    hKey: HKEY,
    phRegReadBatch: ?*?*_HREGREADBATCH,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegReadBatchAddCommand(
    hRegReadBatch: ?*_HREGREADBATCH,
    wzSubkeyName: ?*u16,
    wzValueName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseReadBatch(
    hRegReadBatch: ?*_HREGREADBATCH,
    phRegReadBatchReply: ?*?*_HREGREADBATCHREPLY,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseReadBatchEx(
    hRegReadBatch: ?*_HREGREADBATCH,
    flags: u32,
    phRegReadBatchReply: ?*?*_HREGREADBATCHREPLY,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegReadBatchReplyNextCommand(
    hRegReadBatchReply: ?*_HREGREADBATCHREPLY,
    pBatchCommand: ?*CLUSTER_READ_BATCH_COMMAND,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterRegCloseReadBatchReply(
    hRegReadBatchReply: ?*_HREGREADBATCHREPLY,
) callconv(@import("std").os.windows.WINAPI) i32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn ClusterSetAccountAccess(
    hCluster: ?*_HCLUSTER,
    szAccountSID: ?*u16,
    dwAccess: u32,
    dwControlType: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn CreateCluster(
    pConfig: ?*CREATE_CLUSTER_CONFIG,
    pfnProgressCallback: PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSTER;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn CreateClusterNameAccount(
    hCluster: ?*_HCLUSTER,
    pConfig: ?*CREATE_CLUSTER_NAME_ACCOUNT,
    pfnProgressCallback: PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterNameAccount(
    hCluster: ?*_HCLUSTER,
    bDeleteComputerObjects: BOOL,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineCNOResTypeFromNodelist(
    cNodes: u32,
    ppszNodeNames: ?*?*u16,
    pCNOResType: ?*CLUSTER_MGMT_POINT_RESTYPE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineCNOResTypeFromCluster(
    hCluster: ?*_HCLUSTER,
    pCNOResType: ?*CLUSTER_MGMT_POINT_RESTYPE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineClusterCloudTypeFromNodelist(
    cNodes: u32,
    ppszNodeNames: ?*?*u16,
    pCloudType: ?*CLUSTER_CLOUD_TYPE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DetermineClusterCloudTypeFromCluster(
    hCluster: ?*_HCLUSTER,
    pCloudType: ?*CLUSTER_CLOUD_TYPE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn GetNodeCloudTypeDW(
    ppszNodeName: ?*u16,
    NodeCloudType: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RegisterClusterResourceTypeNotifyV2(
    hChange: ?*_HCHANGE,
    hCluster: ?*_HCLUSTER,
    Flags: i64,
    resTypeName: ?*u16,
    dwNotifyKey: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterNode(
    hCluster: ?*_HCLUSTER,
    lpszNodeName: ?*u16,
    pfnProgressCallback: PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) ?*_HNODE;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn AddClusterStorageNode(
    hCluster: ?*_HCLUSTER,
    lpszNodeName: ?*u16,
    pfnProgressCallback: PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: ?*opaque{},
    lpszClusterStorageNodeDescription: ?*u16,
    lpszClusterStorageNodeLocation: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn RemoveClusterStorageNode(
    hCluster: ?*_HCLUSTER,
    lpszClusterStorageEnclosureName: ?*u16,
    dwTimeout: u32,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "CLUSAPI" fn DestroyCluster(
    hCluster: ?*_HCLUSTER,
    pfnProgressCallback: PCLUSTER_SETUP_PROGRESS_CALLBACK,
    pvCallbackArg: ?*opaque{},
    fdeleteVirtualComputerObjects: BOOL,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn InitializeClusterHealthFault(
    clusterHealthFault: ?*CLUSTER_HEALTH_FAULT,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn InitializeClusterHealthFaultArray(
    clusterHealthFaultArray: ?*CLUSTER_HEALTH_FAULT_ARRAY,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn FreeClusterHealthFault(
    clusterHealthFault: ?*CLUSTER_HEALTH_FAULT,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn FreeClusterHealthFaultArray(
    clusterHealthFaultArray: ?*CLUSTER_HEALTH_FAULT_ARRAY,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusGetClusterHealthFaults(
    hCluster: ?*_HCLUSTER,
    objects: ?*CLUSTER_HEALTH_FAULT_ARRAY,
    flags: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusRemoveClusterHealthFault(
    hCluster: ?*_HCLUSTER,
    id: ?*u16,
    flags: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusAddClusterHealthFault(
    hCluster: ?*_HCLUSTER,
    failure: ?*CLUSTER_HEALTH_FAULT,
    param2: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilStartResourceService(
    pszServiceName: ?*u16,
    phServiceHandle: ?*?*SC_HANDLE__,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyResourceService(
    pszServiceName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilStopResourceService(
    pszServiceName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyService(
    hServiceHandle: ?*SC_HANDLE__,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilStopService(
    hServiceHandle: ?*SC_HANDLE__,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilCreateDirectoryTree(
    pszPath: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilIsPathValid(
    pszPath: ?*u16,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumProperties(
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pszOutProperties: ?*u16,
    cbOutPropertiesSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumPrivateProperties(
    hkeyClusterKey: HKEY,
    pszOutProperties: ?*u16,
    cbOutPropertiesSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetProperties(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pOutPropertyList: ?*opaque{},
    cbOutPropertyListSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetAllProperties(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pOutPropertyList: ?*opaque{},
    cbOutPropertyListSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPrivateProperties(
    hkeyClusterKey: HKEY,
    pOutPropertyList: ?*opaque{},
    cbOutPropertyListSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPropertySize(
    hkeyClusterKey: HKEY,
    pPropertyTableItem: ?*RESUTIL_PROPERTY_ITEM,
    pcbOutPropertyListSize: ?*u32,
    pnPropertyCount: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetProperty(
    hkeyClusterKey: HKEY,
    pPropertyTableItem: ?*RESUTIL_PROPERTY_ITEM,
    pOutPropertyItem: ?*?*opaque{},
    pcbOutPropertyItemSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyPropertyTable(
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    Reserved: ?*opaque{},
    bAllowUnknownProperties: BOOL,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
    pOutParams: ?*u8,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyTable(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    Reserved: ?*opaque{},
    bAllowUnknownProperties: BOOL,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
    pOutParams: ?*u8,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyTableEx(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    Reserved: ?*opaque{},
    bAllowUnknownProperties: BOOL,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
    bForceWrite: BOOL,
    pOutParams: ?*u8,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyParameterBlock(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    Reserved: ?*opaque{},
    pInParams: ?*u8,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
    pOutParams: ?*u8,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPropertyParameterBlockEx(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    Reserved: ?*opaque{},
    pInParams: ?*u8,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
    bForceWrite: BOOL,
    pOutParams: ?*u8,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetUnknownProperties(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPropertiesToParameterBlock(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pOutParams: ?*u8,
    bCheckForRequiredProperties: BOOL,
    pszNameOfPropInError: ?*?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilPropertyListFromParameterBlock(
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pOutPropertyList: ?*opaque{},
    pcbOutPropertyListSize: ?*u32,
    pInParams: ?*u8,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupParameterBlock(
    pOutParams: ?*u8,
    pInParams: ?*u8,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFreeParameterBlock(
    pOutParams: ?*u8,
    pInParams: ?*u8,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
) callconv(@import("std").os.windows.WINAPI) void;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilAddUnknownProperties(
    hkeyClusterKey: HKEY,
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pOutPropertyList: ?*opaque{},
    pcbOutPropertyListSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetPrivatePropertyList(
    hkeyClusterKey: HKEY,
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilVerifyPrivatePropertyList(
    pInPropertyList: ?*opaque{},
    cbInPropertyListSize: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupString(
    pszInString: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*u16;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetBinaryValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    ppbOutValue: ?*?*u8,
    pcbOutValueSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetSzValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*u16;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetDwordValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    pdwOutValue: ?*u32,
    dwDefaultValue: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetQwordValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    pqwOutValue: ?*u64,
    qwDefaultValue: u64,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetBinaryValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    pbNewValue: ?*u8,
    cbNewValueSize: u32,
    ppbOutValue: ?*?*u8,
    pcbOutValueSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetSzValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    pszNewValue: ?*u16,
    ppszOutString: ?*?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetExpandSzValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    pszNewValue: ?*u16,
    ppszOutString: ?*?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetMultiSzValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    pszNewValue: ?*u16,
    cbNewValueSize: u32,
    ppszOutValue: ?*?*u16,
    pcbOutValueSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetDwordValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    dwNewValue: u32,
    pdwOutValue: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetQwordValue(
    hkeyClusterKey: HKEY,
    pszValueName: ?*u16,
    qwNewValue: u64,
    pqwOutValue: ?*u64,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetValueEx(
    hkeyClusterKey: HKEY,
    valueName: ?*u16,
    valueType: u32,
    valueData: ?*u8,
    valueSize: u32,
    flags: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetBinaryProperty(
    ppbOutValue: ?*?*u8,
    pcbOutValueSize: ?*u32,
    pValueStruct: ?*CLUSPROP_BINARY,
    pbOldValue: ?*u8,
    cbOldValueSize: u32,
    ppPropertyList: ?*?*u8,
    pcbPropertyListSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetSzProperty(
    ppszOutValue: ?*?*u16,
    pValueStruct: ?*CLUSPROP_SZ,
    pszOldValue: ?*u16,
    ppPropertyList: ?*?*u8,
    pcbPropertyListSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetMultiSzProperty(
    ppszOutValue: ?*?*u16,
    pcbOutValueSize: ?*u32,
    pValueStruct: ?*CLUSPROP_SZ,
    pszOldValue: ?*u16,
    cbOldValueSize: u32,
    ppPropertyList: ?*?*u8,
    pcbPropertyListSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetDwordProperty(
    pdwOutValue: ?*u32,
    pValueStruct: ?*CLUSPROP_DWORD,
    dwOldValue: u32,
    dwMinimum: u32,
    dwMaximum: u32,
    ppPropertyList: ?*?*u8,
    pcbPropertyListSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetLongProperty(
    plOutValue: ?*i32,
    pValueStruct: ?*CLUSPROP_LONG,
    lOldValue: i32,
    lMinimum: i32,
    lMaximum: i32,
    ppPropertyList: ?*?*u8,
    pcbPropertyListSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetFileTimeProperty(
    pftOutValue: ?*FILETIME,
    pValueStruct: ?*CLUSPROP_FILETIME,
    ftOldValue: FILETIME,
    ftMinimum: FILETIME,
    ftMaximum: FILETIME,
    ppPropertyList: ?*?*u8,
    pcbPropertyListSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetEnvironmentWithNetName(
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) ?*opaque{};

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFreeEnvironment(
    lpEnvironment: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilExpandEnvironmentStrings(
    pszSrc: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*u16;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetResourceServiceEnvironment(
    pszServiceName: ?*u16,
    hResource: ?*_HRESOURCE,
    pfnLogEvent: PLOG_EVENT_ROUTINE,
    hResourceHandle: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilRemoveResourceServiceEnvironment(
    pszServiceName: ?*u16,
    pfnLogEvent: PLOG_EVENT_ROUTINE,
    hResourceHandle: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetResourceServiceStartParameters(
    pszServiceName: ?*u16,
    schSCMHandle: ?*SC_HANDLE__,
    phService: ?*?*SC_HANDLE__,
    pfnLogEvent: PLOG_EVENT_ROUTINE,
    hResourceHandle: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindSzProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pszPropertyValue: ?*?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindExpandSzProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pszPropertyValue: ?*?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindExpandedSzProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pszPropertyValue: ?*?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindDwordProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pdwPropertyValue: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindBinaryProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pbPropertyValue: ?*?*u8,
    pcbPropertyValueSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindMultiSzProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pszPropertyValue: ?*?*u16,
    pcbPropertyValueSize: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindLongProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    plPropertyValue: ?*i32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindULargeIntegerProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    plPropertyValue: ?*u64,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindFileTimeProperty(
    pPropertyList: ?*opaque{},
    cbPropertyListSize: u32,
    pszPropertyName: ?*u16,
    pftPropertyValue: ?*FILETIME,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerCreate(
    lpWorker: ?*CLUS_WORKER,
    lpStartAddress: PWORKER_START_ROUTINE,
    lpParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerCheckTerminate(
    lpWorker: ?*CLUS_WORKER,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerTerminate(
    lpWorker: ?*CLUS_WORKER,
) callconv(@import("std").os.windows.WINAPI) void;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkerTerminateEx(
    ClusWorker: ?*CLUS_WORKER,
    TimeoutInMilliseconds: u32,
    WaitOnly: BOOL,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusWorkersTerminate(
    ClusWorkers: ?*?*CLUS_WORKER,
    ClusWorkersCount: ?*opaque{},
    TimeoutInMilliseconds: u32,
    WaitOnly: BOOL,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilResourcesEqual(
    hSelf: ?*_HRESOURCE,
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilResourceTypesEqual(
    lpszResourceTypeName: ?*u16,
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilIsResourceClassEqual(
    prci: ?*CLUS_RESOURCE_CLASS_INFO,
    hResource: ?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumResources(
    hSelf: ?*_HRESOURCE,
    lpszResTypeName: ?*u16,
    pResCallBack: LPRESOURCE_CALLBACK,
    pParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumResourcesEx(
    hCluster: ?*_HCLUSTER,
    hSelf: ?*_HRESOURCE,
    lpszResTypeName: ?*u16,
    pResCallBack: LPRESOURCE_CALLBACK_EX,
    pParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependency(
    hSelf: HANDLE,
    lpszResourceType: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByName(
    hCluster: ?*_HCLUSTER,
    hSelf: HANDLE,
    lpszResourceType: ?*u16,
    bRecurse: BOOL,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByClass(
    hCluster: ?*_HCLUSTER,
    hSelf: HANDLE,
    prci: ?*CLUS_RESOURCE_CLASS_INFO,
    bRecurse: BOOL,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceNameDependency(
    lpszResourceName: ?*u16,
    lpszResourceType: ?*u16,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependentIPAddressProps(
    hResource: ?*_HRESOURCE,
    pszAddress: ?*u16,
    pcchAddress: ?*u32,
    pszSubnetMask: ?*u16,
    pcchSubnetMask: ?*u32,
    pszNetwork: ?*u16,
    pcchNetwork: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilFindDependentDiskResourceDriveLetter(
    hCluster: ?*_HCLUSTER,
    hResource: ?*_HRESOURCE,
    pszDriveLetter: ?*u16,
    pcchDriveLetter: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilTerminateServiceProcessFromResDll(
    dwServicePid: u32,
    bOffline: BOOL,
    pdwResourceState: ?*u32,
    pfnLogEvent: PLOG_EVENT_ROUTINE,
    hResourceHandle: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetPropertyFormats(
    pPropertyTable: ?*RESUTIL_PROPERTY_ITEM,
    pOutPropertyFormatList: ?*opaque{},
    cbPropertyFormatListSize: u32,
    pcbBytesReturned: ?*u32,
    pcbRequired: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetCoreClusterResources(
    hCluster: ?*_HCLUSTER,
    phClusterNameResource: ?*?*_HRESOURCE,
    phClusterIPAddressResource: ?*?*_HRESOURCE,
    phClusterQuorumResource: ?*?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceName(
    hResource: ?*_HRESOURCE,
    pszResourceName: ?*u16,
    pcchResourceNameInOut: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetClusterRoleState(
    hCluster: ?*_HCLUSTER,
    eClusterRole: CLUSTER_ROLE,
) callconv(@import("std").os.windows.WINAPI) CLUSTER_ROLE_STATE;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterIsPathOnSharedVolume(
    lpszPathName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ClusterGetVolumePathName(
    lpszFileName: ?*u16,
    lpszVolumePathName: ?*u16,
    cchBufferLength: u32,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ClusterGetVolumeNameForVolumeMountPoint(
    lpszVolumeMountPoint: ?*u16,
    lpszVolumeName: ?*u16,
    cchBufferLength: u32,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterPrepareSharedVolumeForBackup(
    lpszFileName: ?*u16,
    lpszVolumePathName: ?*u16,
    lpcchVolumePathName: ?*u32,
    lpszVolumeName: ?*u16,
    lpcchVolumeName: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterClearBackupStateForSharedVolume(
    lpszVolumePathName: ?*u16,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilSetResourceServiceStartParametersEx(
    pszServiceName: ?*u16,
    schSCMHandle: ?*SC_HANDLE__,
    phService: ?*?*SC_HANDLE__,
    dwDesiredAccess: u32,
    pfnLogEvent: PLOG_EVENT_ROUTINE,
    hResourceHandle: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumResourcesEx2(
    hCluster: ?*_HCLUSTER,
    hSelf: ?*_HRESOURCE,
    lpszResTypeName: ?*u16,
    pResCallBack: LPRESOURCE_CALLBACK_EX,
    pParameter: ?*opaque{},
    dwDesiredAccess: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyEx(
    hSelf: HANDLE,
    lpszResourceType: ?*u16,
    dwDesiredAccess: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByNameEx(
    hCluster: ?*_HCLUSTER,
    hSelf: HANDLE,
    lpszResourceType: ?*u16,
    bRecurse: BOOL,
    dwDesiredAccess: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceDependencyByClassEx(
    hCluster: ?*_HCLUSTER,
    hSelf: HANDLE,
    prci: ?*CLUS_RESOURCE_CLASS_INFO,
    bRecurse: BOOL,
    dwDesiredAccess: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=True (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetResourceNameDependencyEx(
    lpszResourceName: ?*u16,
    lpszResourceType: ?*u16,
    dwDesiredAccess: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HRESOURCE;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetCoreClusterResourcesEx(
    hClusterIn: ?*_HCLUSTER,
    phClusterNameResourceOut: ?*?*_HRESOURCE,
    phClusterQuorumResourceOut: ?*?*_HRESOURCE,
    dwDesiredAccess: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn OpenClusterCryptProvider(
    lpszResource: ?*u16,
    lpszProvider: ?*i8,
    dwType: u32,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSCRYPTPROVIDER;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn OpenClusterCryptProviderEx(
    lpszResource: ?*u16,
    lpszKeyname: ?*u16,
    lpszProvider: ?*i8,
    dwType: u32,
    dwFlags: u32,
) callconv(@import("std").os.windows.WINAPI) ?*_HCLUSCRYPTPROVIDER;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn CloseClusterCryptProvider(
    hClusCryptProvider: ?*_HCLUSCRYPTPROVIDER,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterEncrypt(
    hClusCryptProvider: ?*_HCLUSCRYPTPROVIDER,
    pData: ?*u8,
    cbData: u32,
    ppData: ?*?*u8,
    pcbData: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ClusterDecrypt(
    hClusCryptProvider: ?*_HCLUSCRYPTPROVIDER,
    pCryptInput: ?*u8,
    cbCryptInput: u32,
    ppCryptOutput: ?*?*u8,
    pcbCryptOutput: ?*u32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn FreeClusterCrypt(
    pCryptInfo: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilPaxosComparer(
    left: ?*PaxosTagCStruct,
    right: ?*PaxosTagCStruct,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilLeftPaxosIsLessThanRight(
    left: ?*PaxosTagCStruct,
    right: ?*PaxosTagCStruct,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilsDeleteKeyTree(
    key: HKEY,
    keyName: ?*u16,
    treatNoKeyAsError: BOOL,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGroupsEqual(
    hSelf: ?*_HGROUP,
    hGroup: ?*_HGROUP,
    pEqual: ?*i32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumGroups(
    hCluster: ?*_HCLUSTER,
    hSelf: ?*_HGROUP,
    pResCallBack: LPGROUP_CALLBACK_EX,
    pParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilEnumGroupsEx(
    hCluster: ?*_HCLUSTER,
    hSelf: ?*_HGROUP,
    groupType: CLUSGROUP_TYPE,
    pResCallBack: LPGROUP_CALLBACK_EX,
    pParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupGroup(
    group: ?*_HGROUP,
    copy: ?*?*_HGROUP,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetClusterGroupType(
    hGroup: ?*_HGROUP,
    groupType: ?*CLUSGROUP_TYPE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetCoreGroup(
    hCluster: ?*_HCLUSTER,
) callconv(@import("std").os.windows.WINAPI) ?*_HGROUP;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilResourceDepEnum(
    hSelf: ?*_HRESOURCE,
    enumType: u32,
    pResCallBack: LPRESOURCE_CALLBACK_EX,
    pParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilDupResource(
    group: ?*_HRESOURCE,
    copy: ?*?*_HRESOURCE,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilGetClusterId(
    hCluster: ?*_HCLUSTER,
    guid: ?*Guid,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "RESUTILS" fn ResUtilNodeEnum(
    hCluster: ?*_HCLUSTER,
    pNodeCallBack: LPNODE_CALLBACK,
    pParameter: ?*opaque{},
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn RegisterAppInstance(
    ProcessHandle: HANDLE,
    AppInstanceId: ?*Guid,
    ChildrenInheritAppInstance: BOOL,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn RegisterAppInstanceVersion(
    AppInstanceId: ?*Guid,
    InstanceVersionHigh: u64,
    InstanceVersionLow: u64,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn QueryAppInstanceVersion(
    AppInstanceId: ?*Guid,
    InstanceVersionHigh: ?*u64,
    InstanceVersionLow: ?*u64,
    VersionStatus: ?*i32,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn ResetAllAppInstanceVersions(
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "NTLANMAN" fn SetAppInstanceCsvFlags(
    ProcessHandle: HANDLE,
    Mask: u32,
    Flags: u32,
) callconv(@import("std").os.windows.WINAPI) u32;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const Guid = @import("../zig.zig").Guid;
const BOOL = @import("systemservices.zig").BOOL;
const ULARGE_INTEGER = @import("systemservices.zig").ULARGE_INTEGER;
const LARGE_INTEGER = @import("systemservices.zig").LARGE_INTEGER;
const FILETIME = @import("windowsprogramming.zig").FILETIME;
const SYSTEMTIME = @import("windowsprogramming.zig").SYSTEMTIME;
const HANDLE = @import("systemservices.zig").HANDLE;
const HKEY = @import("windowsprogramming.zig").HKEY;
const SECURITY_ATTRIBUTES = @import("systemservices.zig").SECURITY_ATTRIBUTES;
const SC_HANDLE__ = @import("security.zig").SC_HANDLE__;

test "" {
    const constant_export_count = 0;
    const type_export_count = 684;
    const func_count = 349;
    const unicode_alias_count = 0;
    const type_import_count = 10;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
