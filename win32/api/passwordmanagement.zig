//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: CYPHER_BLOCK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CYPHER_BLOCK = extern struct {
    data: ?[*]i8,
};
// --------------------------------------------------------
// Type: LM_OWF_PASSWORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LM_OWF_PASSWORD = extern struct {
    data: ?[*]CYPHER_BLOCK,
};
// --------------------------------------------------------
// Type: SAMPR_ENCRYPTED_USER_PASSWORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SAMPR_ENCRYPTED_USER_PASSWORD = extern struct {
    Buffer: ?[*]u8,
};
// --------------------------------------------------------
// Type: ENCRYPTED_LM_OWF_PASSWORD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ENCRYPTED_LM_OWF_PASSWORD = extern struct {
    data: ?[*]CYPHER_BLOCK,
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "ADVAPI32" fn MSChapSrvChangePassword(
    ServerName: ?*u16,
    UserName: ?*u16,
    LmOldPresent: u8,
    LmOldOwfPassword: ?*LM_OWF_PASSWORD,
    LmNewOwfPassword: ?*LM_OWF_PASSWORD,
    NtOldOwfPassword: ?*LM_OWF_PASSWORD,
    NtNewOwfPassword: ?*LM_OWF_PASSWORD,
) callconv(@import("std").os.windows.WINAPI) u32;

// set_last_errror=False (can and should we use this?)
pub extern "ADVAPI32" fn MSChapSrvChangePassword2(
    ServerName: ?*u16,
    UserName: ?*u16,
    NewPasswordEncryptedWithOldNt: ?*SAMPR_ENCRYPTED_USER_PASSWORD,
    OldNtOwfPasswordEncryptedWithNewNt: ?*ENCRYPTED_LM_OWF_PASSWORD,
    LmPresent: u8,
    NewPasswordEncryptedWithOldLm: ?*SAMPR_ENCRYPTED_USER_PASSWORD,
    OldLmOwfPasswordEncryptedWithNewLmOrNt: ?*ENCRYPTED_LM_OWF_PASSWORD,
) callconv(@import("std").os.windows.WINAPI) u32;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//

test "" {
    const constant_export_count = 0;
    const type_export_count = 4;
    const func_count = 2;
    const unicode_alias_count = 0;
    const type_import_count = 0;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
