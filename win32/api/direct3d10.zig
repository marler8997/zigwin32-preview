//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: D3D10_INPUT_CLASSIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_INPUT_CLASSIFICATION = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_INPUT_ELEMENT_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_INPUT_ELEMENT_DESC = extern struct {
    SemanticName: ?*i8,
    SemanticIndex: u32,
    Format: DXGI_FORMAT,
    InputSlot: u32,
    AlignedByteOffset: u32,
    InputSlotClass: D3D10_INPUT_CLASSIFICATION,
    InstanceDataStepRate: u32,
};
// --------------------------------------------------------
// Type: D3D10_FILL_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_FILL_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_CULL_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_CULL_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_SO_DECLARATION_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SO_DECLARATION_ENTRY = extern struct {
    SemanticName: ?*i8,
    SemanticIndex: u32,
    StartComponent: u8,
    ComponentCount: u8,
    OutputSlot: u8,
};
// --------------------------------------------------------
// Type: D3D10_VIEWPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_VIEWPORT = extern struct {
    TopLeftX: i32,
    TopLeftY: i32,
    Width: u32,
    Height: u32,
    MinDepth: f32,
    MaxDepth: f32,
};
// --------------------------------------------------------
// Type: D3D10_RESOURCE_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_RESOURCE_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_DSV_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_DSV_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_RTV_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_RTV_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_BIND_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_BIND_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_CPU_ACCESS_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_CPU_ACCESS_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_RESOURCE_MISC_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_RESOURCE_MISC_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_MAP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_MAP = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_MAP_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_MAP_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_RAISE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_RAISE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_CLEAR_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_CLEAR_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_BOX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_BOX = extern struct {
    left: u32,
    top: u32,
    front: u32,
    right: u32,
    bottom: u32,
    back: u32,
};
// --------------------------------------------------------
// Type: ID3D10DeviceChild
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10DeviceChild = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'SetPrivateDataInterface'
};
// --------------------------------------------------------
// Type: D3D10_COMPARISON_FUNC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_COMPARISON_FUNC = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_DEPTH_WRITE_MASK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_DEPTH_WRITE_MASK = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_STENCIL_OP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_STENCIL_OP = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_DEPTH_STENCILOP_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_DEPTH_STENCILOP_DESC = extern struct {
    StencilFailOp: D3D10_STENCIL_OP,
    StencilDepthFailOp: D3D10_STENCIL_OP,
    StencilPassOp: D3D10_STENCIL_OP,
    StencilFunc: D3D10_COMPARISON_FUNC,
};
// --------------------------------------------------------
// Type: D3D10_DEPTH_STENCIL_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_DEPTH_STENCIL_DESC = extern struct {
    DepthEnable: BOOL,
    DepthWriteMask: D3D10_DEPTH_WRITE_MASK,
    DepthFunc: D3D10_COMPARISON_FUNC,
    StencilEnable: BOOL,
    StencilReadMask: u8,
    StencilWriteMask: u8,
    FrontFace: D3D10_DEPTH_STENCILOP_DESC,
    BackFace: D3D10_DEPTH_STENCILOP_DESC,
};
// --------------------------------------------------------
// Type: ID3D10DepthStencilState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10DepthStencilState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_BLEND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_BLEND = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_BLEND_OP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_BLEND_OP = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_COLOR_WRITE_ENABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_COLOR_WRITE_ENABLE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_BLEND_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_BLEND_DESC = extern struct {
    AlphaToCoverageEnable: BOOL,
    BlendEnable: ?[*]?*?*?*BOOL,
    SrcBlend: D3D10_BLEND,
    DestBlend: D3D10_BLEND,
    BlendOp: D3D10_BLEND_OP,
    SrcBlendAlpha: D3D10_BLEND,
    DestBlendAlpha: D3D10_BLEND,
    BlendOpAlpha: D3D10_BLEND_OP,
    RenderTargetWriteMask: ?[*]u8,
};
// --------------------------------------------------------
// Type: ID3D10BlendState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10BlendState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_RASTERIZER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_RASTERIZER_DESC = extern struct {
    FillMode: D3D10_FILL_MODE,
    CullMode: D3D10_CULL_MODE,
    FrontCounterClockwise: BOOL,
    DepthBias: i32,
    DepthBiasClamp: f32,
    SlopeScaledDepthBias: f32,
    DepthClipEnable: BOOL,
    ScissorEnable: BOOL,
    MultisampleEnable: BOOL,
    AntialiasedLineEnable: BOOL,
};
// --------------------------------------------------------
// Type: ID3D10RasterizerState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10RasterizerState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_SUBRESOURCE_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SUBRESOURCE_DATA = extern struct {
    pSysMem: ?*opaque{},
    SysMemPitch: u32,
    SysMemSlicePitch: u32,
};
// --------------------------------------------------------
// Type: ID3D10Resource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Resource = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'SetEvictionPriority'
    // TODO: Method 'GetEvictionPriority'
};
// --------------------------------------------------------
// Type: D3D10_BUFFER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_BUFFER_DESC = extern struct {
    ByteWidth: u32,
    Usage: D3D10_USAGE,
    BindFlags: u32,
    CPUAccessFlags: u32,
    MiscFlags: u32,
};
// --------------------------------------------------------
// Type: ID3D10Buffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Buffer = *opaque{
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_TEXTURE1D_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEXTURE1D_DESC = extern struct {
    Width: u32,
    MipLevels: u32,
    ArraySize: u32,
    Format: DXGI_FORMAT,
    Usage: D3D10_USAGE,
    BindFlags: u32,
    CPUAccessFlags: u32,
    MiscFlags: u32,
};
// --------------------------------------------------------
// Type: ID3D10Texture1D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Texture1D = *opaque{
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_TEXTURE2D_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEXTURE2D_DESC = extern struct {
    Width: u32,
    Height: u32,
    MipLevels: u32,
    ArraySize: u32,
    Format: DXGI_FORMAT,
    SampleDesc: DXGI_SAMPLE_DESC,
    Usage: D3D10_USAGE,
    BindFlags: u32,
    CPUAccessFlags: u32,
    MiscFlags: u32,
};
// --------------------------------------------------------
// Type: D3D10_MAPPED_TEXTURE2D
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_MAPPED_TEXTURE2D = extern struct {
    pData: ?*opaque{},
    RowPitch: u32,
};
// --------------------------------------------------------
// Type: ID3D10Texture2D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Texture2D = *opaque{
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_TEXTURE3D_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEXTURE3D_DESC = extern struct {
    Width: u32,
    Height: u32,
    Depth: u32,
    MipLevels: u32,
    Format: DXGI_FORMAT,
    Usage: D3D10_USAGE,
    BindFlags: u32,
    CPUAccessFlags: u32,
    MiscFlags: u32,
};
// --------------------------------------------------------
// Type: D3D10_MAPPED_TEXTURE3D
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_MAPPED_TEXTURE3D = extern struct {
    pData: ?*opaque{},
    RowPitch: u32,
    DepthPitch: u32,
};
// --------------------------------------------------------
// Type: ID3D10Texture3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Texture3D = *opaque{
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_TEXTURECUBE_FACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_TEXTURECUBE_FACE = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10View
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10View = *opaque{
    // TODO: Method 'GetResource'
};
// --------------------------------------------------------
// Type: D3D10_BUFFER_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_BUFFER_SRV = extern struct {
    Anonymous1: _Anonymous1_e__Union,
    Anonymous2: _Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: D3D10_TEX1D_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX1D_SRV = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX1D_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX1D_ARRAY_SRV = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2D_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2D_SRV = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2D_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2D_ARRAY_SRV = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX3D_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX3D_SRV = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEXCUBE_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEXCUBE_SRV = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2DMS_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2DMS_SRV = extern struct {
    UnusedField_NothingToDefine: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2DMS_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2DMS_ARRAY_SRV = extern struct {
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_RESOURCE_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_RESOURCE_VIEW_DESC = extern struct {
    Format: DXGI_FORMAT,
    ViewDimension: D3D_SRV_DIMENSION,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D10ShaderResourceView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderResourceView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_BUFFER_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_BUFFER_RTV = extern struct {
    Anonymous1: _Anonymous1_e__Union,
    Anonymous2: _Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: D3D10_TEX1D_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX1D_RTV = extern struct {
    MipSlice: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX1D_ARRAY_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX1D_ARRAY_RTV = extern struct {
    MipSlice: u32,
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2D_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2D_RTV = extern struct {
    MipSlice: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2DMS_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2DMS_RTV = extern struct {
    UnusedField_NothingToDefine: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2D_ARRAY_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2D_ARRAY_RTV = extern struct {
    MipSlice: u32,
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2DMS_ARRAY_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2DMS_ARRAY_RTV = extern struct {
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX3D_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX3D_RTV = extern struct {
    MipSlice: u32,
    FirstWSlice: u32,
    WSize: u32,
};
// --------------------------------------------------------
// Type: D3D10_RENDER_TARGET_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_RENDER_TARGET_VIEW_DESC = extern struct {
    Format: DXGI_FORMAT,
    ViewDimension: D3D10_RTV_DIMENSION,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D10RenderTargetView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10RenderTargetView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_TEX1D_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX1D_DSV = extern struct {
    MipSlice: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX1D_ARRAY_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX1D_ARRAY_DSV = extern struct {
    MipSlice: u32,
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2D_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2D_DSV = extern struct {
    MipSlice: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2D_ARRAY_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2D_ARRAY_DSV = extern struct {
    MipSlice: u32,
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2DMS_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2DMS_DSV = extern struct {
    UnusedField_NothingToDefine: u32,
};
// --------------------------------------------------------
// Type: D3D10_TEX2DMS_ARRAY_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEX2DMS_ARRAY_DSV = extern struct {
    FirstArraySlice: u32,
    ArraySize: u32,
};
// --------------------------------------------------------
// Type: D3D10_DEPTH_STENCIL_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_DEPTH_STENCIL_VIEW_DESC = extern struct {
    Format: DXGI_FORMAT,
    ViewDimension: D3D10_DSV_DIMENSION,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D10DepthStencilView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10DepthStencilView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: ID3D10VertexShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10VertexShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10GeometryShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10GeometryShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10PixelShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10PixelShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10InputLayout
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10InputLayout = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_FILTER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_FILTER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_TEXTURE_ADDRESS_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_TEXTURE_ADDRESS_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_SAMPLER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SAMPLER_DESC = extern struct {
    Filter: D3D10_FILTER,
    AddressU: D3D10_TEXTURE_ADDRESS_MODE,
    AddressV: D3D10_TEXTURE_ADDRESS_MODE,
    AddressW: D3D10_TEXTURE_ADDRESS_MODE,
    MipLODBias: f32,
    MaxAnisotropy: u32,
    ComparisonFunc: D3D10_COMPARISON_FUNC,
    BorderColor: ?[*]f32,
    MinLOD: f32,
    MaxLOD: f32,
};
// --------------------------------------------------------
// Type: ID3D10SamplerState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10SamplerState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D10_FORMAT_SUPPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_FORMAT_SUPPORT = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10Asynchronous
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Asynchronous = *opaque{
    // TODO: Method 'Begin'
    // TODO: Method 'End'
    // TODO: Method 'GetData'
    // TODO: Method 'GetDataSize'
};
// --------------------------------------------------------
// Type: D3D10_ASYNC_GETDATA_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_ASYNC_GETDATA_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_QUERY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_QUERY = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_QUERY_MISC_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_QUERY_MISC_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_QUERY_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_QUERY_DESC = extern struct {
    Query: D3D10_QUERY,
    MiscFlags: u32,
};
// --------------------------------------------------------
// Type: ID3D10Query
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Query = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: ID3D10Predicate
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Predicate = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_QUERY_DATA_TIMESTAMP_DISJOINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_QUERY_DATA_TIMESTAMP_DISJOINT = extern struct {
    Frequency: u64,
    Disjoint: BOOL,
};
// --------------------------------------------------------
// Type: D3D10_QUERY_DATA_PIPELINE_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_QUERY_DATA_PIPELINE_STATISTICS = extern struct {
    IAVertices: u64,
    IAPrimitives: u64,
    VSInvocations: u64,
    GSInvocations: u64,
    GSPrimitives: u64,
    CInvocations: u64,
    CPrimitives: u64,
    PSInvocations: u64,
};
// --------------------------------------------------------
// Type: D3D10_QUERY_DATA_SO_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_QUERY_DATA_SO_STATISTICS = extern struct {
    NumPrimitivesWritten: u64,
    PrimitivesStorageNeeded: u64,
};
// --------------------------------------------------------
// Type: D3D10_COUNTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_COUNTER = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_COUNTER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_COUNTER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_COUNTER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_COUNTER_DESC = extern struct {
    Counter: D3D10_COUNTER,
    MiscFlags: u32,
};
// --------------------------------------------------------
// Type: D3D10_COUNTER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_COUNTER_INFO = extern struct {
    LastDeviceDependentCounter: D3D10_COUNTER,
    NumSimultaneousCounters: u32,
    NumDetectableParallelUnits: u8,
};
// --------------------------------------------------------
// Type: ID3D10Counter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Counter = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: ID3D10Device
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Device = *opaque{
    // TODO: Method 'VSSetConstantBuffers'
    // TODO: Method 'PSSetShaderResources'
    // TODO: Method 'PSSetShader'
    // TODO: Method 'PSSetSamplers'
    // TODO: Method 'VSSetShader'
    // TODO: Method 'DrawIndexed'
    // TODO: Method 'Draw'
    // TODO: Method 'PSSetConstantBuffers'
    // TODO: Method 'IASetInputLayout'
    // TODO: Method 'IASetVertexBuffers'
    // TODO: Method 'IASetIndexBuffer'
    // TODO: Method 'DrawIndexedInstanced'
    // TODO: Method 'DrawInstanced'
    // TODO: Method 'GSSetConstantBuffers'
    // TODO: Method 'GSSetShader'
    // TODO: Method 'IASetPrimitiveTopology'
    // TODO: Method 'VSSetShaderResources'
    // TODO: Method 'VSSetSamplers'
    // TODO: Method 'SetPredication'
    // TODO: Method 'GSSetShaderResources'
    // TODO: Method 'GSSetSamplers'
    // TODO: Method 'OMSetRenderTargets'
    // TODO: Method 'OMSetBlendState'
    // TODO: Method 'OMSetDepthStencilState'
    // TODO: Method 'SOSetTargets'
    // TODO: Method 'DrawAuto'
    // TODO: Method 'RSSetState'
    // TODO: Method 'RSSetViewports'
    // TODO: Method 'RSSetScissorRects'
    // TODO: Method 'CopySubresourceRegion'
    // TODO: Method 'CopyResource'
    // TODO: Method 'UpdateSubresource'
    // TODO: Method 'ClearRenderTargetView'
    // TODO: Method 'ClearDepthStencilView'
    // TODO: Method 'GenerateMips'
    // TODO: Method 'ResolveSubresource'
    // TODO: Method 'VSGetConstantBuffers'
    // TODO: Method 'PSGetShaderResources'
    // TODO: Method 'PSGetShader'
    // TODO: Method 'PSGetSamplers'
    // TODO: Method 'VSGetShader'
    // TODO: Method 'PSGetConstantBuffers'
    // TODO: Method 'IAGetInputLayout'
    // TODO: Method 'IAGetVertexBuffers'
    // TODO: Method 'IAGetIndexBuffer'
    // TODO: Method 'GSGetConstantBuffers'
    // TODO: Method 'GSGetShader'
    // TODO: Method 'IAGetPrimitiveTopology'
    // TODO: Method 'VSGetShaderResources'
    // TODO: Method 'VSGetSamplers'
    // TODO: Method 'GetPredication'
    // TODO: Method 'GSGetShaderResources'
    // TODO: Method 'GSGetSamplers'
    // TODO: Method 'OMGetRenderTargets'
    // TODO: Method 'OMGetBlendState'
    // TODO: Method 'OMGetDepthStencilState'
    // TODO: Method 'SOGetTargets'
    // TODO: Method 'RSGetState'
    // TODO: Method 'RSGetViewports'
    // TODO: Method 'RSGetScissorRects'
    // TODO: Method 'GetDeviceRemovedReason'
    // TODO: Method 'SetExceptionMode'
    // TODO: Method 'GetExceptionMode'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'SetPrivateDataInterface'
    // TODO: Method 'ClearState'
    // TODO: Method 'Flush'
    // TODO: Method 'CreateBuffer'
    // TODO: Method 'CreateTexture1D'
    // TODO: Method 'CreateTexture2D'
    // TODO: Method 'CreateTexture3D'
    // TODO: Method 'CreateShaderResourceView'
    // TODO: Method 'CreateRenderTargetView'
    // TODO: Method 'CreateDepthStencilView'
    // TODO: Method 'CreateInputLayout'
    // TODO: Method 'CreateVertexShader'
    // TODO: Method 'CreateGeometryShader'
    // TODO: Method 'CreateGeometryShaderWithStreamOutput'
    // TODO: Method 'CreatePixelShader'
    // TODO: Method 'CreateBlendState'
    // TODO: Method 'CreateDepthStencilState'
    // TODO: Method 'CreateRasterizerState'
    // TODO: Method 'CreateSamplerState'
    // TODO: Method 'CreateQuery'
    // TODO: Method 'CreatePredicate'
    // TODO: Method 'CreateCounter'
    // TODO: Method 'CheckFormatSupport'
    // TODO: Method 'CheckMultisampleQualityLevels'
    // TODO: Method 'CheckCounterInfo'
    // TODO: Method 'CheckCounter'
    // TODO: Method 'GetCreationFlags'
    // TODO: Method 'OpenSharedResource'
    // TODO: Method 'SetTextFilterSize'
    // TODO: Method 'GetTextFilterSize'
};
// --------------------------------------------------------
// Type: ID3D10Multithread
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Multithread = *opaque{
    // TODO: Method 'Enter'
    // TODO: Method 'Leave'
    // TODO: Method 'SetMultithreadProtected'
    // TODO: Method 'GetMultithreadProtected'
};
// --------------------------------------------------------
// Type: D3D10_CREATE_DEVICE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_CREATE_DEVICE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10Debug
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Debug = *opaque{
    // TODO: Method 'SetFeatureMask'
    // TODO: Method 'GetFeatureMask'
    // TODO: Method 'SetPresentPerRenderOpDelay'
    // TODO: Method 'GetPresentPerRenderOpDelay'
    // TODO: Method 'SetSwapChain'
    // TODO: Method 'GetSwapChain'
    // TODO: Method 'Validate'
};
// --------------------------------------------------------
// Type: ID3D10SwitchToRef
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10SwitchToRef = *opaque{
    // TODO: Method 'SetUseRef'
    // TODO: Method 'GetUseRef'
};
// --------------------------------------------------------
// Type: D3D10_MESSAGE_CATEGORY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_MESSAGE_CATEGORY = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_MESSAGE_SEVERITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_MESSAGE_SEVERITY = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_MESSAGE_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_MESSAGE_ID = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_MESSAGE = extern struct {
    Category: D3D10_MESSAGE_CATEGORY,
    Severity: D3D10_MESSAGE_SEVERITY,
    ID: D3D10_MESSAGE_ID,
    pDescription: ?*i8,
    DescriptionByteLength: ?*opaque{},
};
// --------------------------------------------------------
// Type: D3D10_INFO_QUEUE_FILTER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_INFO_QUEUE_FILTER_DESC = extern struct {
    NumCategories: u32,
    pCategoryList: ?*D3D10_MESSAGE_CATEGORY,
    NumSeverities: u32,
    pSeverityList: ?*D3D10_MESSAGE_SEVERITY,
    NumIDs: u32,
    pIDList: ?*D3D10_MESSAGE_ID,
};
// --------------------------------------------------------
// Type: D3D10_INFO_QUEUE_FILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_INFO_QUEUE_FILTER = extern struct {
    AllowList: D3D10_INFO_QUEUE_FILTER_DESC,
    DenyList: D3D10_INFO_QUEUE_FILTER_DESC,
};
// --------------------------------------------------------
// Type: ID3D10InfoQueue
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10InfoQueue = *opaque{
    // TODO: Method 'SetMessageCountLimit'
    // TODO: Method 'ClearStoredMessages'
    // TODO: Method 'GetMessageA'
    // TODO: Method 'GetNumMessagesAllowedByStorageFilter'
    // TODO: Method 'GetNumMessagesDeniedByStorageFilter'
    // TODO: Method 'GetNumStoredMessages'
    // TODO: Method 'GetNumStoredMessagesAllowedByRetrievalFilter'
    // TODO: Method 'GetNumMessagesDiscardedByMessageCountLimit'
    // TODO: Method 'GetMessageCountLimit'
    // TODO: Method 'AddStorageFilterEntries'
    // TODO: Method 'GetStorageFilter'
    // TODO: Method 'ClearStorageFilter'
    // TODO: Method 'PushEmptyStorageFilter'
    // TODO: Method 'PushCopyOfStorageFilter'
    // TODO: Method 'PushStorageFilter'
    // TODO: Method 'PopStorageFilter'
    // TODO: Method 'GetStorageFilterStackSize'
    // TODO: Method 'AddRetrievalFilterEntries'
    // TODO: Method 'GetRetrievalFilter'
    // TODO: Method 'ClearRetrievalFilter'
    // TODO: Method 'PushEmptyRetrievalFilter'
    // TODO: Method 'PushCopyOfRetrievalFilter'
    // TODO: Method 'PushRetrievalFilter'
    // TODO: Method 'PopRetrievalFilter'
    // TODO: Method 'GetRetrievalFilterStackSize'
    // TODO: Method 'AddMessage'
    // TODO: Method 'AddApplicationMessage'
    // TODO: Method 'SetBreakOnCategory'
    // TODO: Method 'SetBreakOnSeverity'
    // TODO: Method 'SetBreakOnID'
    // TODO: Method 'GetBreakOnCategory'
    // TODO: Method 'GetBreakOnSeverity'
    // TODO: Method 'GetBreakOnID'
    // TODO: Method 'SetMuteDebugOutput'
    // TODO: Method 'GetMuteDebugOutput'
};
// --------------------------------------------------------
// Type: D3D10_DRIVER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_DRIVER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DESC = extern struct {
    Version: u32,
    Creator: ?*i8,
    Flags: u32,
    ConstantBuffers: u32,
    BoundResources: u32,
    InputParameters: u32,
    OutputParameters: u32,
    InstructionCount: u32,
    TempRegisterCount: u32,
    TempArrayCount: u32,
    DefCount: u32,
    DclCount: u32,
    TextureNormalInstructions: u32,
    TextureLoadInstructions: u32,
    TextureCompInstructions: u32,
    TextureBiasInstructions: u32,
    TextureGradientInstructions: u32,
    FloatInstructionCount: u32,
    IntInstructionCount: u32,
    UintInstructionCount: u32,
    StaticFlowControlCount: u32,
    DynamicFlowControlCount: u32,
    MacroInstructionCount: u32,
    ArrayInstructionCount: u32,
    CutInstructionCount: u32,
    EmitInstructionCount: u32,
    GSOutputTopology: D3D_PRIMITIVE_TOPOLOGY,
    GSMaxOutputVertexCount: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_BUFFER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_BUFFER_DESC = extern struct {
    Name: ?*i8,
    Type: D3D_CBUFFER_TYPE,
    Variables: u32,
    Size: u32,
    uFlags: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_VARIABLE_DESC = extern struct {
    Name: ?*i8,
    StartOffset: u32,
    Size: u32,
    uFlags: u32,
    DefaultValue: ?*opaque{},
};
// --------------------------------------------------------
// Type: D3D10_SHADER_TYPE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_TYPE_DESC = extern struct {
    Class: D3D_SHADER_VARIABLE_CLASS,
    Type: D3D_SHADER_VARIABLE_TYPE,
    Rows: u32,
    Columns: u32,
    Elements: u32,
    Members: u32,
    Offset: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_INPUT_BIND_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_INPUT_BIND_DESC = extern struct {
    Name: ?*i8,
    Type: D3D_SHADER_INPUT_TYPE,
    BindPoint: u32,
    BindCount: u32,
    uFlags: u32,
    ReturnType: D3D_RESOURCE_RETURN_TYPE,
    Dimension: D3D_SRV_DIMENSION,
    NumSamples: u32,
};
// --------------------------------------------------------
// Type: D3D10_SIGNATURE_PARAMETER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SIGNATURE_PARAMETER_DESC = extern struct {
    SemanticName: ?*i8,
    SemanticIndex: u32,
    Register: u32,
    SystemValueType: D3D_NAME,
    ComponentType: D3D_REGISTER_COMPONENT_TYPE,
    Mask: u8,
    ReadWriteMask: u8,
};
// --------------------------------------------------------
// Type: ID3D10ShaderReflectionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderReflectionType = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetMemberTypeByIndex'
    // TODO: Method 'GetMemberTypeByName'
    // TODO: Method 'GetMemberTypeName'
};
// --------------------------------------------------------
// Type: ID3D10ShaderReflectionVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderReflectionVariable = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetType'
};
// --------------------------------------------------------
// Type: ID3D10ShaderReflectionConstantBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderReflectionConstantBuffer = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetVariableByIndex'
    // TODO: Method 'GetVariableByName'
};
// --------------------------------------------------------
// Type: ID3D10ShaderReflection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderReflection = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetConstantBufferByIndex'
    // TODO: Method 'GetConstantBufferByName'
    // TODO: Method 'GetResourceBindingDesc'
    // TODO: Method 'GetInputParameterDesc'
    // TODO: Method 'GetOutputParameterDesc'
};
// --------------------------------------------------------
// Type: D3D10_DEVICE_STATE_TYPES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_DEVICE_STATE_TYPES = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_STATE_BLOCK_MASK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_STATE_BLOCK_MASK = extern struct {
    VS: u8,
    VSSamplers: ?[*]u8,
    VSShaderResources: ?[*]u8,
    VSConstantBuffers: ?[*]u8,
    GS: u8,
    GSSamplers: ?[*]u8,
    GSShaderResources: ?[*]u8,
    GSConstantBuffers: ?[*]u8,
    PS: u8,
    PSSamplers: ?[*]u8,
    PSShaderResources: ?[*]u8,
    PSConstantBuffers: ?[*]u8,
    IAVertexBuffers: ?[*]u8,
    IAIndexBuffer: u8,
    IAInputLayout: u8,
    IAPrimitiveTopology: u8,
    OMRenderTargets: u8,
    OMDepthStencilState: u8,
    OMBlendState: u8,
    RSViewports: u8,
    RSScissorRects: u8,
    RSRasterizerState: u8,
    SOBuffers: u8,
    Predication: u8,
};
// --------------------------------------------------------
// Type: ID3D10StateBlock
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10StateBlock = *opaque{
    // TODO: Method 'Capture'
    // TODO: Method 'Apply'
    // TODO: Method 'ReleaseAllDeviceObjects'
    // TODO: Method 'GetDevice'
};
// --------------------------------------------------------
// Type: D3D10_EFFECT_TYPE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_EFFECT_TYPE_DESC = extern struct {
    TypeName: ?*i8,
    Class: D3D_SHADER_VARIABLE_CLASS,
    Type: D3D_SHADER_VARIABLE_TYPE,
    Elements: u32,
    Members: u32,
    Rows: u32,
    Columns: u32,
    PackedSize: u32,
    UnpackedSize: u32,
    Stride: u32,
};
// --------------------------------------------------------
// Type: ID3D10EffectType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectType = *opaque{
    // TODO: Method 'IsValid'
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetMemberTypeByIndex'
    // TODO: Method 'GetMemberTypeByName'
    // TODO: Method 'GetMemberTypeBySemantic'
    // TODO: Method 'GetMemberName'
    // TODO: Method 'GetMemberSemantic'
};
// --------------------------------------------------------
// Type: D3D10_EFFECT_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_EFFECT_VARIABLE_DESC = extern struct {
    Name: ?*i8,
    Semantic: ?*i8,
    Flags: u32,
    Annotations: u32,
    BufferOffset: u32,
    ExplicitBindPoint: u32,
};
// --------------------------------------------------------
// Type: ID3D10EffectVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectVariable = *opaque{
    // TODO: Method 'IsValid'
    // TODO: Method 'GetType'
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetAnnotationByIndex'
    // TODO: Method 'GetAnnotationByName'
    // TODO: Method 'GetMemberByIndex'
    // TODO: Method 'GetMemberByName'
    // TODO: Method 'GetMemberBySemantic'
    // TODO: Method 'GetElement'
    // TODO: Method 'GetParentConstantBuffer'
    // TODO: Method 'AsScalar'
    // TODO: Method 'AsVector'
    // TODO: Method 'AsMatrix'
    // TODO: Method 'AsString'
    // TODO: Method 'AsShaderResource'
    // TODO: Method 'AsRenderTargetView'
    // TODO: Method 'AsDepthStencilView'
    // TODO: Method 'AsConstantBuffer'
    // TODO: Method 'AsShader'
    // TODO: Method 'AsBlend'
    // TODO: Method 'AsDepthStencil'
    // TODO: Method 'AsRasterizer'
    // TODO: Method 'AsSampler'
    // TODO: Method 'SetRawValue'
    // TODO: Method 'GetRawValue'
};
// --------------------------------------------------------
// Type: ID3D10EffectScalarVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectScalarVariable = *opaque{
    // TODO: Method 'SetFloat'
    // TODO: Method 'GetFloat'
    // TODO: Method 'SetFloatArray'
    // TODO: Method 'GetFloatArray'
    // TODO: Method 'SetInt'
    // TODO: Method 'GetInt'
    // TODO: Method 'SetIntArray'
    // TODO: Method 'GetIntArray'
    // TODO: Method 'SetBool'
    // TODO: Method 'GetBool'
    // TODO: Method 'SetBoolArray'
    // TODO: Method 'GetBoolArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectVectorVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectVectorVariable = *opaque{
    // TODO: Method 'SetBoolVector'
    // TODO: Method 'SetIntVector'
    // TODO: Method 'SetFloatVector'
    // TODO: Method 'GetBoolVector'
    // TODO: Method 'GetIntVector'
    // TODO: Method 'GetFloatVector'
    // TODO: Method 'SetBoolVectorArray'
    // TODO: Method 'SetIntVectorArray'
    // TODO: Method 'SetFloatVectorArray'
    // TODO: Method 'GetBoolVectorArray'
    // TODO: Method 'GetIntVectorArray'
    // TODO: Method 'GetFloatVectorArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectMatrixVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectMatrixVariable = *opaque{
    // TODO: Method 'SetMatrix'
    // TODO: Method 'GetMatrix'
    // TODO: Method 'SetMatrixArray'
    // TODO: Method 'GetMatrixArray'
    // TODO: Method 'SetMatrixTranspose'
    // TODO: Method 'GetMatrixTranspose'
    // TODO: Method 'SetMatrixTransposeArray'
    // TODO: Method 'GetMatrixTransposeArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectStringVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectStringVariable = *opaque{
    // TODO: Method 'GetString'
    // TODO: Method 'GetStringArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectShaderResourceVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectShaderResourceVariable = *opaque{
    // TODO: Method 'SetResource'
    // TODO: Method 'GetResource'
    // TODO: Method 'SetResourceArray'
    // TODO: Method 'GetResourceArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectRenderTargetViewVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectRenderTargetViewVariable = *opaque{
    // TODO: Method 'SetRenderTarget'
    // TODO: Method 'GetRenderTarget'
    // TODO: Method 'SetRenderTargetArray'
    // TODO: Method 'GetRenderTargetArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectDepthStencilViewVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectDepthStencilViewVariable = *opaque{
    // TODO: Method 'SetDepthStencil'
    // TODO: Method 'GetDepthStencil'
    // TODO: Method 'SetDepthStencilArray'
    // TODO: Method 'GetDepthStencilArray'
};
// --------------------------------------------------------
// Type: ID3D10EffectConstantBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectConstantBuffer = *opaque{
    // TODO: Method 'SetConstantBuffer'
    // TODO: Method 'GetConstantBuffer'
    // TODO: Method 'SetTextureBuffer'
    // TODO: Method 'GetTextureBuffer'
};
// --------------------------------------------------------
// Type: D3D10_EFFECT_SHADER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_EFFECT_SHADER_DESC = extern struct {
    pInputSignature: ?*u8,
    IsInline: BOOL,
    pBytecode: ?*u8,
    BytecodeLength: u32,
    SODecl: ?*i8,
    NumInputSignatureEntries: u32,
    NumOutputSignatureEntries: u32,
};
// --------------------------------------------------------
// Type: ID3D10EffectShaderVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectShaderVariable = *opaque{
    // TODO: Method 'GetShaderDesc'
    // TODO: Method 'GetVertexShader'
    // TODO: Method 'GetGeometryShader'
    // TODO: Method 'GetPixelShader'
    // TODO: Method 'GetInputSignatureElementDesc'
    // TODO: Method 'GetOutputSignatureElementDesc'
};
// --------------------------------------------------------
// Type: ID3D10EffectBlendVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectBlendVariable = *opaque{
    // TODO: Method 'GetBlendState'
    // TODO: Method 'GetBackingStore'
};
// --------------------------------------------------------
// Type: ID3D10EffectDepthStencilVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectDepthStencilVariable = *opaque{
    // TODO: Method 'GetDepthStencilState'
    // TODO: Method 'GetBackingStore'
};
// --------------------------------------------------------
// Type: ID3D10EffectRasterizerVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectRasterizerVariable = *opaque{
    // TODO: Method 'GetRasterizerState'
    // TODO: Method 'GetBackingStore'
};
// --------------------------------------------------------
// Type: ID3D10EffectSamplerVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectSamplerVariable = *opaque{
    // TODO: Method 'GetSampler'
    // TODO: Method 'GetBackingStore'
};
// --------------------------------------------------------
// Type: D3D10_PASS_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_PASS_DESC = extern struct {
    Name: ?*i8,
    Annotations: u32,
    pIAInputSignature: ?*u8,
    IAInputSignatureSize: ?*opaque{},
    StencilRef: u32,
    SampleMask: u32,
    BlendFactor: ?[*]f32,
};
// --------------------------------------------------------
// Type: D3D10_PASS_SHADER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_PASS_SHADER_DESC = extern struct {
    pShaderVariable: ID3D10EffectShaderVariable,
    ShaderIndex: u32,
};
// --------------------------------------------------------
// Type: ID3D10EffectPass
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectPass = *opaque{
    // TODO: Method 'IsValid'
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetVertexShaderDesc'
    // TODO: Method 'GetGeometryShaderDesc'
    // TODO: Method 'GetPixelShaderDesc'
    // TODO: Method 'GetAnnotationByIndex'
    // TODO: Method 'GetAnnotationByName'
    // TODO: Method 'Apply'
    // TODO: Method 'ComputeStateBlockMask'
};
// --------------------------------------------------------
// Type: D3D10_TECHNIQUE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TECHNIQUE_DESC = extern struct {
    Name: ?*i8,
    Passes: u32,
    Annotations: u32,
};
// --------------------------------------------------------
// Type: ID3D10EffectTechnique
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectTechnique = *opaque{
    // TODO: Method 'IsValid'
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetAnnotationByIndex'
    // TODO: Method 'GetAnnotationByName'
    // TODO: Method 'GetPassByIndex'
    // TODO: Method 'GetPassByName'
    // TODO: Method 'ComputeStateBlockMask'
};
// --------------------------------------------------------
// Type: D3D10_EFFECT_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_EFFECT_DESC = extern struct {
    IsChildEffect: BOOL,
    ConstantBuffers: u32,
    SharedConstantBuffers: u32,
    GlobalVariables: u32,
    SharedGlobalVariables: u32,
    Techniques: u32,
};
// --------------------------------------------------------
// Type: ID3D10Effect
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Effect = *opaque{
    // TODO: Method 'IsValid'
    // TODO: Method 'IsPool'
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetConstantBufferByIndex'
    // TODO: Method 'GetConstantBufferByName'
    // TODO: Method 'GetVariableByIndex'
    // TODO: Method 'GetVariableByName'
    // TODO: Method 'GetVariableBySemantic'
    // TODO: Method 'GetTechniqueByIndex'
    // TODO: Method 'GetTechniqueByName'
    // TODO: Method 'Optimize'
    // TODO: Method 'IsOptimized'
};
// --------------------------------------------------------
// Type: ID3D10EffectPool
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10EffectPool = *opaque{
    // TODO: Method 'AsEffect'
};
// --------------------------------------------------------
// Type: D3D10_FEATURE_LEVEL1
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_FEATURE_LEVEL1 = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_RENDER_TARGET_BLEND_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_RENDER_TARGET_BLEND_DESC1 = extern struct {
    BlendEnable: BOOL,
    SrcBlend: D3D10_BLEND,
    DestBlend: D3D10_BLEND,
    BlendOp: D3D10_BLEND_OP,
    SrcBlendAlpha: D3D10_BLEND,
    DestBlendAlpha: D3D10_BLEND,
    BlendOpAlpha: D3D10_BLEND_OP,
    RenderTargetWriteMask: u8,
};
// --------------------------------------------------------
// Type: D3D10_BLEND_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_BLEND_DESC1 = extern struct {
    AlphaToCoverageEnable: BOOL,
    IndependentBlendEnable: BOOL,
    RenderTarget: ?[*]D3D10_RENDER_TARGET_BLEND_DESC1,
};
// --------------------------------------------------------
// Type: ID3D10BlendState1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10BlendState1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D10_TEXCUBE_ARRAY_SRV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_TEXCUBE_ARRAY_SRV1 = extern struct {
    MostDetailedMip: u32,
    MipLevels: u32,
    First2DArrayFace: u32,
    NumCubes: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_RESOURCE_VIEW_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_RESOURCE_VIEW_DESC1 = extern struct {
    Format: DXGI_FORMAT,
    ViewDimension: D3D_SRV_DIMENSION,
    Anonymous: _Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D10ShaderResourceView1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderResourceView1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D10_STANDARD_MULTISAMPLE_QUALITY_LEVELS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_STANDARD_MULTISAMPLE_QUALITY_LEVELS = *opaque{
};
// --------------------------------------------------------
// Type: ID3D10Device1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10Device1 = *opaque{
    // TODO: Method 'CreateShaderResourceView1'
    // TODO: Method 'CreateBlendState1'
    // TODO: Method 'GetFeatureLevel'
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_REGTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_SHADER_DEBUG_REGTYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_SCOPETYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_SHADER_DEBUG_SCOPETYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_VARTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D10_SHADER_DEBUG_VARTYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_TOKEN_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_TOKEN_INFO = extern struct {
    File: u32,
    Line: u32,
    Column: u32,
    TokenLength: u32,
    TokenId: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_VAR_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_VAR_INFO = extern struct {
    TokenId: u32,
    Type: D3D_SHADER_VARIABLE_TYPE,
    Register: u32,
    Component: u32,
    ScopeVar: u32,
    ScopeVarOffset: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_INPUT_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_INPUT_INFO = extern struct {
    Var: u32,
    InitialRegisterSet: D3D10_SHADER_DEBUG_REGTYPE,
    InitialBank: u32,
    InitialRegister: u32,
    InitialComponent: u32,
    InitialValue: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_SCOPEVAR_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_SCOPEVAR_INFO = extern struct {
    TokenId: u32,
    VarType: D3D10_SHADER_DEBUG_VARTYPE,
    Class: D3D_SHADER_VARIABLE_CLASS,
    Rows: u32,
    Columns: u32,
    StructMemberScope: u32,
    uArrayIndices: u32,
    ArrayElements: u32,
    ArrayStrides: u32,
    uVariables: u32,
    uFirstVariable: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_SCOPE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_SCOPE_INFO = extern struct {
    ScopeType: D3D10_SHADER_DEBUG_SCOPETYPE,
    Name: u32,
    uNameLen: u32,
    uVariables: u32,
    VariableData: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_OUTPUTVAR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_OUTPUTVAR = extern struct {
    Var: u32,
    uValueMin: u32,
    uValueMax: u32,
    iValueMin: i32,
    iValueMax: i32,
    fValueMin: f32,
    fValueMax: f32,
    bNaNPossible: BOOL,
    bInfPossible: BOOL,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_OUTPUTREG_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_OUTPUTREG_INFO = extern struct {
    OutputRegisterSet: D3D10_SHADER_DEBUG_REGTYPE,
    OutputReg: u32,
    TempArrayReg: u32,
    OutputComponents: ?[*]u32,
    OutputVars: ?[*]D3D10_SHADER_DEBUG_OUTPUTVAR,
    IndexReg: u32,
    IndexComp: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_INST_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_INST_INFO = extern struct {
    Id: u32,
    Opcode: u32,
    uOutputs: u32,
    pOutputs: ?[*]D3D10_SHADER_DEBUG_OUTPUTREG_INFO,
    TokenId: u32,
    NestingLevel: u32,
    Scopes: u32,
    ScopeInfo: u32,
    AccessedVars: u32,
    AccessedVarsInfo: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_FILE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_FILE_INFO = extern struct {
    FileName: u32,
    FileNameLen: u32,
    FileData: u32,
    FileLen: u32,
};
// --------------------------------------------------------
// Type: D3D10_SHADER_DEBUG_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D10_SHADER_DEBUG_INFO = extern struct {
    Size: u32,
    Creator: u32,
    EntrypointName: u32,
    ShaderTarget: u32,
    CompileFlags: u32,
    Files: u32,
    FileInfo: u32,
    Instructions: u32,
    InstructionInfo: u32,
    Variables: u32,
    VariableInfo: u32,
    InputVariables: u32,
    InputVariableInfo: u32,
    Tokens: u32,
    TokenInfo: u32,
    Scopes: u32,
    ScopeInfo: u32,
    ScopeVariables: u32,
    ScopeVariableInfo: u32,
    UintOffset: u32,
    StringOffset: u32,
};
// --------------------------------------------------------
// Type: ID3D10ShaderReflection1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D10ShaderReflection1 = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetConstantBufferByIndex'
    // TODO: Method 'GetConstantBufferByName'
    // TODO: Method 'GetResourceBindingDesc'
    // TODO: Method 'GetInputParameterDesc'
    // TODO: Method 'GetOutputParameterDesc'
    // TODO: Method 'GetVariableByName'
    // TODO: Method 'GetResourceBindingDescByName'
    // TODO: Method 'GetMovInstructionCount'
    // TODO: Method 'GetMovcInstructionCount'
    // TODO: Method 'GetConversionInstructionCount'
    // TODO: Method 'GetBitwiseInstructionCount'
    // TODO: Method 'GetGSInputPrimitive'
    // TODO: Method 'IsLevel9Shader'
    // TODO: Method 'IsSampleFrequencyShader'
};
// --------------------------------------------------------
// Type: PFN_D3D10_CREATE_DEVICE1
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFN_D3D10_CREATE_DEVICE1 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PFN_D3D10_CREATE_DEVICE_AND_SWAP_CHAIN1
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFN_D3D10_CREATE_DEVICE_AND_SWAP_CHAIN1 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CreateDevice(
    pAdapter: IDXGIAdapter,
    DriverType: D3D10_DRIVER_TYPE,
    Software: ?*opaque{},
    Flags: u32,
    SDKVersion: u32,
    ppDevice: ?*ID3D10Device,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CreateDeviceAndSwapChain(
    pAdapter: IDXGIAdapter,
    DriverType: D3D10_DRIVER_TYPE,
    Software: ?*opaque{},
    Flags: u32,
    SDKVersion: u32,
    pSwapChainDesc: ?*DXGI_SWAP_CHAIN_DESC,
    ppSwapChain: ?*IDXGISwapChain,
    ppDevice: ?*ID3D10Device,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CreateBlob(
    NumBytes: ?*opaque{},
    ppBuffer: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CompileShader(
    pSrcData: ?*i8,
    SrcDataSize: ?*opaque{},
    pFileName: ?*i8,
    pDefines: ?*D3D_SHADER_MACRO,
    pInclude: ID3DInclude,
    pFunctionName: ?*i8,
    pProfile: ?*i8,
    Flags: u32,
    ppShader: ?*ID3DBlob,
    ppErrorMsgs: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10DisassembleShader(
    pShader: ?*opaque{},
    BytecodeLength: ?*opaque{},
    EnableColorCode: BOOL,
    pComments: ?*i8,
    ppDisassembly: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetPixelShaderProfile(
    pDevice: ID3D10Device,
) callconv(@import("std").os.windows.WINAPI) ?*i8;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetVertexShaderProfile(
    pDevice: ID3D10Device,
) callconv(@import("std").os.windows.WINAPI) ?*i8;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetGeometryShaderProfile(
    pDevice: ID3D10Device,
) callconv(@import("std").os.windows.WINAPI) ?*i8;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10ReflectShader(
    pShaderBytecode: ?*opaque{},
    BytecodeLength: ?*opaque{},
    ppReflector: ?*ID3D10ShaderReflection,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10PreprocessShader(
    pSrcData: ?*i8,
    SrcDataSize: ?*opaque{},
    pFileName: ?*i8,
    pDefines: ?*D3D_SHADER_MACRO,
    pInclude: ID3DInclude,
    ppShaderText: ?*ID3DBlob,
    ppErrorMsgs: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetInputSignatureBlob(
    pShaderBytecode: ?*opaque{},
    BytecodeLength: ?*opaque{},
    ppSignatureBlob: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetOutputSignatureBlob(
    pShaderBytecode: ?*opaque{},
    BytecodeLength: ?*opaque{},
    ppSignatureBlob: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetInputAndOutputSignatureBlob(
    pShaderBytecode: ?*opaque{},
    BytecodeLength: ?*opaque{},
    ppSignatureBlob: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10GetShaderDebugInfo(
    pShaderBytecode: ?*opaque{},
    BytecodeLength: ?*opaque{},
    ppDebugInfo: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskUnion(
    pA: ?*D3D10_STATE_BLOCK_MASK,
    pB: ?*D3D10_STATE_BLOCK_MASK,
    pResult: ?*D3D10_STATE_BLOCK_MASK,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskIntersect(
    pA: ?*D3D10_STATE_BLOCK_MASK,
    pB: ?*D3D10_STATE_BLOCK_MASK,
    pResult: ?*D3D10_STATE_BLOCK_MASK,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskDifference(
    pA: ?*D3D10_STATE_BLOCK_MASK,
    pB: ?*D3D10_STATE_BLOCK_MASK,
    pResult: ?*D3D10_STATE_BLOCK_MASK,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskEnableCapture(
    pMask: ?*D3D10_STATE_BLOCK_MASK,
    StateType: D3D10_DEVICE_STATE_TYPES,
    RangeStart: u32,
    RangeLength: u32,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskDisableCapture(
    pMask: ?*D3D10_STATE_BLOCK_MASK,
    StateType: D3D10_DEVICE_STATE_TYPES,
    RangeStart: u32,
    RangeLength: u32,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskEnableAll(
    pMask: ?*D3D10_STATE_BLOCK_MASK,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskDisableAll(
    pMask: ?*D3D10_STATE_BLOCK_MASK,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10StateBlockMaskGetSetting(
    pMask: ?*D3D10_STATE_BLOCK_MASK,
    StateType: D3D10_DEVICE_STATE_TYPES,
    Entry: u32,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CreateStateBlock(
    pDevice: ID3D10Device,
    pStateBlockMask: ?*D3D10_STATE_BLOCK_MASK,
    ppStateBlock: ?*ID3D10StateBlock,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CompileEffectFromMemory(
    pData: ?*opaque{},
    DataLength: ?*opaque{},
    pSrcFileName: ?*i8,
    pDefines: ?*D3D_SHADER_MACRO,
    pInclude: ID3DInclude,
    HLSLFlags: u32,
    FXFlags: u32,
    ppCompiledEffect: ?*ID3DBlob,
    ppErrors: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CreateEffectFromMemory(
    pData: ?*opaque{},
    DataLength: ?*opaque{},
    FXFlags: u32,
    pDevice: ID3D10Device,
    pEffectPool: ID3D10EffectPool,
    ppEffect: ?*ID3D10Effect,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10CreateEffectPoolFromMemory(
    pData: ?*opaque{},
    DataLength: ?*opaque{},
    FXFlags: u32,
    pDevice: ID3D10Device,
    ppEffectPool: ?*ID3D10EffectPool,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10" fn D3D10DisassembleEffect(
    pEffect: ID3D10Effect,
    EnableColorCode: BOOL,
    ppDisassembly: ?*ID3DBlob,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10_1" fn D3D10CreateDevice1(
    pAdapter: IDXGIAdapter,
    DriverType: D3D10_DRIVER_TYPE,
    Software: ?*opaque{},
    Flags: u32,
    HardwareLevel: D3D10_FEATURE_LEVEL1,
    SDKVersion: u32,
    ppDevice: ?*ID3D10Device1,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

// set_last_errror=False (can and should we use this?)
pub extern "d3d10_1" fn D3D10CreateDeviceAndSwapChain1(
    pAdapter: IDXGIAdapter,
    DriverType: D3D10_DRIVER_TYPE,
    Software: ?*opaque{},
    Flags: u32,
    HardwareLevel: D3D10_FEATURE_LEVEL1,
    SDKVersion: u32,
    pSwapChainDesc: ?*DXGI_SWAP_CHAIN_DESC,
    ppSwapChain: ?*IDXGISwapChain,
    ppDevice: ?*ID3D10Device1,
) callconv(@import("std").os.windows.WINAPI) HRESULT;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const DXGI_FORMAT = @import("dxgi.zig").DXGI_FORMAT;
const BOOL = @import("systemservices.zig").BOOL;
const DXGI_SAMPLE_DESC = @import("dxgi.zig").DXGI_SAMPLE_DESC;
const D3D_SRV_DIMENSION = @import("direct3d11.zig").D3D_SRV_DIMENSION;
const D3D_PRIMITIVE_TOPOLOGY = @import("direct3d11.zig").D3D_PRIMITIVE_TOPOLOGY;
const D3D_CBUFFER_TYPE = @import("direct3d11.zig").D3D_CBUFFER_TYPE;
const D3D_SHADER_VARIABLE_CLASS = @import("direct3d11.zig").D3D_SHADER_VARIABLE_CLASS;
const D3D_SHADER_VARIABLE_TYPE = @import("direct3d11.zig").D3D_SHADER_VARIABLE_TYPE;
const D3D_SHADER_INPUT_TYPE = @import("direct3d11.zig").D3D_SHADER_INPUT_TYPE;
const D3D_RESOURCE_RETURN_TYPE = @import("direct3d11.zig").D3D_RESOURCE_RETURN_TYPE;
const D3D_NAME = @import("direct3d11.zig").D3D_NAME;
const D3D_REGISTER_COMPONENT_TYPE = @import("direct3d11.zig").D3D_REGISTER_COMPONENT_TYPE;
const IDXGIAdapter = @import("dxgi.zig").IDXGIAdapter;
const HRESULT = @import("com.zig").HRESULT;
const DXGI_SWAP_CHAIN_DESC = @import("dxgi.zig").DXGI_SWAP_CHAIN_DESC;
const IDXGISwapChain = @import("dxgi.zig").IDXGISwapChain;
const ID3DBlob = @import("direct3d11.zig").ID3DBlob;
const D3D_SHADER_MACRO = @import("direct3d11.zig").D3D_SHADER_MACRO;
const ID3DInclude = @import("direct3d11.zig").ID3DInclude;

test "" {
    const constant_export_count = 0;
    const type_export_count = 177;
    const func_count = 29;
    const unicode_alias_count = 0;
    const type_import_count = 19;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
