//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: RESTOREPOINTINFOA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const RESTOREPOINTINFOA = *opaque{
};
// --------------------------------------------------------
// Type: RESTOREPOINTINFOW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const RESTOREPOINTINFOW = *opaque{
};
// --------------------------------------------------------
// Type: _RESTOREPTINFOEX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const _RESTOREPTINFOEX = *opaque{
};
// --------------------------------------------------------
// Type: STATEMGRSTATUS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const STATEMGRSTATUS = *opaque{
};

//
// functions
//

// set_last_errror=False (can and should we use this?)
pub extern "sfc" fn SRSetRestorePointA(
    pRestorePtSpec: ?*RESTOREPOINTINFOA,
    pSMgrStatus: ?*STATEMGRSTATUS,
) callconv(@import("std").os.windows.WINAPI) BOOL;

// set_last_errror=False (can and should we use this?)
pub extern "sfc" fn SRSetRestorePointW(
    pRestorePtSpec: ?*RESTOREPOINTINFOW,
    pSMgrStatus: ?*STATEMGRSTATUS,
) callconv(@import("std").os.windows.WINAPI) BOOL;

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
        pub const RESTOREPOINTINFO = RESTOREPOINTINFOA;
        pub const SRSetRestorePoint = SRSetRestorePointA;
    },
    .wide => struct {
        pub const RESTOREPOINTINFO = RESTOREPOINTINFOW;
        pub const SRSetRestorePoint = SRSetRestorePointW;
    },
    else => if (@import("builtin").is_test) struct {
        pub const RESTOREPOINTINFO = *opaque{};
        pub const SRSetRestorePoint = *opaque{};
    } else struct {
        pub const RESTOREPOINTINFO = @compileError("'RESTOREPOINTINFO' requires that UNICODE be set to true or false in the root module");
        pub const SRSetRestorePoint = @compileError("'SRSetRestorePoint' requires that UNICODE be set to true or false in the root module");
    },
};

//
// type imports
//
const BOOL = @import("systemservices.zig").BOOL;

test "" {
    const constant_export_count = 0;
    const type_export_count = 4;
    const func_count = 2;
    const unicode_alias_count = 2;
    const type_import_count = 1;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
