//! NOTE: this source file is autogenerated, DO NOT MODIFY

//
// constants
//

//
// types
//
// --------------------------------------------------------
// Type: ENHANCED_STORAGE_PASSWORD_SILO_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ENHANCED_STORAGE_PASSWORD_SILO_INFORMATION = extern struct {
    CurrentAdminFailures: u8,
    CurrentUserFailures: u8,
    TotalUserAuthenticationCount: u32,
    TotalAdminAuthenticationCount: u32,
    FipsCompliant: BOOL,
    SecurityIDAvailable: BOOL,
    InitializeInProgress: BOOL,
    ITMSArmed: BOOL,
    ITMSArmable: BOOL,
    UserCreated: BOOL,
    ResetOnPORDefault: BOOL,
    ResetOnPORCurrent: BOOL,
    MaxAdminFailures: u8,
    MaxUserFailures: u8,
    TimeToCompleteInitialization: u32,
    TimeRemainingToCompleteInitialization: u32,
    MinTimeToAuthenticate: u32,
    MaxAdminPasswordSize: u8,
    MinAdminPasswordSize: u8,
    MaxAdminHintSize: u8,
    MaxUserPasswordSize: u8,
    MinUserPasswordSize: u8,
    MaxUserHintSize: u8,
    MaxUserNameSize: u8,
    MaxSiloNameSize: u8,
    MaxChallengeSize: u16,
};
// --------------------------------------------------------
// Type: EnumEnhancedStorageACT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EnumEnhancedStorageACT = opaque {
};
// --------------------------------------------------------
// Type: EnhancedStorageACT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EnhancedStorageACT = opaque {
};
// --------------------------------------------------------
// Type: EnhancedStorageSilo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EnhancedStorageSilo = opaque {
};
// --------------------------------------------------------
// Type: EnhancedStorageSiloAction
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EnhancedStorageSiloAction = opaque {
};
// --------------------------------------------------------
// Type: ACT_AUTHORIZATION_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ACT_AUTHORIZATION_STATE = extern struct {
    ulState: u32,
};
// --------------------------------------------------------
// Type: SILO_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SILO_INFO = extern struct {
    ulSTID: u32,
    SpecificationMajor: u8,
    SpecificationMinor: u8,
    ImplementationMajor: u8,
    ImplementationMinor: u8,
    type: u8,
    capabilities: u8,
};
// --------------------------------------------------------
// Type: ACT_AUTHORIZATION_STATE_VALUE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ACT_AUTHORIZATION_STATE_VALUE = *opaque{
};
// --------------------------------------------------------
// Type: IEnumEnhancedStorageACT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumEnhancedStorageACT = *opaque{
    // TODO: Method 'GetACTs'
    // TODO: Method 'GetMatchingACT'
};
// --------------------------------------------------------
// Type: IEnhancedStorageACT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnhancedStorageACT = *opaque{
    // TODO: Method 'Authorize'
    // TODO: Method 'Unauthorize'
    // TODO: Method 'GetAuthorizationState'
    // TODO: Method 'GetMatchingVolume'
    // TODO: Method 'GetUniqueIdentity'
    // TODO: Method 'GetSilos'
};
// --------------------------------------------------------
// Type: IEnhancedStorageACT2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnhancedStorageACT2 = *opaque{
    // TODO: Method 'GetDeviceName'
    // TODO: Method 'IsDeviceRemovable'
};
// --------------------------------------------------------
// Type: IEnhancedStorageACT3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnhancedStorageACT3 = *opaque{
    // TODO: Method 'UnauthorizeEx'
    // TODO: Method 'IsQueueFrozen'
    // TODO: Method 'GetShellExtSupport'
};
// --------------------------------------------------------
// Type: IEnhancedStorageSilo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnhancedStorageSilo = *opaque{
    // TODO: Method 'GetInfo'
    // TODO: Method 'GetActions'
    // TODO: Method 'SendCommand'
    // TODO: Method 'GetPortableDevice'
    // TODO: Method 'GetDevicePath'
};
// --------------------------------------------------------
// Type: IEnhancedStorageSiloAction
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnhancedStorageSiloAction = *opaque{
    // TODO: Method 'GetName'
    // TODO: Method 'GetDescription'
    // TODO: Method 'Invoke'
};

//
// functions
//

//
// Unicode Symbol Aliases
//
pub usingnamespace switch (@import("../zig.zig").unicode_mode) {
    .ansi => struct {
    },
    .wide => struct {
    },
    else => if (@import("builtin").is_test) struct {
    } else struct {
    },
};

//
// type imports
//
const BOOL = @import("systemservices.zig").BOOL;

test "" {
    const constant_export_count = 0;
    const type_export_count = 14;
    const func_count = 0;
    const unicode_alias_count = 0;
    const type_import_count = 1;
    @setEvalBranchQuota(0
        + constant_export_count
        + type_export_count
        + func_count
        + unicode_alias_count
        + type_import_count
        + 2 // TODO: why do I need these extra 2?
    );
    @import("std").testing.refAllDecls(@This());
}
