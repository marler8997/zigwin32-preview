{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: DOT11_BSS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_BSS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_SSID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SSID = extern struct {
    uSSIDLength: {"kind":"UInt32"},
    ucSSID: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_AUTH_ALGORITHM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_AUTH_ALGORITHM = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_CIPHER_ALGORITHM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_CIPHER_ALGORITHM = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_AUTH_CIPHER_PAIR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_AUTH_CIPHER_PAIR = extern struct {
    AuthAlgoId: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    CipherAlgoId: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
};
// --------------------------------------------------------
// Type: DOT11_OI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OI = extern struct {
    OILength: {"kind":"UInt16"},
    OI: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_ACCESSNETWORKOPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ACCESSNETWORKOPTIONS = extern struct {
    AccessNetworkType: {"kind":"Byte"},
    Internet: {"kind":"Byte"},
    ASRA: {"kind":"Byte"},
    ESR: {"kind":"Byte"},
    UESA: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_VENUEINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_VENUEINFO = extern struct {
    VenueGroup: {"kind":"Byte"},
    VenueType: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: NDIS_STATISTICS_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_STATISTICS_VALUE = extern struct {
    Oid: {"kind":"UInt32"},
    DataLength: {"kind":"UInt32"},
    Data: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_STATISTICS_VALUE_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_STATISTICS_VALUE_EX = extern struct {
    Oid: {"kind":"UInt32"},
    DataLength: {"kind":"UInt32"},
    Length: {"kind":"UInt32"},
    Data: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_VAR_DATA_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_VAR_DATA_DESC = extern struct {
    Length: {"kind":"UInt16"},
    MaximumLength: {"kind":"UInt16"},
    Offset: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: NDIS_OBJECT_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_OBJECT_HEADER = extern struct {
    Type: {"kind":"Byte"},
    Revision: {"kind":"Byte"},
    Size: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: NDIS_REQUEST_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_REQUEST_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_STATISTICS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_STATISTICS_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    SupportedStatistics: {"kind":"UInt32"},
    ifInDiscards: {"kind":"UInt64"},
    ifInErrors: {"kind":"UInt64"},
    ifHCInOctets: {"kind":"UInt64"},
    ifHCInUcastPkts: {"kind":"UInt64"},
    ifHCInMulticastPkts: {"kind":"UInt64"},
    ifHCInBroadcastPkts: {"kind":"UInt64"},
    ifHCOutOctets: {"kind":"UInt64"},
    ifHCOutUcastPkts: {"kind":"UInt64"},
    ifHCOutMulticastPkts: {"kind":"UInt64"},
    ifHCOutBroadcastPkts: {"kind":"UInt64"},
    ifOutErrors: {"kind":"UInt64"},
    ifOutDiscards: {"kind":"UInt64"},
    ifHCInUcastOctets: {"kind":"UInt64"},
    ifHCInMulticastOctets: {"kind":"UInt64"},
    ifHCInBroadcastOctets: {"kind":"UInt64"},
    ifHCOutUcastOctets: {"kind":"UInt64"},
    ifHCOutMulticastOctets: {"kind":"UInt64"},
    ifHCOutBroadcastOctets: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: NDIS_INTERRUPT_MODERATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_INTERRUPT_MODERATION = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_INTERRUPT_MODERATION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_INTERRUPT_MODERATION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    InterruptModeration: Windows.Win32.NativeWiFi.NDIS_INTERRUPT_MODERATION,
};
// --------------------------------------------------------
// Type: NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    TimeoutArrayLength: {"kind":"UInt32"},
    TimeoutArray: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: NDIS_PCI_DEVICE_CUSTOM_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PCI_DEVICE_CUSTOM_PROPERTIES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    DeviceType: {"kind":"UInt32"},
    CurrentSpeedAndMode: {"kind":"UInt32"},
    CurrentPayloadSize: {"kind":"UInt32"},
    MaxPayloadSize: {"kind":"UInt32"},
    MaxReadRequestSize: {"kind":"UInt32"},
    CurrentLinkSpeed: {"kind":"UInt32"},
    CurrentLinkWidth: {"kind":"UInt32"},
    MaxLinkSpeed: {"kind":"UInt32"},
    MaxLinkWidth: {"kind":"UInt32"},
    PciExpressVersion: {"kind":"UInt32"},
    InterruptType: {"kind":"UInt32"},
    MaxInterruptMessages: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_802_11_STATUS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_STATUS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_STATUS_INDICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_STATUS_INDICATION = extern struct {
    StatusType: Windows.Win32.NativeWiFi.NDIS_802_11_STATUS_TYPE,
};
// --------------------------------------------------------
// Type: NDIS_802_11_AUTHENTICATION_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_AUTHENTICATION_REQUEST = extern struct {
    Length: {"kind":"UInt32"},
    Bssid: {"kind":"Array","child": {"kind":"Byte"}},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PMKID_CANDIDATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const PMKID_CANDIDATE = extern struct {
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_802_11_PMKID_CANDIDATE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_PMKID_CANDIDATE_LIST = extern struct {
    Version: {"kind":"UInt32"},
    NumCandidates: {"kind":"UInt32"},
    CandidateList: {"kind":"Array","child": Windows.Win32.NativeWiFi.PMKID_CANDIDATE},
};
// --------------------------------------------------------
// Type: NDIS_802_11_NETWORK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_NETWORK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_NETWORK_TYPE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_NETWORK_TYPE_LIST = extern struct {
    NumberOfItems: {"kind":"UInt32"},
    NetworkType: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_802_11_NETWORK_TYPE},
};
// --------------------------------------------------------
// Type: NDIS_802_11_POWER_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_POWER_MODE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_CONFIGURATION_FH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_CONFIGURATION_FH = extern struct {
    Length: {"kind":"UInt32"},
    HopPattern: {"kind":"UInt32"},
    HopSet: {"kind":"UInt32"},
    DwellTime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_802_11_CONFIGURATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_CONFIGURATION = extern struct {
    Length: {"kind":"UInt32"},
    BeaconPeriod: {"kind":"UInt32"},
    ATIMWindow: {"kind":"UInt32"},
    DSConfig: {"kind":"UInt32"},
    FHConfig: Windows.Win32.NativeWiFi.NDIS_802_11_CONFIGURATION_FH,
};
// --------------------------------------------------------
// Type: NDIS_802_11_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_STATISTICS = extern struct {
    Length: {"kind":"UInt32"},
    TransmittedFragmentCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    MulticastTransmittedFrameCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    FailedCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    RetryCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    MultipleRetryCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    RTSSuccessCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    RTSFailureCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    ACKFailureCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    FrameDuplicateCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    ReceivedFragmentCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    MulticastReceivedFrameCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    FCSErrorCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    TKIPLocalMICFailures: Windows.Win32.SystemServices.LARGE_INTEGER,
    TKIPICVErrorCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    TKIPCounterMeasuresInvoked: Windows.Win32.SystemServices.LARGE_INTEGER,
    TKIPReplays: Windows.Win32.SystemServices.LARGE_INTEGER,
    CCMPFormatErrors: Windows.Win32.SystemServices.LARGE_INTEGER,
    CCMPReplays: Windows.Win32.SystemServices.LARGE_INTEGER,
    CCMPDecryptErrors: Windows.Win32.SystemServices.LARGE_INTEGER,
    FourWayHandshakeFailures: Windows.Win32.SystemServices.LARGE_INTEGER,
    WEPUndecryptableCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    WEPICVErrorCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    DecryptSuccessCount: Windows.Win32.SystemServices.LARGE_INTEGER,
    DecryptFailureCount: Windows.Win32.SystemServices.LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: NDIS_802_11_KEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_KEY = extern struct {
    Length: {"kind":"UInt32"},
    KeyIndex: {"kind":"UInt32"},
    KeyLength: {"kind":"UInt32"},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    KeyRSC: {"kind":"UInt64"},
    KeyMaterial: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_REMOVE_KEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_REMOVE_KEY = extern struct {
    Length: {"kind":"UInt32"},
    KeyIndex: {"kind":"UInt32"},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_WEP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_WEP = extern struct {
    Length: {"kind":"UInt32"},
    KeyIndex: {"kind":"UInt32"},
    KeyLength: {"kind":"UInt32"},
    KeyMaterial: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_NETWORK_INFRASTRUCTURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_NETWORK_INFRASTRUCTURE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_AUTHENTICATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_AUTHENTICATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_SSID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_SSID = extern struct {
    SsidLength: {"kind":"UInt32"},
    Ssid: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_WLAN_BSSID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WLAN_BSSID = extern struct {
    Length: {"kind":"UInt32"},
    MacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
    Ssid: Windows.Win32.NativeWiFi.NDIS_802_11_SSID,
    Privacy: {"kind":"UInt32"},
    Rssi: {"kind":"Int32"},
    NetworkTypeInUse: Windows.Win32.NativeWiFi.NDIS_802_11_NETWORK_TYPE,
    Configuration: Windows.Win32.NativeWiFi.NDIS_802_11_CONFIGURATION,
    InfrastructureMode: Windows.Win32.NativeWiFi.NDIS_802_11_NETWORK_INFRASTRUCTURE,
    SupportedRates: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_BSSID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_BSSID_LIST = extern struct {
    NumberOfItems: {"kind":"UInt32"},
    Bssid: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_WLAN_BSSID},
};
// --------------------------------------------------------
// Type: NDIS_WLAN_BSSID_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WLAN_BSSID_EX = extern struct {
    Length: {"kind":"UInt32"},
    MacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
    Ssid: Windows.Win32.NativeWiFi.NDIS_802_11_SSID,
    Privacy: {"kind":"UInt32"},
    Rssi: {"kind":"Int32"},
    NetworkTypeInUse: Windows.Win32.NativeWiFi.NDIS_802_11_NETWORK_TYPE,
    Configuration: Windows.Win32.NativeWiFi.NDIS_802_11_CONFIGURATION,
    InfrastructureMode: Windows.Win32.NativeWiFi.NDIS_802_11_NETWORK_INFRASTRUCTURE,
    SupportedRates: {"kind":"Array","child": {"kind":"Byte"}},
    IELength: {"kind":"UInt32"},
    IEs: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_BSSID_LIST_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_BSSID_LIST_EX = extern struct {
    NumberOfItems: {"kind":"UInt32"},
    Bssid: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_WLAN_BSSID_EX},
};
// --------------------------------------------------------
// Type: NDIS_802_11_FIXED_IEs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_FIXED_IEs = extern struct {
    Timestamp: {"kind":"Array","child": {"kind":"Byte"}},
    BeaconInterval: {"kind":"UInt16"},
    Capabilities: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: NDIS_802_11_VARIABLE_IEs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_VARIABLE_IEs = extern struct {
    ElementID: {"kind":"Byte"},
    Length: {"kind":"Byte"},
    data: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_PRIVACY_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_PRIVACY_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_WEP_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_WEP_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_RELOAD_DEFAULTS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_RELOAD_DEFAULTS = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_802_11_AI_REQFI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_AI_REQFI = extern struct {
    Capabilities: {"kind":"UInt16"},
    ListenInterval: {"kind":"UInt16"},
    CurrentAPAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_AI_RESFI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_AI_RESFI = extern struct {
    Capabilities: {"kind":"UInt16"},
    StatusCode: {"kind":"UInt16"},
    AssociationId: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: NDIS_802_11_ASSOCIATION_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_ASSOCIATION_INFORMATION = extern struct {
    Length: {"kind":"UInt32"},
    AvailableRequestFixedIEs: {"kind":"UInt16"},
    RequestFixedIEs: Windows.Win32.NativeWiFi.NDIS_802_11_AI_REQFI,
    RequestIELength: {"kind":"UInt32"},
    OffsetRequestIEs: {"kind":"UInt32"},
    AvailableResponseFixedIEs: {"kind":"UInt16"},
    ResponseFixedIEs: Windows.Win32.NativeWiFi.NDIS_802_11_AI_RESFI,
    ResponseIELength: {"kind":"UInt32"},
    OffsetResponseIEs: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_802_11_AUTHENTICATION_EVENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_AUTHENTICATION_EVENT = extern struct {
    Status: Windows.Win32.NativeWiFi.NDIS_802_11_STATUS_INDICATION,
    Request: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_802_11_AUTHENTICATION_REQUEST},
};
// --------------------------------------------------------
// Type: NDIS_802_11_TEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_TEST = extern struct {
    Length: {"kind":"UInt32"},
    Type: {"kind":"UInt32"},
    Anonymous: Windows.Win32.NativeWiFi.NDIS_802_11_TEST+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: NDIS_802_11_MEDIA_STREAM_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_MEDIA_STREAM_MODE = *opaque{
};
// --------------------------------------------------------
// Type: BSSID_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const BSSID_INFO = extern struct {
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    PMKID: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_802_11_PMKID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_PMKID = extern struct {
    Length: {"kind":"UInt32"},
    BSSIDInfoCount: {"kind":"UInt32"},
    BSSIDInfo: {"kind":"Array","child": Windows.Win32.NativeWiFi.BSSID_INFO},
};
// --------------------------------------------------------
// Type: NDIS_802_11_AUTHENTICATION_ENCRYPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_AUTHENTICATION_ENCRYPTION = extern struct {
    AuthModeSupported: Windows.Win32.NativeWiFi.NDIS_802_11_AUTHENTICATION_MODE,
    EncryptStatusSupported: Windows.Win32.NativeWiFi.NDIS_802_11_WEP_STATUS,
};
// --------------------------------------------------------
// Type: NDIS_802_11_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_CAPABILITY = extern struct {
    Length: {"kind":"UInt32"},
    Version: {"kind":"UInt32"},
    NoOfPMKIDs: {"kind":"UInt32"},
    NoOfAuthEncryptPairsSupported: {"kind":"UInt32"},
    AuthenticationEncryptionSupported: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_802_11_AUTHENTICATION_ENCRYPTION},
};
// --------------------------------------------------------
// Type: NDIS_802_11_NON_BCAST_SSID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_802_11_NON_BCAST_SSID_LIST = extern struct {
    NumberOfItems: {"kind":"UInt32"},
    Non_Bcast_Ssid: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_802_11_SSID},
};
// --------------------------------------------------------
// Type: NDIS_802_11_RADIO_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_11_RADIO_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_CO_DEVICE_PROFILE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_CO_DEVICE_PROFILE = extern struct {
    DeviceDescription: Windows.Win32.NativeWiFi.NDIS_VAR_DATA_DESC,
    DevSpecificInfo: Windows.Win32.NativeWiFi.NDIS_VAR_DATA_DESC,
    ulTAPISupplementaryPassThru: {"kind":"UInt32"},
    ulAddressModes: {"kind":"UInt32"},
    ulNumAddresses: {"kind":"UInt32"},
    ulBearerModes: {"kind":"UInt32"},
    ulMaxTxRate: {"kind":"UInt32"},
    ulMinTxRate: {"kind":"UInt32"},
    ulMaxRxRate: {"kind":"UInt32"},
    ulMinRxRate: {"kind":"UInt32"},
    ulMediaModes: {"kind":"UInt32"},
    ulGenerateToneModes: {"kind":"UInt32"},
    ulGenerateToneMaxNumFreq: {"kind":"UInt32"},
    ulGenerateDigitModes: {"kind":"UInt32"},
    ulMonitorToneMaxNumFreq: {"kind":"UInt32"},
    ulMonitorToneMaxNumEntries: {"kind":"UInt32"},
    ulMonitorDigitModes: {"kind":"UInt32"},
    ulGatherDigitsMinTimeout: {"kind":"UInt32"},
    ulGatherDigitsMaxTimeout: {"kind":"UInt32"},
    ulDevCapFlags: {"kind":"UInt32"},
    ulMaxNumActiveCalls: {"kind":"UInt32"},
    ulAnswerMode: {"kind":"UInt32"},
    ulUUIAcceptSize: {"kind":"UInt32"},
    ulUUIAnswerSize: {"kind":"UInt32"},
    ulUUIMakeCallSize: {"kind":"UInt32"},
    ulUUIDropSize: {"kind":"UInt32"},
    ulUUISendUserUserInfoSize: {"kind":"UInt32"},
    ulUUICallInfoSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: OFFLOAD_OPERATION_E
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const OFFLOAD_OPERATION_E = *opaque{
};
// --------------------------------------------------------
// Type: OFFLOAD_ALGO_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_ALGO_INFO = extern struct {
    algoIdentifier: {"kind":"UInt32"},
    algoKeylen: {"kind":"UInt32"},
    algoRounds: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: OFFLOAD_CONF_ALGO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const OFFLOAD_CONF_ALGO = *opaque{
};
// --------------------------------------------------------
// Type: OFFLOAD_INTEGRITY_ALGO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const OFFLOAD_INTEGRITY_ALGO = *opaque{
};
// --------------------------------------------------------
// Type: OFFLOAD_SECURITY_ASSOCIATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_SECURITY_ASSOCIATION = extern struct {
    Operation: Windows.Win32.NativeWiFi.OFFLOAD_OPERATION_E,
    SPI: {"kind":"UInt32"},
    IntegrityAlgo: Windows.Win32.NativeWiFi.OFFLOAD_ALGO_INFO,
    ConfAlgo: Windows.Win32.NativeWiFi.OFFLOAD_ALGO_INFO,
    Reserved: Windows.Win32.NativeWiFi.OFFLOAD_ALGO_INFO,
};
// --------------------------------------------------------
// Type: OFFLOAD_IPSEC_ADD_SA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_IPSEC_ADD_SA = extern struct {
    SrcAddr: {"kind":"UInt32"},
    SrcMask: {"kind":"UInt32"},
    DestAddr: {"kind":"UInt32"},
    DestMask: {"kind":"UInt32"},
    Protocol: {"kind":"UInt32"},
    SrcPort: {"kind":"UInt16"},
    DestPort: {"kind":"UInt16"},
    SrcTunnelAddr: {"kind":"UInt32"},
    DestTunnelAddr: {"kind":"UInt32"},
    Flags: {"kind":"UInt16"},
    NumSAs: {"kind":"Int16"},
    SecAssoc: {"kind":"Array","child": Windows.Win32.NativeWiFi.OFFLOAD_SECURITY_ASSOCIATION},
    OffloadHandle: Windows.Win32.SystemServices.HANDLE,
    KeyLen: {"kind":"UInt32"},
    KeyMat: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: OFFLOAD_IPSEC_DELETE_SA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_IPSEC_DELETE_SA = extern struct {
    OffloadHandle: Windows.Win32.SystemServices.HANDLE,
};
// --------------------------------------------------------
// Type: UDP_ENCAP_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const UDP_ENCAP_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY = extern struct {
    UdpEncapType: Windows.Win32.NativeWiFi.UDP_ENCAP_TYPE,
    DstEncapPort: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: OFFLOAD_IPSEC_ADD_UDPESP_SA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_IPSEC_ADD_UDPESP_SA = extern struct {
    SrcAddr: {"kind":"UInt32"},
    SrcMask: {"kind":"UInt32"},
    DstAddr: {"kind":"UInt32"},
    DstMask: {"kind":"UInt32"},
    Protocol: {"kind":"UInt32"},
    SrcPort: {"kind":"UInt16"},
    DstPort: {"kind":"UInt16"},
    SrcTunnelAddr: {"kind":"UInt32"},
    DstTunnelAddr: {"kind":"UInt32"},
    Flags: {"kind":"UInt16"},
    NumSAs: {"kind":"Int16"},
    SecAssoc: {"kind":"Array","child": Windows.Win32.NativeWiFi.OFFLOAD_SECURITY_ASSOCIATION},
    OffloadHandle: Windows.Win32.SystemServices.HANDLE,
    EncapTypeEntry: Windows.Win32.NativeWiFi.OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY,
    EncapTypeEntryOffldHandle: Windows.Win32.SystemServices.HANDLE,
    KeyLen: {"kind":"UInt32"},
    KeyMat: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: OFFLOAD_IPSEC_DELETE_UDPESP_SA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const OFFLOAD_IPSEC_DELETE_UDPESP_SA = extern struct {
    OffloadHandle: Windows.Win32.SystemServices.HANDLE,
    EncapTypeEntryOffldHandle: Windows.Win32.SystemServices.HANDLE,
};
// --------------------------------------------------------
// Type: NDIS_MEDIUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_MEDIUM = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_PHYSICAL_MEDIUM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_PHYSICAL_MEDIUM = *opaque{
};
// --------------------------------------------------------
// Type: TRANSPORT_HEADER_OFFSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORT_HEADER_OFFSET = extern struct {
    ProtocolType: {"kind":"UInt16"},
    HeaderOffset: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: NETWORK_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NETWORK_ADDRESS = extern struct {
    AddressLength: {"kind":"UInt16"},
    AddressType: {"kind":"UInt16"},
    Address: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NETWORK_ADDRESS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NETWORK_ADDRESS_LIST = extern struct {
    AddressCount: {"kind":"Int32"},
    AddressType: {"kind":"UInt16"},
    Address: {"kind":"Array","child": Windows.Win32.NativeWiFi.NETWORK_ADDRESS},
};
// --------------------------------------------------------
// Type: NETWORK_ADDRESS_IP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NETWORK_ADDRESS_IP = extern struct {
    sin_port: {"kind":"UInt16"},
    in_addr: {"kind":"UInt32"},
    sin_zero: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NETWORK_ADDRESS_IP6
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NETWORK_ADDRESS_IP6 = extern struct {
    sin6_port: {"kind":"UInt16"},
    sin6_flowinfo: {"kind":"UInt32"},
    sin6_addr: {"kind":"Array","child": {"kind":"UInt16"}},
    sin6_scope_id: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NETWORK_ADDRESS_IPX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NETWORK_ADDRESS_IPX = extern struct {
    NetworkAddress: {"kind":"UInt32"},
    NodeAddress: {"kind":"Array","child": {"kind":"Byte"}},
    Socket: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: NDIS_HARDWARE_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_HARDWARE_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: GEN_GET_TIME_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GEN_GET_TIME_CAPS = extern struct {
    Flags: {"kind":"UInt32"},
    ClockPrecision: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: GEN_GET_NETCARD_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const GEN_GET_NETCARD_TIME = extern struct {
    ReadTime: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: NDIS_PM_PACKET_PATTERN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PM_PACKET_PATTERN = extern struct {
    Priority: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
    MaskSize: {"kind":"UInt32"},
    PatternOffset: {"kind":"UInt32"},
    PatternSize: {"kind":"UInt32"},
    PatternFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_DEVICE_POWER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_DEVICE_POWER_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_PM_WAKE_UP_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PM_WAKE_UP_CAPABILITIES = extern struct {
    MinMagicPacketWakeUp: Windows.Win32.NativeWiFi.NDIS_DEVICE_POWER_STATE,
    MinPatternWakeUp: Windows.Win32.NativeWiFi.NDIS_DEVICE_POWER_STATE,
    MinLinkChangeWakeUp: Windows.Win32.NativeWiFi.NDIS_DEVICE_POWER_STATE,
};
// --------------------------------------------------------
// Type: NDIS_PNP_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PNP_CAPABILITIES = extern struct {
    Flags: {"kind":"UInt32"},
    WakeUpCapabilities: Windows.Win32.NativeWiFi.NDIS_PM_WAKE_UP_CAPABILITIES,
};
// --------------------------------------------------------
// Type: NDIS_FDDI_ATTACHMENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_FDDI_ATTACHMENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_FDDI_RING_MGT_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_FDDI_RING_MGT_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_FDDI_LCONNECTION_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_FDDI_LCONNECTION_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_WAN_MEDIUM_SUBTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_WAN_MEDIUM_SUBTYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_WAN_HEADER_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_WAN_HEADER_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_WAN_QUALITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_WAN_QUALITY = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_WAN_PROTOCOL_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WAN_PROTOCOL_CAPS = extern struct {
    Flags: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_802_5_RING_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_802_5_RING_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_MEDIA_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_MEDIA_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_CO_LINK_SPEED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_CO_LINK_SPEED = extern struct {
    Outbound: {"kind":"UInt32"},
    Inbound: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_LINK_SPEED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_LINK_SPEED = extern struct {
    XmitLinkSpeed: {"kind":"UInt64"},
    RcvLinkSpeed: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: NDIS_GUID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_GUID = extern struct {
    Guid: Guid,
    Anonymous: Windows.Win32.NativeWiFi.NDIS_GUID+_Anonymous_e__Union,
    Size: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: NDIS_IRDA_PACKET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_IRDA_PACKET_INFO = extern struct {
    ExtraBOFs: {"kind":"UInt32"},
    MinTurnAroundTime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_SUPPORTED_PAUSE_FUNCTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_SUPPORTED_PAUSE_FUNCTIONS = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_LINK_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_LINK_STATE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    MediaConnectState: Windows.Win32.NetworkDrivers.NET_IF_MEDIA_CONNECT_STATE,
    MediaDuplexState: Windows.Win32.NetworkDrivers.NET_IF_MEDIA_DUPLEX_STATE,
    XmitLinkSpeed: {"kind":"UInt64"},
    RcvLinkSpeed: {"kind":"UInt64"},
    PauseFunctions: Windows.Win32.NativeWiFi.NDIS_SUPPORTED_PAUSE_FUNCTIONS,
    AutoNegotiationFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_LINK_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_LINK_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    MediaDuplexState: Windows.Win32.NetworkDrivers.NET_IF_MEDIA_DUPLEX_STATE,
    XmitLinkSpeed: {"kind":"UInt64"},
    RcvLinkSpeed: {"kind":"UInt64"},
    PauseFunctions: Windows.Win32.NativeWiFi.NDIS_SUPPORTED_PAUSE_FUNCTIONS,
    AutoNegotiationFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_OPER_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_OPER_STATE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    OperationalStatus: Windows.Win32.NetworkDrivers.NET_IF_OPER_STATUS,
    OperationalStatusFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_IP_OPER_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_IP_OPER_STATUS = extern struct {
    AddressFamily: {"kind":"UInt32"},
    OperationalStatus: Windows.Win32.NetworkDrivers.NET_IF_OPER_STATUS,
    OperationalStatusFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_IP_OPER_STATUS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_IP_OPER_STATUS_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    NumberofAddressFamiliesReturned: {"kind":"UInt32"},
    IpOperationalStatus: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_IP_OPER_STATUS},
};
// --------------------------------------------------------
// Type: NDIS_IP_OPER_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_IP_OPER_STATE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    IpOperationalStatus: Windows.Win32.NativeWiFi.NDIS_IP_OPER_STATUS,
};
// --------------------------------------------------------
// Type: NDIS_OFFLOAD_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_OFFLOAD_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    IPv4Checksum: {"kind":"Byte"},
    TCPIPv4Checksum: {"kind":"Byte"},
    UDPIPv4Checksum: {"kind":"Byte"},
    TCPIPv6Checksum: {"kind":"Byte"},
    UDPIPv6Checksum: {"kind":"Byte"},
    LsoV1: {"kind":"Byte"},
    IPsecV1: {"kind":"Byte"},
    LsoV2IPv4: {"kind":"Byte"},
    LsoV2IPv6: {"kind":"Byte"},
    TcpConnectionIPv4: {"kind":"Byte"},
    TcpConnectionIPv6: {"kind":"Byte"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_TCP_LARGE_SEND_OFFLOAD_V1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TCP_LARGE_SEND_OFFLOAD_V1 = extern struct {
    IPv4: Windows.Win32.NativeWiFi.NDIS_TCP_LARGE_SEND_OFFLOAD_V1+_IPv4_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv4_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        MaxOffLoadSize: {"kind":"UInt32"},
        MinSegmentCount: {"kind":"UInt32"},
        _bitfield: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_TCP_IP_CHECKSUM_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TCP_IP_CHECKSUM_OFFLOAD = extern struct {
    IPv4Transmit: Windows.Win32.NativeWiFi.NDIS_TCP_IP_CHECKSUM_OFFLOAD+_IPv4Transmit_e__Struct,
    IPv4Receive: Windows.Win32.NativeWiFi.NDIS_TCP_IP_CHECKSUM_OFFLOAD+_IPv4Receive_e__Struct,
    IPv6Transmit: Windows.Win32.NativeWiFi.NDIS_TCP_IP_CHECKSUM_OFFLOAD+_IPv6Transmit_e__Struct,
    IPv6Receive: Windows.Win32.NativeWiFi.NDIS_TCP_IP_CHECKSUM_OFFLOAD+_IPv6Receive_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv6Receive_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv6Receive_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        _bitfield: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv4Receive_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4Receive_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        _bitfield: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv6Transmit_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv6Transmit_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        _bitfield: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv4Transmit_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4Transmit_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        _bitfield: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_IPSEC_OFFLOAD_V1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_IPSEC_OFFLOAD_V1 = extern struct {
    Supported: Windows.Win32.NativeWiFi.NDIS_IPSEC_OFFLOAD_V1+_Supported_e__Struct,
    IPv4AH: Windows.Win32.NativeWiFi.NDIS_IPSEC_OFFLOAD_V1+_IPv4AH_e__Struct,
    IPv4ESP: Windows.Win32.NativeWiFi.NDIS_IPSEC_OFFLOAD_V1+_IPv4ESP_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv4AH_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4AH_e__Struct = extern struct {
        _bitfield: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv4ESP_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4ESP_e__Struct = extern struct {
        _bitfield: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _Supported_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Supported_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        AhEspCombined: {"kind":"UInt32"},
        TransportTunnelCombined: {"kind":"UInt32"},
        IPv4Options: {"kind":"UInt32"},
        Flags: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_TCP_LARGE_SEND_OFFLOAD_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TCP_LARGE_SEND_OFFLOAD_V2 = extern struct {
    IPv4: Windows.Win32.NativeWiFi.NDIS_TCP_LARGE_SEND_OFFLOAD_V2+_IPv4_e__Struct,
    IPv6: Windows.Win32.NativeWiFi.NDIS_TCP_LARGE_SEND_OFFLOAD_V2+_IPv6_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv4_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        MaxOffLoadSize: {"kind":"UInt32"},
        MinSegmentCount: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv6_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv6_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        MaxOffLoadSize: {"kind":"UInt32"},
        MinSegmentCount: {"kind":"UInt32"},
        _bitfield: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_OFFLOAD = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Checksum: Windows.Win32.NativeWiFi.NDIS_TCP_IP_CHECKSUM_OFFLOAD,
    LsoV1: Windows.Win32.NativeWiFi.NDIS_TCP_LARGE_SEND_OFFLOAD_V1,
    IPsecV1: Windows.Win32.NativeWiFi.NDIS_IPSEC_OFFLOAD_V1,
    LsoV2: Windows.Win32.NativeWiFi.NDIS_TCP_LARGE_SEND_OFFLOAD_V2,
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 = extern struct {
    IPv4: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1+_IPv4_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv4_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        MaxOffLoadSize: {"kind":"UInt32"},
        MinSegmentCount: {"kind":"UInt32"},
        TcpOptions: {"kind":"UInt32"},
        IpOptions: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD = extern struct {
    IPv4Transmit: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD+_IPv4Transmit_e__Struct,
    IPv4Receive: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD+_IPv4Receive_e__Struct,
    IPv6Transmit: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD+_IPv6Transmit_e__Struct,
    IPv6Receive: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD+_IPv6Receive_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv6Receive_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv6Receive_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        IpExtensionHeadersSupported: {"kind":"UInt32"},
        TcpOptionsSupported: {"kind":"UInt32"},
        TcpChecksum: {"kind":"UInt32"},
        UdpChecksum: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv4Receive_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4Receive_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        IpOptionsSupported: {"kind":"UInt32"},
        TcpOptionsSupported: {"kind":"UInt32"},
        TcpChecksum: {"kind":"UInt32"},
        UdpChecksum: {"kind":"UInt32"},
        IpChecksum: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv4Transmit_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4Transmit_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        IpOptionsSupported: {"kind":"UInt32"},
        TcpOptionsSupported: {"kind":"UInt32"},
        TcpChecksum: {"kind":"UInt32"},
        UdpChecksum: {"kind":"UInt32"},
        IpChecksum: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv6Transmit_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv6Transmit_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        IpExtensionHeadersSupported: {"kind":"UInt32"},
        TcpOptionsSupported: {"kind":"UInt32"},
        TcpChecksum: {"kind":"UInt32"},
        UdpChecksum: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_WMI_IPSEC_OFFLOAD_V1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_IPSEC_OFFLOAD_V1 = extern struct {
    Supported: Windows.Win32.NativeWiFi.NDIS_WMI_IPSEC_OFFLOAD_V1+_Supported_e__Struct,
    IPv4AH: Windows.Win32.NativeWiFi.NDIS_WMI_IPSEC_OFFLOAD_V1+_IPv4AH_e__Struct,
    IPv4ESP: Windows.Win32.NativeWiFi.NDIS_WMI_IPSEC_OFFLOAD_V1+_IPv4ESP_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv4AH_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4AH_e__Struct = extern struct {
        Md5: {"kind":"UInt32"},
        Sha_1: {"kind":"UInt32"},
        Transport: {"kind":"UInt32"},
        Tunnel: {"kind":"UInt32"},
        Send: {"kind":"UInt32"},
        Receive: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _Supported_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Supported_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        AhEspCombined: {"kind":"UInt32"},
        TransportTunnelCombined: {"kind":"UInt32"},
        IPv4Options: {"kind":"UInt32"},
        Flags: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv4ESP_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4ESP_e__Struct = extern struct {
        Des: {"kind":"UInt32"},
        Reserved: {"kind":"UInt32"},
        TripleDes: {"kind":"UInt32"},
        NullEsp: {"kind":"UInt32"},
        Transport: {"kind":"UInt32"},
        Tunnel: {"kind":"UInt32"},
        Send: {"kind":"UInt32"},
        Receive: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 = extern struct {
    IPv4: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2+_IPv4_e__Struct,
    IPv6: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2+_IPv6_e__Struct,
    // --------------------------------------------------------
    // Type: _IPv4_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv4_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        MaxOffLoadSize: {"kind":"UInt32"},
        MinSegmentCount: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _IPv6_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _IPv6_e__Struct = extern struct {
        Encapsulation: {"kind":"UInt32"},
        MaxOffLoadSize: {"kind":"UInt32"},
        MinSegmentCount: {"kind":"UInt32"},
        IpExtensionHeadersSupported: {"kind":"UInt32"},
        TcpOptionsSupported: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: NDIS_WMI_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_OFFLOAD = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Checksum: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD,
    LsoV1: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1,
    IPsecV1: Windows.Win32.NativeWiFi.NDIS_WMI_IPSEC_OFFLOAD_V1,
    LsoV2: Windows.Win32.NativeWiFi.NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2,
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_TCP_CONNECTION_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TCP_CONNECTION_OFFLOAD = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Encapsulation: {"kind":"UInt32"},
    _bitfield: {"kind":"UInt32"},
    TcpConnectionOffloadCapacity: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_WMI_TCP_CONNECTION_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_TCP_CONNECTION_OFFLOAD = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Encapsulation: {"kind":"UInt32"},
    SupportIPv4: {"kind":"UInt32"},
    SupportIPv6: {"kind":"UInt32"},
    SupportIPv6ExtensionHeaders: {"kind":"UInt32"},
    SupportSack: {"kind":"UInt32"},
    TcpConnectionOffloadCapacity: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_PORT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_PORT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_PORT_AUTHORIZATION_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_PORT_AUTHORIZATION_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_PORT_CONTROL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_PORT_CONTROL_STATE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_PORT_AUTHENTICATION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PORT_AUTHENTICATION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    SendControlState: Windows.Win32.NativeWiFi.NDIS_PORT_CONTROL_STATE,
    RcvControlState: Windows.Win32.NativeWiFi.NDIS_PORT_CONTROL_STATE,
    SendAuthorizationState: Windows.Win32.NativeWiFi.NDIS_PORT_AUTHORIZATION_STATE,
    RcvAuthorizationState: Windows.Win32.NativeWiFi.NDIS_PORT_AUTHORIZATION_STATE,
};
// --------------------------------------------------------
// Type: NDIS_NETWORK_CHANGE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_NETWORK_CHANGE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_WMI_METHOD_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_METHOD_HEADER = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PortNumber: {"kind":"UInt32"},
    NetLuid: Windows.Win32.IpHelper.NET_LUID_LH,
    RequestId: {"kind":"UInt64"},
    Timeout: {"kind":"UInt32"},
    Padding: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_WMI_SET_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_SET_HEADER = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PortNumber: {"kind":"UInt32"},
    NetLuid: Windows.Win32.IpHelper.NET_LUID_LH,
    RequestId: {"kind":"UInt64"},
    Timeout: {"kind":"UInt32"},
    Padding: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_WMI_EVENT_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_EVENT_HEADER = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    IfIndex: {"kind":"UInt32"},
    NetLuid: Windows.Win32.IpHelper.NET_LUID_LH,
    RequestId: {"kind":"UInt64"},
    PortNumber: {"kind":"UInt32"},
    DeviceNameLength: {"kind":"UInt32"},
    DeviceNameOffset: {"kind":"UInt32"},
    Padding: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NDIS_WMI_ENUM_ADAPTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_ENUM_ADAPTER = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    IfIndex: {"kind":"UInt32"},
    NetLuid: Windows.Win32.IpHelper.NET_LUID_LH,
    DeviceNameLength: {"kind":"UInt16"},
    DeviceName: {"kind":"Array","child": {"kind":"SByte"}},
};
// --------------------------------------------------------
// Type: NDIS_WMI_OUTPUT_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_WMI_OUTPUT_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    SupportedRevision: {"kind":"Byte"},
    DataOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_RECEIVE_SCALE_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_RECEIVE_SCALE_CAPABILITIES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    CapabilitiesFlags: {"kind":"UInt32"},
    NumberOfInterruptMessages: {"kind":"UInt32"},
    NumberOfReceiveQueues: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_RECEIVE_SCALE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_RECEIVE_SCALE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt16"},
    BaseCpuNumber: {"kind":"UInt16"},
    HashInformation: {"kind":"UInt32"},
    IndirectionTableSize: {"kind":"UInt16"},
    IndirectionTableOffset: {"kind":"UInt32"},
    HashSecretKeySize: {"kind":"UInt16"},
    HashSecretKeyOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_RECEIVE_HASH_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_RECEIVE_HASH_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    HashInformation: {"kind":"UInt32"},
    HashSecretKeySize: {"kind":"UInt16"},
    HashSecretKeyOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_PROCESSOR_VENDOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NDIS_PROCESSOR_VENDOR = *opaque{
};
// --------------------------------------------------------
// Type: NDIS_PORT_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PORT_STATE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    MediaConnectState: Windows.Win32.NetworkDrivers.NET_IF_MEDIA_CONNECT_STATE,
    XmitLinkSpeed: {"kind":"UInt64"},
    RcvLinkSpeed: {"kind":"UInt64"},
    Direction: Windows.Win32.NetworkDrivers.NET_IF_DIRECTION_TYPE,
    SendControlState: Windows.Win32.NativeWiFi.NDIS_PORT_CONTROL_STATE,
    RcvControlState: Windows.Win32.NativeWiFi.NDIS_PORT_CONTROL_STATE,
    SendAuthorizationState: Windows.Win32.NativeWiFi.NDIS_PORT_AUTHORIZATION_STATE,
    RcvAuthorizationState: Windows.Win32.NativeWiFi.NDIS_PORT_AUTHORIZATION_STATE,
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: NDIS_PORT_CHARACTERISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PORT_CHARACTERISTICS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PortNumber: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    Type: Windows.Win32.NativeWiFi.NDIS_PORT_TYPE,
    MediaConnectState: Windows.Win32.NetworkDrivers.NET_IF_MEDIA_CONNECT_STATE,
    XmitLinkSpeed: {"kind":"UInt64"},
    RcvLinkSpeed: {"kind":"UInt64"},
    Direction: Windows.Win32.NetworkDrivers.NET_IF_DIRECTION_TYPE,
    SendControlState: Windows.Win32.NativeWiFi.NDIS_PORT_CONTROL_STATE,
    RcvControlState: Windows.Win32.NativeWiFi.NDIS_PORT_CONTROL_STATE,
    SendAuthorizationState: Windows.Win32.NativeWiFi.NDIS_PORT_AUTHORIZATION_STATE,
    RcvAuthorizationState: Windows.Win32.NativeWiFi.NDIS_PORT_AUTHORIZATION_STATE,
};
// --------------------------------------------------------
// Type: NDIS_PORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PORT = extern struct {
    Next: {"kind""Ptr","child":Windows.Win32.NativeWiFi.NDIS_PORT},
    NdisReserved: {"kind""Ptr","child":{"kind":"Void"}},
    MiniportReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ProtocolReserved: {"kind""Ptr","child":{"kind":"Void"}},
    PortCharacteristics: Windows.Win32.NativeWiFi.NDIS_PORT_CHARACTERISTICS,
};
// --------------------------------------------------------
// Type: NDIS_PORT_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_PORT_ARRAY = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    NumberOfPorts: {"kind":"UInt32"},
    OffsetFirstPort: {"kind":"UInt32"},
    ElementSize: {"kind":"UInt32"},
    Ports: {"kind":"Array","child": Windows.Win32.NativeWiFi.NDIS_PORT_CHARACTERISTICS},
};
// --------------------------------------------------------
// Type: NDIS_TIMESTAMP_CAPABILITY_FLAGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TIMESTAMP_CAPABILITY_FLAGS = extern struct {
    PtpV2OverUdpIPv4EventMsgReceiveHw: {"kind":"Byte"},
    PtpV2OverUdpIPv4AllMsgReceiveHw: {"kind":"Byte"},
    PtpV2OverUdpIPv4EventMsgTransmitHw: {"kind":"Byte"},
    PtpV2OverUdpIPv4AllMsgTransmitHw: {"kind":"Byte"},
    PtpV2OverUdpIPv6EventMsgReceiveHw: {"kind":"Byte"},
    PtpV2OverUdpIPv6AllMsgReceiveHw: {"kind":"Byte"},
    PtpV2OverUdpIPv6EventMsgTransmitHw: {"kind":"Byte"},
    PtpV2OverUdpIPv6AllMsgTransmitHw: {"kind":"Byte"},
    AllReceiveHw: {"kind":"Byte"},
    AllTransmitHw: {"kind":"Byte"},
    TaggedTransmitHw: {"kind":"Byte"},
    AllReceiveSw: {"kind":"Byte"},
    AllTransmitSw: {"kind":"Byte"},
    TaggedTransmitSw: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: NDIS_TIMESTAMP_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_TIMESTAMP_CAPABILITIES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    HardwareClockFrequencyHz: {"kind":"UInt64"},
    CrossTimestamp: {"kind":"Byte"},
    Reserved1: {"kind":"UInt64"},
    Reserved2: {"kind":"UInt64"},
    TimestampFlags: Windows.Win32.NativeWiFi.NDIS_TIMESTAMP_CAPABILITY_FLAGS,
};
// --------------------------------------------------------
// Type: NDIS_HARDWARE_CROSSTIMESTAMP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NDIS_HARDWARE_CROSSTIMESTAMP = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Flags: {"kind":"UInt32"},
    SystemTimestamp1: {"kind":"UInt64"},
    HardwareClockTimestamp: {"kind":"UInt64"},
    SystemTimestamp2: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: DOT11_BSSID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_BSSID_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    BSSIDs: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_PHY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_PHY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_RATE_SET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RATE_SET = extern struct {
    uRateSetLength: {"kind":"UInt32"},
    ucRateSet: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_SESSION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_SESSION_INFO = extern struct {
    uSessionInfoLength: {"kind":"UInt16"},
    ucSessionInfo: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_OFFLOAD_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OFFLOAD_CAPABILITY = extern struct {
    uReserved: {"kind":"UInt32"},
    uFlags: {"kind":"UInt32"},
    uSupportedWEPAlgorithms: {"kind":"UInt32"},
    uNumOfReplayWindows: {"kind":"UInt32"},
    uMaxWEPKeyMappingLength: {"kind":"UInt32"},
    uSupportedAuthAlgorithms: {"kind":"UInt32"},
    uMaxAuthKeyMappingLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_CURRENT_OFFLOAD_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CURRENT_OFFLOAD_CAPABILITY = extern struct {
    uReserved: {"kind":"UInt32"},
    uFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_OFFLOAD_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_OFFLOAD_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_IV48_COUNTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_IV48_COUNTER = extern struct {
    uIV32Counter: {"kind":"UInt32"},
    usIV16Counter: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: DOT11_WEP_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WEP_OFFLOAD = extern struct {
    uReserved: {"kind":"UInt32"},
    hOffloadContext: Windows.Win32.SystemServices.HANDLE,
    hOffload: Windows.Win32.SystemServices.HANDLE,
    dot11OffloadType: Windows.Win32.NativeWiFi.DOT11_OFFLOAD_TYPE,
    dwAlgorithm: {"kind":"UInt32"},
    bRowIsOutbound: {"kind":"Byte"},
    bUseDefault: {"kind":"Byte"},
    uFlags: {"kind":"UInt32"},
    ucMacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    uNumOfRWsOnPeer: {"kind":"UInt32"},
    uNumOfRWsOnMe: {"kind":"UInt32"},
    dot11IV48Counters: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER},
    usDot11RWBitMaps: {"kind":"Array","child": {"kind":"UInt16"}},
    usKeyLength: {"kind":"UInt16"},
    ucKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WEP_UPLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WEP_UPLOAD = extern struct {
    uReserved: {"kind":"UInt32"},
    dot11OffloadType: Windows.Win32.NativeWiFi.DOT11_OFFLOAD_TYPE,
    hOffload: Windows.Win32.SystemServices.HANDLE,
    uNumOfRWsUsed: {"kind":"UInt32"},
    dot11IV48Counters: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER},
    usDot11RWBitMaps: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_KEY_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_DEFAULT_WEP_OFFLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DEFAULT_WEP_OFFLOAD = extern struct {
    uReserved: {"kind":"UInt32"},
    hOffloadContext: Windows.Win32.SystemServices.HANDLE,
    hOffload: Windows.Win32.SystemServices.HANDLE,
    dwIndex: {"kind":"UInt32"},
    dot11OffloadType: Windows.Win32.NativeWiFi.DOT11_OFFLOAD_TYPE,
    dwAlgorithm: {"kind":"UInt32"},
    uFlags: {"kind":"UInt32"},
    dot11KeyDirection: Windows.Win32.NativeWiFi.DOT11_KEY_DIRECTION,
    ucMacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    uNumOfRWsOnMe: {"kind":"UInt32"},
    dot11IV48Counters: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER},
    usDot11RWBitMaps: {"kind":"Array","child": {"kind":"UInt16"}},
    usKeyLength: {"kind":"UInt16"},
    ucKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_DEFAULT_WEP_UPLOAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DEFAULT_WEP_UPLOAD = extern struct {
    uReserved: {"kind":"UInt32"},
    dot11OffloadType: Windows.Win32.NativeWiFi.DOT11_OFFLOAD_TYPE,
    hOffload: Windows.Win32.SystemServices.HANDLE,
    uNumOfRWsUsed: {"kind":"UInt32"},
    dot11IV48Counters: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER},
    usDot11RWBitMaps: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: DOT11_OPERATION_MODE_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OPERATION_MODE_CAPABILITY = extern struct {
    uReserved: {"kind":"UInt32"},
    uMajorVersion: {"kind":"UInt32"},
    uMinorVersion: {"kind":"UInt32"},
    uNumOfTXBuffers: {"kind":"UInt32"},
    uNumOfRXBuffers: {"kind":"UInt32"},
    uOpModeCapability: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_CURRENT_OPERATION_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CURRENT_OPERATION_MODE = extern struct {
    uReserved: {"kind":"UInt32"},
    uCurrentOpMode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SCAN_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_SCAN_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_SCAN_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SCAN_REQUEST = extern struct {
    dot11BSSType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dot11BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    dot11SSID: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11ScanType: Windows.Win32.NativeWiFi.DOT11_SCAN_TYPE,
    bRestrictedScan: {"kind":"Byte"},
    bUseRequestIE: {"kind":"Byte"},
    uRequestIDsOffset: {"kind":"UInt32"},
    uNumOfRequestIDs: {"kind":"UInt32"},
    uPhyTypesOffset: {"kind":"UInt32"},
    uNumOfPhyTypes: {"kind":"UInt32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: CH_DESCRIPTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CH_DESCRIPTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_PHY_TYPE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_TYPE_INFO = extern struct {
    dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    bUseParameters: {"kind":"Byte"},
    uProbeDelay: {"kind":"UInt32"},
    uMinChannelTime: {"kind":"UInt32"},
    uMaxChannelTime: {"kind":"UInt32"},
    ChDescriptionType: Windows.Win32.NativeWiFi.CH_DESCRIPTION_TYPE,
    uChannelListSize: {"kind":"UInt32"},
    ucChannelListBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_SCAN_REQUEST_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SCAN_REQUEST_V2 = extern struct {
    dot11BSSType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dot11BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    dot11ScanType: Windows.Win32.NativeWiFi.DOT11_SCAN_TYPE,
    bRestrictedScan: {"kind":"Byte"},
    udot11SSIDsOffset: {"kind":"UInt32"},
    uNumOfdot11SSIDs: {"kind":"UInt32"},
    bUseRequestIE: {"kind":"Byte"},
    uRequestIDsOffset: {"kind":"UInt32"},
    uNumOfRequestIDs: {"kind":"UInt32"},
    uPhyTypeInfosOffset: {"kind":"UInt32"},
    uNumOfPhyTypeInfos: {"kind":"UInt32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_PHY_TYPE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_TYPE_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11PhyType: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PHY_TYPE},
};
// --------------------------------------------------------
// Type: DOT11_BSS_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_BSS_DESCRIPTION = extern struct {
    uReserved: {"kind":"UInt32"},
    dot11BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    dot11BSSType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    usBeaconPeriod: {"kind":"UInt16"},
    ullTimestamp: {"kind":"UInt64"},
    usCapabilityInformation: {"kind":"UInt16"},
    uBufferLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_JOIN_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_JOIN_REQUEST = extern struct {
    uJoinFailureTimeout: {"kind":"UInt32"},
    OperationalRateSet: Windows.Win32.NativeWiFi.DOT11_RATE_SET,
    uChCenterFrequency: {"kind":"UInt32"},
    dot11BSSDescription: Windows.Win32.NativeWiFi.DOT11_BSS_DESCRIPTION,
};
// --------------------------------------------------------
// Type: DOT11_START_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_START_REQUEST = extern struct {
    uStartFailureTimeout: {"kind":"UInt32"},
    OperationalRateSet: Windows.Win32.NativeWiFi.DOT11_RATE_SET,
    uChCenterFrequency: {"kind":"UInt32"},
    dot11BSSDescription: Windows.Win32.NativeWiFi.DOT11_BSS_DESCRIPTION,
};
// --------------------------------------------------------
// Type: DOT11_UPDATE_IE_OP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_UPDATE_IE_OP = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_UPDATE_IE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_UPDATE_IE = extern struct {
    dot11UpdateIEOp: Windows.Win32.NativeWiFi.DOT11_UPDATE_IE_OP,
    uBufferLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_RESET_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_RESET_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_RESET_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RESET_REQUEST = extern struct {
    dot11ResetType: Windows.Win32.NativeWiFi.DOT11_RESET_TYPE,
    dot11MacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    bSetDefaultMIB: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_OPTIONAL_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OPTIONAL_CAPABILITY = extern struct {
    uReserved: {"kind":"UInt32"},
    bDot11PCF: {"kind":"Byte"},
    bDot11PCFMPDUTransferToPC: {"kind":"Byte"},
    bStrictlyOrderedServiceClass: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_CURRENT_OPTIONAL_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CURRENT_OPTIONAL_CAPABILITY = extern struct {
    uReserved: {"kind":"UInt32"},
    bDot11CFPollable: {"kind":"Byte"},
    bDot11PCF: {"kind":"Byte"},
    bDot11PCFMPDUTransferToPC: {"kind":"Byte"},
    bStrictlyOrderedServiceClass: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_POWER_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_POWER_MODE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_POWER_MGMT_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_POWER_MGMT_MODE = extern struct {
    dot11PowerMode: Windows.Win32.NativeWiFi.DOT11_POWER_MODE,
    uPowerSaveLevel: {"kind":"UInt32"},
    usListenInterval: {"kind":"UInt16"},
    usAID: {"kind":"UInt16"},
    bReceiveDTIMs: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_COUNTERS_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_COUNTERS_ENTRY = extern struct {
    uTransmittedFragmentCount: {"kind":"UInt32"},
    uMulticastTransmittedFrameCount: {"kind":"UInt32"},
    uFailedCount: {"kind":"UInt32"},
    uRetryCount: {"kind":"UInt32"},
    uMultipleRetryCount: {"kind":"UInt32"},
    uFrameDuplicateCount: {"kind":"UInt32"},
    uRTSSuccessCount: {"kind":"UInt32"},
    uRTSFailureCount: {"kind":"UInt32"},
    uACKFailureCount: {"kind":"UInt32"},
    uReceivedFragmentCount: {"kind":"UInt32"},
    uMulticastReceivedFrameCount: {"kind":"UInt32"},
    uFCSErrorCount: {"kind":"UInt32"},
    uTransmittedFrameCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_PHY_TYPES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_PHY_TYPES = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11PHYType: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PHY_TYPE},
};
// --------------------------------------------------------
// Type: DOT11_TEMP_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_TEMP_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_DIVERSITY_SUPPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_DIVERSITY_SUPPORT = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_POWER_LEVELS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_POWER_LEVELS = extern struct {
    uNumOfSupportedPowerLevels: {"kind":"UInt32"},
    uTxPowerLevelValues: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: DOT11_REG_DOMAIN_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_REG_DOMAIN_VALUE = extern struct {
    uRegDomainsSupportIndex: {"kind":"UInt32"},
    uRegDomainsSupportValue: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_REG_DOMAINS_SUPPORT_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_REG_DOMAINS_SUPPORT_VALUE = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11RegDomainValue: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_REG_DOMAIN_VALUE},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_ANTENNA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_ANTENNA = extern struct {
    uAntennaListIndex: {"kind":"UInt32"},
    bSupportedAntenna: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_ANTENNA_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_ANTENNA_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11SupportedAntenna: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_SUPPORTED_ANTENNA},
};
// --------------------------------------------------------
// Type: DOT11_DIVERSITY_SELECTION_RX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DIVERSITY_SELECTION_RX = extern struct {
    uAntennaListIndex: {"kind":"UInt32"},
    bDiversitySelectionRX: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_DIVERSITY_SELECTION_RX_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DIVERSITY_SELECTION_RX_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11DiversitySelectionRx: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_DIVERSITY_SELECTION_RX},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_DATA_RATES_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_DATA_RATES_VALUE = extern struct {
    ucSupportedTxDataRatesValue: {"kind":"Array","child": {"kind":"Byte"}},
    ucSupportedRxDataRatesValue: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_DATA_RATES_VALUE_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_DATA_RATES_VALUE_V2 = extern struct {
    ucSupportedTxDataRatesValue: {"kind":"Array","child": {"kind":"Byte"}},
    ucSupportedRxDataRatesValue: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY = extern struct {
    uMultiDomainCapabilityIndex: {"kind":"UInt32"},
    uFirstChannelNumber: {"kind":"UInt32"},
    uNumberOfChannels: {"kind":"UInt32"},
    lMaximumTransmitPowerLevel: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_MD_CAPABILITY_ENTRY_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MD_CAPABILITY_ENTRY_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11MDCapabilityEntry: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY},
};
// --------------------------------------------------------
// Type: DOT11_HOP_ALGO_ADOPTED
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_HOP_ALGO_ADOPTED = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_HOPPING_PATTERN_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_HOPPING_PATTERN_ENTRY = extern struct {
    uHoppingPatternIndex: {"kind":"UInt32"},
    uRandomTableFieldNumber: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_HOPPING_PATTERN_ENTRY_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_HOPPING_PATTERN_ENTRY_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11HoppingPatternEntry: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_HOPPING_PATTERN_ENTRY},
};
// --------------------------------------------------------
// Type: DOT11_WPA_TSC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WPA_TSC = extern struct {
    uReserved: {"kind":"UInt32"},
    dot11OffloadType: Windows.Win32.NativeWiFi.DOT11_OFFLOAD_TYPE,
    hOffload: Windows.Win32.SystemServices.HANDLE,
    dot11IV48Counter: Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER,
};
// --------------------------------------------------------
// Type: DOT11_RSSI_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RSSI_RANGE = extern struct {
    dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    uRSSIMin: {"kind":"UInt32"},
    uRSSIMax: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_NIC_SPECIFIC_EXTENSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_NIC_SPECIFIC_EXTENSION = extern struct {
    uBufferLength: {"kind":"UInt32"},
    uTotalBufferLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_AP_JOIN_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_AP_JOIN_REQUEST = extern struct {
    uJoinFailureTimeout: {"kind":"UInt32"},
    OperationalRateSet: Windows.Win32.NativeWiFi.DOT11_RATE_SET,
    uChCenterFrequency: {"kind":"UInt32"},
    dot11BSSDescription: Windows.Win32.NativeWiFi.DOT11_BSS_DESCRIPTION,
};
// --------------------------------------------------------
// Type: DOT11_RECV_SENSITIVITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECV_SENSITIVITY = extern struct {
    ucDataRate: {"kind":"Byte"},
    lRSSIMin: {"kind":"Int32"},
    lRSSIMax: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_RECV_SENSITIVITY_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECV_SENSITIVITY_LIST = extern struct {
    Anonymous: Windows.Win32.NativeWiFi.DOT11_RECV_SENSITIVITY_LIST+_Anonymous_e__Union,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11RecvSensitivity: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_RECV_SENSITIVITY},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DOT11_AC_PARAM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_AC_PARAM = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_WME_AC_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WME_AC_PARAMETERS = extern struct {
    ucAccessCategoryIndex: {"kind":"Byte"},
    ucAIFSN: {"kind":"Byte"},
    ucECWmin: {"kind":"Byte"},
    ucECWmax: {"kind":"Byte"},
    usTXOPLimit: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: _DOT11_WME_AC_PARAMTERS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const _DOT11_WME_AC_PARAMTERS_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11WMEACParameters: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_WME_AC_PARAMETERS},
};
// --------------------------------------------------------
// Type: DOT11_WME_UPDATE_IE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WME_UPDATE_IE = extern struct {
    uParamElemMinBeaconIntervals: {"kind":"UInt32"},
    uWMEInfoElemOffset: {"kind":"UInt32"},
    uWMEInfoElemLength: {"kind":"UInt32"},
    uWMEParamElemOffset: {"kind":"UInt32"},
    uWMEParamElemLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_QOS_TX_DURATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_QOS_TX_DURATION = extern struct {
    uNominalMSDUSize: {"kind":"UInt32"},
    uMinPHYRate: {"kind":"UInt32"},
    uDuration: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_QOS_TX_MEDIUM_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_QOS_TX_MEDIUM_TIME = extern struct {
    dot11PeerAddress: {"kind":"Array","child": {"kind":"Byte"}},
    ucQoSPriority: {"kind":"Byte"},
    uMediumTimeAdmited: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_OFDM_FREQUENCY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_OFDM_FREQUENCY = extern struct {
    uCenterFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_OFDM_FREQUENCY_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_OFDM_FREQUENCY_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11SupportedOFDMFrequency: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_SUPPORTED_OFDM_FREQUENCY},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_DSSS_CHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_DSSS_CHANNEL = extern struct {
    uChannel: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SUPPORTED_DSSS_CHANNEL_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SUPPORTED_DSSS_CHANNEL_LIST = extern struct {
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11SupportedDSSSChannel: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_SUPPORTED_DSSS_CHANNEL},
};
// --------------------------------------------------------
// Type: DOT11_BYTE_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_BYTE_ARRAY = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfBytes: {"kind":"UInt32"},
    uTotalNumOfBytes: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO = *opaque{
    // --------------------------------------------------------
    // Type: _FHSS_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _FHSS_e__Struct = extern struct {
        uHopPattern: {"kind":"UInt32"},
        uHopSet: {"kind":"UInt32"},
        uDwellTime: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: DOT11_BSS_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_BSS_ENTRY = extern struct {
    uPhyId: {"kind":"UInt32"},
    PhySpecificInfo: Windows.Win32.NativeWiFi.DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO,
    dot11BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    dot11BSSType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    lRSSI: {"kind":"Int32"},
    uLinkQuality: {"kind":"UInt32"},
    bInRegDomain: {"kind":"Byte"},
    usBeaconPeriod: {"kind":"UInt16"},
    ullTimestamp: {"kind":"UInt64"},
    ullHostTimestamp: {"kind":"UInt64"},
    usCapabilityInformation: {"kind":"UInt16"},
    uBufferLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_SSID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SSID_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    SSIDs: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_SSID},
};
// --------------------------------------------------------
// Type: DOT11_MAC_ADDRESS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MAC_ADDRESS_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    MacAddrs: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_PMKID_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PMKID_ENTRY = extern struct {
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    PMKID: {"kind":"Array","child": {"kind":"Byte"}},
    uFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PMKID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PMKID_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    PMKIDs: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PMKID_ENTRY},
};
// --------------------------------------------------------
// Type: DOT11_PHY_FRAME_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_FRAME_STATISTICS = extern struct {
    ullTransmittedFrameCount: {"kind":"UInt64"},
    ullMulticastTransmittedFrameCount: {"kind":"UInt64"},
    ullFailedCount: {"kind":"UInt64"},
    ullRetryCount: {"kind":"UInt64"},
    ullMultipleRetryCount: {"kind":"UInt64"},
    ullMaxTXLifetimeExceededCount: {"kind":"UInt64"},
    ullTransmittedFragmentCount: {"kind":"UInt64"},
    ullRTSSuccessCount: {"kind":"UInt64"},
    ullRTSFailureCount: {"kind":"UInt64"},
    ullACKFailureCount: {"kind":"UInt64"},
    ullReceivedFrameCount: {"kind":"UInt64"},
    ullMulticastReceivedFrameCount: {"kind":"UInt64"},
    ullPromiscuousReceivedFrameCount: {"kind":"UInt64"},
    ullMaxRXLifetimeExceededCount: {"kind":"UInt64"},
    ullFrameDuplicateCount: {"kind":"UInt64"},
    ullReceivedFragmentCount: {"kind":"UInt64"},
    ullPromiscuousReceivedFragmentCount: {"kind":"UInt64"},
    ullFCSErrorCount: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: DOT11_MAC_FRAME_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MAC_FRAME_STATISTICS = extern struct {
    ullTransmittedFrameCount: {"kind":"UInt64"},
    ullReceivedFrameCount: {"kind":"UInt64"},
    ullTransmittedFailureFrameCount: {"kind":"UInt64"},
    ullReceivedFailureFrameCount: {"kind":"UInt64"},
    ullWEPExcludedCount: {"kind":"UInt64"},
    ullTKIPLocalMICFailures: {"kind":"UInt64"},
    ullTKIPReplays: {"kind":"UInt64"},
    ullTKIPICVErrorCount: {"kind":"UInt64"},
    ullCCMPReplays: {"kind":"UInt64"},
    ullCCMPDecryptErrors: {"kind":"UInt64"},
    ullWEPUndecryptableCount: {"kind":"UInt64"},
    ullWEPICVErrorCount: {"kind":"UInt64"},
    ullDecryptSuccessCount: {"kind":"UInt64"},
    ullDecryptFailureCount: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: DOT11_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_STATISTICS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ullFourWayHandshakeFailures: {"kind":"UInt64"},
    ullTKIPCounterMeasuresInvoked: {"kind":"UInt64"},
    ullReserved: {"kind":"UInt64"},
    MacUcastCounters: Windows.Win32.NativeWiFi.DOT11_MAC_FRAME_STATISTICS,
    MacMcastCounters: Windows.Win32.NativeWiFi.DOT11_MAC_FRAME_STATISTICS,
    PhyCounters: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PHY_FRAME_STATISTICS},
};
// --------------------------------------------------------
// Type: DOT11_PRIVACY_EXEMPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PRIVACY_EXEMPTION = extern struct {
    usEtherType: {"kind":"UInt16"},
    usExemptionActionType: {"kind":"UInt16"},
    usExemptionPacketType: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: DOT11_PRIVACY_EXEMPTION_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PRIVACY_EXEMPTION_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    PrivacyExemptionEntries: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PRIVACY_EXEMPTION},
};
// --------------------------------------------------------
// Type: DOT11_AUTH_ALGORITHM_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_AUTH_ALGORITHM_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    AlgorithmIds: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM},
};
// --------------------------------------------------------
// Type: DOT11_AUTH_CIPHER_PAIR_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_AUTH_CIPHER_PAIR_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    AuthCipherPairs: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
};
// --------------------------------------------------------
// Type: DOT11_CIPHER_ALGORITHM_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CIPHER_ALGORITHM_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    AlgorithmIds: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM},
};
// --------------------------------------------------------
// Type: DOT11_CIPHER_DEFAULT_KEY_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CIPHER_DEFAULT_KEY_VALUE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uKeyIndex: {"kind":"UInt32"},
    AlgorithmId: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    MacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    bDelete: {"kind":"Byte"},
    bStatic: {"kind":"Byte"},
    usKeyLength: {"kind":"UInt16"},
    ucKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_ALGO_TKIP_MIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_KEY_ALGO_TKIP_MIC = extern struct {
    ucIV48Counter: {"kind":"Array","child": {"kind":"Byte"}},
    ulTKIPKeyLength: {"kind":"UInt32"},
    ulMICKeyLength: {"kind":"UInt32"},
    ucTKIPMICKeys: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_ALGO_CCMP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_KEY_ALGO_CCMP = extern struct {
    ucIV48Counter: {"kind":"Array","child": {"kind":"Byte"}},
    ulCCMPKeyLength: {"kind":"UInt32"},
    ucCCMPKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_ALGO_GCMP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_KEY_ALGO_GCMP = extern struct {
    ucIV48Counter: {"kind":"Array","child": {"kind":"Byte"}},
    ulGCMPKeyLength: {"kind":"UInt32"},
    ucGCMPKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_ALGO_GCMP_256
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_KEY_ALGO_GCMP_256 = extern struct {
    ucIV48Counter: {"kind":"Array","child": {"kind":"Byte"}},
    ulGCMP256KeyLength: {"kind":"UInt32"},
    ucGCMP256Key: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_ALGO_BIP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_KEY_ALGO_BIP = extern struct {
    ucIPN: {"kind":"Array","child": {"kind":"Byte"}},
    ulBIPKeyLength: {"kind":"UInt32"},
    ucBIPKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_KEY_ALGO_BIP_GMAC_256
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_KEY_ALGO_BIP_GMAC_256 = extern struct {
    ucIPN: {"kind":"Array","child": {"kind":"Byte"}},
    ulBIPGmac256KeyLength: {"kind":"UInt32"},
    ucBIPGmac256Key: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_CIPHER_KEY_MAPPING_KEY_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CIPHER_KEY_MAPPING_KEY_VALUE = extern struct {
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    AlgorithmId: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    Direction: Windows.Win32.NativeWiFi.DOT11_DIRECTION,
    bDelete: {"kind":"Byte"},
    bStatic: {"kind":"Byte"},
    usKeyLength: {"kind":"UInt16"},
    ucKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_ASSOCIATION_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_ASSOCIATION_STATE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_ASSOCIATION_INFO_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ASSOCIATION_INFO_EX = extern struct {
    PeerMacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    usCapabilityInformation: {"kind":"UInt16"},
    usListenInterval: {"kind":"UInt16"},
    ucPeerSupportedRates: {"kind":"Array","child": {"kind":"Byte"}},
    usAssociationID: {"kind":"UInt16"},
    dot11AssociationState: Windows.Win32.NativeWiFi.DOT11_ASSOCIATION_STATE,
    dot11PowerMode: Windows.Win32.NativeWiFi.DOT11_POWER_MODE,
    liAssociationUpTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    ullNumOfTxPacketSuccesses: {"kind":"UInt64"},
    ullNumOfTxPacketFailures: {"kind":"UInt64"},
    ullNumOfRxPacketSuccesses: {"kind":"UInt64"},
    ullNumOfRxPacketFailures: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: DOT11_ASSOCIATION_INFO_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ASSOCIATION_INFO_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11AssocInfo: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_ASSOCIATION_INFO_EX},
};
// --------------------------------------------------------
// Type: DOT11_PHY_ID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_ID_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    dot11PhyId: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: DOT11_EXTSTA_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_EXTSTA_CAPABILITY = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uScanSSIDListSize: {"kind":"UInt32"},
    uDesiredBSSIDListSize: {"kind":"UInt32"},
    uDesiredSSIDListSize: {"kind":"UInt32"},
    uExcludedMacAddressListSize: {"kind":"UInt32"},
    uPrivacyExemptionListSize: {"kind":"UInt32"},
    uKeyMappingTableSize: {"kind":"UInt32"},
    uDefaultKeyTableSize: {"kind":"UInt32"},
    uWEPKeyValueMaxLength: {"kind":"UInt32"},
    uPMKIDCacheSize: {"kind":"UInt32"},
    uMaxNumPerSTADefaultKeyTables: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_DATA_RATE_MAPPING_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DATA_RATE_MAPPING_ENTRY = extern struct {
    ucDataRateIndex: {"kind":"Byte"},
    ucDataRateFlag: {"kind":"Byte"},
    usDataRateValue: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: DOT11_DATA_RATE_MAPPING_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DATA_RATE_MAPPING_TABLE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uDataRateMappingLength: {"kind":"UInt32"},
    DataRateMappingEntries: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_DATA_RATE_MAPPING_ENTRY},
};
// --------------------------------------------------------
// Type: DOT11_COUNTRY_OR_REGION_STRING_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_COUNTRY_OR_REGION_STRING_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    CountryOrRegionStrings: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_PORT_STATE_NOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PORT_STATE_NOTIFICATION = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMac: {"kind":"Array","child": {"kind":"Byte"}},
    bOpen: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_IBSS_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_IBSS_PARAMS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    bJoinOnly: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_QOS_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_QOS_PARAMS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ucEnabledQoSProtocolFlags: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_ASSOCIATION_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ASSOCIATION_PARAMS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    uAssocRequestIEsOffset: {"kind":"UInt32"},
    uAssocRequestIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_FRAGMENT_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_FRAGMENT_DESCRIPTOR = extern struct {
    uOffset: {"kind":"UInt32"},
    uLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PER_MSDU_COUNTERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PER_MSDU_COUNTERS = extern struct {
    uTransmittedFragmentCount: {"kind":"UInt32"},
    uRetryCount: {"kind":"UInt32"},
    uRTSSuccessCount: {"kind":"UInt32"},
    uRTSFailureCount: {"kind":"UInt32"},
    uACKFailureCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_HRDSSS_PHY_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_HRDSSS_PHY_ATTRIBUTES = extern struct {
    bShortPreambleOptionImplemented: {"kind":"Byte"},
    bPBCCOptionImplemented: {"kind":"Byte"},
    bChannelAgilityPresent: {"kind":"Byte"},
    uHRCCAModeSupported: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_OFDM_PHY_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OFDM_PHY_ATTRIBUTES = extern struct {
    uFrequencyBandsSupported: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_ERP_PHY_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ERP_PHY_ATTRIBUTES = extern struct {
    HRDSSSAttributes: Windows.Win32.NativeWiFi.DOT11_HRDSSS_PHY_ATTRIBUTES,
    bERPPBCCOptionImplemented: {"kind":"Byte"},
    bDSSSOFDMOptionImplemented: {"kind":"Byte"},
    bShortSlotTimeOptionImplemented: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_PHY_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_ATTRIBUTES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    bHardwarePhyState: {"kind":"Byte"},
    bSoftwarePhyState: {"kind":"Byte"},
    bCFPollable: {"kind":"Byte"},
    uMPDUMaxLength: {"kind":"UInt32"},
    TempType: Windows.Win32.NativeWiFi.DOT11_TEMP_TYPE,
    DiversitySupport: Windows.Win32.NativeWiFi.DOT11_DIVERSITY_SUPPORT,
    PhySpecificAttributes: Windows.Win32.NativeWiFi.DOT11_PHY_ATTRIBUTES+_PhySpecificAttributes_e__Union,
    uNumberSupportedPowerLevels: {"kind":"UInt32"},
    TxPowerLevels: {"kind":"Array","child": {"kind":"UInt32"}},
    uNumDataRateMappingEntries: {"kind":"UInt32"},
    DataRateMappingEntries: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_DATA_RATE_MAPPING_ENTRY},
    SupportedDataRatesValue: Windows.Win32.NativeWiFi.DOT11_SUPPORTED_DATA_RATES_VALUE_V2,
    // --------------------------------------------------------
    // Type: _PhySpecificAttributes_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _PhySpecificAttributes_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DOT11_EXTSTA_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_EXTSTA_ATTRIBUTES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uScanSSIDListSize: {"kind":"UInt32"},
    uDesiredBSSIDListSize: {"kind":"UInt32"},
    uDesiredSSIDListSize: {"kind":"UInt32"},
    uExcludedMacAddressListSize: {"kind":"UInt32"},
    uPrivacyExemptionListSize: {"kind":"UInt32"},
    uKeyMappingTableSize: {"kind":"UInt32"},
    uDefaultKeyTableSize: {"kind":"UInt32"},
    uWEPKeyValueMaxLength: {"kind":"UInt32"},
    uPMKIDCacheSize: {"kind":"UInt32"},
    uMaxNumPerSTADefaultKeyTables: {"kind":"UInt32"},
    bStrictlyOrderedServiceClassImplemented: {"kind":"Byte"},
    ucSupportedQoSProtocolFlags: {"kind":"Byte"},
    bSafeModeImplemented: {"kind":"Byte"},
    uNumSupportedCountryOrRegionStrings: {"kind":"UInt32"},
    pSupportedCountryOrRegionStrings: {"kind""Ptr","child":{"kind":"Byte"}},
    uInfraNumSupportedUcastAlgoPairs: {"kind":"UInt32"},
    pInfraSupportedUcastAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
    uInfraNumSupportedMcastAlgoPairs: {"kind":"UInt32"},
    pInfraSupportedMcastAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
    uAdhocNumSupportedUcastAlgoPairs: {"kind":"UInt32"},
    pAdhocSupportedUcastAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
    uAdhocNumSupportedMcastAlgoPairs: {"kind":"UInt32"},
    pAdhocSupportedMcastAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
    bAutoPowerSaveMode: {"kind":"Byte"},
    uMaxNetworkOffloadListSize: {"kind":"UInt32"},
    bMFPCapable: {"kind":"Byte"},
    uInfraNumSupportedMcastMgmtAlgoPairs: {"kind":"UInt32"},
    pInfraSupportedMcastMgmtAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
    bNeighborReportSupported: {"kind":"Byte"},
    bAPChannelReportSupported: {"kind":"Byte"},
    bActionFramesSupported: {"kind":"Byte"},
    bANQPQueryOffloadSupported: {"kind":"Byte"},
    bHESSIDConnectionSupported: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_RECV_EXTENSION_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECV_EXTENSION_INFO = extern struct {
    uVersion: {"kind":"UInt32"},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},
    dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    uChCenterFrequency: {"kind":"UInt32"},
    lRSSI: {"kind":"Int32"},
    lRSSIMin: {"kind":"Int32"},
    lRSSIMax: {"kind":"Int32"},
    uRSSI: {"kind":"UInt32"},
    ucPriority: {"kind":"Byte"},
    ucDataRate: {"kind":"Byte"},
    ucPeerMacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    dwExtendedStatus: {"kind":"UInt32"},
    hWEPOffloadContext: Windows.Win32.SystemServices.HANDLE,
    hAuthOffloadContext: Windows.Win32.SystemServices.HANDLE,
    usWEPAppliedMask: {"kind":"UInt16"},
    usWPAMSDUPriority: {"kind":"UInt16"},
    dot11LowestIV48Counter: Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER,
    usDot11LeftRWBitMap: {"kind":"UInt16"},
    dot11HighestIV48Counter: Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER,
    usDot11RightRWBitMap: {"kind":"UInt16"},
    usNumberOfMPDUsReceived: {"kind":"UInt16"},
    usNumberOfFragments: {"kind":"UInt16"},
    pNdisPackets: {"kind":"Array","child": {"kind""Ptr","child":{"kind":"Void"}}},
};
// --------------------------------------------------------
// Type: DOT11_RECV_EXTENSION_INFO_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECV_EXTENSION_INFO_V2 = extern struct {
    uVersion: {"kind":"UInt32"},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},
    dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    uChCenterFrequency: {"kind":"UInt32"},
    lRSSI: {"kind":"Int32"},
    uRSSI: {"kind":"UInt32"},
    ucPriority: {"kind":"Byte"},
    ucDataRate: {"kind":"Byte"},
    ucPeerMacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    dwExtendedStatus: {"kind":"UInt32"},
    hWEPOffloadContext: Windows.Win32.SystemServices.HANDLE,
    hAuthOffloadContext: Windows.Win32.SystemServices.HANDLE,
    usWEPAppliedMask: {"kind":"UInt16"},
    usWPAMSDUPriority: {"kind":"UInt16"},
    dot11LowestIV48Counter: Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER,
    usDot11LeftRWBitMap: {"kind":"UInt16"},
    dot11HighestIV48Counter: Windows.Win32.NativeWiFi.DOT11_IV48_COUNTER,
    usDot11RightRWBitMap: {"kind":"UInt16"},
    usNumberOfMPDUsReceived: {"kind":"UInt16"},
    usNumberOfFragments: {"kind":"UInt16"},
    pNdisPackets: {"kind":"Array","child": {"kind""Ptr","child":{"kind":"Void"}}},
};
// --------------------------------------------------------
// Type: DOT11_STATUS_INDICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_STATUS_INDICATION = extern struct {
    uStatusType: {"kind":"UInt32"},
    ndisStatus: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_MPDU_MAX_LENGTH_INDICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MPDU_MAX_LENGTH_INDICATION = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uPhyId: {"kind":"UInt32"},
    uMPDUMaxLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_ASSOCIATION_START_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ASSOCIATION_START_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    MacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    SSID: Windows.Win32.NativeWiFi.DOT11_SSID,
    uIHVDataOffset: {"kind":"UInt32"},
    uIHVDataSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_ENCAP_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ENCAP_ENTRY = extern struct {
    usEtherType: {"kind":"UInt16"},
    usEncapType: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: DOT11_DS_INFO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_DS_INFO = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_ASSOCIATION_COMPLETION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ASSOCIATION_COMPLETION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    MacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    uStatus: {"kind":"UInt32"},
    bReAssocReq: {"kind":"Byte"},
    bReAssocResp: {"kind":"Byte"},
    uAssocReqOffset: {"kind":"UInt32"},
    uAssocReqSize: {"kind":"UInt32"},
    uAssocRespOffset: {"kind":"UInt32"},
    uAssocRespSize: {"kind":"UInt32"},
    uBeaconOffset: {"kind":"UInt32"},
    uBeaconSize: {"kind":"UInt32"},
    uIHVDataOffset: {"kind":"UInt32"},
    uIHVDataSize: {"kind":"UInt32"},
    AuthAlgo: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    UnicastCipher: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    MulticastCipher: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    uActivePhyListOffset: {"kind":"UInt32"},
    uActivePhyListSize: {"kind":"UInt32"},
    bFourAddressSupported: {"kind":"Byte"},
    bPortAuthorized: {"kind":"Byte"},
    ucActiveQoSProtocol: {"kind":"Byte"},
    DSInfo: Windows.Win32.NativeWiFi.DOT11_DS_INFO,
    uEncapTableOffset: {"kind":"UInt32"},
    uEncapTableSize: {"kind":"UInt32"},
    MulticastMgmtCipher: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    uAssocComebackTime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_CONNECTION_START_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CONNECTION_START_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    BSSType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    AdhocBSSID: {"kind":"Array","child": {"kind":"Byte"}},
    AdhocSSID: Windows.Win32.NativeWiFi.DOT11_SSID,
};
// --------------------------------------------------------
// Type: DOT11_CONNECTION_COMPLETION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CONNECTION_COMPLETION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uStatus: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_ROAMING_START_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ROAMING_START_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    AdhocBSSID: {"kind":"Array","child": {"kind":"Byte"}},
    AdhocSSID: Windows.Win32.NativeWiFi.DOT11_SSID,
    uRoamingReason: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_ROAMING_COMPLETION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ROAMING_COMPLETION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uStatus: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_DISASSOCIATION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DISASSOCIATION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    MacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    uReason: {"kind":"UInt32"},
    uIHVDataOffset: {"kind":"UInt32"},
    uIHVDataSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_TKIPMIC_FAILURE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_TKIPMIC_FAILURE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    bDefaultKeyFailure: {"kind":"Byte"},
    uKeyIndex: {"kind":"UInt32"},
    PeerMac: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_PMKID_CANDIDATE_LIST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PMKID_CANDIDATE_LIST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uCandidateListSize: {"kind":"UInt32"},
    uCandidateListOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_BSSID_CANDIDATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_BSSID_CANDIDATE = extern struct {
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    uFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PHY_STATE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_STATE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uPhyId: {"kind":"UInt32"},
    bHardwarePhyState: {"kind":"Byte"},
    bSoftwarePhyState: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_LINK_QUALITY_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_LINK_QUALITY_ENTRY = extern struct {
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    ucLinkQuality: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_LINK_QUALITY_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_LINK_QUALITY_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uLinkQualityListSize: {"kind":"UInt32"},
    uLinkQualityListOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_EXTSTA_SEND_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_EXTSTA_SEND_CONTEXT = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    usExemptionActionType: {"kind":"UInt16"},
    uPhyId: {"kind":"UInt32"},
    uDelayedSleepValue: {"kind":"UInt32"},
    pvMediaSpecificInfo: {"kind""Ptr","child":{"kind":"Void"}},
    uSendFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_EXTSTA_RECV_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_EXTSTA_RECV_CONTEXT = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uReceiveFlags: {"kind":"UInt32"},
    uPhyId: {"kind":"UInt32"},
    uChCenterFrequency: {"kind":"UInt32"},
    usNumberOfMPDUsReceived: {"kind":"UInt16"},
    lRSSI: {"kind":"Int32"},
    ucDataRate: {"kind":"Byte"},
    uSizeMediaSpecificInfo: {"kind":"UInt32"},
    pvMediaSpecificInfo: {"kind""Ptr","child":{"kind":"Void"}},
    ullTimestamp: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: DOT11_EXTAP_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_EXTAP_ATTRIBUTES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uScanSSIDListSize: {"kind":"UInt32"},
    uDesiredSSIDListSize: {"kind":"UInt32"},
    uPrivacyExemptionListSize: {"kind":"UInt32"},
    uAssociationTableSize: {"kind":"UInt32"},
    uDefaultKeyTableSize: {"kind":"UInt32"},
    uWEPKeyValueMaxLength: {"kind":"UInt32"},
    bStrictlyOrderedServiceClassImplemented: {"kind":"Byte"},
    uNumSupportedCountryOrRegionStrings: {"kind":"UInt32"},
    pSupportedCountryOrRegionStrings: {"kind""Ptr","child":{"kind":"Byte"}},
    uInfraNumSupportedUcastAlgoPairs: {"kind":"UInt32"},
    pInfraSupportedUcastAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
    uInfraNumSupportedMcastAlgoPairs: {"kind":"UInt32"},
    pInfraSupportedMcastAlgoPairs: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
};
// --------------------------------------------------------
// Type: DOT11_INCOMING_ASSOC_STARTED_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INCOMING_ASSOC_STARTED_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    bReAssocReq: {"kind":"Byte"},
    uAssocReqOffset: {"kind":"UInt32"},
    uAssocReqSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    uStatus: {"kind":"UInt32"},
    ucErrorSource: {"kind":"Byte"},
    bReAssocReq: {"kind":"Byte"},
    bReAssocResp: {"kind":"Byte"},
    uAssocReqOffset: {"kind":"UInt32"},
    uAssocReqSize: {"kind":"UInt32"},
    uAssocRespOffset: {"kind":"UInt32"},
    uAssocRespSize: {"kind":"UInt32"},
    AuthAlgo: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    UnicastCipher: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    MulticastCipher: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    uActivePhyListOffset: {"kind":"UInt32"},
    uActivePhyListSize: {"kind":"UInt32"},
    uBeaconOffset: {"kind":"UInt32"},
    uBeaconSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_STOP_AP_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_STOP_AP_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ulReason: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ulPhyId: {"kind":"UInt32"},
    Anonymous: Windows.Win32.NativeWiFi.DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: DOT11_CAN_SUSTAIN_AP_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CAN_SUSTAIN_AP_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ulReason: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_AVAILABLE_CHANNEL_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_AVAILABLE_CHANNEL_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    uChannelNumber: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: DOT11_AVAILABLE_FREQUENCY_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_AVAILABLE_FREQUENCY_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    uFrequencyValue: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: DOT11_DISASSOCIATE_PEER_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_DISASSOCIATE_PEER_REQUEST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    usReason: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: DOT11_INCOMING_ASSOC_DECISION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INCOMING_ASSOC_DECISION = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    bAccept: {"kind":"Byte"},
    usReasonCode: {"kind":"UInt16"},
    uAssocResponseIEsOffset: {"kind":"UInt32"},
    uAssocResponseIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_INCOMING_ASSOC_DECISION_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INCOMING_ASSOC_DECISION_V2 = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerMacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    bAccept: {"kind":"Byte"},
    usReasonCode: {"kind":"UInt16"},
    uAssocResponseIEsOffset: {"kind":"UInt32"},
    uAssocResponseIEsLength: {"kind":"UInt32"},
    WFDStatus: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_ADDITIONAL_IE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ADDITIONAL_IE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uBeaconIEsOffset: {"kind":"UInt32"},
    uBeaconIEsLength: {"kind":"UInt32"},
    uResponseIEsOffset: {"kind":"UInt32"},
    uResponseIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PEER_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PEER_STATISTICS = extern struct {
    ullDecryptSuccessCount: {"kind":"UInt64"},
    ullDecryptFailureCount: {"kind":"UInt64"},
    ullTxPacketSuccessCount: {"kind":"UInt64"},
    ullTxPacketFailureCount: {"kind":"UInt64"},
    ullRxPacketSuccessCount: {"kind":"UInt64"},
    ullRxPacketFailureCount: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: DOT11_PEER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PEER_INFO = extern struct {
    MacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    usCapabilityInformation: {"kind":"UInt16"},
    AuthAlgo: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    UnicastCipherAlgo: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    MulticastCipherAlgo: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    bWpsEnabled: {"kind":"Byte"},
    usListenInterval: {"kind":"UInt16"},
    ucSupportedRates: {"kind":"Array","child": {"kind":"Byte"}},
    usAssociationID: {"kind":"UInt16"},
    AssociationState: Windows.Win32.NativeWiFi.DOT11_ASSOCIATION_STATE,
    PowerMode: Windows.Win32.NativeWiFi.DOT11_POWER_MODE,
    liAssociationUpTime: Windows.Win32.SystemServices.LARGE_INTEGER,
    Statistics: Windows.Win32.NativeWiFi.DOT11_PEER_STATISTICS,
};
// --------------------------------------------------------
// Type: DOT11_PEER_INFO_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PEER_INFO_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    PeerInfo: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PEER_INFO},
};
// --------------------------------------------------------
// Type: DOT11_VWIFI_COMBINATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_VWIFI_COMBINATION = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumInfrastructure: {"kind":"UInt32"},
    uNumAdhoc: {"kind":"UInt32"},
    uNumSoftAP: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_VWIFI_COMBINATION_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_VWIFI_COMBINATION_V2 = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumInfrastructure: {"kind":"UInt32"},
    uNumAdhoc: {"kind":"UInt32"},
    uNumSoftAP: {"kind":"UInt32"},
    uNumVirtualStation: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_VWIFI_COMBINATION_V3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_VWIFI_COMBINATION_V3 = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumInfrastructure: {"kind":"UInt32"},
    uNumAdhoc: {"kind":"UInt32"},
    uNumSoftAP: {"kind":"UInt32"},
    uNumVirtualStation: {"kind":"UInt32"},
    uNumWFDGroup: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_VWIFI_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_VWIFI_ATTRIBUTES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uTotalNumOfEntries: {"kind":"UInt32"},
    Combinations: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_VWIFI_COMBINATION},
};
// --------------------------------------------------------
// Type: DOT11_MAC_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MAC_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uOpmodeMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_MAC_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MAC_INFO = extern struct {
    uReserved: {"kind":"UInt32"},
    uNdisPortNumber: {"kind":"UInt32"},
    MacAddr: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_ATTRIBUTES = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumConcurrentGORole: {"kind":"UInt32"},
    uNumConcurrentClientRole: {"kind":"UInt32"},
    WPSVersionsSupported: {"kind":"UInt32"},
    bServiceDiscoverySupported: {"kind":"Byte"},
    bClientDiscoverabilitySupported: {"kind":"Byte"},
    bInfrastructureManagementSupported: {"kind":"Byte"},
    uMaxSecondaryDeviceTypeListSize: {"kind":"UInt32"},
    DeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    uInterfaceAddressListCount: {"kind":"UInt32"},
    pInterfaceAddressList: {"kind""Ptr","child":{"kind":"Byte"}},
    uNumSupportedCountryOrRegionStrings: {"kind":"UInt32"},
    pSupportedCountryOrRegionStrings: {"kind""Ptr","child":{"kind":"Byte"}},
    uDiscoveryFilterListSize: {"kind":"UInt32"},
    uGORoleClientTableSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DEVICE_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DEVICE_TYPE = extern struct {
    CategoryID: {"kind":"UInt16"},
    SubCategoryID: {"kind":"UInt16"},
    OUI: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WPS_DEVICE_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WPS_DEVICE_NAME = extern struct {
    uDeviceNameLength: {"kind":"UInt32"},
    ucDeviceName: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_CONFIGURATION_TIMEOUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_CONFIGURATION_TIMEOUT = extern struct {
    GOTimeout: {"kind":"Byte"},
    ClientTimeout: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_GROUP_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_GROUP_ID = extern struct {
    DeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    SSID: Windows.Win32.NativeWiFi.DOT11_SSID,
};
// --------------------------------------------------------
// Type: DOT11_WFD_GO_INTENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_GO_INTENT = extern struct {
    _bitfield: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_CHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_CHANNEL = extern struct {
    CountryRegionString: {"kind":"Array","child": {"kind":"Byte"}},
    OperatingClass: {"kind":"Byte"},
    ChannelNumber: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WPS_CONFIG_METHOD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_WPS_CONFIG_METHOD = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_WPS_DEVICE_PASSWORD_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_WPS_DEVICE_PASSWORD_ID = *opaque{
};
// --------------------------------------------------------
// Type: WFDSVC_CONNECTION_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WFDSVC_CONNECTION_CAPABILITY = extern struct {
    bNew: {"kind":"Byte"},
    bClient: {"kind":"Byte"},
    bGO: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_SERVICE_HASH_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_SERVICE_HASH_LIST = extern struct {
    ServiceHashCount: {"kind":"UInt16"},
    ServiceHash: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_ADVERTISEMENT_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_ADVERTISEMENT_ID = extern struct {
    AdvertisementID: {"kind":"UInt32"},
    ServiceAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_SESSION_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_SESSION_ID = extern struct {
    SessionID: {"kind":"UInt32"},
    SessionAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_ADVERTISED_SERVICE_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_ADVERTISED_SERVICE_DESCRIPTOR = extern struct {
    AdvertisementID: {"kind":"UInt32"},
    ConfigMethods: {"kind":"UInt16"},
    ServiceNameLength: {"kind":"Byte"},
    ServiceName: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_WFD_ADVERTISED_SERVICE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_ADVERTISED_SERVICE_LIST = extern struct {
    ServiceCount: {"kind":"UInt16"},
    AdvertisedService: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_WFD_ADVERTISED_SERVICE_DESCRIPTOR},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Status: {"kind":"Int32"},
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    uListOffset: {"kind":"UInt32"},
    uListLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    RequestContext: {"kind""Ptr","child":{"kind":"Void"}},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    ResponseContext: {"kind""Ptr","child":{"kind":"Void"}},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    ReceiverAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    TransmitterDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    RequestContext: {"kind""Ptr","child":{"kind":"Void"}},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ReceiverDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    TransmitterDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    ReceiverAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    TransmitterDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    RequestContext: {"kind""Ptr","child":{"kind":"Void"}},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ReceiverDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    Status: {"kind":"Int32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    TransmitterDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_ANQP_QUERY_RESULT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_ANQP_QUERY_RESULT = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_ANQP_QUERY_COMPLETE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_ANQP_QUERY_COMPLETE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Status: Windows.Win32.NativeWiFi.DOT11_ANQP_QUERY_RESULT,
    hContext: Windows.Win32.SystemServices.HANDLE,
    uResponseLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DEVICE_CAPABILITY_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DEVICE_CAPABILITY_CONFIG = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    bServiceDiscoveryEnabled: {"kind":"Byte"},
    bClientDiscoverabilityEnabled: {"kind":"Byte"},
    bConcurrentOperationSupported: {"kind":"Byte"},
    bInfrastructureManagementEnabled: {"kind":"Byte"},
    bDeviceLimitReached: {"kind":"Byte"},
    bInvitationProcedureEnabled: {"kind":"Byte"},
    WPSVersionsEnabled: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    bPersistentGroupEnabled: {"kind":"Byte"},
    bIntraBSSDistributionSupported: {"kind":"Byte"},
    bCrossConnectionSupported: {"kind":"Byte"},
    bPersistentReconnectSupported: {"kind":"Byte"},
    bGroupFormationEnabled: {"kind":"Byte"},
    uMaximumGroupLimit: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG_V2 = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    bPersistentGroupEnabled: {"kind":"Byte"},
    bIntraBSSDistributionSupported: {"kind":"Byte"},
    bCrossConnectionSupported: {"kind":"Byte"},
    bPersistentReconnectSupported: {"kind":"Byte"},
    bGroupFormationEnabled: {"kind":"Byte"},
    uMaximumGroupLimit: {"kind":"UInt32"},
    bEapolKeyIpAddressAllocationSupported: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DEVICE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DEVICE_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    DeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    ConfigMethods: {"kind":"UInt16"},
    PrimaryDeviceType: Windows.Win32.NativeWiFi.DOT11_WFD_DEVICE_TYPE,
    DeviceName: Windows.Win32.NativeWiFi.DOT11_WPS_DEVICE_NAME,
};
// --------------------------------------------------------
// Type: DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uNumOfEntries: {"kind":"UInt32"},
    uTotalNumOfEntries: {"kind":"UInt32"},
    SecondaryDeviceTypes: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_WFD_DEVICE_TYPE},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DISCOVER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_WFD_DISCOVER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_WFD_SCAN_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_WFD_SCAN_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_WFD_DISCOVER_DEVICE_FILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DISCOVER_DEVICE_FILTER = extern struct {
    DeviceID: {"kind":"Array","child": {"kind":"Byte"}},
    ucBitmask: {"kind":"Byte"},
    GroupSSID: Windows.Win32.NativeWiFi.DOT11_SSID,
};
// --------------------------------------------------------
// Type: DOT11_WFD_DISCOVER_REQUEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DISCOVER_REQUEST = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    DiscoverType: Windows.Win32.NativeWiFi.DOT11_WFD_DISCOVER_TYPE,
    ScanType: Windows.Win32.NativeWiFi.DOT11_WFD_SCAN_TYPE,
    uDiscoverTimeout: {"kind":"UInt32"},
    uDeviceFilterListOffset: {"kind":"UInt32"},
    uNumDeviceFilters: {"kind":"UInt32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
    bForceScanLegacyNetworks: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DEVICE_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DEVICE_ENTRY = extern struct {
    uPhyId: {"kind":"UInt32"},
    PhySpecificInfo: Windows.Win32.NativeWiFi.DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO,
    dot11BSSID: {"kind":"Array","child": {"kind":"Byte"}},
    dot11BSSType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    TransmitterAddress: {"kind":"Array","child": {"kind":"Byte"}},
    lRSSI: {"kind":"Int32"},
    uLinkQuality: {"kind":"UInt32"},
    usBeaconPeriod: {"kind":"UInt16"},
    ullTimestamp: {"kind":"UInt64"},
    ullBeaconHostTimestamp: {"kind":"UInt64"},
    ullProbeResponseHostTimestamp: {"kind":"UInt64"},
    usCapabilityInformation: {"kind":"UInt16"},
    uBeaconIEsOffset: {"kind":"UInt32"},
    uBeaconIEsLength: {"kind":"UInt32"},
    uProbeResponseIEsOffset: {"kind":"UInt32"},
    uProbeResponseIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_ADDITIONAL_IE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_ADDITIONAL_IE = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    uBeaconIEsOffset: {"kind":"UInt32"},
    uBeaconIEsLength: {"kind":"UInt32"},
    uProbeResponseIEsOffset: {"kind":"UInt32"},
    uProbeResponseIEsLength: {"kind":"UInt32"},
    uDefaultRequestIEsOffset: {"kind":"UInt32"},
    uDefaultRequestIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    uSendTimeout: {"kind":"UInt32"},
    GroupOwnerIntent: Windows.Win32.NativeWiFi.DOT11_WFD_GO_INTENT,
    MinimumConfigTimeout: Windows.Win32.NativeWiFi.DOT11_WFD_CONFIGURATION_TIMEOUT,
    IntendedInterfaceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    GroupCapability: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    RequestContext: {"kind""Ptr","child":{"kind":"Void"}},
    uSendTimeout: {"kind":"UInt32"},
    Status: {"kind":"Byte"},
    GroupOwnerIntent: Windows.Win32.NativeWiFi.DOT11_WFD_GO_INTENT,
    MinimumConfigTimeout: Windows.Win32.NativeWiFi.DOT11_WFD_CONFIGURATION_TIMEOUT,
    IntendedInterfaceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    GroupCapability: {"kind":"Byte"},
    GroupID: Windows.Win32.NativeWiFi.DOT11_WFD_GROUP_ID,
    bUseGroupID: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    ResponseContext: {"kind""Ptr","child":{"kind":"Void"}},
    uSendTimeout: {"kind":"UInt32"},
    Status: {"kind":"Byte"},
    GroupCapability: {"kind":"Byte"},
    GroupID: Windows.Win32.NativeWiFi.DOT11_WFD_GROUP_ID,
    bUseGroupID: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_INVITATION_FLAGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_INVITATION_FLAGS = extern struct {
    _bitfield: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_INVITATION_REQUEST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_INVITATION_REQUEST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    DialogToken: {"kind":"Byte"},
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    uSendTimeout: {"kind":"UInt32"},
    MinimumConfigTimeout: Windows.Win32.NativeWiFi.DOT11_WFD_CONFIGURATION_TIMEOUT,
    InvitationFlags: Windows.Win32.NativeWiFi.DOT11_WFD_INVITATION_FLAGS,
    GroupBSSID: {"kind":"Array","child": {"kind":"Byte"}},
    bUseGroupBSSID: {"kind":"Byte"},
    OperatingChannel: Windows.Win32.NativeWiFi.DOT11_WFD_CHANNEL,
    bUseSpecifiedOperatingChannel: {"kind":"Byte"},
    GroupID: Windows.Win32.NativeWiFi.DOT11_WFD_GROUP_ID,
    bLocalGO: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_INVITATION_RESPONSE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_INVITATION_RESPONSE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ReceiverDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    RequestContext: {"kind""Ptr","child":{"kind":"Void"}},
    uSendTimeout: {"kind":"UInt32"},
    Status: {"kind":"Byte"},
    MinimumConfigTimeout: Windows.Win32.NativeWiFi.DOT11_WFD_CONFIGURATION_TIMEOUT,
    GroupBSSID: {"kind":"Array","child": {"kind":"Byte"}},
    bUseGroupBSSID: {"kind":"Byte"},
    OperatingChannel: Windows.Win32.NativeWiFi.DOT11_WFD_CHANNEL,
    bUseSpecifiedOperatingChannel: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    DialogToken: {"kind":"Byte"},
    PeerDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    uSendTimeout: {"kind":"UInt32"},
    GroupCapability: {"kind":"Byte"},
    GroupID: Windows.Win32.NativeWiFi.DOT11_WFD_GROUP_ID,
    bUseGroupID: {"kind":"Byte"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ReceiverDeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    DialogToken: {"kind":"Byte"},
    RequestContext: {"kind""Ptr","child":{"kind":"Void"}},
    uSendTimeout: {"kind":"UInt32"},
    uIEsOffset: {"kind":"UInt32"},
    uIEsLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_DEVICE_LISTEN_CHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_DEVICE_LISTEN_CHANNEL = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ChannelNumber: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_WFD_GROUP_START_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_GROUP_START_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    AdvertisedOperatingChannel: Windows.Win32.NativeWiFi.DOT11_WFD_CHANNEL,
};
// --------------------------------------------------------
// Type: DOT11_WFD_GROUP_JOIN_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_WFD_GROUP_JOIN_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    GOOperatingChannel: Windows.Win32.NativeWiFi.DOT11_WFD_CHANNEL,
    GOConfigTime: {"kind":"UInt32"},
    bInGroupFormation: {"kind":"Byte"},
    bWaitForWPSReady: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    bEnabled: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DOT11_POWER_MODE_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_POWER_MODE_REASON = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_POWER_MGMT_MODE_STATUS_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_POWER_MGMT_MODE_STATUS_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    PowerSaveMode: Windows.Win32.NativeWiFi.DOT11_POWER_MODE,
    uPowerSaveLevel: {"kind":"UInt32"},
    Reason: Windows.Win32.NativeWiFi.DOT11_POWER_MODE_REASON,
};
// --------------------------------------------------------
// Type: DOT11_CHANNEL_HINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_CHANNEL_HINT = extern struct {
    Dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    uChannelNumber: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_OFFLOAD_NETWORK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OFFLOAD_NETWORK = extern struct {
    Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    UnicastCipher: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    AuthAlgo: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    Dot11ChannelHints: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_CHANNEL_HINT},
};
// --------------------------------------------------------
// Type: DOT11_OFFLOAD_NETWORK_LIST_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OFFLOAD_NETWORK_LIST_INFO = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    ulFlags: {"kind":"UInt32"},
    FastScanPeriod: {"kind":"UInt32"},
    FastScanIterations: {"kind":"UInt32"},
    SlowScanPeriod: {"kind":"UInt32"},
    uNumOfEntries: {"kind":"UInt32"},
    offloadNetworkList: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_OFFLOAD_NETWORK},
};
// --------------------------------------------------------
// Type: DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    Status: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_TEST_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_MANUFACTURING_TEST_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_TEST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_TEST = extern struct {
    dot11ManufacturingTestType: Windows.Win32.NativeWiFi.DOT11_MANUFACTURING_TEST_TYPE,
    uBufferLength: {"kind":"UInt32"},
    ucBuffer: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_SELF_TEST_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_MANUFACTURING_SELF_TEST_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS = extern struct {
    SelfTestType: Windows.Win32.NativeWiFi.DOT11_MANUFACTURING_SELF_TEST_TYPE,
    uTestID: {"kind":"UInt32"},
    uPinBitMask: {"kind":"UInt32"},
    pvContext: {"kind""Ptr","child":{"kind":"Void"}},
    uBufferLength: {"kind":"UInt32"},
    ucBufferIn: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS = extern struct {
    SelfTestType: Windows.Win32.NativeWiFi.DOT11_MANUFACTURING_SELF_TEST_TYPE,
    uTestID: {"kind":"UInt32"},
    bResult: {"kind":"Byte"},
    uPinFailedBitMask: {"kind":"UInt32"},
    pvContext: {"kind""Ptr","child":{"kind":"Void"}},
    uBytesWrittenOut: {"kind":"UInt32"},
    ucBufferOut: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_BAND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_BAND = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX = extern struct {
    bEnabled: {"kind":"Byte"},
    Dot11Band: Windows.Win32.NativeWiFi.DOT11_BAND,
    uChannel: {"kind":"UInt32"},
    PowerLevel: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX = extern struct {
    bEnable: {"kind":"Byte"},
    bOpenLoop: {"kind":"Byte"},
    Dot11Band: Windows.Win32.NativeWiFi.DOT11_BAND,
    uChannel: {"kind":"UInt32"},
    uSetPowerLevel: {"kind":"UInt32"},
    ADCPowerLevel: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC = extern struct {
    Dot11Band: Windows.Win32.NativeWiFi.DOT11_BAND,
    uChannel: {"kind":"UInt32"},
    ADCPowerLevel: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_TEST_SET_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_TEST_SET_DATA = extern struct {
    uKey: {"kind":"UInt32"},
    uOffset: {"kind":"UInt32"},
    uBufferLength: {"kind":"UInt32"},
    ucBufferIn: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_TEST_QUERY_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_TEST_QUERY_DATA = extern struct {
    uKey: {"kind":"UInt32"},
    uOffset: {"kind":"UInt32"},
    uBufferLength: {"kind":"UInt32"},
    uBytesRead: {"kind":"UInt32"},
    ucBufferOut: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_TEST_SLEEP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_TEST_SLEEP = extern struct {
    uSleepTime: {"kind":"UInt32"},
    pvContext: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_CALLBACK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_MANUFACTURING_CALLBACK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_MANUFACTURING_CALLBACK_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_MANUFACTURING_CALLBACK_PARAMETERS = extern struct {
    Header: Windows.Win32.NativeWiFi.NDIS_OBJECT_HEADER,
    dot11ManufacturingCallbackType: Windows.Win32.NativeWiFi.DOT11_MANUFACTURING_CALLBACK_TYPE,
    uStatus: {"kind":"UInt32"},
    pvContext: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WLAN_PROFILE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_PROFILE_INFO = extern struct {
    strProfileName: {"kind":"Array","child": {"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: DOT11_NETWORK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_NETWORK = extern struct {
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
};
// --------------------------------------------------------
// Type: WLAN_RAW_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_RAW_DATA = extern struct {
    dwDataSize: {"kind":"UInt32"},
    DataBlob: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WLAN_RAW_DATA_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_RAW_DATA_LIST = extern struct {
    dwTotalSize: {"kind":"UInt32"},
    dwNumberOfItems: {"kind":"UInt32"},
    DataList: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_RAW_DATA_LIST+_Anonymous_e__Struct},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        dwDataOffset: {"kind":"UInt32"},
        dwDataSize: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: WLAN_CONNECTION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_CONNECTION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_RATE_SET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_RATE_SET = extern struct {
    uRateSetLength: {"kind":"UInt32"},
    usRateSet: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WLAN_AVAILABLE_NETWORK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_AVAILABLE_NETWORK = extern struct {
    strProfileName: {"kind":"Array","child": {"kind":"UInt16"}},
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    uNumberOfBssids: {"kind":"UInt32"},
    bNetworkConnectable: Windows.Win32.SystemServices.BOOL,
    wlanNotConnectableReason: {"kind":"UInt32"},
    uNumberOfPhyTypes: {"kind":"UInt32"},
    dot11PhyTypes: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PHY_TYPE},
    bMorePhyTypes: Windows.Win32.SystemServices.BOOL,
    wlanSignalQuality: {"kind":"UInt32"},
    bSecurityEnabled: Windows.Win32.SystemServices.BOOL,
    dot11DefaultAuthAlgorithm: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    dot11DefaultCipherAlgorithm: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    dwFlags: {"kind":"UInt32"},
    dwReserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_AVAILABLE_NETWORK_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_AVAILABLE_NETWORK_V2 = extern struct {
    strProfileName: {"kind":"Array","child": {"kind":"UInt16"}},
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    uNumberOfBssids: {"kind":"UInt32"},
    bNetworkConnectable: Windows.Win32.SystemServices.BOOL,
    wlanNotConnectableReason: {"kind":"UInt32"},
    uNumberOfPhyTypes: {"kind":"UInt32"},
    dot11PhyTypes: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PHY_TYPE},
    bMorePhyTypes: Windows.Win32.SystemServices.BOOL,
    wlanSignalQuality: {"kind":"UInt32"},
    bSecurityEnabled: Windows.Win32.SystemServices.BOOL,
    dot11DefaultAuthAlgorithm: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    dot11DefaultCipherAlgorithm: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
    dwFlags: {"kind":"UInt32"},
    AccessNetworkOptions: Windows.Win32.NativeWiFi.DOT11_ACCESSNETWORKOPTIONS,
    dot11HESSID: {"kind":"Array","child": {"kind":"Byte"}},
    VenueInfo: Windows.Win32.NativeWiFi.DOT11_VENUEINFO,
    dwReserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_BSS_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_BSS_ENTRY = extern struct {
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    uPhyId: {"kind":"UInt32"},
    dot11Bssid: {"kind":"Array","child": {"kind":"Byte"}},
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dot11BssPhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    lRssi: {"kind":"Int32"},
    uLinkQuality: {"kind":"UInt32"},
    bInRegDomain: {"kind":"Byte"},
    usBeaconPeriod: {"kind":"UInt16"},
    ullTimestamp: {"kind":"UInt64"},
    ullHostTimestamp: {"kind":"UInt64"},
    usCapabilityInformation: {"kind":"UInt16"},
    ulChCenterFrequency: {"kind":"UInt32"},
    wlanRateSet: Windows.Win32.NativeWiFi.WLAN_RATE_SET,
    ulIeOffset: {"kind":"UInt32"},
    ulIeSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_BSS_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_BSS_LIST = extern struct {
    dwTotalSize: {"kind":"UInt32"},
    dwNumberOfItems: {"kind":"UInt32"},
    wlanBssEntries: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_BSS_ENTRY},
};
// --------------------------------------------------------
// Type: WLAN_INTERFACE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_INTERFACE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_ADHOC_NETWORK_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_ADHOC_NETWORK_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_INTERFACE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_INTERFACE_INFO = extern struct {
    InterfaceGuid: Guid,
    strInterfaceDescription: {"kind":"Array","child": {"kind":"UInt16"}},
    isState: Windows.Win32.NativeWiFi.WLAN_INTERFACE_STATE,
};
// --------------------------------------------------------
// Type: WLAN_ASSOCIATION_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_ASSOCIATION_ATTRIBUTES = extern struct {
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dot11Bssid: {"kind":"Array","child": {"kind":"Byte"}},
    dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    uDot11PhyIndex: {"kind":"UInt32"},
    wlanSignalQuality: {"kind":"UInt32"},
    ulRxRate: {"kind":"UInt32"},
    ulTxRate: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_SECURITY_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_SECURITY_ATTRIBUTES = extern struct {
    bSecurityEnabled: Windows.Win32.SystemServices.BOOL,
    bOneXEnabled: Windows.Win32.SystemServices.BOOL,
    dot11AuthAlgorithm: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    dot11CipherAlgorithm: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
};
// --------------------------------------------------------
// Type: WLAN_CONNECTION_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_CONNECTION_ATTRIBUTES = extern struct {
    isState: Windows.Win32.NativeWiFi.WLAN_INTERFACE_STATE,
    wlanConnectionMode: Windows.Win32.NativeWiFi.WLAN_CONNECTION_MODE,
    strProfileName: {"kind":"Array","child": {"kind":"UInt16"}},
    wlanAssociationAttributes: Windows.Win32.NativeWiFi.WLAN_ASSOCIATION_ATTRIBUTES,
    wlanSecurityAttributes: Windows.Win32.NativeWiFi.WLAN_SECURITY_ATTRIBUTES,
};
// --------------------------------------------------------
// Type: DOT11_RADIO_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_RADIO_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_PHY_RADIO_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_PHY_RADIO_STATE = extern struct {
    dwPhyIndex: {"kind":"UInt32"},
    dot11SoftwareRadioState: Windows.Win32.NativeWiFi.DOT11_RADIO_STATE,
    dot11HardwareRadioState: Windows.Win32.NativeWiFi.DOT11_RADIO_STATE,
};
// --------------------------------------------------------
// Type: WLAN_RADIO_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_RADIO_STATE = extern struct {
    dwNumberOfPhys: {"kind":"UInt32"},
    PhyRadioState: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_PHY_RADIO_STATE},
};
// --------------------------------------------------------
// Type: WLAN_OPERATIONAL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_OPERATIONAL_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_INTERFACE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_INTERFACE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_INTERFACE_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_INTERFACE_CAPABILITY = extern struct {
    interfaceType: Windows.Win32.NativeWiFi.WLAN_INTERFACE_TYPE,
    bDot11DSupported: Windows.Win32.SystemServices.BOOL,
    dwMaxDesiredSsidListSize: {"kind":"UInt32"},
    dwMaxDesiredBssidListSize: {"kind":"UInt32"},
    dwNumberOfSupportedPhys: {"kind":"UInt32"},
    dot11PhyTypes: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_PHY_TYPE},
};
// --------------------------------------------------------
// Type: WLAN_AUTH_CIPHER_PAIR_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_AUTH_CIPHER_PAIR_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    pAuthCipherPairList: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_AUTH_CIPHER_PAIR},
};
// --------------------------------------------------------
// Type: WLAN_COUNTRY_OR_REGION_STRING_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_COUNTRY_OR_REGION_STRING_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    pCountryOrRegionStringList: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WLAN_PROFILE_INFO_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_PROFILE_INFO_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    dwIndex: {"kind":"UInt32"},
    ProfileInfo: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_PROFILE_INFO},
};
// --------------------------------------------------------
// Type: WLAN_AVAILABLE_NETWORK_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_AVAILABLE_NETWORK_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    dwIndex: {"kind":"UInt32"},
    Network: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_AVAILABLE_NETWORK},
};
// --------------------------------------------------------
// Type: WLAN_AVAILABLE_NETWORK_LIST_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_AVAILABLE_NETWORK_LIST_V2 = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    dwIndex: {"kind":"UInt32"},
    Network: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_AVAILABLE_NETWORK_V2},
};
// --------------------------------------------------------
// Type: WLAN_INTERFACE_INFO_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_INTERFACE_INFO_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    dwIndex: {"kind":"UInt32"},
    InterfaceInfo: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_INTERFACE_INFO},
};
// --------------------------------------------------------
// Type: DOT11_NETWORK_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DOT11_NETWORK_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    dwIndex: {"kind":"UInt32"},
    Network: {"kind":"Array","child": Windows.Win32.NativeWiFi.DOT11_NETWORK},
};
// --------------------------------------------------------
// Type: WLAN_POWER_SETTING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_POWER_SETTING = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_CONNECTION_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_CONNECTION_PARAMETERS = extern struct {
    wlanConnectionMode: Windows.Win32.NativeWiFi.WLAN_CONNECTION_MODE,
    strProfile: {"kind""Ptr","child":{"kind":"UInt16"}},
    pDot11Ssid: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_SSID},
    pDesiredBssidList: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_BSSID_LIST},
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dwFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_CONNECTION_PARAMETERS_V2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_CONNECTION_PARAMETERS_V2 = extern struct {
    wlanConnectionMode: Windows.Win32.NativeWiFi.WLAN_CONNECTION_MODE,
    strProfile: {"kind""Ptr","child":{"kind":"UInt16"}},
    pDot11Ssid: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_SSID},
    pDot11Hessid: {"kind""Ptr","child":{"kind":"Byte"}},
    pDesiredBssidList: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_BSSID_LIST},
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dwFlags: {"kind":"UInt32"},
    pDot11AccessNetworkOptions: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_ACCESSNETWORKOPTIONS},
};
// --------------------------------------------------------
// Type: WLAN_MSM_NOTIFICATION_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_MSM_NOTIFICATION_DATA = extern struct {
    wlanConnectionMode: Windows.Win32.NativeWiFi.WLAN_CONNECTION_MODE,
    strProfileName: {"kind":"Array","child": {"kind":"UInt16"}},
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    dot11MacAddr: {"kind":"Array","child": {"kind":"Byte"}},
    bSecurityEnabled: Windows.Win32.SystemServices.BOOL,
    bFirstPeer: Windows.Win32.SystemServices.BOOL,
    bLastPeer: Windows.Win32.SystemServices.BOOL,
    wlanReasonCode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_CONNECTION_NOTIFICATION_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_CONNECTION_NOTIFICATION_DATA = extern struct {
    wlanConnectionMode: Windows.Win32.NativeWiFi.WLAN_CONNECTION_MODE,
    strProfileName: {"kind":"Array","child": {"kind":"UInt16"}},
    dot11Ssid: Windows.Win32.NativeWiFi.DOT11_SSID,
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    bSecurityEnabled: Windows.Win32.SystemServices.BOOL,
    wlanReasonCode: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    strProfileXml: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WLAN_DEVICE_SERVICE_NOTIFICATION_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_DEVICE_SERVICE_NOTIFICATION_DATA = extern struct {
    DeviceService: Guid,
    dwOpCode: {"kind":"UInt32"},
    dwDataSize: {"kind":"UInt32"},
    DataBlob: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WLAN_NOTIFICATION_ACM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_NOTIFICATION_ACM = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_NOTIFICATION_MSM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_NOTIFICATION_MSM = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_NOTIFICATION_SECURITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_NOTIFICATION_SECURITY = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_NOTIFICATION_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_NOTIFICATION_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WLAN_OPCODE_VALUE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_OPCODE_VALUE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_INTF_OPCODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_INTF_OPCODE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_AUTOCONF_OPCODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_AUTOCONF_OPCODE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_IHV_CONTROL_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_IHV_CONTROL_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_FILTER_LIST_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_FILTER_LIST_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_PHY_FRAME_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_PHY_FRAME_STATISTICS = extern struct {
    ullTransmittedFrameCount: {"kind":"UInt64"},
    ullMulticastTransmittedFrameCount: {"kind":"UInt64"},
    ullFailedCount: {"kind":"UInt64"},
    ullRetryCount: {"kind":"UInt64"},
    ullMultipleRetryCount: {"kind":"UInt64"},
    ullMaxTXLifetimeExceededCount: {"kind":"UInt64"},
    ullTransmittedFragmentCount: {"kind":"UInt64"},
    ullRTSSuccessCount: {"kind":"UInt64"},
    ullRTSFailureCount: {"kind":"UInt64"},
    ullACKFailureCount: {"kind":"UInt64"},
    ullReceivedFrameCount: {"kind":"UInt64"},
    ullMulticastReceivedFrameCount: {"kind":"UInt64"},
    ullPromiscuousReceivedFrameCount: {"kind":"UInt64"},
    ullMaxRXLifetimeExceededCount: {"kind":"UInt64"},
    ullFrameDuplicateCount: {"kind":"UInt64"},
    ullReceivedFragmentCount: {"kind":"UInt64"},
    ullPromiscuousReceivedFragmentCount: {"kind":"UInt64"},
    ullFCSErrorCount: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: WLAN_MAC_FRAME_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_MAC_FRAME_STATISTICS = extern struct {
    ullTransmittedFrameCount: {"kind":"UInt64"},
    ullReceivedFrameCount: {"kind":"UInt64"},
    ullWEPExcludedCount: {"kind":"UInt64"},
    ullTKIPLocalMICFailures: {"kind":"UInt64"},
    ullTKIPReplays: {"kind":"UInt64"},
    ullTKIPICVErrorCount: {"kind":"UInt64"},
    ullCCMPReplays: {"kind":"UInt64"},
    ullCCMPDecryptErrors: {"kind":"UInt64"},
    ullWEPUndecryptableCount: {"kind":"UInt64"},
    ullWEPICVErrorCount: {"kind":"UInt64"},
    ullDecryptSuccessCount: {"kind":"UInt64"},
    ullDecryptFailureCount: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: WLAN_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_STATISTICS = extern struct {
    ullFourWayHandshakeFailures: {"kind":"UInt64"},
    ullTKIPCounterMeasuresInvoked: {"kind":"UInt64"},
    ullReserved: {"kind":"UInt64"},
    MacUcastCounters: Windows.Win32.NativeWiFi.WLAN_MAC_FRAME_STATISTICS,
    MacMcastCounters: Windows.Win32.NativeWiFi.WLAN_MAC_FRAME_STATISTICS,
    dwNumberOfPhys: {"kind":"UInt32"},
    PhyCounters: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_PHY_FRAME_STATISTICS},
};
// --------------------------------------------------------
// Type: WLAN_SECURABLE_OBJECT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_SECURABLE_OBJECT = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_DEVICE_SERVICE_GUID_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_DEVICE_SERVICE_GUID_LIST = extern struct {
    dwNumberOfItems: {"kind":"UInt32"},
    dwIndex: {"kind":"UInt32"},
    DeviceService: {"kind":"Array","child": Guid},
};
// --------------------------------------------------------
// Type: WFD_ROLE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WFD_ROLE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WFD_GROUP_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WFD_GROUP_ID = extern struct {
    DeviceAddress: {"kind":"Array","child": {"kind":"Byte"}},
    GroupSSID: Windows.Win32.NativeWiFi.DOT11_SSID,
};
// --------------------------------------------------------
// Type: WL_DISPLAY_PAGES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WL_DISPLAY_PAGES = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_HOSTED_NETWORK_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_HOSTED_NETWORK_REASON = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_PEER_AUTH_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_HOSTED_NETWORK_PEER_AUTH_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_PEER_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_PEER_STATE = extern struct {
    PeerMacAddress: {"kind":"Array","child": {"kind":"Byte"}},
    PeerAuthState: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_PEER_AUTH_STATE,
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_RADIO_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_RADIO_STATE = extern struct {
    dot11SoftwareRadioState: Windows.Win32.NativeWiFi.DOT11_RADIO_STATE,
    dot11HardwareRadioState: Windows.Win32.NativeWiFi.DOT11_RADIO_STATE,
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_NOTIFICATION_CODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_HOSTED_NETWORK_NOTIFICATION_CODE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_STATE_CHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_STATE_CHANGE = extern struct {
    OldState: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_STATE,
    NewState: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_STATE,
    StateChangeReason: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON,
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE = extern struct {
    OldState: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_PEER_STATE,
    NewState: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_PEER_STATE,
    PeerStateChangeReason: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON,
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_OPCODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WLAN_HOSTED_NETWORK_OPCODE = *opaque{
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS = extern struct {
    hostedNetworkSSID: Windows.Win32.NativeWiFi.DOT11_SSID,
    dwMaxNumberOfPeers: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_SECURITY_SETTINGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_SECURITY_SETTINGS = extern struct {
    dot11AuthAlgo: Windows.Win32.NativeWiFi.DOT11_AUTH_ALGORITHM,
    dot11CipherAlgo: Windows.Win32.NativeWiFi.DOT11_CIPHER_ALGORITHM,
};
// --------------------------------------------------------
// Type: WLAN_HOSTED_NETWORK_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WLAN_HOSTED_NETWORK_STATUS = extern struct {
    HostedNetworkState: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_STATE,
    IPDeviceID: Guid,
    wlanHostedNetworkBSSID: {"kind":"Array","child": {"kind":"Byte"}},
    dot11PhyType: Windows.Win32.NativeWiFi.DOT11_PHY_TYPE,
    ulChannelFrequency: {"kind":"UInt32"},
    dwNumberOfPeers: {"kind":"UInt32"},
    PeerList: {"kind":"Array","child": Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_PEER_STATE},
};
// --------------------------------------------------------
// Type: WFD_OPEN_SESSION_COMPLETE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WFD_OPEN_SESSION_COMPLETE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: ONEX_AUTH_IDENTITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ONEX_AUTH_IDENTITY = *opaque{
};
// --------------------------------------------------------
// Type: ONEX_AUTH_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ONEX_AUTH_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: ONEX_REASON_CODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ONEX_REASON_CODE = *opaque{
};
// --------------------------------------------------------
// Type: ONEX_NOTIFICATION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ONEX_NOTIFICATION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: ONEX_AUTH_RESTART_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ONEX_AUTH_RESTART_REASON = *opaque{
};
// --------------------------------------------------------
// Type: ONEX_VARIABLE_BLOB
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ONEX_VARIABLE_BLOB = extern struct {
    dwSize: {"kind":"UInt32"},
    dwOffset: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ONEX_AUTH_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ONEX_AUTH_PARAMS = extern struct {
    fUpdatePending: Windows.Win32.SystemServices.BOOL,
    oneXConnProfile: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    authIdentity: Windows.Win32.NativeWiFi.ONEX_AUTH_IDENTITY,
    dwQuarantineState: {"kind":"UInt32"},
    _bitfield: {"kind":"UInt32"},
    dwSessionId: {"kind":"UInt32"},
    hUserToken: Windows.Win32.SystemServices.HANDLE,
    OneXUserProfile: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    Identity: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    UserName: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    Domain: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
};
// --------------------------------------------------------
// Type: ONEX_EAP_ERROR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ONEX_EAP_ERROR = extern struct {
    dwWinError: {"kind":"UInt32"},
    type: Windows.Win32.ExtensibleAuthenticationProtocol.EAP_METHOD_TYPE,
    dwReasonCode: {"kind":"UInt32"},
    rootCauseGuid: Guid,
    repairGuid: Guid,
    helpLinkGuid: Guid,
    _bitfield: {"kind":"UInt32"},
    RootCauseString: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    RepairString: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
};
// --------------------------------------------------------
// Type: ONEX_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ONEX_STATUS = extern struct {
    authStatus: Windows.Win32.NativeWiFi.ONEX_AUTH_STATUS,
    dwReason: {"kind":"UInt32"},
    dwError: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ONEX_EAP_METHOD_BACKEND_SUPPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ONEX_EAP_METHOD_BACKEND_SUPPORT = *opaque{
};
// --------------------------------------------------------
// Type: ONEX_RESULT_UPDATE_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ONEX_RESULT_UPDATE_DATA = extern struct {
    oneXStatus: Windows.Win32.NativeWiFi.ONEX_STATUS,
    BackendSupport: Windows.Win32.NativeWiFi.ONEX_EAP_METHOD_BACKEND_SUPPORT,
    fBackendEngaged: Windows.Win32.SystemServices.BOOL,
    _bitfield: {"kind":"UInt32"},
    authParams: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    eapError: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
};
// --------------------------------------------------------
// Type: ONEX_USER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ONEX_USER_INFO = extern struct {
    authIdentity: Windows.Win32.NativeWiFi.ONEX_AUTH_IDENTITY,
    _bitfield: {"kind":"UInt32"},
    UserName: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
    DomainName: Windows.Win32.NativeWiFi.ONEX_VARIABLE_BLOB,
};
// --------------------------------------------------------
// Type: Dot11AdHocManager
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Dot11AdHocManager = opaque {
};
// --------------------------------------------------------
// Type: DOT11_ADHOC_CIPHER_ALGORITHM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_ADHOC_CIPHER_ALGORITHM = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_ADHOC_AUTH_ALGORITHM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_ADHOC_AUTH_ALGORITHM = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_ADHOC_NETWORK_CONNECTION_STATUS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_ADHOC_NETWORK_CONNECTION_STATUS = *opaque{
};
// --------------------------------------------------------
// Type: DOT11_ADHOC_CONNECT_FAIL_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DOT11_ADHOC_CONNECT_FAIL_REASON = *opaque{
};
// --------------------------------------------------------
// Type: IDot11AdHocManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocManager = *opaque{
    // TODO: Method 'CreateNetwork'
    // TODO: Method 'CommitCreatedNetwork'
    // TODO: Method 'GetIEnumDot11AdHocNetworks'
    // TODO: Method 'GetIEnumDot11AdHocInterfaces'
    // TODO: Method 'GetNetwork'
};
// --------------------------------------------------------
// Type: IDot11AdHocManagerNotificationSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocManagerNotificationSink = *opaque{
    // TODO: Method 'OnNetworkAdd'
    // TODO: Method 'OnNetworkRemove'
    // TODO: Method 'OnInterfaceAdd'
    // TODO: Method 'OnInterfaceRemove'
};
// --------------------------------------------------------
// Type: IEnumDot11AdHocNetworks
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumDot11AdHocNetworks = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IDot11AdHocNetwork
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocNetwork = *opaque{
    // TODO: Method 'GetStatus'
    // TODO: Method 'GetSSID'
    // TODO: Method 'HasProfile'
    // TODO: Method 'GetProfileName'
    // TODO: Method 'DeleteProfile'
    // TODO: Method 'GetSignalQuality'
    // TODO: Method 'GetSecuritySetting'
    // TODO: Method 'GetContextGuid'
    // TODO: Method 'GetSignature'
    // TODO: Method 'GetInterface'
    // TODO: Method 'Connect'
    // TODO: Method 'Disconnect'
};
// --------------------------------------------------------
// Type: IDot11AdHocNetworkNotificationSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocNetworkNotificationSink = *opaque{
    // TODO: Method 'OnStatusChange'
    // TODO: Method 'OnConnectFail'
};
// --------------------------------------------------------
// Type: IDot11AdHocInterface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocInterface = *opaque{
    // TODO: Method 'GetDeviceSignature'
    // TODO: Method 'GetFriendlyName'
    // TODO: Method 'IsDot11d'
    // TODO: Method 'IsAdHocCapable'
    // TODO: Method 'IsRadioOn'
    // TODO: Method 'GetActiveNetwork'
    // TODO: Method 'GetIEnumSecuritySettings'
    // TODO: Method 'GetIEnumDot11AdHocNetworks'
    // TODO: Method 'GetStatus'
};
// --------------------------------------------------------
// Type: IEnumDot11AdHocInterfaces
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumDot11AdHocInterfaces = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IEnumDot11AdHocSecuritySettings
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumDot11AdHocSecuritySettings = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IDot11AdHocSecuritySettings
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocSecuritySettings = *opaque{
    // TODO: Method 'GetDot11AuthAlgorithm'
    // TODO: Method 'GetDot11CipherAlgorithm'
};
// --------------------------------------------------------
// Type: IDot11AdHocInterfaceNotificationSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDot11AdHocInterfaceNotificationSink = *opaque{
    // TODO: Method 'OnConnectionStatusChange'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanOpenHandle(
    dwClientVersion: {"kind":"UInt32"},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pdwNegotiatedVersion: {"kind""Ptr","child":{"kind":"UInt32"}},
    phClientHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanCloseHandle(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanEnumInterfaces(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppInterfaceList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_INTERFACE_INFO_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetAutoConfigParameter(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    OpCode: Windows.Win32.NativeWiFi.WLAN_AUTOCONF_OPCODE,
    dwDataSize: {"kind":"UInt32"},
    pData: {"kind""Ptr","child":{"kind":"Void"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanQueryAutoConfigParameter(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    OpCode: Windows.Win32.NativeWiFi.WLAN_AUTOCONF_OPCODE,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pdwDataSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    ppData: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    pWlanOpcodeValueType: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_OPCODE_VALUE_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetInterfaceCapability(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppCapability: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_INTERFACE_CAPABILITY}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetInterface(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    OpCode: Windows.Win32.NativeWiFi.WLAN_INTF_OPCODE,
    dwDataSize: {"kind":"UInt32"},
    pData: {"kind""Ptr","child":{"kind":"Void"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanQueryInterface(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    OpCode: Windows.Win32.NativeWiFi.WLAN_INTF_OPCODE,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pdwDataSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    ppData: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    pWlanOpcodeValueType: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_OPCODE_VALUE_TYPE},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanIhvControl(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    Type: Windows.Win32.NativeWiFi.WLAN_IHV_CONTROL_TYPE,
    dwInBufferSize: {"kind":"UInt32"},
    pInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    dwOutBufferSize: {"kind":"UInt32"},
    pOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    pdwBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanScan(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pDot11Ssid: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_SSID},
    pIeData: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_RAW_DATA},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetAvailableNetworkList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    dwFlags: {"kind":"UInt32"},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppAvailableNetworkList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_AVAILABLE_NETWORK_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetAvailableNetworkList2(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    dwFlags: {"kind":"UInt32"},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppAvailableNetworkList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_AVAILABLE_NETWORK_LIST_V2}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetNetworkBssList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pDot11Ssid: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_SSID},
    dot11BssType: Windows.Win32.NativeWiFi.DOT11_BSS_TYPE,
    bSecurityEnabled: Windows.Win32.SystemServices.BOOL,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppWlanBssList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_BSS_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanConnect(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pConnectionParameters: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_CONNECTION_PARAMETERS},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanConnect2(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pConnectionParameters: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_CONNECTION_PARAMETERS_V2},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanDisconnect(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanRegisterNotification(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    dwNotifSource: {"kind":"UInt32"},
    bIgnoreDuplicate: Windows.Win32.SystemServices.BOOL,
    funcCallback: Windows.Win32.NativeWiFi.WLAN_NOTIFICATION_CALLBACK,
    pCallbackContext: {"kind""Ptr","child":{"kind":"Void"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pdwPrevNotifSource: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetProfile(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pstrProfileXml: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pdwFlags: {"kind""Ptr","child":{"kind":"UInt32"}},
    pdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetProfileEapUserData(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    eapType: Windows.Win32.ExtensibleAuthenticationProtocol.EAP_METHOD_TYPE,
    dwFlags: {"kind":"UInt32"},
    dwEapUserDataSize: {"kind":"UInt32"},
    pbEapUserData: {"kind""Ptr","child":{"kind":"Byte"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetProfileEapXmlUserData(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},
    strEapXmlUserData: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetProfile(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    dwFlags: {"kind":"UInt32"},
    strProfileXml: {"kind""Ptr","child":{"kind":"UInt16"}},
    strAllUserProfileSecurity: {"kind""Ptr","child":{"kind":"UInt16"}},
    bOverwrite: Windows.Win32.SystemServices.BOOL,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pdwReasonCode: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanDeleteProfile(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanRenameProfile(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strOldProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    strNewProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetProfileList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppProfileList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_PROFILE_INFO_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetProfileList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    dwItems: {"kind":"UInt32"},
    strProfileNames: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetProfilePosition(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwPosition: {"kind":"UInt32"},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetProfileCustomUserData(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwDataSize: {"kind":"UInt32"},
    pData: {"kind""Ptr","child":{"kind":"Byte"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetProfileCustomUserData(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pdwDataSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    ppData: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetFilterList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    wlanFilterListType: Windows.Win32.NativeWiFi.WLAN_FILTER_LIST_TYPE,
    pNetworkList: {"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_NETWORK_LIST},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetFilterList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    wlanFilterListType: Windows.Win32.NativeWiFi.WLAN_FILTER_LIST_TYPE,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppNetworkList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.DOT11_NETWORK_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetPsdIEDataList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    strFormat: {"kind""Ptr","child":{"kind":"UInt16"}},
    pPsdIEDataList: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_RAW_DATA_LIST},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSaveTemporaryProfile(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    strProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    strAllUserProfileSecurity: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwFlags: {"kind":"UInt32"},
    bOverWrite: Windows.Win32.SystemServices.BOOL,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanDeviceServiceCommand(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    pDeviceServiceGuid: {"kind""Ptr","child":Guid},
    dwOpCode: {"kind":"UInt32"},
    dwInBufferSize: {"kind":"UInt32"},
    pInBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    dwOutBufferSize: {"kind":"UInt32"},
    pOutBuffer: {"kind""Ptr","child":{"kind":"Void"}},
    pdwBytesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetSupportedDeviceServices(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    ppDevSvcGuidList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_DEVICE_SERVICE_GUID_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanRegisterDeviceServiceNotification(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pDevSvcGuidList: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_DEVICE_SERVICE_GUID_LIST},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanExtractPsdIEDataList(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    dwIeDataSize: {"kind":"UInt32"},
    pRawIeData: {"kind""Ptr","child":{"kind":"Byte"}},
    strFormat: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    ppPsdIEDataList: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_RAW_DATA_LIST}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanReasonCodeToString(
    dwReasonCode: {"kind":"UInt32"},
    dwBufferSize: {"kind":"UInt32"},
    pStringBuffer: {"kind""Ptr","child":{"kind":"UInt16"}},
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=True (can and should we use this?)
pub extern "wlanapi" fn WlanAllocateMemory(
    dwMemorySize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanFreeMemory(
    pMemory: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanSetSecuritySettings(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    SecurableObject: Windows.Win32.NativeWiFi.WLAN_SECURABLE_OBJECT,
    strModifiedSDDL: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanGetSecuritySettings(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    SecurableObject: Windows.Win32.NativeWiFi.WLAN_SECURABLE_OBJECT,
    pValueType: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_OPCODE_VALUE_TYPE},
    pstrCurrentSDDL: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    pdwGrantedAccess: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanUIEditProfile(
    dwClientVersion: {"kind":"UInt32"},
    wstrProfileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pInterfaceGuid: {"kind""Ptr","child":Guid},
    hWnd: Windows.Win32.WindowsAndMessaging.HWND,
    wlStartPage: Windows.Win32.NativeWiFi.WL_DISPLAY_PAGES,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},
    pWlanReasonCode: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkStartUsing(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkStopUsing(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkForceStart(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkForceStop(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkQueryProperty(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    OpCode: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_OPCODE,
    pdwDataSize: {"kind""Ptr","child":{"kind":"UInt32"}},
    ppvData: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    pWlanOpcodeValueType: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_OPCODE_VALUE_TYPE},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkSetProperty(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    OpCode: Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_OPCODE,
    dwDataSize: {"kind":"UInt32"},
    pvData: {"kind""Ptr","child":{"kind":"Void"}},
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkInitSettings(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkRefreshSecuritySettings(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkQueryStatus(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    ppWlanHostedNetworkStatus: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_STATUS}},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkSetSecondaryKey(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    dwKeyLength: {"kind":"UInt32"},
    pucKeyData: {"kind""Ptr","child":{"kind":"Byte"}},
    bIsPassPhrase: Windows.Win32.SystemServices.BOOL,
    bPersistent: Windows.Win32.SystemServices.BOOL,
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanHostedNetworkQuerySecondaryKey(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pdwKeyLength: {"kind""Ptr","child":{"kind":"UInt32"}},
    ppucKeyData: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pbIsPassPhrase: {"kind""Ptr","child":{"kind":"Int32"}},
    pbPersistent: {"kind""Ptr","child":{"kind":"Int32"}},
    pFailReason: {"kind""Ptr","child":Windows.Win32.NativeWiFi.WLAN_HOSTED_NETWORK_REASON},
    pvReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WlanRegisterVirtualStationNotification(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    bRegister: Windows.Win32.SystemServices.BOOL,
    pReserved: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDOpenHandle(
    dwClientVersion: {"kind":"UInt32"},
    pdwNegotiatedVersion: {"kind""Ptr","child":{"kind":"UInt32"}},
    phClientHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDCloseHandle(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDStartOpenSession(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pDeviceAddress: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    pvContext: {"kind""Ptr","child":{"kind":"Void"}},
    pfnCallback: Windows.Win32.NativeWiFi.WFD_OPEN_SESSION_COMPLETE_CALLBACK,
    phSessionHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDCancelOpenSession(
    hSessionHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDOpenLegacySession(
    hClientHandle: Windows.Win32.SystemServices.HANDLE,
    pLegacyMacAddress: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
    phSessionHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},
    pGuidSessionInterface: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDCloseSession(
    hSessionHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "wlanapi" fn WFDUpdateDeviceVisibility(
    pDeviceAddress: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Byte"}}},
],

"unicode_aliases": [
]}
