{
"constants": [
     {
         "name": "WS_HTTP_HEADER_MAPPING_COMMA_SEPARATOR"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_HTTP_HEADER_MAPPING_SEMICOLON_SEPARATOR"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_HTTP_HEADER_MAPPING_QUOTED_VALUE"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "WS_HTTP_RESPONSE_MAPPING_STATUS_CODE"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_HTTP_RESPONSE_MAPPING_STATUS_TEXT"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_HTTP_REQUEST_MAPPING_VERB"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_MATCH_URL_DNS_HOST"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_MATCH_URL_DNS_FULLY_QUALIFIED_HOST"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_MATCH_URL_NETBIOS_HOST"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "WS_MATCH_URL_LOCAL_HOST"
        ,"type": {"kind":"Int32"}
        ,"value": 8
    }
    ,{
         "name": "WS_MATCH_URL_HOST_ADDRESSES"
        ,"type": {"kind":"Int32"}
        ,"value": 16
    }
    ,{
         "name": "WS_MATCH_URL_THIS_HOST"
        ,"type": {"kind":"Int32"}
        ,"value": 31
    }
    ,{
         "name": "WS_MATCH_URL_PORT"
        ,"type": {"kind":"Int32"}
        ,"value": 32
    }
    ,{
         "name": "WS_MATCH_URL_EXACT_PATH"
        ,"type": {"kind":"Int32"}
        ,"value": 64
    }
    ,{
         "name": "WS_MATCH_URL_PREFIX_PATH"
        ,"type": {"kind":"Int32"}
        ,"value": 128
    }
    ,{
         "name": "WS_MATCH_URL_NO_QUERY"
        ,"type": {"kind":"Int32"}
        ,"value": 256
    }
    ,{
         "name": "WS_MUST_UNDERSTAND_HEADER_ATTRIBUTE"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_RELAY_HEADER_ATTRIBUTE"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_HTTP_HEADER_AUTH_SCHEME_NONE"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_HTTP_HEADER_AUTH_SCHEME_BASIC"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_HTTP_HEADER_AUTH_SCHEME_DIGEST"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "WS_HTTP_HEADER_AUTH_SCHEME_NTLM"
        ,"type": {"kind":"Int32"}
        ,"value": 8
    }
    ,{
         "name": "WS_HTTP_HEADER_AUTH_SCHEME_NEGOTIATE"
        ,"type": {"kind":"Int32"}
        ,"value": 16
    }
    ,{
         "name": "WS_HTTP_HEADER_AUTH_SCHEME_PASSPORT"
        ,"type": {"kind":"Int32"}
        ,"value": 32
    }
    ,{
         "name": "WS_CERT_FAILURE_CN_MISMATCH"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_CERT_FAILURE_INVALID_DATE"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_CERT_FAILURE_UNTRUSTED_ROOT"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "WS_CERT_FAILURE_WRONG_USAGE"
        ,"type": {"kind":"Int32"}
        ,"value": 8
    }
    ,{
         "name": "WS_CERT_FAILURE_REVOCATION_OFFLINE"
        ,"type": {"kind":"Int32"}
        ,"value": 16
    }
    ,{
         "name": "WS_STRUCT_ABSTRACT"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_STRUCT_IGNORE_TRAILING_ELEMENT_CONTENT"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_STRUCT_IGNORE_UNHANDLED_ATTRIBUTES"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "WS_FIELD_POINTER"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_FIELD_OPTIONAL"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_FIELD_NILLABLE"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "WS_FIELD_NILLABLE_ITEM"
        ,"type": {"kind":"Int32"}
        ,"value": 8
    }
    ,{
         "name": "WS_FIELD_OTHER_NAMESPACE"
        ,"type": {"kind":"Int32"}
        ,"value": 16
    }
    ,{
         "name": "WS_SERVICE_OPERATION_MESSAGE_NILLABLE_ELEMENT"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_URL_FLAGS_ALLOW_HOST_WILDCARDS"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "WS_URL_FLAGS_NO_PATH_COLLAPSE"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "WS_URL_FLAGS_ZERO_TERMINATE"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: WS_XML_READER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_XML_READER = opaque {
};
// --------------------------------------------------------
// Type: WS_XML_WRITER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_XML_WRITER = opaque {
};
// --------------------------------------------------------
// Type: WS_XML_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_XML_BUFFER = opaque {
};
// --------------------------------------------------------
// Type: WS_CHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_CHANNEL = opaque {
};
// --------------------------------------------------------
// Type: WS_OPERATION_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_OPERATION_CONTEXT = opaque {
};
// --------------------------------------------------------
// Type: WS_ERROR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_ERROR = opaque {
};
// --------------------------------------------------------
// Type: WS_HEAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_HEAP = opaque {
};
// --------------------------------------------------------
// Type: WS_LISTENER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_LISTENER = opaque {
};
// --------------------------------------------------------
// Type: WS_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_MESSAGE = opaque {
};
// --------------------------------------------------------
// Type: WS_SECURITY_TOKEN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_SECURITY_TOKEN = opaque {
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_SECURITY_CONTEXT = opaque {
};
// --------------------------------------------------------
// Type: WS_SERVICE_HOST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_SERVICE_HOST = opaque {
};
// --------------------------------------------------------
// Type: WS_SERVICE_PROXY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_SERVICE_PROXY = opaque {
};
// --------------------------------------------------------
// Type: WS_METADATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_METADATA = opaque {
};
// --------------------------------------------------------
// Type: WS_POLICY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const WS_POLICY = opaque {
};
// --------------------------------------------------------
// Type: WS_XML_READER_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_READER_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_CANONICALIZATION_ALGORITHM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_CANONICALIZATION_ALGORITHM = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_CANONICALIZATION_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_CANONICALIZATION_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_WRITER_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_BUFFER_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_BUFFER_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_TEXT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_TEXT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_NODE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_NODE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_MOVE_TO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_MOVE_TO = *opaque{
};
// --------------------------------------------------------
// Type: WS_VALUE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_VALUE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_READER_INPUT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_READER_INPUT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_READER_ENCODING_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_READER_ENCODING_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_CHARSET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CHARSET = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_ENCODING_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_WRITER_ENCODING_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_OUTPUT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_WRITER_OUTPUT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_CALLBACK_MODEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CALLBACK_MODEL = *opaque{
};
// --------------------------------------------------------
// Type: WS_ENCODING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENCODING = *opaque{
};
// --------------------------------------------------------
// Type: WS_CHANNEL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CHANNEL_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_RECEIVE_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_RECEIVE_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: WS_CHANNEL_BINDING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CHANNEL_BINDING = *opaque{
};
// --------------------------------------------------------
// Type: WS_CHANNEL_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CHANNEL_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_TRANSFER_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_TRANSFER_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WS_HTTP_PROXY_SETTING_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_HTTP_PROXY_SETTING_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WS_CHANNEL_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CHANNEL_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_COOKIE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_COOKIE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WS_OPERATION_CONTEXT_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_OPERATION_CONTEXT_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_ENDPOINT_IDENTITY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENDPOINT_IDENTITY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_ENDPOINT_ADDRESS_EXTENSION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENDPOINT_ADDRESS_EXTENSION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_ERROR_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ERROR_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_EXCEPTION_CODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_EXCEPTION_CODE = *opaque{
};
// --------------------------------------------------------
// Type: WS_FAULT_ERROR_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FAULT_ERROR_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_FAULT_DISCLOSURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FAULT_DISCLOSURE = *opaque{
};
// --------------------------------------------------------
// Type: WS_HEAP_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_HEAP_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_LISTENER_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_LISTENER_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_LISTENER_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_LISTENER_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_IP_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_IP_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_MESSAGE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_MESSAGE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_MESSAGE_INITIALIZATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_MESSAGE_INITIALIZATION = *opaque{
};
// --------------------------------------------------------
// Type: WS_REPEATING_HEADER_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_REPEATING_HEADER_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: WS_HEADER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_HEADER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_ADDRESSING_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ADDRESSING_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_ENVELOPE_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENVELOPE_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_MESSAGE_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_MESSAGE_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_BINDING_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_TARGET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_HTTP_HEADER_AUTH_TARGET = *opaque{
};
// --------------------------------------------------------
// Type: WS_WINDOWS_INTEGRATED_AUTH_PACKAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WINDOWS_INTEGRATED_AUTH_PACKAGE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_HEADER_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_HEADER_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_TRUST_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_TRUST_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_REQUEST_SECURITY_TOKEN_ACTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_REQUEST_SECURITY_TOKEN_ACTION = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURE_CONVERSATION_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURE_CONVERSATION_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURE_PROTOCOL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURE_PROTOCOL = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_TIMESTAMP_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_TIMESTAMP_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_HEADER_LAYOUT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_HEADER_LAYOUT = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_ALGORITHM_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_ALGORITHM_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_ALGORITHM_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_ALGORITHM_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_PROTECTION_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_PROTECTION_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_KEY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_KEY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_ALGORITHM_SUITE_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_ALGORITHM_SUITE_NAME = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_TOKEN_REFERENCE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_TOKEN_REFERENCE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_KEY_ENTROPY_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_KEY_ENTROPY_MODE = *opaque{
};
// --------------------------------------------------------
// Type: WS_EXTENDED_PROTECTION_POLICY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_EXTENDED_PROTECTION_POLICY = *opaque{
};
// --------------------------------------------------------
// Type: WS_EXTENDED_PROTECTION_SCENARIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_EXTENDED_PROTECTION_SCENARIO = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_BINDING_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_CERT_CREDENTIAL_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CERT_CREDENTIAL_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_USERNAME_CREDENTIAL_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_USERNAME_CREDENTIAL_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_TOKEN_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_TOKEN_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_KEY_HANDLE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_KEY_HANDLE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_MESSAGE_SECURITY_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_MESSAGE_SECURITY_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_CONTEXT_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_XML_SECURITY_TOKEN_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_XML_SECURITY_TOKEN_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SAML_AUTHENTICATOR_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SAML_AUTHENTICATOR_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_REQUEST_SECURITY_TOKEN_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_REQUEST_SECURITY_TOKEN_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_BEARER_KEY_TYPE_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_BEARER_KEY_TYPE_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: WS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_FIELD_MAPPING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FIELD_MAPPING = *opaque{
};
// --------------------------------------------------------
// Type: WS_TYPE_MAPPING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_TYPE_MAPPING = *opaque{
};
// --------------------------------------------------------
// Type: WS_READ_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_READ_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: WS_WRITE_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WRITE_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: WS_SERVICE_CANCEL_REASON
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_CANCEL_REASON = *opaque{
};
// --------------------------------------------------------
// Type: WS_OPERATION_STYLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_OPERATION_STYLE = *opaque{
};
// --------------------------------------------------------
// Type: WS_PARAMETER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_PARAMETER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SERVICE_ENDPOINT_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_ENDPOINT_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_METADATA_EXCHANGE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_METADATA_EXCHANGE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SERVICE_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SERVICE_HOST_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_HOST_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_SERVICE_PROXY_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_PROXY_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_PROXY_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_PROXY_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_CALL_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CALL_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_TRACE_API
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_TRACE_API = *opaque{
};
// --------------------------------------------------------
// Type: WS_URL_SCHEME_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_URL_SCHEME_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_DATETIME_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DATETIME_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: WS_METADATA_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_METADATA_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_METADATA_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_METADATA_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_POLICY_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_POLICY_STATE = *opaque{
};
// --------------------------------------------------------
// Type: WS_POLICY_PROPERTY_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_POLICY_PROPERTY_ID = *opaque{
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_CONSTRAINT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SECURITY_BINDING_CONSTRAINT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_POLICY_EXTENSION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_POLICY_EXTENSION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_BINDING_TEMPLATE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_BINDING_TEMPLATE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: WS_READ_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_READ_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_WRITE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WRITE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_PUSH_BYTES_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_PUSH_BYTES_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_PULL_BYTES_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_PULL_BYTES_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_DYNAMIC_STRING_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DYNAMIC_STRING_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ASYNC_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ASYNC_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ASYNC_FUNCTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ASYNC_FUNCTION = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CREATE_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CREATE_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_FREE_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FREE_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_RESET_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_RESET_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ABORT_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ABORT_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_OPEN_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_OPEN_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CLOSE_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CLOSE_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SET_CHANNEL_PROPERTY_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SET_CHANNEL_PROPERTY_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_GET_CHANNEL_PROPERTY_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_GET_CHANNEL_PROPERTY_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_READ_MESSAGE_START_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_READ_MESSAGE_START_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_READ_MESSAGE_END_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_READ_MESSAGE_END_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_WRITE_MESSAGE_START_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WRITE_MESSAGE_START_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_WRITE_MESSAGE_END_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WRITE_MESSAGE_END_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ABANDON_MESSAGE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ABANDON_MESSAGE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SHUTDOWN_SESSION_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SHUTDOWN_SESSION_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CREATE_ENCODER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CREATE_ENCODER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ENCODER_GET_CONTENT_TYPE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENCODER_GET_CONTENT_TYPE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ENCODER_START_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENCODER_START_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ENCODER_ENCODE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENCODER_ENCODE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ENCODER_END_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ENCODER_END_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_FREE_ENCODER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FREE_ENCODER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CREATE_DECODER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CREATE_DECODER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_DECODER_GET_CONTENT_TYPE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DECODER_GET_CONTENT_TYPE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_DECODER_START_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DECODER_START_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_DECODER_DECODE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DECODER_DECODE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_DECODER_END_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DECODER_END_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_FREE_DECODER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FREE_DECODER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_HTTP_REDIRECT_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_HTTP_REDIRECT_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CREATE_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CREATE_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_FREE_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_FREE_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_RESET_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_RESET_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_OPEN_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_OPEN_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CLOSE_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CLOSE_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_GET_LISTENER_PROPERTY_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_GET_LISTENER_PROPERTY_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SET_LISTENER_PROPERTY_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SET_LISTENER_PROPERTY_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ACCEPT_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ACCEPT_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_ABORT_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_ABORT_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CREATE_CHANNEL_FOR_LISTENER_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CREATE_CHANNEL_FOR_LISTENER_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_MESSAGE_DONE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_MESSAGE_DONE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CERTIFICATE_VALIDATION_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CERTIFICATE_VALIDATION_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_GET_CERT_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_GET_CERT_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_CERT_ISSUER_LIST_NOTIFICATION_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_CERT_ISSUER_LIST_NOTIFICATION_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_VALIDATE_PASSWORD_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_VALIDATE_PASSWORD_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_VALIDATE_SAML_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_VALIDATE_SAML_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_DURATION_COMPARISON_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_DURATION_COMPARISON_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_READ_TYPE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_READ_TYPE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_WRITE_TYPE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_WRITE_TYPE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_IS_DEFAULT_VALUE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_IS_DEFAULT_VALUE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SERVICE_MESSAGE_RECEIVE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_MESSAGE_RECEIVE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_OPERATION_CANCEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_OPERATION_CANCEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_OPERATION_FREE_STATE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_OPERATION_FREE_STATE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SERVICE_STUB_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_STUB_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SERVICE_ACCEPT_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_ACCEPT_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SERVICE_CLOSE_CHANNEL_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_CLOSE_CHANNEL_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_SERVICE_SECURITY_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_SERVICE_SECURITY_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_PROXY_MESSAGE_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WS_PROXY_MESSAGE_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: WS_XML_DICTIONARY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_DICTIONARY = extern struct {
    guid: Guid,
    strings: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    stringCount: {"kind":"UInt32"},
    isConst: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: WS_XML_STRING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_STRING = extern struct {
    length: {"kind":"UInt32"},
    bytes: {"kind""Ptr","child":{"kind":"Byte"}},
    dictionary: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_DICTIONARY},
    id: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_QNAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_QNAME = extern struct {
    localName: Windows.Win32.WindowsWebServices.WS_XML_STRING,
    ns: Windows.Win32.WindowsWebServices.WS_XML_STRING,
};
// --------------------------------------------------------
// Type: WS_XML_NODE_POSITION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_NODE_POSITION = extern struct {
    buffer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    node: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_XML_READER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_CANONICALIZATION_INCLUSIVE_PREFIXES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_CANONICALIZATION_INCLUSIVE_PREFIXES = extern struct {
    prefixCount: {"kind":"UInt32"},
    prefixes: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
};
// --------------------------------------------------------
// Type: WS_XML_CANONICALIZATION_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_CANONICALIZATION_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_XML_CANONICALIZATION_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_BUFFER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_BUFFER_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_XML_BUFFER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_TEXT = extern struct {
    textType: Windows.Win32.WindowsWebServices.WS_XML_TEXT_TYPE,
};
// --------------------------------------------------------
// Type: WS_XML_UTF8_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_UTF8_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Windows.Win32.WindowsWebServices.WS_XML_STRING,
};
// --------------------------------------------------------
// Type: WS_XML_UTF16_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_UTF16_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    bytes: {"kind""Ptr","child":{"kind":"Byte"}},
    byteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_BASE64_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_BASE64_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    bytes: {"kind""Ptr","child":{"kind":"Byte"}},
    length: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_BOOL_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_BOOL_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: WS_XML_INT32_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_INT32_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: WS_XML_INT64_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_INT64_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: WS_XML_UINT64_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_UINT64_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: WS_XML_FLOAT_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_FLOAT_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: WS_XML_DOUBLE_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_DOUBLE_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: {"kind":"Double"},
};
// --------------------------------------------------------
// Type: WS_XML_DECIMAL_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_DECIMAL_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Windows.Win32.SystemServices.DECIMAL,
};
// --------------------------------------------------------
// Type: WS_XML_GUID_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_GUID_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Guid,
};
// --------------------------------------------------------
// Type: WS_XML_UNIQUE_ID_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_UNIQUE_ID_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Guid,
};
// --------------------------------------------------------
// Type: WS_DATETIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DATETIME = extern struct {
    ticks: {"kind":"UInt64"},
    format: Windows.Win32.WindowsWebServices.WS_DATETIME_FORMAT,
};
// --------------------------------------------------------
// Type: WS_XML_DATETIME_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_DATETIME_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Windows.Win32.WindowsWebServices.WS_DATETIME,
};
// --------------------------------------------------------
// Type: WS_TIMESPAN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TIMESPAN = extern struct {
    ticks: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: WS_XML_TIMESPAN_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_TIMESPAN_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    value: Windows.Win32.WindowsWebServices.WS_TIMESPAN,
};
// --------------------------------------------------------
// Type: WS_XML_QNAME_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_QNAME_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
};
// --------------------------------------------------------
// Type: WS_XML_LIST_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_LIST_TEXT = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_XML_TEXT,
    itemCount: {"kind":"UInt32"},
    items: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_TEXT}},
};
// --------------------------------------------------------
// Type: WS_XML_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_NODE = extern struct {
    nodeType: Windows.Win32.WindowsWebServices.WS_XML_NODE_TYPE,
};
// --------------------------------------------------------
// Type: WS_XML_ATTRIBUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_ATTRIBUTE = extern struct {
    singleQuote: {"kind":"Byte"},
    isXmlNs: {"kind":"Byte"},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    value: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_TEXT},
};
// --------------------------------------------------------
// Type: WS_XML_ELEMENT_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_ELEMENT_NODE = extern struct {
    node: Windows.Win32.WindowsWebServices.WS_XML_NODE,
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    attributeCount: {"kind":"UInt32"},
    attributes: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_ATTRIBUTE}},
    isEmpty: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: WS_XML_TEXT_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_TEXT_NODE = extern struct {
    node: Windows.Win32.WindowsWebServices.WS_XML_NODE,
    text: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_TEXT},
};
// --------------------------------------------------------
// Type: WS_XML_COMMENT_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_COMMENT_NODE = extern struct {
    node: Windows.Win32.WindowsWebServices.WS_XML_NODE,
    value: Windows.Win32.WindowsWebServices.WS_XML_STRING,
};
// --------------------------------------------------------
// Type: WS_XML_READER_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_INPUT = extern struct {
    inputType: Windows.Win32.WindowsWebServices.WS_XML_READER_INPUT_TYPE,
};
// --------------------------------------------------------
// Type: WS_XML_READER_BUFFER_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_BUFFER_INPUT = extern struct {
    input: Windows.Win32.WindowsWebServices.WS_XML_READER_INPUT,
    encodedData: {"kind""Ptr","child":{"kind":"Void"}},
    encodedDataSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_READER_STREAM_INPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_STREAM_INPUT = extern struct {
    input: Windows.Win32.WindowsWebServices.WS_XML_READER_INPUT,
    readCallback: Windows.Win32.WindowsWebServices.WS_READ_CALLBACK,
    readCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_XML_READER_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_ENCODING = extern struct {
    encodingType: Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING_TYPE,
};
// --------------------------------------------------------
// Type: WS_XML_READER_TEXT_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_TEXT_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING,
    charSet: Windows.Win32.WindowsWebServices.WS_CHARSET,
};
// --------------------------------------------------------
// Type: WS_XML_READER_BINARY_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_BINARY_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING,
    staticDictionary: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_DICTIONARY},
    dynamicDictionary: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_DICTIONARY},
};
// --------------------------------------------------------
// Type: WS_STRING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_STRING = extern struct {
    length: {"kind":"UInt32"},
    chars: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WS_XML_READER_MTOM_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_MTOM_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING,
    textEncoding: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING},
    readMimeHeader: Windows.Win32.SystemServices.BOOL,
    startInfo: Windows.Win32.WindowsWebServices.WS_STRING,
    boundary: Windows.Win32.WindowsWebServices.WS_STRING,
    startUri: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_XML_READER_RAW_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_RAW_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING,
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_ENCODING = extern struct {
    encodingType: Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING_TYPE,
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_TEXT_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_TEXT_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING,
    charSet: Windows.Win32.WindowsWebServices.WS_CHARSET,
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_BINARY_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_BINARY_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING,
    staticDictionary: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_DICTIONARY},
    dynamicStringCallback: Windows.Win32.WindowsWebServices.WS_DYNAMIC_STRING_CALLBACK,
    dynamicStringCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_MTOM_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_MTOM_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING,
    textEncoding: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING},
    writeMimeHeader: Windows.Win32.SystemServices.BOOL,
    boundary: Windows.Win32.WindowsWebServices.WS_STRING,
    startInfo: Windows.Win32.WindowsWebServices.WS_STRING,
    startUri: Windows.Win32.WindowsWebServices.WS_STRING,
    maxInlineByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_RAW_ENCODING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_RAW_ENCODING = extern struct {
    encoding: Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING,
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_OUTPUT = extern struct {
    outputType: Windows.Win32.WindowsWebServices.WS_XML_WRITER_OUTPUT_TYPE,
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_BUFFER_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_BUFFER_OUTPUT = extern struct {
    output: Windows.Win32.WindowsWebServices.WS_XML_WRITER_OUTPUT,
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_STREAM_OUTPUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_STREAM_OUTPUT = extern struct {
    output: Windows.Win32.WindowsWebServices.WS_XML_WRITER_OUTPUT,
    writeCallback: Windows.Win32.WindowsWebServices.WS_WRITE_CALLBACK,
    writeCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_XML_WRITER_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_WRITER_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_READER_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_READER_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_ASYNC_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ASYNC_CONTEXT = extern struct {
    callback: Windows.Win32.WindowsWebServices.WS_ASYNC_CALLBACK,
    callbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_ASYNC_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ASYNC_STATE = extern struct {
    internal0: {"kind""Ptr","child":{"kind":"Void"}},
    internal1: {"kind""Ptr","child":{"kind":"Void"}},
    internal2: {"kind""Ptr","child":{"kind":"Void"}},
    internal3: {"kind""Ptr","child":{"kind":"Void"}},
    internal4: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_ASYNC_OPERATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ASYNC_OPERATION = extern struct {
    function: Windows.Win32.WindowsWebServices.WS_ASYNC_FUNCTION,
};
// --------------------------------------------------------
// Type: WS_CHANNEL_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CHANNEL_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_CUSTOM_HTTP_PROXY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CUSTOM_HTTP_PROXY = extern struct {
    servers: Windows.Win32.WindowsWebServices.WS_STRING,
    bypass: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_CHANNEL_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CHANNEL_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_CUSTOM_CHANNEL_CALLBACKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CUSTOM_CHANNEL_CALLBACKS = extern struct {
    createChannelCallback: Windows.Win32.WindowsWebServices.WS_CREATE_CHANNEL_CALLBACK,
    freeChannelCallback: Windows.Win32.WindowsWebServices.WS_FREE_CHANNEL_CALLBACK,
    resetChannelCallback: Windows.Win32.WindowsWebServices.WS_RESET_CHANNEL_CALLBACK,
    openChannelCallback: Windows.Win32.WindowsWebServices.WS_OPEN_CHANNEL_CALLBACK,
    closeChannelCallback: Windows.Win32.WindowsWebServices.WS_CLOSE_CHANNEL_CALLBACK,
    abortChannelCallback: Windows.Win32.WindowsWebServices.WS_ABORT_CHANNEL_CALLBACK,
    getChannelPropertyCallback: Windows.Win32.WindowsWebServices.WS_GET_CHANNEL_PROPERTY_CALLBACK,
    setChannelPropertyCallback: Windows.Win32.WindowsWebServices.WS_SET_CHANNEL_PROPERTY_CALLBACK,
    writeMessageStartCallback: Windows.Win32.WindowsWebServices.WS_WRITE_MESSAGE_START_CALLBACK,
    writeMessageEndCallback: Windows.Win32.WindowsWebServices.WS_WRITE_MESSAGE_END_CALLBACK,
    readMessageStartCallback: Windows.Win32.WindowsWebServices.WS_READ_MESSAGE_START_CALLBACK,
    readMessageEndCallback: Windows.Win32.WindowsWebServices.WS_READ_MESSAGE_END_CALLBACK,
    abandonMessageCallback: Windows.Win32.WindowsWebServices.WS_ABANDON_MESSAGE_CALLBACK,
    shutdownSessionChannelCallback: Windows.Win32.WindowsWebServices.WS_SHUTDOWN_SESSION_CHANNEL_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_MAPPING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_MAPPING = extern struct {
    headerName: Windows.Win32.WindowsWebServices.WS_XML_STRING,
    headerMappingOptions: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_HTTP_MESSAGE_MAPPING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_MESSAGE_MAPPING = extern struct {
    requestMappingOptions: {"kind":"UInt32"},
    responseMappingOptions: {"kind":"UInt32"},
    requestHeaderMappings: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HTTP_HEADER_MAPPING}},
    requestHeaderMappingCount: {"kind":"UInt32"},
    responseHeaderMappings: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HTTP_HEADER_MAPPING}},
    responseHeaderMappingCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_ELEMENT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ELEMENT_DESCRIPTION = extern struct {
    elementLocalName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    elementNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    type: Windows.Win32.WindowsWebServices.WS_TYPE,
    typeDescription: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_MESSAGE_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_MESSAGE_DESCRIPTION = extern struct {
    action: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    bodyElementDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
};
// --------------------------------------------------------
// Type: WS_CHANNEL_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CHANNEL_ENCODER = extern struct {
    createContext: {"kind""Ptr","child":{"kind":"Void"}},
    createEncoderCallback: Windows.Win32.WindowsWebServices.WS_CREATE_ENCODER_CALLBACK,
    encoderGetContentTypeCallback: Windows.Win32.WindowsWebServices.WS_ENCODER_GET_CONTENT_TYPE_CALLBACK,
    encoderStartCallback: Windows.Win32.WindowsWebServices.WS_ENCODER_START_CALLBACK,
    encoderEncodeCallback: Windows.Win32.WindowsWebServices.WS_ENCODER_ENCODE_CALLBACK,
    encoderEndCallback: Windows.Win32.WindowsWebServices.WS_ENCODER_END_CALLBACK,
    freeEncoderCallback: Windows.Win32.WindowsWebServices.WS_FREE_ENCODER_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_CHANNEL_DECODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CHANNEL_DECODER = extern struct {
    createContext: {"kind""Ptr","child":{"kind":"Void"}},
    createDecoderCallback: Windows.Win32.WindowsWebServices.WS_CREATE_DECODER_CALLBACK,
    decoderGetContentTypeCallback: Windows.Win32.WindowsWebServices.WS_DECODER_GET_CONTENT_TYPE_CALLBACK,
    decoderStartCallback: Windows.Win32.WindowsWebServices.WS_DECODER_START_CALLBACK,
    decoderDecodeCallback: Windows.Win32.WindowsWebServices.WS_DECODER_DECODE_CALLBACK,
    decoderEndCallback: Windows.Win32.WindowsWebServices.WS_DECODER_END_CALLBACK,
    freeDecoderCallback: Windows.Win32.WindowsWebServices.WS_FREE_DECODER_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_HTTP_REDIRECT_CALLBACK_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_REDIRECT_CALLBACK_CONTEXT = extern struct {
    callback: Windows.Win32.WindowsWebServices.WS_HTTP_REDIRECT_CALLBACK,
    state: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ENDPOINT_IDENTITY = extern struct {
    identityType: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY_TYPE,
};
// --------------------------------------------------------
// Type: WS_ENDPOINT_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ENDPOINT_ADDRESS = extern struct {
    url: Windows.Win32.WindowsWebServices.WS_STRING,
    headers: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    extensions: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    identity: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY},
};
// --------------------------------------------------------
// Type: WS_DNS_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DNS_ENDPOINT_IDENTITY = extern struct {
    identity: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY,
    dns: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_UPN_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UPN_ENDPOINT_IDENTITY = extern struct {
    identity: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY,
    upn: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_SPN_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SPN_ENDPOINT_IDENTITY = extern struct {
    identity: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY,
    spn: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_BYTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_BYTES = extern struct {
    length: {"kind":"UInt32"},
    bytes: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WS_RSA_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_RSA_ENDPOINT_IDENTITY = extern struct {
    identity: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY,
    modulus: Windows.Win32.WindowsWebServices.WS_BYTES,
    exponent: Windows.Win32.WindowsWebServices.WS_BYTES,
};
// --------------------------------------------------------
// Type: WS_CERT_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CERT_ENDPOINT_IDENTITY = extern struct {
    identity: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY,
    rawCertificateData: Windows.Win32.WindowsWebServices.WS_BYTES,
};
// --------------------------------------------------------
// Type: WS_UNKNOWN_ENDPOINT_IDENTITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UNKNOWN_ENDPOINT_IDENTITY = extern struct {
    identity: Windows.Win32.WindowsWebServices.WS_ENDPOINT_IDENTITY,
    element: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
};
// --------------------------------------------------------
// Type: WS_ERROR_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ERROR_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_ERROR_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_FAULT_REASON
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FAULT_REASON = extern struct {
    text: Windows.Win32.WindowsWebServices.WS_STRING,
    lang: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_FAULT_CODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FAULT_CODE = extern struct {
    value: Windows.Win32.WindowsWebServices.WS_XML_QNAME,
    subCode: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FAULT_CODE},
};
// --------------------------------------------------------
// Type: WS_FAULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FAULT = extern struct {
    code: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FAULT_CODE},
    reasons: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FAULT_REASON},
    reasonCount: {"kind":"UInt32"},
    actor: Windows.Win32.WindowsWebServices.WS_STRING,
    node: Windows.Win32.WindowsWebServices.WS_STRING,
    detail: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
};
// --------------------------------------------------------
// Type: WS_FAULT_DETAIL_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FAULT_DETAIL_DESCRIPTION = extern struct {
    action: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    detailElementDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
};
// --------------------------------------------------------
// Type: WS_HEAP_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HEAP_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_HEAP_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_HEAP_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HEAP_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_LISTENER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_LISTENER_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_LISTENER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_DISALLOWED_USER_AGENT_SUBSTRINGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DISALLOWED_USER_AGENT_SUBSTRINGS = extern struct {
    subStringCount: {"kind":"UInt32"},
    subStrings: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING}},
};
// --------------------------------------------------------
// Type: WS_LISTENER_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_LISTENER_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_HOST_NAMES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HOST_NAMES = extern struct {
    hostNames: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    hostNameCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_CUSTOM_LISTENER_CALLBACKS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CUSTOM_LISTENER_CALLBACKS = extern struct {
    createListenerCallback: Windows.Win32.WindowsWebServices.WS_CREATE_LISTENER_CALLBACK,
    freeListenerCallback: Windows.Win32.WindowsWebServices.WS_FREE_LISTENER_CALLBACK,
    resetListenerCallback: Windows.Win32.WindowsWebServices.WS_RESET_LISTENER_CALLBACK,
    openListenerCallback: Windows.Win32.WindowsWebServices.WS_OPEN_LISTENER_CALLBACK,
    closeListenerCallback: Windows.Win32.WindowsWebServices.WS_CLOSE_LISTENER_CALLBACK,
    abortListenerCallback: Windows.Win32.WindowsWebServices.WS_ABORT_LISTENER_CALLBACK,
    getListenerPropertyCallback: Windows.Win32.WindowsWebServices.WS_GET_LISTENER_PROPERTY_CALLBACK,
    setListenerPropertyCallback: Windows.Win32.WindowsWebServices.WS_SET_LISTENER_PROPERTY_CALLBACK,
    createChannelForListenerCallback: Windows.Win32.WindowsWebServices.WS_CREATE_CHANNEL_FOR_LISTENER_CALLBACK,
    acceptChannelCallback: Windows.Win32.WindowsWebServices.WS_ACCEPT_CHANNEL_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_MESSAGE_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_MESSAGE_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_MESSAGE_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_MESSAGE_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_MESSAGE_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_ALGORITHM_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_ALGORITHM_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_ALGORITHM_SUITE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_ALGORITHM_SUITE = extern struct {
    canonicalizationAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    digestAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    symmetricSignatureAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    asymmetricSignatureAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    encryptionAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    keyDerivationAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    symmetricKeyWrapAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    asymmetricKeyWrapAlgorithm: Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_ID,
    minSymmetricKeyLength: {"kind":"UInt32"},
    maxSymmetricKeyLength: {"kind":"UInt32"},
    minAsymmetricKeyLength: {"kind":"UInt32"},
    maxAsymmetricKeyLength: {"kind":"UInt32"},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_ALGORITHM_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_BINDING_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_BINDING_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SERVICE_SECURITY_IDENTITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_SECURITY_IDENTITIES = extern struct {
    serviceIdentities: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    serviceIdentityCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_CERTIFICATE_VALIDATION_CALLBACK_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CERTIFICATE_VALIDATION_CALLBACK_CONTEXT = extern struct {
    callback: Windows.Win32.WindowsWebServices.WS_CERTIFICATE_VALIDATION_CALLBACK,
    state: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_CERT_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CERT_CREDENTIAL = extern struct {
    credentialType: Windows.Win32.WindowsWebServices.WS_CERT_CREDENTIAL_TYPE,
};
// --------------------------------------------------------
// Type: WS_SUBJECT_NAME_CERT_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SUBJECT_NAME_CERT_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_CERT_CREDENTIAL,
    storeLocation: {"kind":"UInt32"},
    storeName: Windows.Win32.WindowsWebServices.WS_STRING,
    subjectName: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_THUMBPRINT_CERT_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_THUMBPRINT_CERT_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_CERT_CREDENTIAL,
    storeLocation: {"kind":"UInt32"},
    storeName: Windows.Win32.WindowsWebServices.WS_STRING,
    thumbprint: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_CUSTOM_CERT_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CUSTOM_CERT_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_CERT_CREDENTIAL,
    getCertCallback: Windows.Win32.WindowsWebServices.WS_GET_CERT_CALLBACK,
    getCertCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
    certIssuerListNotificationCallback: Windows.Win32.WindowsWebServices.WS_CERT_ISSUER_LIST_NOTIFICATION_CALLBACK,
    certIssuerListNotificationCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL = extern struct {
    credentialType: Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL_TYPE,
};
// --------------------------------------------------------
// Type: WS_STRING_WINDOWS_INTEGRATED_AUTH_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_STRING_WINDOWS_INTEGRATED_AUTH_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL,
    username: Windows.Win32.WindowsWebServices.WS_STRING,
    password: Windows.Win32.WindowsWebServices.WS_STRING,
    domain: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_DEFAULT_WINDOWS_INTEGRATED_AUTH_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DEFAULT_WINDOWS_INTEGRATED_AUTH_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL,
};
// --------------------------------------------------------
// Type: WS_OPAQUE_WINDOWS_INTEGRATED_AUTH_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_OPAQUE_WINDOWS_INTEGRATED_AUTH_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL,
    opaqueAuthIdentity: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_USERNAME_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_USERNAME_CREDENTIAL = extern struct {
    credentialType: Windows.Win32.WindowsWebServices.WS_USERNAME_CREDENTIAL_TYPE,
};
// --------------------------------------------------------
// Type: WS_STRING_USERNAME_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_STRING_USERNAME_CREDENTIAL = extern struct {
    credential: Windows.Win32.WindowsWebServices.WS_USERNAME_CREDENTIAL,
    username: Windows.Win32.WindowsWebServices.WS_STRING,
    password: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_SECURITY_KEY_HANDLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_KEY_HANDLE = extern struct {
    keyHandleType: Windows.Win32.WindowsWebServices.WS_SECURITY_KEY_HANDLE_TYPE,
};
// --------------------------------------------------------
// Type: WS_RAW_SYMMETRIC_SECURITY_KEY_HANDLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_RAW_SYMMETRIC_SECURITY_KEY_HANDLE = extern struct {
    keyHandle: Windows.Win32.WindowsWebServices.WS_SECURITY_KEY_HANDLE,
    rawKeyBytes: Windows.Win32.WindowsWebServices.WS_BYTES,
};
// --------------------------------------------------------
// Type: WS_NCRYPT_ASYMMETRIC_SECURITY_KEY_HANDLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_NCRYPT_ASYMMETRIC_SECURITY_KEY_HANDLE = extern struct {
    keyHandle: Windows.Win32.WindowsWebServices.WS_SECURITY_KEY_HANDLE,
    asymmetricKey: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: WS_CAPI_ASYMMETRIC_SECURITY_KEY_HANDLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CAPI_ASYMMETRIC_SECURITY_KEY_HANDLE = extern struct {
    keyHandle: Windows.Win32.WindowsWebServices.WS_SECURITY_KEY_HANDLE,
    provider: {"kind":"UIntPtr"},
    keySpec: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_BINDING = extern struct {
    bindingType: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_TYPE,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SSL_TRANSPORT_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SSL_TRANSPORT_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    localCertCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CERT_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_NAMEDPIPE_SSPI_TRANSPORT_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_NAMEDPIPE_SSPI_TRANSPORT_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_AUTH_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_USERNAME_MESSAGE_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_USERNAME_MESSAGE_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_USERNAME_CREDENTIAL},
    passwordValidator: Windows.Win32.WindowsWebServices.WS_VALIDATE_PASSWORD_CALLBACK,
    passwordValidatorCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_SECURITY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_DESCRIPTION = extern struct {
    securityBindings: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING}},
    securityBindingCount: {"kind":"UInt32"},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    bootstrapSecurityDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_DESCRIPTION},
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_SECURITY_TOKEN_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_SECURITY_TOKEN_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_XML_SECURITY_TOKEN_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_TOKEN_MESSAGE_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_TOKEN_MESSAGE_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    xmlToken: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_TOKEN},
};
// --------------------------------------------------------
// Type: WS_SAML_AUTHENTICATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SAML_AUTHENTICATOR = extern struct {
    authenticatorType: Windows.Win32.WindowsWebServices.WS_SAML_AUTHENTICATOR_TYPE,
};
// --------------------------------------------------------
// Type: WS_CERT_SIGNED_SAML_AUTHENTICATOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CERT_SIGNED_SAML_AUTHENTICATOR = extern struct {
    authenticator: Windows.Win32.WindowsWebServices.WS_SAML_AUTHENTICATOR,
    trustedIssuerCerts: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.CERT_CONTEXT}},
    trustedIssuerCertCount: {"kind":"UInt32"},
    decryptionCert: {"kind""Ptr","child":Windows.Win32.Security.CERT_CONTEXT},
    samlValidator: Windows.Win32.WindowsWebServices.WS_VALIDATE_SAML_CALLBACK,
    samlValidatorCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_SAML_MESSAGE_SECURITY_BINDING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SAML_MESSAGE_SECURITY_BINDING = extern struct {
    binding: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    authenticator: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SAML_AUTHENTICATOR},
};
// --------------------------------------------------------
// Type: WS_REQUEST_SECURITY_TOKEN_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_REQUEST_SECURITY_TOKEN_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_REQUEST_SECURITY_TOKEN_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_ANY_ATTRIBUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ANY_ATTRIBUTE = extern struct {
    localName: Windows.Win32.WindowsWebServices.WS_XML_STRING,
    ns: Windows.Win32.WindowsWebServices.WS_XML_STRING,
    value: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_TEXT},
};
// --------------------------------------------------------
// Type: WS_ANY_ATTRIBUTES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ANY_ATTRIBUTES = extern struct {
    attributes: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ANY_ATTRIBUTE},
    attributeCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_BOOL_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_BOOL_DESCRIPTION = extern struct {
    value: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: WS_GUID_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_GUID_DESCRIPTION = extern struct {
    value: Guid,
};
// --------------------------------------------------------
// Type: WS_DATETIME_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DATETIME_DESCRIPTION = extern struct {
    minValue: Windows.Win32.WindowsWebServices.WS_DATETIME,
    maxValue: Windows.Win32.WindowsWebServices.WS_DATETIME,
};
// --------------------------------------------------------
// Type: WS_DURATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DURATION = extern struct {
    negative: Windows.Win32.SystemServices.BOOL,
    years: {"kind":"UInt32"},
    months: {"kind":"UInt32"},
    days: {"kind":"UInt32"},
    hours: {"kind":"UInt32"},
    minutes: {"kind":"UInt32"},
    seconds: {"kind":"UInt32"},
    milliseconds: {"kind":"UInt32"},
    ticks: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_DURATION_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DURATION_DESCRIPTION = extern struct {
    minValue: Windows.Win32.WindowsWebServices.WS_DURATION,
    maxValue: Windows.Win32.WindowsWebServices.WS_DURATION,
    comparer: Windows.Win32.WindowsWebServices.WS_DURATION_COMPARISON_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_TIMESPAN_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TIMESPAN_DESCRIPTION = extern struct {
    minValue: Windows.Win32.WindowsWebServices.WS_TIMESPAN,
    maxValue: Windows.Win32.WindowsWebServices.WS_TIMESPAN,
};
// --------------------------------------------------------
// Type: WS_UNIQUE_ID_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UNIQUE_ID_DESCRIPTION = extern struct {
    minCharCount: {"kind":"UInt32"},
    maxCharCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_STRING_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_STRING_DESCRIPTION = extern struct {
    minCharCount: {"kind":"UInt32"},
    maxCharCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_STRING_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_STRING_DESCRIPTION = extern struct {
    minByteCount: {"kind":"UInt32"},
    maxByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_XML_QNAME_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_XML_QNAME_DESCRIPTION = extern struct {
    minLocalNameByteCount: {"kind":"UInt32"},
    maxLocalNameByteCount: {"kind":"UInt32"},
    minNsByteCount: {"kind":"UInt32"},
    maxNsByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_CHAR_ARRAY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CHAR_ARRAY_DESCRIPTION = extern struct {
    minCharCount: {"kind":"UInt32"},
    maxCharCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_BYTE_ARRAY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_BYTE_ARRAY_DESCRIPTION = extern struct {
    minByteCount: {"kind":"UInt32"},
    maxByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_UTF8_ARRAY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UTF8_ARRAY_DESCRIPTION = extern struct {
    minByteCount: {"kind":"UInt32"},
    maxByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_WSZ_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_WSZ_DESCRIPTION = extern struct {
    minCharCount: {"kind":"UInt32"},
    maxCharCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_INT8_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_INT8_DESCRIPTION = extern struct {
    minValue: {"kind":"SByte"},
    maxValue: {"kind":"SByte"},
};
// --------------------------------------------------------
// Type: WS_UINT8_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UINT8_DESCRIPTION = extern struct {
    minValue: {"kind":"Byte"},
    maxValue: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: WS_INT16_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_INT16_DESCRIPTION = extern struct {
    minValue: {"kind":"Int16"},
    maxValue: {"kind":"Int16"},
};
// --------------------------------------------------------
// Type: WS_UINT16_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UINT16_DESCRIPTION = extern struct {
    minValue: {"kind":"UInt16"},
    maxValue: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: WS_INT32_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_INT32_DESCRIPTION = extern struct {
    minValue: {"kind":"Int32"},
    maxValue: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: WS_UINT32_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UINT32_DESCRIPTION = extern struct {
    minValue: {"kind":"UInt32"},
    maxValue: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_INT64_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_INT64_DESCRIPTION = extern struct {
    minValue: {"kind":"Int64"},
    maxValue: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: WS_UINT64_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UINT64_DESCRIPTION = extern struct {
    minValue: {"kind":"UInt64"},
    maxValue: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: WS_FLOAT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FLOAT_DESCRIPTION = extern struct {
    minValue: {"kind":"Single"},
    maxValue: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: WS_DOUBLE_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DOUBLE_DESCRIPTION = extern struct {
    minValue: {"kind":"Double"},
    maxValue: {"kind":"Double"},
};
// --------------------------------------------------------
// Type: WS_DECIMAL_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DECIMAL_DESCRIPTION = extern struct {
    minValue: Windows.Win32.SystemServices.DECIMAL,
    maxValue: Windows.Win32.SystemServices.DECIMAL,
};
// --------------------------------------------------------
// Type: WS_BYTES_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_BYTES_DESCRIPTION = extern struct {
    minByteCount: {"kind":"UInt32"},
    maxByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_ENUM_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ENUM_VALUE = extern struct {
    value: {"kind":"Int32"},
    name: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
};
// --------------------------------------------------------
// Type: WS_ENUM_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ENUM_DESCRIPTION = extern struct {
    values: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENUM_VALUE},
    valueCount: {"kind":"UInt32"},
    maxByteCount: {"kind":"UInt32"},
    nameIndices: {"kind""Ptr","child":{"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: WS_ITEM_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ITEM_RANGE = extern struct {
    minItemCount: {"kind":"UInt32"},
    maxItemCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_DEFAULT_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_DEFAULT_VALUE = extern struct {
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_FIELD_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FIELD_DESCRIPTION = extern struct {
    mapping: Windows.Win32.WindowsWebServices.WS_FIELD_MAPPING,
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    type: Windows.Win32.WindowsWebServices.WS_TYPE,
    typeDescription: {"kind""Ptr","child":{"kind":"Void"}},
    offset: {"kind":"UInt32"},
    options: {"kind":"UInt32"},
    defaultValue: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_DEFAULT_VALUE},
    countOffset: {"kind":"UInt32"},
    itemLocalName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    itemNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    itemRange: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ITEM_RANGE},
};
// --------------------------------------------------------
// Type: WS_UNION_FIELD_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UNION_FIELD_DESCRIPTION = extern struct {
    value: {"kind":"Int32"},
    field: Windows.Win32.WindowsWebServices.WS_FIELD_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_STRUCT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_STRUCT_DESCRIPTION = extern struct {
    size: {"kind":"UInt32"},
    alignment: {"kind":"UInt32"},
    fields: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FIELD_DESCRIPTION}},
    fieldCount: {"kind":"UInt32"},
    typeLocalName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    typeNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    parentType: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRUCT_DESCRIPTION},
    subTypes: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRUCT_DESCRIPTION}},
    subTypeCount: {"kind":"UInt32"},
    structOptions: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_UNION_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UNION_DESCRIPTION = extern struct {
    size: {"kind":"UInt32"},
    alignment: {"kind":"UInt32"},
    fields: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_UNION_FIELD_DESCRIPTION}},
    fieldCount: {"kind":"UInt32"},
    enumOffset: {"kind":"UInt32"},
    noneEnumValue: {"kind":"Int32"},
    valueIndices: {"kind""Ptr","child":{"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: WS_ENDPOINT_ADDRESS_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ENDPOINT_ADDRESS_DESCRIPTION = extern struct {
    addressingVersion: Windows.Win32.WindowsWebServices.WS_ADDRESSING_VERSION,
};
// --------------------------------------------------------
// Type: WS_FAULT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_FAULT_DESCRIPTION = extern struct {
    envelopeVersion: Windows.Win32.WindowsWebServices.WS_ENVELOPE_VERSION,
};
// --------------------------------------------------------
// Type: WS_VOID_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_VOID_DESCRIPTION = extern struct {
    size: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_CUSTOM_TYPE_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CUSTOM_TYPE_DESCRIPTION = extern struct {
    size: {"kind":"UInt32"},
    alignment: {"kind":"UInt32"},
    readCallback: Windows.Win32.WindowsWebServices.WS_READ_TYPE_CALLBACK,
    writeCallback: Windows.Win32.WindowsWebServices.WS_WRITE_TYPE_CALLBACK,
    descriptionData: {"kind""Ptr","child":{"kind":"Void"}},
    isDefaultValueCallback: Windows.Win32.WindowsWebServices.WS_IS_DEFAULT_VALUE_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_ATTRIBUTE_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ATTRIBUTE_DESCRIPTION = extern struct {
    attributeLocalName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    attributeNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    type: Windows.Win32.WindowsWebServices.WS_TYPE,
    typeDescription: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_PARAMETER_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_PARAMETER_DESCRIPTION = extern struct {
    parameterType: Windows.Win32.WindowsWebServices.WS_PARAMETER_TYPE,
    inputMessageIndex: {"kind":"UInt16"},
    outputMessageIndex: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: WS_OPERATION_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_OPERATION_DESCRIPTION = extern struct {
    versionInfo: {"kind":"UInt32"},
    inputMessageDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION},
    outputMessageDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION},
    inputMessageOptions: {"kind":"UInt32"},
    outputMessageOptions: {"kind":"UInt32"},
    parameterCount: {"kind":"UInt16"},
    parameterDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_PARAMETER_DESCRIPTION},
    stubCallback: Windows.Win32.WindowsWebServices.WS_SERVICE_STUB_CALLBACK,
    style: Windows.Win32.WindowsWebServices.WS_OPERATION_STYLE,
};
// --------------------------------------------------------
// Type: WS_CONTRACT_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CONTRACT_DESCRIPTION = extern struct {
    operationCount: {"kind":"UInt32"},
    operations: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_OPERATION_DESCRIPTION}},
};
// --------------------------------------------------------
// Type: WS_SERVICE_CONTRACT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_CONTRACT = extern struct {
    contractDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CONTRACT_DESCRIPTION},
    defaultMessageHandlerCallback: Windows.Win32.WindowsWebServices.WS_SERVICE_MESSAGE_RECEIVE_CALLBACK,
    methodTable: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_SERVICE_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SERVICE_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SERVICE_ENDPOINT_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_ENDPOINT_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SERVICE_ENDPOINT_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SERVICE_PROPERTY_ACCEPT_CALLBACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_PROPERTY_ACCEPT_CALLBACK = extern struct {
    callback: Windows.Win32.WindowsWebServices.WS_SERVICE_ACCEPT_CHANNEL_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_SERVICE_METADATA_DOCUMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_METADATA_DOCUMENT = extern struct {
    content: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    name: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
};
// --------------------------------------------------------
// Type: WS_SERVICE_METADATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_METADATA = extern struct {
    documentCount: {"kind":"UInt32"},
    documents: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_METADATA_DOCUMENT}},
    serviceName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    serviceNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
};
// --------------------------------------------------------
// Type: WS_SERVICE_PROPERTY_CLOSE_CALLBACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_PROPERTY_CLOSE_CALLBACK = extern struct {
    callback: Windows.Win32.WindowsWebServices.WS_SERVICE_CLOSE_CHANNEL_CALLBACK,
};
// --------------------------------------------------------
// Type: WS_SERVICE_ENDPOINT_METADATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_ENDPOINT_METADATA = extern struct {
    portName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    bindingName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    bindingNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
};
// --------------------------------------------------------
// Type: WS_SERVICE_ENDPOINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SERVICE_ENDPOINT = extern struct {
    address: Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS,
    channelBinding: Windows.Win32.WindowsWebServices.WS_CHANNEL_BINDING,
    channelType: Windows.Win32.WindowsWebServices.WS_CHANNEL_TYPE,
    securityDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_DESCRIPTION},
    contract: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_CONTRACT},
    authorizationCallback: Windows.Win32.WindowsWebServices.WS_SERVICE_SECURITY_CALLBACK,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_ENDPOINT_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_PROXY_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_PROXY_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_PROXY_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_PROXY_MESSAGE_CALLBACK_CONTEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_PROXY_MESSAGE_CALLBACK_CONTEXT = extern struct {
    callback: Windows.Win32.WindowsWebServices.WS_PROXY_MESSAGE_CALLBACK,
    state: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_CALL_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CALL_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_CALL_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_URL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_URL = extern struct {
    scheme: Windows.Win32.WindowsWebServices.WS_URL_SCHEME_TYPE,
};
// --------------------------------------------------------
// Type: WS_HTTP_URL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_URL = extern struct {
    url: Windows.Win32.WindowsWebServices.WS_URL,
    host: Windows.Win32.WindowsWebServices.WS_STRING,
    port: {"kind":"UInt16"},
    portAsString: Windows.Win32.WindowsWebServices.WS_STRING,
    path: Windows.Win32.WindowsWebServices.WS_STRING,
    query: Windows.Win32.WindowsWebServices.WS_STRING,
    fragment: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_HTTPS_URL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTPS_URL = extern struct {
    url: Windows.Win32.WindowsWebServices.WS_URL,
    host: Windows.Win32.WindowsWebServices.WS_STRING,
    port: {"kind":"UInt16"},
    portAsString: Windows.Win32.WindowsWebServices.WS_STRING,
    path: Windows.Win32.WindowsWebServices.WS_STRING,
    query: Windows.Win32.WindowsWebServices.WS_STRING,
    fragment: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_NETTCP_URL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_NETTCP_URL = extern struct {
    url: Windows.Win32.WindowsWebServices.WS_URL,
    host: Windows.Win32.WindowsWebServices.WS_STRING,
    port: {"kind":"UInt16"},
    portAsString: Windows.Win32.WindowsWebServices.WS_STRING,
    path: Windows.Win32.WindowsWebServices.WS_STRING,
    query: Windows.Win32.WindowsWebServices.WS_STRING,
    fragment: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_SOAPUDP_URL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SOAPUDP_URL = extern struct {
    url: Windows.Win32.WindowsWebServices.WS_URL,
    host: Windows.Win32.WindowsWebServices.WS_STRING,
    port: {"kind":"UInt16"},
    portAsString: Windows.Win32.WindowsWebServices.WS_STRING,
    path: Windows.Win32.WindowsWebServices.WS_STRING,
    query: Windows.Win32.WindowsWebServices.WS_STRING,
    fragment: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_NETPIPE_URL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_NETPIPE_URL = extern struct {
    url: Windows.Win32.WindowsWebServices.WS_URL,
    host: Windows.Win32.WindowsWebServices.WS_STRING,
    port: {"kind":"UInt16"},
    portAsString: Windows.Win32.WindowsWebServices.WS_STRING,
    path: Windows.Win32.WindowsWebServices.WS_STRING,
    query: Windows.Win32.WindowsWebServices.WS_STRING,
    fragment: Windows.Win32.WindowsWebServices.WS_STRING,
};
// --------------------------------------------------------
// Type: WS_UNIQUE_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_UNIQUE_ID = extern struct {
    uri: Windows.Win32.WindowsWebServices.WS_STRING,
    guid: Guid,
};
// --------------------------------------------------------
// Type: WS_BUFFERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_BUFFERS = extern struct {
    bufferCount: {"kind":"UInt32"},
    buffers: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_BYTES},
};
// --------------------------------------------------------
// Type: WS_METADATA_ENDPOINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_METADATA_ENDPOINT = extern struct {
    endpointAddress: Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS,
    endpointPolicy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY},
    portName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    serviceName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    serviceNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    bindingName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    bindingNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    portTypeName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    portTypeNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
};
// --------------------------------------------------------
// Type: WS_METADATA_ENDPOINTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_METADATA_ENDPOINTS = extern struct {
    endpoints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA_ENDPOINT},
    endpointCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_METADATA_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_METADATA_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_METADATA_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_POLICY_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_POLICY_PROPERTY = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_POLICY_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_POLICY_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_POLICY_PROPERTIES = extern struct {
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY_PROPERTY},
    propertyCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_PROPERTY_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_BINDING_PROPERTY_CONSTRAINT = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY_ID,
    allowedValues: {"kind""Ptr","child":{"kind":"Void"}},
    allowedValuesSize: {"kind":"UInt32"},
    out: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY_CONSTRAINT+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        securityBindingProperty: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY,
    };
};
// --------------------------------------------------------
// Type: WS_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_BINDING_CONSTRAINT = extern struct {
    type: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT_TYPE,
    propertyConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTY_CONSTRAINT},
    propertyConstraintCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SSL_TRANSPORT_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SSL_TRANSPORT_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
    out: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_CONSTRAINT+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        clientCertCredentialRequired: Windows.Win32.SystemServices.BOOL,
    };
};
// --------------------------------------------------------
// Type: WS_USERNAME_MESSAGE_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_USERNAME_MESSAGE_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_AUTH_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
};
// --------------------------------------------------------
// Type: WS_CERT_MESSAGE_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CERT_MESSAGE_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
};
// --------------------------------------------------------
// Type: WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
};
// --------------------------------------------------------
// Type: WS_REQUEST_SECURITY_TOKEN_PROPERTY_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_REQUEST_SECURITY_TOKEN_PROPERTY_CONSTRAINT = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_REQUEST_SECURITY_TOKEN_PROPERTY_ID,
    allowedValues: {"kind""Ptr","child":{"kind":"Void"}},
    allowedValuesSize: {"kind":"UInt32"},
    out: Windows.Win32.WindowsWebServices.WS_REQUEST_SECURITY_TOKEN_PROPERTY_CONSTRAINT+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        requestSecurityTokenProperty: Windows.Win32.WindowsWebServices.WS_REQUEST_SECURITY_TOKEN_PROPERTY,
    };
};
// --------------------------------------------------------
// Type: WS_ISSUED_TOKEN_MESSAGE_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ISSUED_TOKEN_MESSAGE_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    claimConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    claimConstraintCount: {"kind":"UInt32"},
    requestSecurityTokenPropertyConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_REQUEST_SECURITY_TOKEN_PROPERTY_CONSTRAINT},
    requestSecurityTokenPropertyConstraintCount: {"kind":"UInt32"},
    out: Windows.Win32.WindowsWebServices.WS_ISSUED_TOKEN_MESSAGE_SECURITY_BINDING_CONSTRAINT+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        issuerAddress: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS},
        requestSecurityTokenTemplate: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    };
};
// --------------------------------------------------------
// Type: WS_SECURITY_PROPERTY_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_PROPERTY_CONSTRAINT = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY_ID,
    allowedValues: {"kind""Ptr","child":{"kind":"Void"}},
    allowedValuesSize: {"kind":"UInt32"},
    out: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY_CONSTRAINT+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        securityProperty: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY,
    };
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONSTRAINTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONSTRAINTS = extern struct {
    securityPropertyConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTY_CONSTRAINT},
    securityPropertyConstraintCount: {"kind":"UInt32"},
    securityBindingConstraints: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT}},
    securityBindingConstraintCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_CONSTRAINT = extern struct {
    bindingConstraint: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_CONSTRAINT,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
    bootstrapSecurityConstraint: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_CONSTRAINTS},
};
// --------------------------------------------------------
// Type: WS_CHANNEL_PROPERTY_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_CHANNEL_PROPERTY_CONSTRAINT = extern struct {
    id: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY_ID,
    allowedValues: {"kind""Ptr","child":{"kind":"Void"}},
    allowedValuesSize: {"kind":"UInt32"},
    out: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY_CONSTRAINT+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        channelProperty: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY,
    };
};
// --------------------------------------------------------
// Type: WS_POLICY_EXTENSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_POLICY_EXTENSION = extern struct {
    type: Windows.Win32.WindowsWebServices.WS_POLICY_EXTENSION_TYPE,
};
// --------------------------------------------------------
// Type: WS_ENDPOINT_POLICY_EXTENSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_ENDPOINT_POLICY_EXTENSION = extern struct {
    policyExtension: Windows.Win32.WindowsWebServices.WS_POLICY_EXTENSION,
    assertionName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    assertionNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    out: Windows.Win32.WindowsWebServices.WS_ENDPOINT_POLICY_EXTENSION+_out_e__Struct,
    // --------------------------------------------------------
    // Type: _out_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _out_e__Struct = extern struct {
        assertionValue: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    };
};
// --------------------------------------------------------
// Type: WS_POLICY_CONSTRAINTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_POLICY_CONSTRAINTS = extern struct {
    channelBinding: Windows.Win32.WindowsWebServices.WS_CHANNEL_BINDING,
    channelPropertyConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY_CONSTRAINT},
    channelPropertyConstraintCount: {"kind":"UInt32"},
    securityConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_CONSTRAINTS},
    policyExtensions: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY_EXTENSION}},
    policyExtensionCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WS_HTTP_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_AUTH_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_AUTH_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    httpHeaderAuthSecurityBinding: Windows.Win32.WindowsWebServices.WS_HTTP_HEADER_AUTH_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_HEADER_AUTH_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_HEADER_AUTH_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    httpHeaderAuthSecurityBinding: Windows.Win32.WindowsWebServices.WS_HTTP_HEADER_AUTH_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_USERNAME_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_USERNAME_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_USERNAME_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_USERNAME_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_KERBEROS_APREQ_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_KERBEROS_APREQ_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_TCP_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_USERNAME_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_USERNAME_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_KERBEROS_APREQ_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_KERBEROS_APREQ_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    bindingUsage: Windows.Win32.WindowsWebServices.WS_MESSAGE_SECURITY_USAGE,
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_SECURITY_BINDING_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_SECURITY_BINDING_POLICY_DESCRIPTION = extern struct {
    securityContextMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_KERBEROS_APREQ_SECURITY_CONTEXT_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_KERBEROS_APREQ_SECURITY_CONTEXT_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_USERNAME_SECURITY_CONTEXT_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_USERNAME_SECURITY_CONTEXT_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSPI_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_USERNAME_SECURITY_CONTEXT_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_USERNAME_SECURITY_CONTEXT_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_KERBEROS_APREQ_SECURITY_CONTEXT_POLICY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_KERBEROS_APREQ_SECURITY_CONTEXT_POLICY_DESCRIPTION = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_POLICY_DESCRIPTION,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_POLICY_DESCRIPTION,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_POLICY_DESCRIPTION,
};
// --------------------------------------------------------
// Type: WS_HTTP_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_TCP_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    localCertCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CERT_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_AUTH_SECURITY_BINDING_TEMPLATE = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_HTTP_HEADER_AUTH_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_HEADER_AUTH_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    httpHeaderAuthSecurityBinding: Windows.Win32.WindowsWebServices.WS_HTTP_HEADER_AUTH_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_HEADER_AUTH_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_HEADER_AUTH_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    httpHeaderAuthSecurityBinding: Windows.Win32.WindowsWebServices.WS_HTTP_HEADER_AUTH_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_USERNAME_MESSAGE_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_USERNAME_MESSAGE_SECURITY_BINDING_TEMPLATE = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_USERNAME_CREDENTIAL},
    passwordValidator: Windows.Win32.WindowsWebServices.WS_VALIDATE_PASSWORD_CALLBACK,
    passwordValidatorCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_USERNAME_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_USERNAME_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_TEMPLATE = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
    clientCredential: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_WINDOWS_INTEGRATED_AUTH_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_KERBEROS_APREQ_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_KERBEROS_APREQ_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_USERNAME_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_USERNAME_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_KERBEROS_APREQ_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_KERBEROS_APREQ_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_TEMPLATE = extern struct {
    securityBindingProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_BINDING_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_SECURITY_CONTEXT_SECURITY_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_SECURITY_CONTEXT_SECURITY_BINDING_TEMPLATE = extern struct {
    securityContextMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_MESSAGE_SECURITY_BINDING_TEMPLATE,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_USERNAME_SECURITY_CONTEXT_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_USERNAME_SECURITY_CONTEXT_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_TEMPLATE,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_HTTP_SSL_KERBEROS_APREQ_SECURITY_CONTEXT_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_HTTP_SSL_KERBEROS_APREQ_SECURITY_CONTEXT_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sslTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_SSL_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_TEMPLATE,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_USERNAME_SECURITY_CONTEXT_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_USERNAME_SECURITY_CONTEXT_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    usernameMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_USERNAME_MESSAGE_SECURITY_BINDING_TEMPLATE,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: WS_TCP_SSPI_KERBEROS_APREQ_SECURITY_CONTEXT_BINDING_TEMPLATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WS_TCP_SSPI_KERBEROS_APREQ_SECURITY_CONTEXT_BINDING_TEMPLATE = extern struct {
    channelProperties: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTIES,
    securityProperties: Windows.Win32.WindowsWebServices.WS_SECURITY_PROPERTIES,
    sspiTransportSecurityBinding: Windows.Win32.WindowsWebServices.WS_TCP_SSPI_TRANSPORT_SECURITY_BINDING_TEMPLATE,
    kerberosApreqMessageSecurityBinding: Windows.Win32.WindowsWebServices.WS_KERBEROS_APREQ_MESSAGE_SECURITY_BINDING_TEMPLATE,
    securityContextSecurityBinding: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_SECURITY_BINDING_TEMPLATE,
};
// --------------------------------------------------------
// Type: IContentPrefetcherTaskTrigger
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IContentPrefetcherTaskTrigger = *opaque{
    // TODO: Method 'TriggerContentPrefetcherTask'
    // TODO: Method 'IsRegisteredForContentPrefetch'
};
// --------------------------------------------------------
// Type: WEBAUTHN_RP_ENTITY_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_RP_ENTITY_INFORMATION = extern struct {
    dwVersion: {"kind":"UInt32"},
    pwszId: {"kind""Ptr","child":{"kind":"UInt16"}},
    pwszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pwszIcon: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_USER_ENTITY_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_USER_ENTITY_INFORMATION = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbId: {"kind":"UInt32"},
    pbId: {"kind""Ptr","child":{"kind":"Byte"}},
    pwszName: {"kind""Ptr","child":{"kind":"UInt16"}},
    pwszIcon: {"kind""Ptr","child":{"kind":"UInt16"}},
    pwszDisplayName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CLIENT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CLIENT_DATA = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbClientDataJSON: {"kind":"UInt32"},
    pbClientDataJSON: {"kind""Ptr","child":{"kind":"Byte"}},
    pwszHashAlgId: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_COSE_CREDENTIAL_PARAMETER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_COSE_CREDENTIAL_PARAMETER = extern struct {
    dwVersion: {"kind":"UInt32"},
    pwszCredentialType: {"kind""Ptr","child":{"kind":"UInt16"}},
    lAlg: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: WEBAUTHN_COSE_CREDENTIAL_PARAMETERS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_COSE_CREDENTIAL_PARAMETERS = extern struct {
    cCredentialParameters: {"kind":"UInt32"},
    pCredentialParameters: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_COSE_CREDENTIAL_PARAMETER},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CREDENTIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CREDENTIAL = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbId: {"kind":"UInt32"},
    pbId: {"kind""Ptr","child":{"kind":"Byte"}},
    pwszCredentialType: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CREDENTIALS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CREDENTIALS = extern struct {
    cCredentials: {"kind":"UInt32"},
    pCredentials: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CREDENTIAL_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CREDENTIAL_EX = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbId: {"kind":"UInt32"},
    pbId: {"kind""Ptr","child":{"kind":"Byte"}},
    pwszCredentialType: {"kind""Ptr","child":{"kind":"UInt16"}},
    dwTransports: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CREDENTIAL_LIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CREDENTIAL_LIST = extern struct {
    cCredentials: {"kind":"UInt32"},
    ppCredentials: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL_EX}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CRED_PROTECT_EXTENSION_IN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CRED_PROTECT_EXTENSION_IN = extern struct {
    dwCredProtect: {"kind":"UInt32"},
    bRequireCredProtect: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: WEBAUTHN_EXTENSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_EXTENSION = extern struct {
    pwszExtensionIdentifier: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbExtension: {"kind":"UInt32"},
    pvExtension: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_EXTENSIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_EXTENSIONS = extern struct {
    cExtensions: {"kind":"UInt32"},
    pExtensions: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_EXTENSION},
};
// --------------------------------------------------------
// Type: WEBAUTHN_AUTHENTICATOR_MAKE_CREDENTIAL_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_AUTHENTICATOR_MAKE_CREDENTIAL_OPTIONS = extern struct {
    dwVersion: {"kind":"UInt32"},
    dwTimeoutMilliseconds: {"kind":"UInt32"},
    CredentialList: Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIALS,
    Extensions: Windows.Win32.WindowsWebServices.WEBAUTHN_EXTENSIONS,
    dwAuthenticatorAttachment: {"kind":"UInt32"},
    bRequireResidentKey: Windows.Win32.SystemServices.BOOL,
    dwUserVerificationRequirement: {"kind":"UInt32"},
    dwAttestationConveyancePreference: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    pCancellationId: {"kind""Ptr","child":Guid},
    pExcludeCredentialList: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL_LIST},
};
// --------------------------------------------------------
// Type: WEBAUTHN_AUTHENTICATOR_GET_ASSERTION_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_AUTHENTICATOR_GET_ASSERTION_OPTIONS = extern struct {
    dwVersion: {"kind":"UInt32"},
    dwTimeoutMilliseconds: {"kind":"UInt32"},
    CredentialList: Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIALS,
    Extensions: Windows.Win32.WindowsWebServices.WEBAUTHN_EXTENSIONS,
    dwAuthenticatorAttachment: {"kind":"UInt32"},
    dwUserVerificationRequirement: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    pwszU2fAppId: {"kind""Ptr","child":{"kind":"UInt16"}},
    pbU2fAppId: {"kind""Ptr","child":{"kind":"Int32"}},
    pCancellationId: {"kind""Ptr","child":Guid},
    pAllowCredentialList: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL_LIST},
};
// --------------------------------------------------------
// Type: WEBAUTHN_X5C
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_X5C = extern struct {
    cbData: {"kind":"UInt32"},
    pbData: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_COMMON_ATTESTATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_COMMON_ATTESTATION = extern struct {
    dwVersion: {"kind":"UInt32"},
    pwszAlg: {"kind""Ptr","child":{"kind":"UInt16"}},
    lAlg: {"kind":"Int32"},
    cbSignature: {"kind":"UInt32"},
    pbSignature: {"kind""Ptr","child":{"kind":"Byte"}},
    cX5c: {"kind":"UInt32"},
    pX5c: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_X5C},
    pwszVer: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbCertInfo: {"kind":"UInt32"},
    pbCertInfo: {"kind""Ptr","child":{"kind":"Byte"}},
    cbPubArea: {"kind":"UInt32"},
    pbPubArea: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WEBAUTHN_CREDENTIAL_ATTESTATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_CREDENTIAL_ATTESTATION = extern struct {
    dwVersion: {"kind":"UInt32"},
    pwszFormatType: {"kind""Ptr","child":{"kind":"UInt16"}},
    cbAuthenticatorData: {"kind":"UInt32"},
    pbAuthenticatorData: {"kind""Ptr","child":{"kind":"Byte"}},
    cbAttestation: {"kind":"UInt32"},
    pbAttestation: {"kind""Ptr","child":{"kind":"Byte"}},
    dwAttestationDecodeType: {"kind":"UInt32"},
    pvAttestationDecode: {"kind""Ptr","child":{"kind":"Void"}},
    cbAttestationObject: {"kind":"UInt32"},
    pbAttestationObject: {"kind""Ptr","child":{"kind":"Byte"}},
    cbCredentialId: {"kind":"UInt32"},
    pbCredentialId: {"kind""Ptr","child":{"kind":"Byte"}},
    Extensions: Windows.Win32.WindowsWebServices.WEBAUTHN_EXTENSIONS,
    dwUsedTransport: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WEBAUTHN_ASSERTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WEBAUTHN_ASSERTION = extern struct {
    dwVersion: {"kind":"UInt32"},
    cbAuthenticatorData: {"kind":"UInt32"},
    pbAuthenticatorData: {"kind""Ptr","child":{"kind":"Byte"}},
    cbSignature: {"kind":"UInt32"},
    pbSignature: {"kind""Ptr","child":{"kind":"Byte"}},
    Credential: Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL,
    cbUserId: {"kind":"UInt32"},
    pbUserId: {"kind""Ptr","child":{"kind":"Byte"}},
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsStartReaderCanonicalization(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    writeCallback: Windows.Win32.WindowsWebServices.WS_WRITE_CALLBACK,
    writeCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_CANONICALIZATION_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsEndReaderCanonicalization(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsStartWriterCanonicalization(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    writeCallback: Windows.Win32.WindowsWebServices.WS_WRITE_CALLBACK,
    writeCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_CANONICALIZATION_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsEndWriterCanonicalization(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateXmlBuffer(
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    buffer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRemoveNode(
    nodePosition: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE_POSITION},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateReader(
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    reader: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetInput(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    encoding: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING},
    input: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_INPUT},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetInputToBuffer(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    buffer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeReader(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetReaderProperty(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    id: Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetReaderNode(
    xmlReader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    node: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFillReader(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    minSize: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadStartElement(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadToStartElement(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    found: {"kind""Ptr","child":{"kind":"Int32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadStartAttribute(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    attributeIndex: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadEndAttribute(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadNode(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSkipNode(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadEndElement(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFindAttribute(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    required: Windows.Win32.SystemServices.BOOL,
    attributeIndex: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadValue(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    valueType: Windows.Win32.WindowsWebServices.WS_VALUE_TYPE,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadChars(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    chars: {"kind""Ptr","child":{"kind":"UInt16"}},
    maxCharCount: {"kind":"UInt32"},
    actualCharCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadCharsUtf8(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    bytes: {"kind""Ptr","child":{"kind":"Byte"}},
    maxByteCount: {"kind":"UInt32"},
    actualByteCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadBytes(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    bytes: {"kind""Ptr","child":{"kind":"Void"}},
    maxByteCount: {"kind":"UInt32"},
    actualByteCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadArray(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    valueType: Windows.Win32.WindowsWebServices.WS_VALUE_TYPE,
    array: {"kind""Ptr","child":{"kind":"Void"}},
    arraySize: {"kind":"UInt32"},
    itemOffset: {"kind":"UInt32"},
    itemCount: {"kind":"UInt32"},
    actualItemCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetReaderPosition(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    nodePosition: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE_POSITION},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetReaderPosition(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    nodePosition: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE_POSITION},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsMoveReader(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    moveTo: Windows.Win32.WindowsWebServices.WS_MOVE_TO,
    found: {"kind""Ptr","child":{"kind":"Int32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateWriter(
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    writer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeWriter(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetOutput(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    encoding: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING},
    output: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_OUTPUT},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetOutputToBuffer(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    buffer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetWriterProperty(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    id: Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFlushWriter(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    minSize: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteStartElement(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteEndStartElement(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteXmlnsAttribute(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    singleQuote: Windows.Win32.SystemServices.BOOL,
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteStartAttribute(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    singleQuote: Windows.Win32.SystemServices.BOOL,
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteEndAttribute(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteValue(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    valueType: Windows.Win32.WindowsWebServices.WS_VALUE_TYPE,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteXmlBuffer(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    xmlBuffer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadXmlBuffer(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    xmlBuffer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteXmlBufferToBytes(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    xmlBuffer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    encoding: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_ENCODING},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    bytes: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    byteCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadXmlBufferFromBytes(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    encoding: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_ENCODING},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    bytes: {"kind""Ptr","child":{"kind":"Void"}},
    byteCount: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    xmlBuffer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteArray(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    valueType: Windows.Win32.WindowsWebServices.WS_VALUE_TYPE,
    array: {"kind""Ptr","child":{"kind":"Void"}},
    arraySize: {"kind":"UInt32"},
    itemOffset: {"kind":"UInt32"},
    itemCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteQualifiedName(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteChars(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    chars: {"kind""Ptr","child":{"kind":"UInt16"}},
    charCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteCharsUtf8(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    bytes: {"kind""Ptr","child":{"kind":"Byte"}},
    byteCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteBytes(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    bytes: {"kind""Ptr","child":{"kind":"Void"}},
    byteCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsPushBytes(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    callback: Windows.Win32.WindowsWebServices.WS_PUSH_BYTES_CALLBACK,
    callbackState: {"kind""Ptr","child":{"kind":"Void"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsPullBytes(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    callback: Windows.Win32.WindowsWebServices.WS_PULL_BYTES_CALLBACK,
    callbackState: {"kind""Ptr","child":{"kind":"Void"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteEndElement(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteText(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    text: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_TEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteStartCData(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteEndCData(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteNode(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    node: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetPrefixFromNamespace(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    required: Windows.Win32.SystemServices.BOOL,
    prefix: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetWriterPosition(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    nodePosition: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE_POSITION},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetWriterPosition(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    nodePosition: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE_POSITION},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsMoveWriter(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    moveTo: Windows.Win32.WindowsWebServices.WS_MOVE_TO,
    found: {"kind""Ptr","child":{"kind":"Int32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsTrimXmlWhitespace(
    chars: {"kind""Ptr","child":{"kind":"UInt16"}},
    charCount: {"kind":"UInt32"},
    trimmedChars: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    trimmedCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsVerifyXmlNCName(
    ncNameChars: {"kind""Ptr","child":{"kind":"UInt16"}},
    ncNameCharCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsXmlStringEquals(
    string1: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    string2: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetNamespaceFromPrefix(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    required: Windows.Win32.SystemServices.BOOL,
    ns: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadQualifiedName(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    prefix: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    ns: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetXmlAttribute(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    localName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    valueChars: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    valueCharCount: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCopyNode(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAsyncExecute(
    asyncState: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_STATE},
    operation: Windows.Win32.WindowsWebServices.WS_ASYNC_FUNCTION,
    callbackModel: Windows.Win32.WindowsWebServices.WS_CALLBACK_MODEL,
    callbackState: {"kind""Ptr","child":{"kind":"Void"}},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateChannel(
    channelType: Windows.Win32.WindowsWebServices.WS_CHANNEL_TYPE,
    channelBinding: Windows.Win32.WindowsWebServices.WS_CHANNEL_BINDING,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    securityDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_DESCRIPTION},
    channel: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsOpenChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    endpointAddress: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSendMessage(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    messageDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    bodyValue: {"kind""Ptr","child":{"kind":"Void"}},
    bodyValueSize: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReceiveMessage(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    messageDescriptions: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION}},
    messageDescriptionCount: {"kind":"UInt32"},
    receiveOption: Windows.Win32.WindowsWebServices.WS_RECEIVE_OPTION,
    readBodyOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    index: {"kind""Ptr","child":{"kind":"UInt32"}},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRequestReply(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    requestMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    requestMessageDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    requestBodyValue: {"kind""Ptr","child":{"kind":"Void"}},
    requestBodyValueSize: {"kind":"UInt32"},
    replyMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    replyMessageDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSendReplyMessage(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    replyMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    replyMessageDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    replyBodyValue: {"kind""Ptr","child":{"kind":"Void"}},
    replyBodyValueSize: {"kind":"UInt32"},
    requestMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSendFaultMessageForError(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    replyMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    faultError: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    faultErrorCode: Windows.Win32.Com.HRESULT,
    faultDisclosure: Windows.Win32.WindowsWebServices.WS_FAULT_DISCLOSURE,
    requestMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetChannelProperty(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    id: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetChannelProperty(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    id: Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteMessageStart(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteMessageEnd(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadMessageStart(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadMessageEnd(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCloseChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAbortChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAbandonMessage(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsShutdownSessionChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetOperationContextProperty(
    context: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_OPERATION_CONTEXT},
    id: Windows.Win32.WindowsWebServices.WS_OPERATION_CONTEXT_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetDictionary(
    encoding: Windows.Win32.WindowsWebServices.WS_ENCODING,
    dictionary: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_DICTIONARY}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadEndpointAddressExtension(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    endpointAddress: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS},
    extensionType: Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS_EXTENSION_TYPE,
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateError(
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    error: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR}},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAddErrorString(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    string: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetErrorString(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    index: {"kind":"UInt32"},
    string: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCopyError(
    source: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    destination: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetErrorProperty(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    id: Windows.Win32.WindowsWebServices.WS_ERROR_PROPERTY_ID,
    buffer: {"kind""Ptr","child":{"kind":"Void"}},
    bufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetErrorProperty(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    id: Windows.Win32.WindowsWebServices.WS_ERROR_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetError(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeError(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetFaultErrorProperty(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    id: Windows.Win32.WindowsWebServices.WS_FAULT_ERROR_PROPERTY_ID,
    buffer: {"kind""Ptr","child":{"kind":"Void"}},
    bufferSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetFaultErrorProperty(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    id: Windows.Win32.WindowsWebServices.WS_FAULT_ERROR_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateFaultFromError(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    faultErrorCode: Windows.Win32.Com.HRESULT,
    faultDisclosure: Windows.Win32.WindowsWebServices.WS_FAULT_DISCLOSURE,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    fault: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FAULT},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetFaultErrorDetail(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    faultDetailDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FAULT_DETAIL_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetFaultErrorDetail(
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},
    faultDetailDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_FAULT_DETAIL_DESCRIPTION},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateHeap(
    maxSize: {"kind":"UIntPtr"},
    trimSize: {"kind":"UIntPtr"},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAlloc(
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    size: {"kind":"UIntPtr"},
    ptr: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetHeapProperty(
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    id: Windows.Win32.WindowsWebServices.WS_HEAP_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetHeap(
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeHeap(
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateListener(
    channelType: Windows.Win32.WindowsWebServices.WS_CHANNEL_TYPE,
    channelBinding: Windows.Win32.WindowsWebServices.WS_CHANNEL_BINDING,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    securityDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_DESCRIPTION},
    listener: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsOpenListener(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    url: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAcceptChannel(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCloseListener(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAbortListener(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetListener(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeListener(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetListenerProperty(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    id: Windows.Win32.WindowsWebServices.WS_LISTENER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetListenerProperty(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    id: Windows.Win32.WindowsWebServices.WS_LISTENER_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateChannelForListener(
    listener: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_LISTENER},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    channel: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateMessage(
    envelopeVersion: Windows.Win32.WindowsWebServices.WS_ENVELOPE_VERSION,
    addressingVersion: Windows.Win32.WindowsWebServices.WS_ADDRESSING_VERSION,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    message: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateMessageForChannel(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    message: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsInitializeMessage(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    initialization: Windows.Win32.WindowsWebServices.WS_MESSAGE_INITIALIZATION,
    sourceMessage: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetMessage(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeMessage(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetHeaderAttributes(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    headerAttributes: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerType: Windows.Win32.WindowsWebServices.WS_HEADER_TYPE,
    valueType: Windows.Win32.WindowsWebServices.WS_TYPE,
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetCustomHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    customHeaderDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
    repeatingOption: Windows.Win32.WindowsWebServices.WS_REPEATING_HEADER_OPTION,
    headerIndex: {"kind":"UInt32"},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    headerAttributes: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRemoveHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerType: Windows.Win32.WindowsWebServices.WS_HEADER_TYPE,
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerType: Windows.Win32.WindowsWebServices.WS_HEADER_TYPE,
    valueType: Windows.Win32.WindowsWebServices.WS_TYPE,
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRemoveCustomHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    headerNs: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAddCustomHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    headerAttributes: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAddMappedHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    valueType: Windows.Win32.WindowsWebServices.WS_TYPE,
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRemoveMappedHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetMappedHeader(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerName: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_STRING},
    repeatingOption: Windows.Win32.WindowsWebServices.WS_REPEATING_HEADER_OPTION,
    headerIndex: {"kind":"UInt32"},
    valueType: Windows.Win32.WindowsWebServices.WS_TYPE,
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteBody(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    bodyDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadBody(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    bodyDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteEnvelopeStart(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    doneCallback: Windows.Win32.WindowsWebServices.WS_MESSAGE_DONE_CALLBACK,
    doneCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteEnvelopeEnd(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadEnvelopeStart(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    doneCallback: Windows.Win32.WindowsWebServices.WS_MESSAGE_DONE_CALLBACK,
    doneCallbackState: {"kind""Ptr","child":{"kind":"Void"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadEnvelopeEnd(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetMessageProperty(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    id: Windows.Win32.WindowsWebServices.WS_MESSAGE_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsSetMessageProperty(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    id: Windows.Win32.WindowsWebServices.WS_MESSAGE_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAddressMessage(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    address: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCheckMustUnderstandHeaders(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsMarkHeaderAsUnderstood(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    headerPosition: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_NODE_POSITION},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFillBody(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    minSize: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFlushBody(
    message: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_MESSAGE},
    minSize: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRequestSecurityToken(
    channel: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_REQUEST_SECURITY_TOKEN_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    token: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_TOKEN}},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetSecurityTokenProperty(
    securityToken: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_TOKEN},
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_TOKEN_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateXmlSecurityToken(
    tokenXml: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_BUFFER},
    tokenKey: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_KEY_HANDLE},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_SECURITY_TOKEN_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    token: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_TOKEN}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeSecurityToken(
    token: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_TOKEN},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRevokeSecurityContext(
    securityContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetSecurityContextProperty(
    securityContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT},
    id: Windows.Win32.WindowsWebServices.WS_SECURITY_CONTEXT_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadElement(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    elementDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadAttribute(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    attributeDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ATTRIBUTE_DESCRIPTION},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadType(
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    typeMapping: Windows.Win32.WindowsWebServices.WS_TYPE_MAPPING,
    type: Windows.Win32.WindowsWebServices.WS_TYPE,
    typeDescription: {"kind""Ptr","child":{"kind":"Void"}},
    readOption: Windows.Win32.WindowsWebServices.WS_READ_OPTION,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteElement(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    elementDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ELEMENT_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteAttribute(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    attributeDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ATTRIBUTE_DESCRIPTION},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsWriteType(
    writer: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_WRITER},
    typeMapping: Windows.Win32.WindowsWebServices.WS_TYPE_MAPPING,
    type: Windows.Win32.WindowsWebServices.WS_TYPE,
    typeDescription: {"kind""Ptr","child":{"kind":"Void"}},
    writeOption: Windows.Win32.WindowsWebServices.WS_WRITE_OPTION,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsRegisterOperationForCancel(
    context: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_OPERATION_CONTEXT},
    cancelCallback: Windows.Win32.WindowsWebServices.WS_OPERATION_CANCEL_CALLBACK,
    freestateCallback: Windows.Win32.WindowsWebServices.WS_OPERATION_FREE_STATE_CALLBACK,
    userState: {"kind""Ptr","child":{"kind":"Void"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetServiceHostProperty(
    serviceHost: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST},
    id: Windows.Win32.WindowsWebServices.WS_SERVICE_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateServiceHost(
    endpoints: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_ENDPOINT}},
    endpointCount: {"kind":"UInt16"},
    serviceProperties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROPERTY},
    servicePropertyCount: {"kind":"UInt32"},
    serviceHost: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsOpenServiceHost(
    serviceHost: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCloseServiceHost(
    serviceHost: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAbortServiceHost(
    serviceHost: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeServiceHost(
    serviceHost: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetServiceHost(
    serviceHost: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_HOST},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetServiceProxyProperty(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    id: Windows.Win32.WindowsWebServices.WS_PROXY_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateServiceProxy(
    channelType: Windows.Win32.WindowsWebServices.WS_CHANNEL_TYPE,
    channelBinding: Windows.Win32.WindowsWebServices.WS_CHANNEL_BINDING,
    securityDescription: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SECURITY_DESCRIPTION},
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_PROXY_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    channelProperties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CHANNEL_PROPERTY},
    channelPropertyCount: {"kind":"UInt32"},
    serviceProxy: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsOpenServiceProxy(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    address: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCloseServiceProxy(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAbortServiceProxy(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeServiceProxy(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetServiceProxy(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsAbandonCall(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    callId: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCall(
    serviceProxy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY},
    operation: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_OPERATION_DESCRIPTION},
    arguments: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    callProperties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_CALL_PROPERTY},
    callPropertyCount: {"kind":"UInt32"},
    asyncContext: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ASYNC_CONTEXT},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsDecodeUrl(
    url: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    flags: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    outUrl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_URL}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsEncodeUrl(
    url: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_URL},
    flags: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    outUrl: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCombineUrl(
    baseUrl: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    referenceUrl: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    flags: {"kind":"UInt32"},
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    resultUrl: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsDateTimeToFileTime(
    dateTime: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_DATETIME},
    fileTime: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.FILETIME},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFileTimeToDateTime(
    fileTime: {"kind""Ptr","child":Windows.Win32.WindowsProgramming.FILETIME},
    dateTime: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_DATETIME},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateMetadata(
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    metadata: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsReadMetadata(
    metadata: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA},
    reader: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_XML_READER},
    url: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsFreeMetadata(
    metadata: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsResetMetadata(
    metadata: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetMetadataProperty(
    metadata: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA},
    id: Windows.Win32.WindowsWebServices.WS_METADATA_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetMissingMetadataDocumentAddress(
    metadata: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA},
    address: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ENDPOINT_ADDRESS}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetMetadataEndpoints(
    metadata: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA},
    endpoints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_METADATA_ENDPOINTS},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsMatchPolicyAlternative(
    policy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY},
    alternativeIndex: {"kind":"UInt32"},
    policyConstraints: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY_CONSTRAINTS},
    matchRequired: Windows.Win32.SystemServices.BOOL,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetPolicyProperty(
    policy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY},
    id: Windows.Win32.WindowsWebServices.WS_POLICY_PROPERTY_ID,
    value: {"kind""Ptr","child":{"kind":"Void"}},
    valueSize: {"kind":"UInt32"},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsGetPolicyAlternativeCount(
    policy: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_POLICY},
    count: {"kind""Ptr","child":{"kind":"UInt32"}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateServiceProxyFromTemplate(
    channelType: Windows.Win32.WindowsWebServices.WS_CHANNEL_TYPE,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_PROXY_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    templateType: Windows.Win32.WindowsWebServices.WS_BINDING_TEMPLATE_TYPE,
    templateValue: {"kind""Ptr","child":{"kind":"Void"}},
    templateSize: {"kind":"UInt32"},
    templateDescription: {"kind""Ptr","child":{"kind":"Void"}},
    templateDescriptionSize: {"kind":"UInt32"},
    serviceProxy: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_PROXY}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webservices" fn WsCreateServiceEndpointFromTemplate(
    channelType: Windows.Win32.WindowsWebServices.WS_CHANNEL_TYPE,
    properties: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_ENDPOINT_PROPERTY},
    propertyCount: {"kind":"UInt32"},
    addressUrl: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_STRING},
    contract: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_CONTRACT},
    authorizationCallback: Windows.Win32.WindowsWebServices.WS_SERVICE_SECURITY_CALLBACK,
    heap: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_HEAP},
    templateType: Windows.Win32.WindowsWebServices.WS_BINDING_TEMPLATE_TYPE,
    templateValue: {"kind""Ptr","child":{"kind":"Void"}},
    templateSize: {"kind":"UInt32"},
    templateDescription: {"kind""Ptr","child":{"kind":"Void"}},
    templateDescriptionSize: {"kind":"UInt32"},
    serviceEndpoint: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_SERVICE_ENDPOINT}},
    error: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WS_ERROR},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNGetApiVersionNumber(

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNIsUserVerifyingPlatformAuthenticatorAvailable(
    pbIsUserVerifyingPlatformAuthenticatorAvailable: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNAuthenticatorMakeCredential(
    hWnd: Windows.Win32.WindowsAndMessaging.HWND,
    pRpInformation: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_RP_ENTITY_INFORMATION},
    pUserInformation: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_USER_ENTITY_INFORMATION},
    pPubKeyCredParams: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_COSE_CREDENTIAL_PARAMETERS},
    pWebAuthNClientData: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CLIENT_DATA},
    pWebAuthNMakeCredentialOptions: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_AUTHENTICATOR_MAKE_CREDENTIAL_OPTIONS},
    ppWebAuthNCredentialAttestation: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL_ATTESTATION}},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNAuthenticatorGetAssertion(
    hWnd: Windows.Win32.WindowsAndMessaging.HWND,
    pwszRpId: {"kind""Ptr","child":{"kind":"UInt16"}},
    pWebAuthNClientData: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CLIENT_DATA},
    pWebAuthNGetAssertionOptions: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_AUTHENTICATOR_GET_ASSERTION_OPTIONS},
    ppWebAuthNAssertion: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_ASSERTION}},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNFreeCredentialAttestation(
    pWebAuthNCredentialAttestation: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_CREDENTIAL_ATTESTATION},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNFreeAssertion(
    pWebAuthNAssertion: {"kind""Ptr","child":Windows.Win32.WindowsWebServices.WEBAUTHN_ASSERTION},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNGetCancellationId(
    pCancellationId: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNCancelCurrentOperation(
    pCancellationId: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNGetErrorName(
    hr: Windows.Win32.Com.HRESULT,

// set_last_errror=False (can and should we use this?)
pub extern "webauthn" fn WebAuthNGetW3CExceptionDOMError(
    hr: Windows.Win32.Com.HRESULT,
],

"unicode_aliases": [
]}
