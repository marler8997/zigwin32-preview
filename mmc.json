{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: Application
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const Application = opaque {
};
// --------------------------------------------------------
// Type: AppEventsDHTMLConnector
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AppEventsDHTMLConnector = opaque {
};
// --------------------------------------------------------
// Type: MMC_PROPERTY_ACTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_PROPERTY_ACTION = *opaque{
};
// --------------------------------------------------------
// Type: MMC_SNAPIN_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_SNAPIN_PROPERTY = extern struct {
    pszPropName: {"kind""Ptr","child":{"kind":"UInt16"}},
    varValue: Windows.Win32.Automation.VARIANT,
    eAction: Windows.Win32.Mmc.MMC_PROPERTY_ACTION,
};
// --------------------------------------------------------
// Type: ISnapinProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISnapinProperties = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'QueryPropertyNames'
    // TODO: Method 'PropertiesChanged'
};
// --------------------------------------------------------
// Type: ISnapinPropertiesCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISnapinPropertiesCallback = *opaque{
    // TODO: Method 'AddPropertyName'
};
// --------------------------------------------------------
// Type: _DocumentMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _DocumentMode = *opaque{
};
// --------------------------------------------------------
// Type: _ListViewMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _ListViewMode = *opaque{
};
// --------------------------------------------------------
// Type: _ViewOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _ViewOptions = *opaque{
};
// --------------------------------------------------------
// Type: _ExportListOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _ExportListOptions = *opaque{
};
// --------------------------------------------------------
// Type: _Application
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _Application = *opaque{
    // TODO: Method 'Help'
    // TODO: Method 'Quit'
    // TODO: Method 'get_Document'
    // TODO: Method 'Load'
    // TODO: Method 'get_Frame'
    // TODO: Method 'get_Visible'
    // TODO: Method 'Show'
    // TODO: Method 'Hide'
    // TODO: Method 'get_UserControl'
    // TODO: Method 'put_UserControl'
    // TODO: Method 'get_VersionMajor'
    // TODO: Method 'get_VersionMinor'
};
// --------------------------------------------------------
// Type: _AppEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _AppEvents = *opaque{
    // TODO: Method 'OnQuit'
    // TODO: Method 'OnDocumentOpen'
    // TODO: Method 'OnDocumentClose'
    // TODO: Method 'OnSnapInAdded'
    // TODO: Method 'OnSnapInRemoved'
    // TODO: Method 'OnNewView'
    // TODO: Method 'OnViewClose'
    // TODO: Method 'OnViewChange'
    // TODO: Method 'OnSelectionChange'
    // TODO: Method 'OnContextMenuExecuted'
    // TODO: Method 'OnToolbarButtonClicked'
    // TODO: Method 'OnListUpdated'
};
// --------------------------------------------------------
// Type: AppEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const AppEvents = *opaque{
};
// --------------------------------------------------------
// Type: _EventConnector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const _EventConnector = *opaque{
    // TODO: Method 'ConnectTo'
    // TODO: Method 'Disconnect'
};
// --------------------------------------------------------
// Type: Frame
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Frame = *opaque{
    // TODO: Method 'Maximize'
    // TODO: Method 'Minimize'
    // TODO: Method 'Restore'
    // TODO: Method 'get_Top'
    // TODO: Method 'put_Top'
    // TODO: Method 'get_Bottom'
    // TODO: Method 'put_Bottom'
    // TODO: Method 'get_Left'
    // TODO: Method 'put_Left'
    // TODO: Method 'get_Right'
    // TODO: Method 'put_Right'
};
// --------------------------------------------------------
// Type: Node
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Node = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Property'
    // TODO: Method 'get_Bookmark'
    // TODO: Method 'IsScopeNode'
    // TODO: Method 'get_Nodetype'
};
// --------------------------------------------------------
// Type: ScopeNamespace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ScopeNamespace = *opaque{
    // TODO: Method 'GetParent'
    // TODO: Method 'GetChild'
    // TODO: Method 'GetNext'
    // TODO: Method 'GetRoot'
    // TODO: Method 'Expand'
};
// --------------------------------------------------------
// Type: Document
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Document = *opaque{
    // TODO: Method 'Save'
    // TODO: Method 'SaveAs'
    // TODO: Method 'Close'
    // TODO: Method 'get_Views'
    // TODO: Method 'get_SnapIns'
    // TODO: Method 'get_ActiveView'
    // TODO: Method 'get_Name'
    // TODO: Method 'put_Name'
    // TODO: Method 'get_Location'
    // TODO: Method 'get_IsSaved'
    // TODO: Method 'get_Mode'
    // TODO: Method 'put_Mode'
    // TODO: Method 'get_RootNode'
    // TODO: Method 'get_ScopeNamespace'
    // TODO: Method 'CreateProperties'
    // TODO: Method 'get_Application'
};
// --------------------------------------------------------
// Type: SnapIn
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const SnapIn = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Vendor'
    // TODO: Method 'get_Version'
    // TODO: Method 'get_Extensions'
    // TODO: Method 'get_SnapinCLSID'
    // TODO: Method 'get_Properties'
    // TODO: Method 'EnableAllExtensions'
};
// --------------------------------------------------------
// Type: SnapIns
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const SnapIns = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: Extension
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Extension = *opaque{
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Vendor'
    // TODO: Method 'get_Version'
    // TODO: Method 'get_Extensions'
    // TODO: Method 'get_SnapinCLSID'
    // TODO: Method 'EnableAllExtensions'
    // TODO: Method 'Enable'
};
// --------------------------------------------------------
// Type: Extensions
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Extensions = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
};
// --------------------------------------------------------
// Type: Columns
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Columns = *opaque{
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'get__NewEnum'
};
// --------------------------------------------------------
// Type: Column
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Column = *opaque{
    // TODO: Method 'Name'
    // TODO: Method 'get_Width'
    // TODO: Method 'put_Width'
    // TODO: Method 'get_DisplayPosition'
    // TODO: Method 'put_DisplayPosition'
    // TODO: Method 'get_Hidden'
    // TODO: Method 'put_Hidden'
    // TODO: Method 'SetAsSortColumn'
    // TODO: Method 'IsSortColumn'
};
// --------------------------------------------------------
// Type: Views
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Views = *opaque{
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Add'
    // TODO: Method 'get__NewEnum'
};
// --------------------------------------------------------
// Type: View
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const View = *opaque{
    // TODO: Method 'get_ActiveScopeNode'
    // TODO: Method 'put_ActiveScopeNode'
    // TODO: Method 'get_Selection'
    // TODO: Method 'get_ListItems'
    // TODO: Method 'SnapinScopeObject'
    // TODO: Method 'SnapinSelectionObject'
    // TODO: Method 'Is'
    // TODO: Method 'get_Document'
    // TODO: Method 'SelectAll'
    // TODO: Method 'Select'
    // TODO: Method 'Deselect'
    // TODO: Method 'IsSelected'
    // TODO: Method 'DisplayScopeNodePropertySheet'
    // TODO: Method 'DisplaySelectionPropertySheet'
    // TODO: Method 'CopyScopeNode'
    // TODO: Method 'CopySelection'
    // TODO: Method 'DeleteScopeNode'
    // TODO: Method 'DeleteSelection'
    // TODO: Method 'RenameScopeNode'
    // TODO: Method 'RenameSelectedItem'
    // TODO: Method 'get_ScopeNodeContextMenu'
    // TODO: Method 'get_SelectionContextMenu'
    // TODO: Method 'RefreshScopeNode'
    // TODO: Method 'RefreshSelection'
    // TODO: Method 'ExecuteSelectionMenuItem'
    // TODO: Method 'ExecuteScopeNodeMenuItem'
    // TODO: Method 'ExecuteShellCommand'
    // TODO: Method 'get_Frame'
    // TODO: Method 'Close'
    // TODO: Method 'get_ScopeTreeVisible'
    // TODO: Method 'put_ScopeTreeVisible'
    // TODO: Method 'Back'
    // TODO: Method 'Forward'
    // TODO: Method 'put_StatusBarText'
    // TODO: Method 'get_Memento'
    // TODO: Method 'ViewMemento'
    // TODO: Method 'get_Columns'
    // TODO: Method 'get_CellContents'
    // TODO: Method 'ExportList'
    // TODO: Method 'get_ListViewMode'
    // TODO: Method 'put_ListViewMode'
    // TODO: Method 'get_ControlObject'
};
// --------------------------------------------------------
// Type: Nodes
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Nodes = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
};
// --------------------------------------------------------
// Type: ContextMenu
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ContextMenu = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'get_Item'
    // TODO: Method 'get_Count'
};
// --------------------------------------------------------
// Type: MenuItem
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const MenuItem = *opaque{
    // TODO: Method 'get_DisplayName'
    // TODO: Method 'get_LanguageIndependentName'
    // TODO: Method 'get_Path'
    // TODO: Method 'get_LanguageIndependentPath'
    // TODO: Method 'Execute'
    // TODO: Method 'get_Enabled'
};
// --------------------------------------------------------
// Type: Properties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Properties = *opaque{
    // TODO: Method 'get__NewEnum'
    // TODO: Method 'Item'
    // TODO: Method 'get_Count'
    // TODO: Method 'Remove'
};
// --------------------------------------------------------
// Type: Property
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const Property = *opaque{
    // TODO: Method 'get_Value'
    // TODO: Method 'put_Value'
    // TODO: Method 'get_Name'
};
// --------------------------------------------------------
// Type: MMCVersionInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MMCVersionInfo = opaque {
};
// --------------------------------------------------------
// Type: ConsolePower
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ConsolePower = opaque {
};
// --------------------------------------------------------
// Type: MMC_RESULT_VIEW_STYLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_RESULT_VIEW_STYLE = *opaque{
};
// --------------------------------------------------------
// Type: MMC_CONTROL_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_CONTROL_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MMC_CONSOLE_VERB
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_CONSOLE_VERB = *opaque{
};
// --------------------------------------------------------
// Type: MMCBUTTON
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMCBUTTON = extern struct {
    nBitmap: {"kind":"Int32"},
    idCommand: {"kind":"Int32"},
    fsState: {"kind":"Byte"},
    fsType: {"kind":"Byte"},
    lpButtonText: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpTooltipText: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: MMC_BUTTON_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_BUTTON_STATE = *opaque{
};
// --------------------------------------------------------
// Type: RESULTDATAITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESULTDATAITEM = extern struct {
    mask: {"kind":"UInt32"},
    bScopeItem: Windows.Win32.SystemServices.BOOL,
    itemID: {"kind":"IntPtr"},
    nIndex: {"kind":"Int32"},
    nCol: {"kind":"Int32"},
    str: {"kind""Ptr","child":{"kind":"UInt16"}},
    nImage: {"kind":"Int32"},
    nState: {"kind":"UInt32"},
    lParam: Windows.Win32.WindowsAndMessaging.LPARAM,
    iIndent: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: RESULTFINDINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESULTFINDINFO = extern struct {
    psz: {"kind""Ptr","child":{"kind":"UInt16"}},
    nStart: {"kind":"Int32"},
    dwOptions: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SCOPEDATAITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SCOPEDATAITEM = extern struct {
    mask: {"kind":"UInt32"},
    displayname: {"kind""Ptr","child":{"kind":"UInt16"}},
    nImage: {"kind":"Int32"},
    nOpenImage: {"kind":"Int32"},
    nState: {"kind":"UInt32"},
    cChildren: {"kind":"Int32"},
    lParam: Windows.Win32.WindowsAndMessaging.LPARAM,
    relativeID: {"kind":"IntPtr"},
    ID: {"kind":"IntPtr"},
};
// --------------------------------------------------------
// Type: MMC_SCOPE_ITEM_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_SCOPE_ITEM_STATE = *opaque{
};
// --------------------------------------------------------
// Type: CONTEXTMENUITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CONTEXTMENUITEM = extern struct {
    strName: {"kind""Ptr","child":{"kind":"UInt16"}},
    strStatusBarText: {"kind""Ptr","child":{"kind":"UInt16"}},
    lCommandID: {"kind":"Int32"},
    lInsertionPointID: {"kind":"Int32"},
    fFlags: {"kind":"Int32"},
    fSpecialFlags: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: MMC_MENU_COMMAND_IDS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_MENU_COMMAND_IDS = *opaque{
};
// --------------------------------------------------------
// Type: MENUBUTTONDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MENUBUTTONDATA = extern struct {
    idCommand: {"kind":"Int32"},
    x: {"kind":"Int32"},
    y: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: MMC_FILTER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_FILTER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MMC_FILTERDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_FILTERDATA = extern struct {
    pszText: {"kind""Ptr","child":{"kind":"UInt16"}},
    cchTextMax: {"kind":"Int32"},
    lValue: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: MMC_FILTER_CHANGE_CODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_FILTER_CHANGE_CODE = *opaque{
};
// --------------------------------------------------------
// Type: MMC_RESTORE_VIEW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_RESTORE_VIEW = extern struct {
    dwSize: {"kind":"UInt32"},
    cookie: {"kind":"IntPtr"},
    pViewType: {"kind""Ptr","child":{"kind":"UInt16"}},
    lViewOptions: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: MMC_EXPANDSYNC_STRUCT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_EXPANDSYNC_STRUCT = extern struct {
    bHandled: Windows.Win32.SystemServices.BOOL,
    bExpanding: Windows.Win32.SystemServices.BOOL,
    hItem: {"kind":"IntPtr"},
};
// --------------------------------------------------------
// Type: MMC_VISIBLE_COLUMNS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_VISIBLE_COLUMNS = extern struct {
    nVisibleColumns: {"kind":"Int32"},
    rgVisibleCols: {"kind":"Array","child": {"kind":"Int32"}},
};
// --------------------------------------------------------
// Type: MMC_NOTIFY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_NOTIFY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DATA_OBJECT_TYPES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DATA_OBJECT_TYPES = *opaque{
};
// --------------------------------------------------------
// Type: SMMCDataObjects
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SMMCDataObjects = extern struct {
    count: {"kind":"UInt32"},
    lpDataObject: {"kind":"Array","child": Windows.Win32.Com.IDataObject},
};
// --------------------------------------------------------
// Type: SMMCObjectTypes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SMMCObjectTypes = extern struct {
    count: {"kind":"UInt32"},
    guid: {"kind":"Array","child": Guid},
};
// --------------------------------------------------------
// Type: SNodeID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SNodeID = extern struct {
    cBytes: {"kind":"UInt32"},
    id: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: SNodeID2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SNodeID2 = extern struct {
    dwFlags: {"kind":"UInt32"},
    cBytes: {"kind":"UInt32"},
    id: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: SColumnSetID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SColumnSetID = extern struct {
    dwFlags: {"kind":"UInt32"},
    cBytes: {"kind":"UInt32"},
    id: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: IComponentData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponentData = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'CreateComponent'
    // TODO: Method 'Notify'
    // TODO: Method 'Destroy'
    // TODO: Method 'QueryDataObject'
    // TODO: Method 'GetDisplayInfo'
    // TODO: Method 'CompareObjects'
};
// --------------------------------------------------------
// Type: IComponent
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponent = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'Notify'
    // TODO: Method 'Destroy'
    // TODO: Method 'QueryDataObject'
    // TODO: Method 'GetResultViewType'
    // TODO: Method 'GetDisplayInfo'
    // TODO: Method 'CompareObjects'
};
// --------------------------------------------------------
// Type: IResultDataCompare
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResultDataCompare = *opaque{
    // TODO: Method 'Compare'
};
// --------------------------------------------------------
// Type: IResultOwnerData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResultOwnerData = *opaque{
    // TODO: Method 'FindItem'
    // TODO: Method 'CacheHint'
    // TODO: Method 'SortItems'
};
// --------------------------------------------------------
// Type: IConsole
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsole = *opaque{
    // TODO: Method 'SetHeader'
    // TODO: Method 'SetToolbar'
    // TODO: Method 'QueryResultView'
    // TODO: Method 'QueryScopeImageList'
    // TODO: Method 'QueryResultImageList'
    // TODO: Method 'UpdateAllViews'
    // TODO: Method 'MessageBoxA'
    // TODO: Method 'QueryConsoleVerb'
    // TODO: Method 'SelectScopeItem'
    // TODO: Method 'GetMainWindow'
    // TODO: Method 'NewWindow'
};
// --------------------------------------------------------
// Type: IHeaderCtrl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IHeaderCtrl = *opaque{
    // TODO: Method 'InsertColumn'
    // TODO: Method 'DeleteColumn'
    // TODO: Method 'SetColumnText'
    // TODO: Method 'GetColumnText'
    // TODO: Method 'SetColumnWidth'
    // TODO: Method 'GetColumnWidth'
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmc_0000_0006_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmc_0000_0006_0001 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmc_0000_0006_0002
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmc_0000_0006_0002 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmc_0000_0006_0003
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmc_0000_0006_0003 = *opaque{
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_mmc_0000_0006_0004
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_mmc_0000_0006_0004 = *opaque{
};
// --------------------------------------------------------
// Type: IContextMenuCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IContextMenuCallback = *opaque{
    // TODO: Method 'AddItem'
};
// --------------------------------------------------------
// Type: IContextMenuProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IContextMenuProvider = *opaque{
    // TODO: Method 'EmptyMenuList'
    // TODO: Method 'AddPrimaryExtensionItems'
    // TODO: Method 'AddThirdPartyExtensionItems'
    // TODO: Method 'ShowContextMenu'
};
// --------------------------------------------------------
// Type: IExtendContextMenu
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExtendContextMenu = *opaque{
    // TODO: Method 'AddMenuItems'
    // TODO: Method 'Command'
};
// --------------------------------------------------------
// Type: IImageList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IImageList = *opaque{
    // TODO: Method 'ImageListSetIcon'
    // TODO: Method 'ImageListSetStrip'
};
// --------------------------------------------------------
// Type: IResultData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResultData = *opaque{
    // TODO: Method 'InsertItem'
    // TODO: Method 'DeleteItem'
    // TODO: Method 'FindItemByLParam'
    // TODO: Method 'DeleteAllRsltItems'
    // TODO: Method 'SetItem'
    // TODO: Method 'GetItem'
    // TODO: Method 'GetNextItem'
    // TODO: Method 'ModifyItemState'
    // TODO: Method 'ModifyViewStyle'
    // TODO: Method 'SetViewMode'
    // TODO: Method 'GetViewMode'
    // TODO: Method 'UpdateItem'
    // TODO: Method 'Sort'
    // TODO: Method 'SetDescBarText'
    // TODO: Method 'SetItemCount'
};
// --------------------------------------------------------
// Type: IConsoleNameSpace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsoleNameSpace = *opaque{
    // TODO: Method 'InsertItem'
    // TODO: Method 'DeleteItem'
    // TODO: Method 'SetItem'
    // TODO: Method 'GetItem'
    // TODO: Method 'GetChildItem'
    // TODO: Method 'GetNextItem'
    // TODO: Method 'GetParentItem'
};
// --------------------------------------------------------
// Type: IConsoleNameSpace2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsoleNameSpace2 = *opaque{
    // TODO: Method 'Expand'
    // TODO: Method 'AddExtension'
};
// --------------------------------------------------------
// Type: IPropertySheetCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPropertySheetCallback = *opaque{
    // TODO: Method 'AddPage'
    // TODO: Method 'RemovePage'
};
// --------------------------------------------------------
// Type: IPropertySheetProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPropertySheetProvider = *opaque{
    // TODO: Method 'CreatePropertySheet'
    // TODO: Method 'FindPropertySheet'
    // TODO: Method 'AddPrimaryPages'
    // TODO: Method 'AddExtensionPages'
    // TODO: Method 'Show'
};
// --------------------------------------------------------
// Type: IExtendPropertySheet
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExtendPropertySheet = *opaque{
    // TODO: Method 'CreatePropertyPages'
    // TODO: Method 'QueryPagesFor'
};
// --------------------------------------------------------
// Type: IControlbar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IControlbar = *opaque{
    // TODO: Method 'Create'
    // TODO: Method 'Attach'
    // TODO: Method 'Detach'
};
// --------------------------------------------------------
// Type: IExtendControlbar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExtendControlbar = *opaque{
    // TODO: Method 'SetControlbar'
    // TODO: Method 'ControlbarNotify'
};
// --------------------------------------------------------
// Type: IToolbar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IToolbar = *opaque{
    // TODO: Method 'AddBitmap'
    // TODO: Method 'AddButtons'
    // TODO: Method 'InsertButton'
    // TODO: Method 'DeleteButton'
    // TODO: Method 'GetButtonState'
    // TODO: Method 'SetButtonState'
};
// --------------------------------------------------------
// Type: IConsoleVerb
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsoleVerb = *opaque{
    // TODO: Method 'GetVerbState'
    // TODO: Method 'SetVerbState'
    // TODO: Method 'SetDefaultVerb'
    // TODO: Method 'GetDefaultVerb'
};
// --------------------------------------------------------
// Type: ISnapinAbout
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISnapinAbout = *opaque{
    // TODO: Method 'GetSnapinDescription'
    // TODO: Method 'GetProvider'
    // TODO: Method 'GetSnapinVersion'
    // TODO: Method 'GetSnapinImage'
    // TODO: Method 'GetStaticFolderImage'
};
// --------------------------------------------------------
// Type: IMenuButton
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMenuButton = *opaque{
    // TODO: Method 'AddButton'
    // TODO: Method 'SetButton'
    // TODO: Method 'SetButtonState'
};
// --------------------------------------------------------
// Type: ISnapinHelp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISnapinHelp = *opaque{
    // TODO: Method 'GetHelpTopic'
};
// --------------------------------------------------------
// Type: IExtendPropertySheet2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExtendPropertySheet2 = *opaque{
    // TODO: Method 'GetWatermarks'
};
// --------------------------------------------------------
// Type: IHeaderCtrl2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IHeaderCtrl2 = *opaque{
    // TODO: Method 'SetChangeTimeOut'
    // TODO: Method 'SetColumnFilter'
    // TODO: Method 'GetColumnFilter'
};
// --------------------------------------------------------
// Type: ISnapinHelp2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISnapinHelp2 = *opaque{
    // TODO: Method 'GetLinkedTopics'
};
// --------------------------------------------------------
// Type: MMC_TASK_DISPLAY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_TASK_DISPLAY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MMC_TASK_DISPLAY_SYMBOL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_TASK_DISPLAY_SYMBOL = extern struct {
    szFontFamilyName: {"kind""Ptr","child":{"kind":"UInt16"}},
    szURLtoEOT: {"kind""Ptr","child":{"kind":"UInt16"}},
    szSymbolString: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: MMC_TASK_DISPLAY_BITMAP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_TASK_DISPLAY_BITMAP = extern struct {
    szMouseOverBitmap: {"kind""Ptr","child":{"kind":"UInt16"}},
    szMouseOffBitmap: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: MMC_TASK_DISPLAY_OBJECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_TASK_DISPLAY_OBJECT = extern struct {
    eDisplayType: Windows.Win32.Mmc.MMC_TASK_DISPLAY_TYPE,
    Anonymous: Windows.Win32.Mmc.MMC_TASK_DISPLAY_OBJECT+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MMC_ACTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_ACTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MMC_TASK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_TASK = extern struct {
    sDisplayObject: Windows.Win32.Mmc.MMC_TASK_DISPLAY_OBJECT,
    szText: {"kind""Ptr","child":{"kind":"UInt16"}},
    szHelpString: {"kind""Ptr","child":{"kind":"UInt16"}},
    eActionType: Windows.Win32.Mmc.MMC_ACTION_TYPE,
    Anonymous: Windows.Win32.Mmc.MMC_TASK+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: MMC_LISTPAD_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_LISTPAD_INFO = extern struct {
    szTitle: {"kind""Ptr","child":{"kind":"UInt16"}},
    szButtonText: {"kind""Ptr","child":{"kind":"UInt16"}},
    nCommandID: {"kind":"IntPtr"},
};
// --------------------------------------------------------
// Type: IEnumTASK
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IEnumTASK = *opaque{
    // TODO: Method 'Next'
    // TODO: Method 'Skip'
    // TODO: Method 'Reset'
    // TODO: Method 'Clone'
};
// --------------------------------------------------------
// Type: IExtendTaskPad
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExtendTaskPad = *opaque{
    // TODO: Method 'TaskNotify'
    // TODO: Method 'EnumTasks'
    // TODO: Method 'GetTitle'
    // TODO: Method 'GetDescriptiveText'
    // TODO: Method 'GetBackground'
    // TODO: Method 'GetListPadInfo'
};
// --------------------------------------------------------
// Type: IConsole2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsole2 = *opaque{
    // TODO: Method 'Expand'
    // TODO: Method 'IsTaskpadViewPreferred'
    // TODO: Method 'SetStatusText'
};
// --------------------------------------------------------
// Type: IDisplayHelp
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDisplayHelp = *opaque{
    // TODO: Method 'ShowTopic'
};
// --------------------------------------------------------
// Type: IRequiredExtensions
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRequiredExtensions = *opaque{
    // TODO: Method 'EnableAllExtensions'
    // TODO: Method 'GetFirstExtension'
    // TODO: Method 'GetNextExtension'
};
// --------------------------------------------------------
// Type: IStringTable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStringTable = *opaque{
    // TODO: Method 'AddString'
    // TODO: Method 'GetString'
    // TODO: Method 'GetStringLength'
    // TODO: Method 'DeleteString'
    // TODO: Method 'DeleteAllStrings'
    // TODO: Method 'FindString'
    // TODO: Method 'Enumerate'
};
// --------------------------------------------------------
// Type: MMC_COLUMN_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_COLUMN_DATA = extern struct {
    nColIndex: {"kind":"Int32"},
    dwFlags: {"kind":"UInt32"},
    nWidth: {"kind":"Int32"},
    ulReserved: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: MMC_COLUMN_SET_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_COLUMN_SET_DATA = extern struct {
    cbSize: {"kind":"Int32"},
    nNumCols: {"kind":"Int32"},
    pColData: {"kind""Ptr","child":Windows.Win32.Mmc.MMC_COLUMN_DATA},
};
// --------------------------------------------------------
// Type: MMC_SORT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_SORT_DATA = extern struct {
    nColIndex: {"kind":"Int32"},
    dwSortOptions: {"kind":"UInt32"},
    ulReserved: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: MMC_SORT_SET_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_SORT_SET_DATA = extern struct {
    cbSize: {"kind":"Int32"},
    nNumItems: {"kind":"Int32"},
    pSortData: {"kind""Ptr","child":Windows.Win32.Mmc.MMC_SORT_DATA},
};
// --------------------------------------------------------
// Type: IColumnData
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IColumnData = *opaque{
    // TODO: Method 'SetColumnConfigData'
    // TODO: Method 'GetColumnConfigData'
    // TODO: Method 'SetColumnSortData'
    // TODO: Method 'GetColumnSortData'
};
// --------------------------------------------------------
// Type: IconIdentifier
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IconIdentifier = *opaque{
};
// --------------------------------------------------------
// Type: IMessageView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMessageView = *opaque{
    // TODO: Method 'SetTitleText'
    // TODO: Method 'SetBodyText'
    // TODO: Method 'SetIcon'
    // TODO: Method 'Clear'
};
// --------------------------------------------------------
// Type: RDITEMHDR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RDITEMHDR = extern struct {
    dwFlags: {"kind":"UInt32"},
    cookie: {"kind":"IntPtr"},
    lpReserved: Windows.Win32.WindowsAndMessaging.LPARAM,
};
// --------------------------------------------------------
// Type: RDCOMPARE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RDCOMPARE = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    nColumn: {"kind":"Int32"},
    lUserParam: Windows.Win32.WindowsAndMessaging.LPARAM,
    prdch1: {"kind""Ptr","child":Windows.Win32.Mmc.RDITEMHDR},
    prdch2: {"kind""Ptr","child":Windows.Win32.Mmc.RDITEMHDR},
};
// --------------------------------------------------------
// Type: IResultDataCompareEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResultDataCompareEx = *opaque{
    // TODO: Method 'Compare'
};
// --------------------------------------------------------
// Type: MMC_VIEW_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MMC_VIEW_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: RESULT_VIEW_TYPE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const RESULT_VIEW_TYPE_INFO = extern struct {
    pstrPersistableViewDescription: {"kind""Ptr","child":{"kind":"UInt16"}},
    eViewType: Windows.Win32.Mmc.MMC_VIEW_TYPE,
    dwMiscOptions: {"kind":"UInt32"},
    Anonymous: Windows.Win32.Mmc.RESULT_VIEW_TYPE_INFO+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous2_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous2_e__Struct = extern struct {
            dwOCXOptions: {"kind":"UInt32"},
            pUnkControl: Windows.Win32.Com.IUnknown,
        };
        // --------------------------------------------------------
        // Type: _Anonymous1_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous1_e__Struct = extern struct {
            dwHTMLOptions: {"kind":"UInt32"},
            pstrURL: {"kind""Ptr","child":{"kind":"UInt16"}},
        };
    };
};
// --------------------------------------------------------
// Type: CONTEXTMENUITEM2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CONTEXTMENUITEM2 = extern struct {
    strName: {"kind""Ptr","child":{"kind":"UInt16"}},
    strStatusBarText: {"kind""Ptr","child":{"kind":"UInt16"}},
    lCommandID: {"kind":"Int32"},
    lInsertionPointID: {"kind":"Int32"},
    fFlags: {"kind":"Int32"},
    fSpecialFlags: {"kind":"Int32"},
    strLanguageIndependentName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: MMC_EXT_VIEW_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MMC_EXT_VIEW_DATA = extern struct {
    viewID: Guid,
    pszURL: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszViewTitle: {"kind""Ptr","child":{"kind":"UInt16"}},
    pszTooltipText: {"kind""Ptr","child":{"kind":"UInt16"}},
    bReplacesDefaultView: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: IComponentData2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponentData2 = *opaque{
    // TODO: Method 'QueryDispatch'
};
// --------------------------------------------------------
// Type: IComponent2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IComponent2 = *opaque{
};
// --------------------------------------------------------
// Type: IContextMenuCallback2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IContextMenuCallback2 = *opaque{
    // TODO: Method 'AddItem'
};
// --------------------------------------------------------
// Type: IMMCVersionInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMCVersionInfo = *opaque{
    // TODO: Method 'GetMMCVersion'
};
// --------------------------------------------------------
// Type: IExtendView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExtendView = *opaque{
    // TODO: Method 'GetViews'
};
// --------------------------------------------------------
// Type: IViewExtensionCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IViewExtensionCallback = *opaque{
    // TODO: Method 'AddView'
};
// --------------------------------------------------------
// Type: IConsolePower
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsolePower = *opaque{
    // TODO: Method 'SetExecutionState'
    // TODO: Method 'ResetIdleTimer'
};
// --------------------------------------------------------
// Type: IConsolePowerSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsolePowerSink = *opaque{
    // TODO: Method 'OnPowerBroadcast'
};
// --------------------------------------------------------
// Type: INodeProperties
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const INodeProperties = *opaque{
    // TODO: Method 'GetProperty'
};
// --------------------------------------------------------
// Type: IConsole3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConsole3 = *opaque{
    // TODO: Method 'RenameScopeItem'
};
// --------------------------------------------------------
// Type: IResultData2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IResultData2 = *opaque{
    // TODO: Method 'RenameResultItem'
};
],

"func_definitions": [
],

"unicode_aliases": [
]}
