{
"constants": [
     {
         "name": "UIA_ScrollPatternNoScroll"
        ,"type": {"kind":"Double"}
        ,"value": -1
    }
    ,{
         "name": "UIA_InvokePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10000
    }
    ,{
         "name": "UIA_SelectionPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10001
    }
    ,{
         "name": "UIA_ValuePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10002
    }
    ,{
         "name": "UIA_RangeValuePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10003
    }
    ,{
         "name": "UIA_ScrollPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10004
    }
    ,{
         "name": "UIA_ExpandCollapsePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10005
    }
    ,{
         "name": "UIA_GridPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10006
    }
    ,{
         "name": "UIA_GridItemPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10007
    }
    ,{
         "name": "UIA_MultipleViewPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10008
    }
    ,{
         "name": "UIA_WindowPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10009
    }
    ,{
         "name": "UIA_SelectionItemPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10010
    }
    ,{
         "name": "UIA_DockPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10011
    }
    ,{
         "name": "UIA_TablePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10012
    }
    ,{
         "name": "UIA_TableItemPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10013
    }
    ,{
         "name": "UIA_TextPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10014
    }
    ,{
         "name": "UIA_TogglePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10015
    }
    ,{
         "name": "UIA_TransformPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10016
    }
    ,{
         "name": "UIA_ScrollItemPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10017
    }
    ,{
         "name": "UIA_LegacyIAccessiblePatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10018
    }
    ,{
         "name": "UIA_ItemContainerPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10019
    }
    ,{
         "name": "UIA_VirtualizedItemPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10020
    }
    ,{
         "name": "UIA_SynchronizedInputPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10021
    }
    ,{
         "name": "UIA_ObjectModelPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10022
    }
    ,{
         "name": "UIA_AnnotationPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10023
    }
    ,{
         "name": "UIA_TextPattern2Id"
        ,"type": {"kind":"Int32"}
        ,"value": 10024
    }
    ,{
         "name": "UIA_StylesPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10025
    }
    ,{
         "name": "UIA_SpreadsheetPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10026
    }
    ,{
         "name": "UIA_SpreadsheetItemPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10027
    }
    ,{
         "name": "UIA_TransformPattern2Id"
        ,"type": {"kind":"Int32"}
        ,"value": 10028
    }
    ,{
         "name": "UIA_TextChildPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10029
    }
    ,{
         "name": "UIA_DragPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10030
    }
    ,{
         "name": "UIA_DropTargetPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10031
    }
    ,{
         "name": "UIA_TextEditPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10032
    }
    ,{
         "name": "UIA_CustomNavigationPatternId"
        ,"type": {"kind":"Int32"}
        ,"value": 10033
    }
    ,{
         "name": "UIA_SelectionPattern2Id"
        ,"type": {"kind":"Int32"}
        ,"value": 10034
    }
    ,{
         "name": "UIA_ToolTipOpenedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20000
    }
    ,{
         "name": "UIA_ToolTipClosedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20001
    }
    ,{
         "name": "UIA_StructureChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20002
    }
    ,{
         "name": "UIA_MenuOpenedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20003
    }
    ,{
         "name": "UIA_AutomationPropertyChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20004
    }
    ,{
         "name": "UIA_AutomationFocusChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20005
    }
    ,{
         "name": "UIA_AsyncContentLoadedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20006
    }
    ,{
         "name": "UIA_MenuClosedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20007
    }
    ,{
         "name": "UIA_LayoutInvalidatedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20008
    }
    ,{
         "name": "UIA_Invoke_InvokedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20009
    }
    ,{
         "name": "UIA_SelectionItem_ElementAddedToSelectionEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20010
    }
    ,{
         "name": "UIA_SelectionItem_ElementRemovedFromSelectionEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20011
    }
    ,{
         "name": "UIA_SelectionItem_ElementSelectedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20012
    }
    ,{
         "name": "UIA_Selection_InvalidatedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20013
    }
    ,{
         "name": "UIA_Text_TextSelectionChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20014
    }
    ,{
         "name": "UIA_Text_TextChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20015
    }
    ,{
         "name": "UIA_Window_WindowOpenedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20016
    }
    ,{
         "name": "UIA_Window_WindowClosedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20017
    }
    ,{
         "name": "UIA_MenuModeStartEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20018
    }
    ,{
         "name": "UIA_MenuModeEndEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20019
    }
    ,{
         "name": "UIA_InputReachedTargetEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20020
    }
    ,{
         "name": "UIA_InputReachedOtherElementEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20021
    }
    ,{
         "name": "UIA_InputDiscardedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20022
    }
    ,{
         "name": "UIA_SystemAlertEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20023
    }
    ,{
         "name": "UIA_LiveRegionChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20024
    }
    ,{
         "name": "UIA_HostedFragmentRootsInvalidatedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20025
    }
    ,{
         "name": "UIA_Drag_DragStartEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20026
    }
    ,{
         "name": "UIA_Drag_DragCancelEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20027
    }
    ,{
         "name": "UIA_Drag_DragCompleteEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20028
    }
    ,{
         "name": "UIA_DropTarget_DragEnterEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20029
    }
    ,{
         "name": "UIA_DropTarget_DragLeaveEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20030
    }
    ,{
         "name": "UIA_DropTarget_DroppedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20031
    }
    ,{
         "name": "UIA_TextEdit_TextChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20032
    }
    ,{
         "name": "UIA_TextEdit_ConversionTargetChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20033
    }
    ,{
         "name": "UIA_ChangesEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20034
    }
    ,{
         "name": "UIA_NotificationEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20035
    }
    ,{
         "name": "UIA_ActiveTextPositionChangedEventId"
        ,"type": {"kind":"Int32"}
        ,"value": 20036
    }
    ,{
         "name": "UIA_RuntimeIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30000
    }
    ,{
         "name": "UIA_BoundingRectanglePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30001
    }
    ,{
         "name": "UIA_ProcessIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30002
    }
    ,{
         "name": "UIA_ControlTypePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30003
    }
    ,{
         "name": "UIA_LocalizedControlTypePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30004
    }
    ,{
         "name": "UIA_NamePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30005
    }
    ,{
         "name": "UIA_AcceleratorKeyPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30006
    }
    ,{
         "name": "UIA_AccessKeyPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30007
    }
    ,{
         "name": "UIA_HasKeyboardFocusPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30008
    }
    ,{
         "name": "UIA_IsKeyboardFocusablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30009
    }
    ,{
         "name": "UIA_IsEnabledPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30010
    }
    ,{
         "name": "UIA_AutomationIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30011
    }
    ,{
         "name": "UIA_ClassNamePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30012
    }
    ,{
         "name": "UIA_HelpTextPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30013
    }
    ,{
         "name": "UIA_ClickablePointPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30014
    }
    ,{
         "name": "UIA_CulturePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30015
    }
    ,{
         "name": "UIA_IsControlElementPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30016
    }
    ,{
         "name": "UIA_IsContentElementPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30017
    }
    ,{
         "name": "UIA_LabeledByPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30018
    }
    ,{
         "name": "UIA_IsPasswordPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30019
    }
    ,{
         "name": "UIA_NativeWindowHandlePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30020
    }
    ,{
         "name": "UIA_ItemTypePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30021
    }
    ,{
         "name": "UIA_IsOffscreenPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30022
    }
    ,{
         "name": "UIA_OrientationPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30023
    }
    ,{
         "name": "UIA_FrameworkIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30024
    }
    ,{
         "name": "UIA_IsRequiredForFormPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30025
    }
    ,{
         "name": "UIA_ItemStatusPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30026
    }
    ,{
         "name": "UIA_IsDockPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30027
    }
    ,{
         "name": "UIA_IsExpandCollapsePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30028
    }
    ,{
         "name": "UIA_IsGridItemPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30029
    }
    ,{
         "name": "UIA_IsGridPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30030
    }
    ,{
         "name": "UIA_IsInvokePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30031
    }
    ,{
         "name": "UIA_IsMultipleViewPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30032
    }
    ,{
         "name": "UIA_IsRangeValuePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30033
    }
    ,{
         "name": "UIA_IsScrollPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30034
    }
    ,{
         "name": "UIA_IsScrollItemPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30035
    }
    ,{
         "name": "UIA_IsSelectionItemPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30036
    }
    ,{
         "name": "UIA_IsSelectionPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30037
    }
    ,{
         "name": "UIA_IsTablePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30038
    }
    ,{
         "name": "UIA_IsTableItemPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30039
    }
    ,{
         "name": "UIA_IsTextPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30040
    }
    ,{
         "name": "UIA_IsTogglePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30041
    }
    ,{
         "name": "UIA_IsTransformPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30042
    }
    ,{
         "name": "UIA_IsValuePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30043
    }
    ,{
         "name": "UIA_IsWindowPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30044
    }
    ,{
         "name": "UIA_ValueValuePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30045
    }
    ,{
         "name": "UIA_ValueIsReadOnlyPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30046
    }
    ,{
         "name": "UIA_RangeValueValuePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30047
    }
    ,{
         "name": "UIA_RangeValueIsReadOnlyPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30048
    }
    ,{
         "name": "UIA_RangeValueMinimumPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30049
    }
    ,{
         "name": "UIA_RangeValueMaximumPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30050
    }
    ,{
         "name": "UIA_RangeValueLargeChangePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30051
    }
    ,{
         "name": "UIA_RangeValueSmallChangePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30052
    }
    ,{
         "name": "UIA_ScrollHorizontalScrollPercentPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30053
    }
    ,{
         "name": "UIA_ScrollHorizontalViewSizePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30054
    }
    ,{
         "name": "UIA_ScrollVerticalScrollPercentPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30055
    }
    ,{
         "name": "UIA_ScrollVerticalViewSizePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30056
    }
    ,{
         "name": "UIA_ScrollHorizontallyScrollablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30057
    }
    ,{
         "name": "UIA_ScrollVerticallyScrollablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30058
    }
    ,{
         "name": "UIA_SelectionSelectionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30059
    }
    ,{
         "name": "UIA_SelectionCanSelectMultiplePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30060
    }
    ,{
         "name": "UIA_SelectionIsSelectionRequiredPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30061
    }
    ,{
         "name": "UIA_GridRowCountPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30062
    }
    ,{
         "name": "UIA_GridColumnCountPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30063
    }
    ,{
         "name": "UIA_GridItemRowPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30064
    }
    ,{
         "name": "UIA_GridItemColumnPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30065
    }
    ,{
         "name": "UIA_GridItemRowSpanPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30066
    }
    ,{
         "name": "UIA_GridItemColumnSpanPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30067
    }
    ,{
         "name": "UIA_GridItemContainingGridPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30068
    }
    ,{
         "name": "UIA_DockDockPositionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30069
    }
    ,{
         "name": "UIA_ExpandCollapseExpandCollapseStatePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30070
    }
    ,{
         "name": "UIA_MultipleViewCurrentViewPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30071
    }
    ,{
         "name": "UIA_MultipleViewSupportedViewsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30072
    }
    ,{
         "name": "UIA_WindowCanMaximizePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30073
    }
    ,{
         "name": "UIA_WindowCanMinimizePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30074
    }
    ,{
         "name": "UIA_WindowWindowVisualStatePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30075
    }
    ,{
         "name": "UIA_WindowWindowInteractionStatePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30076
    }
    ,{
         "name": "UIA_WindowIsModalPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30077
    }
    ,{
         "name": "UIA_WindowIsTopmostPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30078
    }
    ,{
         "name": "UIA_SelectionItemIsSelectedPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30079
    }
    ,{
         "name": "UIA_SelectionItemSelectionContainerPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30080
    }
    ,{
         "name": "UIA_TableRowHeadersPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30081
    }
    ,{
         "name": "UIA_TableColumnHeadersPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30082
    }
    ,{
         "name": "UIA_TableRowOrColumnMajorPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30083
    }
    ,{
         "name": "UIA_TableItemRowHeaderItemsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30084
    }
    ,{
         "name": "UIA_TableItemColumnHeaderItemsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30085
    }
    ,{
         "name": "UIA_ToggleToggleStatePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30086
    }
    ,{
         "name": "UIA_TransformCanMovePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30087
    }
    ,{
         "name": "UIA_TransformCanResizePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30088
    }
    ,{
         "name": "UIA_TransformCanRotatePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30089
    }
    ,{
         "name": "UIA_IsLegacyIAccessiblePatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30090
    }
    ,{
         "name": "UIA_LegacyIAccessibleChildIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30091
    }
    ,{
         "name": "UIA_LegacyIAccessibleNamePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30092
    }
    ,{
         "name": "UIA_LegacyIAccessibleValuePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30093
    }
    ,{
         "name": "UIA_LegacyIAccessibleDescriptionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30094
    }
    ,{
         "name": "UIA_LegacyIAccessibleRolePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30095
    }
    ,{
         "name": "UIA_LegacyIAccessibleStatePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30096
    }
    ,{
         "name": "UIA_LegacyIAccessibleHelpPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30097
    }
    ,{
         "name": "UIA_LegacyIAccessibleKeyboardShortcutPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30098
    }
    ,{
         "name": "UIA_LegacyIAccessibleSelectionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30099
    }
    ,{
         "name": "UIA_LegacyIAccessibleDefaultActionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30100
    }
    ,{
         "name": "UIA_AriaRolePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30101
    }
    ,{
         "name": "UIA_AriaPropertiesPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30102
    }
    ,{
         "name": "UIA_IsDataValidForFormPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30103
    }
    ,{
         "name": "UIA_ControllerForPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30104
    }
    ,{
         "name": "UIA_DescribedByPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30105
    }
    ,{
         "name": "UIA_FlowsToPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30106
    }
    ,{
         "name": "UIA_ProviderDescriptionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30107
    }
    ,{
         "name": "UIA_IsItemContainerPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30108
    }
    ,{
         "name": "UIA_IsVirtualizedItemPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30109
    }
    ,{
         "name": "UIA_IsSynchronizedInputPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30110
    }
    ,{
         "name": "UIA_OptimizeForVisualContentPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30111
    }
    ,{
         "name": "UIA_IsObjectModelPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30112
    }
    ,{
         "name": "UIA_AnnotationAnnotationTypeIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30113
    }
    ,{
         "name": "UIA_AnnotationAnnotationTypeNamePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30114
    }
    ,{
         "name": "UIA_AnnotationAuthorPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30115
    }
    ,{
         "name": "UIA_AnnotationDateTimePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30116
    }
    ,{
         "name": "UIA_AnnotationTargetPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30117
    }
    ,{
         "name": "UIA_IsAnnotationPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30118
    }
    ,{
         "name": "UIA_IsTextPattern2AvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30119
    }
    ,{
         "name": "UIA_StylesStyleIdPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30120
    }
    ,{
         "name": "UIA_StylesStyleNamePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30121
    }
    ,{
         "name": "UIA_StylesFillColorPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30122
    }
    ,{
         "name": "UIA_StylesFillPatternStylePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30123
    }
    ,{
         "name": "UIA_StylesShapePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30124
    }
    ,{
         "name": "UIA_StylesFillPatternColorPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30125
    }
    ,{
         "name": "UIA_StylesExtendedPropertiesPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30126
    }
    ,{
         "name": "UIA_IsStylesPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30127
    }
    ,{
         "name": "UIA_IsSpreadsheetPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30128
    }
    ,{
         "name": "UIA_SpreadsheetItemFormulaPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30129
    }
    ,{
         "name": "UIA_SpreadsheetItemAnnotationObjectsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30130
    }
    ,{
         "name": "UIA_SpreadsheetItemAnnotationTypesPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30131
    }
    ,{
         "name": "UIA_IsSpreadsheetItemPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30132
    }
    ,{
         "name": "UIA_Transform2CanZoomPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30133
    }
    ,{
         "name": "UIA_IsTransformPattern2AvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30134
    }
    ,{
         "name": "UIA_LiveSettingPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30135
    }
    ,{
         "name": "UIA_IsTextChildPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30136
    }
    ,{
         "name": "UIA_IsDragPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30137
    }
    ,{
         "name": "UIA_DragIsGrabbedPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30138
    }
    ,{
         "name": "UIA_DragDropEffectPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30139
    }
    ,{
         "name": "UIA_DragDropEffectsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30140
    }
    ,{
         "name": "UIA_IsDropTargetPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30141
    }
    ,{
         "name": "UIA_DropTargetDropTargetEffectPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30142
    }
    ,{
         "name": "UIA_DropTargetDropTargetEffectsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30143
    }
    ,{
         "name": "UIA_DragGrabbedItemsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30144
    }
    ,{
         "name": "UIA_Transform2ZoomLevelPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30145
    }
    ,{
         "name": "UIA_Transform2ZoomMinimumPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30146
    }
    ,{
         "name": "UIA_Transform2ZoomMaximumPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30147
    }
    ,{
         "name": "UIA_FlowsFromPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30148
    }
    ,{
         "name": "UIA_IsTextEditPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30149
    }
    ,{
         "name": "UIA_IsPeripheralPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30150
    }
    ,{
         "name": "UIA_IsCustomNavigationPatternAvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30151
    }
    ,{
         "name": "UIA_PositionInSetPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30152
    }
    ,{
         "name": "UIA_SizeOfSetPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30153
    }
    ,{
         "name": "UIA_LevelPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30154
    }
    ,{
         "name": "UIA_AnnotationTypesPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30155
    }
    ,{
         "name": "UIA_AnnotationObjectsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30156
    }
    ,{
         "name": "UIA_LandmarkTypePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30157
    }
    ,{
         "name": "UIA_LocalizedLandmarkTypePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30158
    }
    ,{
         "name": "UIA_FullDescriptionPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30159
    }
    ,{
         "name": "UIA_FillColorPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30160
    }
    ,{
         "name": "UIA_OutlineColorPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30161
    }
    ,{
         "name": "UIA_FillTypePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30162
    }
    ,{
         "name": "UIA_VisualEffectsPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30163
    }
    ,{
         "name": "UIA_OutlineThicknessPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30164
    }
    ,{
         "name": "UIA_CenterPointPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30165
    }
    ,{
         "name": "UIA_RotationPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30166
    }
    ,{
         "name": "UIA_SizePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30167
    }
    ,{
         "name": "UIA_IsSelectionPattern2AvailablePropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30168
    }
    ,{
         "name": "UIA_Selection2FirstSelectedItemPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30169
    }
    ,{
         "name": "UIA_Selection2LastSelectedItemPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30170
    }
    ,{
         "name": "UIA_Selection2CurrentSelectedItemPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30171
    }
    ,{
         "name": "UIA_Selection2ItemCountPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30172
    }
    ,{
         "name": "UIA_HeadingLevelPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30173
    }
    ,{
         "name": "UIA_IsDialogPropertyId"
        ,"type": {"kind":"Int32"}
        ,"value": 30174
    }
    ,{
         "name": "UIA_AnimationStyleAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40000
    }
    ,{
         "name": "UIA_BackgroundColorAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40001
    }
    ,{
         "name": "UIA_BulletStyleAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40002
    }
    ,{
         "name": "UIA_CapStyleAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40003
    }
    ,{
         "name": "UIA_CultureAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40004
    }
    ,{
         "name": "UIA_FontNameAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40005
    }
    ,{
         "name": "UIA_FontSizeAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40006
    }
    ,{
         "name": "UIA_FontWeightAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40007
    }
    ,{
         "name": "UIA_ForegroundColorAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40008
    }
    ,{
         "name": "UIA_HorizontalTextAlignmentAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40009
    }
    ,{
         "name": "UIA_IndentationFirstLineAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40010
    }
    ,{
         "name": "UIA_IndentationLeadingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40011
    }
    ,{
         "name": "UIA_IndentationTrailingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40012
    }
    ,{
         "name": "UIA_IsHiddenAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40013
    }
    ,{
         "name": "UIA_IsItalicAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40014
    }
    ,{
         "name": "UIA_IsReadOnlyAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40015
    }
    ,{
         "name": "UIA_IsSubscriptAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40016
    }
    ,{
         "name": "UIA_IsSuperscriptAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40017
    }
    ,{
         "name": "UIA_MarginBottomAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40018
    }
    ,{
         "name": "UIA_MarginLeadingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40019
    }
    ,{
         "name": "UIA_MarginTopAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40020
    }
    ,{
         "name": "UIA_MarginTrailingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40021
    }
    ,{
         "name": "UIA_OutlineStylesAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40022
    }
    ,{
         "name": "UIA_OverlineColorAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40023
    }
    ,{
         "name": "UIA_OverlineStyleAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40024
    }
    ,{
         "name": "UIA_StrikethroughColorAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40025
    }
    ,{
         "name": "UIA_StrikethroughStyleAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40026
    }
    ,{
         "name": "UIA_TabsAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40027
    }
    ,{
         "name": "UIA_TextFlowDirectionsAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40028
    }
    ,{
         "name": "UIA_UnderlineColorAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40029
    }
    ,{
         "name": "UIA_UnderlineStyleAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40030
    }
    ,{
         "name": "UIA_AnnotationTypesAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40031
    }
    ,{
         "name": "UIA_AnnotationObjectsAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40032
    }
    ,{
         "name": "UIA_StyleNameAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40033
    }
    ,{
         "name": "UIA_StyleIdAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40034
    }
    ,{
         "name": "UIA_LinkAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40035
    }
    ,{
         "name": "UIA_IsActiveAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40036
    }
    ,{
         "name": "UIA_SelectionActiveEndAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40037
    }
    ,{
         "name": "UIA_CaretPositionAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40038
    }
    ,{
         "name": "UIA_CaretBidiModeAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40039
    }
    ,{
         "name": "UIA_LineSpacingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40040
    }
    ,{
         "name": "UIA_BeforeParagraphSpacingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40041
    }
    ,{
         "name": "UIA_AfterParagraphSpacingAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40042
    }
    ,{
         "name": "UIA_SayAsInterpretAsAttributeId"
        ,"type": {"kind":"Int32"}
        ,"value": 40043
    }
    ,{
         "name": "UIA_ButtonControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50000
    }
    ,{
         "name": "UIA_CalendarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50001
    }
    ,{
         "name": "UIA_CheckBoxControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50002
    }
    ,{
         "name": "UIA_ComboBoxControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50003
    }
    ,{
         "name": "UIA_EditControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50004
    }
    ,{
         "name": "UIA_HyperlinkControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50005
    }
    ,{
         "name": "UIA_ImageControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50006
    }
    ,{
         "name": "UIA_ListItemControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50007
    }
    ,{
         "name": "UIA_ListControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50008
    }
    ,{
         "name": "UIA_MenuControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50009
    }
    ,{
         "name": "UIA_MenuBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50010
    }
    ,{
         "name": "UIA_MenuItemControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50011
    }
    ,{
         "name": "UIA_ProgressBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50012
    }
    ,{
         "name": "UIA_RadioButtonControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50013
    }
    ,{
         "name": "UIA_ScrollBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50014
    }
    ,{
         "name": "UIA_SliderControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50015
    }
    ,{
         "name": "UIA_SpinnerControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50016
    }
    ,{
         "name": "UIA_StatusBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50017
    }
    ,{
         "name": "UIA_TabControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50018
    }
    ,{
         "name": "UIA_TabItemControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50019
    }
    ,{
         "name": "UIA_TextControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50020
    }
    ,{
         "name": "UIA_ToolBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50021
    }
    ,{
         "name": "UIA_ToolTipControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50022
    }
    ,{
         "name": "UIA_TreeControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50023
    }
    ,{
         "name": "UIA_TreeItemControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50024
    }
    ,{
         "name": "UIA_CustomControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50025
    }
    ,{
         "name": "UIA_GroupControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50026
    }
    ,{
         "name": "UIA_ThumbControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50027
    }
    ,{
         "name": "UIA_DataGridControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50028
    }
    ,{
         "name": "UIA_DataItemControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50029
    }
    ,{
         "name": "UIA_DocumentControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50030
    }
    ,{
         "name": "UIA_SplitButtonControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50031
    }
    ,{
         "name": "UIA_WindowControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50032
    }
    ,{
         "name": "UIA_PaneControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50033
    }
    ,{
         "name": "UIA_HeaderControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50034
    }
    ,{
         "name": "UIA_HeaderItemControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50035
    }
    ,{
         "name": "UIA_TableControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50036
    }
    ,{
         "name": "UIA_TitleBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50037
    }
    ,{
         "name": "UIA_SeparatorControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50038
    }
    ,{
         "name": "UIA_SemanticZoomControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50039
    }
    ,{
         "name": "UIA_AppBarControlTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 50040
    }
    ,{
         "name": "AnnotationType_Unknown"
        ,"type": {"kind":"Int32"}
        ,"value": 60000
    }
    ,{
         "name": "AnnotationType_SpellingError"
        ,"type": {"kind":"Int32"}
        ,"value": 60001
    }
    ,{
         "name": "AnnotationType_GrammarError"
        ,"type": {"kind":"Int32"}
        ,"value": 60002
    }
    ,{
         "name": "AnnotationType_Comment"
        ,"type": {"kind":"Int32"}
        ,"value": 60003
    }
    ,{
         "name": "AnnotationType_FormulaError"
        ,"type": {"kind":"Int32"}
        ,"value": 60004
    }
    ,{
         "name": "AnnotationType_TrackChanges"
        ,"type": {"kind":"Int32"}
        ,"value": 60005
    }
    ,{
         "name": "AnnotationType_Header"
        ,"type": {"kind":"Int32"}
        ,"value": 60006
    }
    ,{
         "name": "AnnotationType_Footer"
        ,"type": {"kind":"Int32"}
        ,"value": 60007
    }
    ,{
         "name": "AnnotationType_Highlighted"
        ,"type": {"kind":"Int32"}
        ,"value": 60008
    }
    ,{
         "name": "AnnotationType_Endnote"
        ,"type": {"kind":"Int32"}
        ,"value": 60009
    }
    ,{
         "name": "AnnotationType_Footnote"
        ,"type": {"kind":"Int32"}
        ,"value": 60010
    }
    ,{
         "name": "AnnotationType_InsertionChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60011
    }
    ,{
         "name": "AnnotationType_DeletionChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60012
    }
    ,{
         "name": "AnnotationType_MoveChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60013
    }
    ,{
         "name": "AnnotationType_FormatChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60014
    }
    ,{
         "name": "AnnotationType_UnsyncedChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60015
    }
    ,{
         "name": "AnnotationType_EditingLockedChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60016
    }
    ,{
         "name": "AnnotationType_ExternalChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60017
    }
    ,{
         "name": "AnnotationType_ConflictingChange"
        ,"type": {"kind":"Int32"}
        ,"value": 60018
    }
    ,{
         "name": "AnnotationType_Author"
        ,"type": {"kind":"Int32"}
        ,"value": 60019
    }
    ,{
         "name": "AnnotationType_AdvancedProofingIssue"
        ,"type": {"kind":"Int32"}
        ,"value": 60020
    }
    ,{
         "name": "AnnotationType_DataValidationError"
        ,"type": {"kind":"Int32"}
        ,"value": 60021
    }
    ,{
         "name": "AnnotationType_CircularReferenceError"
        ,"type": {"kind":"Int32"}
        ,"value": 60022
    }
    ,{
         "name": "AnnotationType_Mathematics"
        ,"type": {"kind":"Int32"}
        ,"value": 60023
    }
    ,{
         "name": "AnnotationType_Sensitive"
        ,"type": {"kind":"Int32"}
        ,"value": 60024
    }
    ,{
         "name": "StyleId_Custom"
        ,"type": {"kind":"Int32"}
        ,"value": 70000
    }
    ,{
         "name": "StyleId_Heading1"
        ,"type": {"kind":"Int32"}
        ,"value": 70001
    }
    ,{
         "name": "StyleId_Heading2"
        ,"type": {"kind":"Int32"}
        ,"value": 70002
    }
    ,{
         "name": "StyleId_Heading3"
        ,"type": {"kind":"Int32"}
        ,"value": 70003
    }
    ,{
         "name": "StyleId_Heading4"
        ,"type": {"kind":"Int32"}
        ,"value": 70004
    }
    ,{
         "name": "StyleId_Heading5"
        ,"type": {"kind":"Int32"}
        ,"value": 70005
    }
    ,{
         "name": "StyleId_Heading6"
        ,"type": {"kind":"Int32"}
        ,"value": 70006
    }
    ,{
         "name": "StyleId_Heading7"
        ,"type": {"kind":"Int32"}
        ,"value": 70007
    }
    ,{
         "name": "StyleId_Heading8"
        ,"type": {"kind":"Int32"}
        ,"value": 70008
    }
    ,{
         "name": "StyleId_Heading9"
        ,"type": {"kind":"Int32"}
        ,"value": 70009
    }
    ,{
         "name": "StyleId_Title"
        ,"type": {"kind":"Int32"}
        ,"value": 70010
    }
    ,{
         "name": "StyleId_Subtitle"
        ,"type": {"kind":"Int32"}
        ,"value": 70011
    }
    ,{
         "name": "StyleId_Normal"
        ,"type": {"kind":"Int32"}
        ,"value": 70012
    }
    ,{
         "name": "StyleId_Emphasis"
        ,"type": {"kind":"Int32"}
        ,"value": 70013
    }
    ,{
         "name": "StyleId_Quote"
        ,"type": {"kind":"Int32"}
        ,"value": 70014
    }
    ,{
         "name": "StyleId_BulletedList"
        ,"type": {"kind":"Int32"}
        ,"value": 70015
    }
    ,{
         "name": "StyleId_NumberedList"
        ,"type": {"kind":"Int32"}
        ,"value": 70016
    }
    ,{
         "name": "UIA_CustomLandmarkTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 80000
    }
    ,{
         "name": "UIA_FormLandmarkTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 80001
    }
    ,{
         "name": "UIA_MainLandmarkTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 80002
    }
    ,{
         "name": "UIA_NavigationLandmarkTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 80003
    }
    ,{
         "name": "UIA_SearchLandmarkTypeId"
        ,"type": {"kind":"Int32"}
        ,"value": 80004
    }
    ,{
         "name": "HeadingLevel_None"
        ,"type": {"kind":"Int32"}
        ,"value": 80050
    }
    ,{
         "name": "HeadingLevel1"
        ,"type": {"kind":"Int32"}
        ,"value": 80051
    }
    ,{
         "name": "HeadingLevel2"
        ,"type": {"kind":"Int32"}
        ,"value": 80052
    }
    ,{
         "name": "HeadingLevel3"
        ,"type": {"kind":"Int32"}
        ,"value": 80053
    }
    ,{
         "name": "HeadingLevel4"
        ,"type": {"kind":"Int32"}
        ,"value": 80054
    }
    ,{
         "name": "HeadingLevel5"
        ,"type": {"kind":"Int32"}
        ,"value": 80055
    }
    ,{
         "name": "HeadingLevel6"
        ,"type": {"kind":"Int32"}
        ,"value": 80056
    }
    ,{
         "name": "HeadingLevel7"
        ,"type": {"kind":"Int32"}
        ,"value": 80057
    }
    ,{
         "name": "HeadingLevel8"
        ,"type": {"kind":"Int32"}
        ,"value": 80058
    }
    ,{
         "name": "HeadingLevel9"
        ,"type": {"kind":"Int32"}
        ,"value": 80059
    }
    ,{
         "name": "UIA_SummaryChangeId"
        ,"type": {"kind":"Int32"}
        ,"value": 90000
    }
    ,{
         "name": "UIA_SayAsInterpretAsMetadataId"
        ,"type": {"kind":"Int32"}
        ,"value": 100000
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: SERIALKEYSA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SERIALKEYSA = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    lpszActivePort: {"kind""Ptr","child":{"kind":"SByte"}},
    lpszPort: {"kind""Ptr","child":{"kind":"SByte"}},
    iBaudRate: {"kind":"UInt32"},
    iPortState: {"kind":"UInt32"},
    iActive: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SERIALKEYSW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SERIALKEYSW = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    lpszActivePort: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpszPort: {"kind""Ptr","child":{"kind":"UInt16"}},
    iBaudRate: {"kind":"UInt32"},
    iPortState: {"kind":"UInt32"},
    iActive: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: HIGHCONTRASTA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HIGHCONTRASTA = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    lpszDefaultScheme: {"kind""Ptr","child":{"kind":"SByte"}},
};
// --------------------------------------------------------
// Type: HIGHCONTRASTW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HIGHCONTRASTW = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    lpszDefaultScheme: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: FILTERKEYS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FILTERKEYS = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    iWaitMSec: {"kind":"UInt32"},
    iDelayMSec: {"kind":"UInt32"},
    iRepeatMSec: {"kind":"UInt32"},
    iBounceMSec: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: STICKYKEYS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const STICKYKEYS = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: MOUSEKEYS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MOUSEKEYS = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    iMaxSpeed: {"kind":"UInt32"},
    iTimeToMaxSpeed: {"kind":"UInt32"},
    iCtrlSpeed: {"kind":"UInt32"},
    dwReserved1: {"kind":"UInt32"},
    dwReserved2: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ACCESSTIMEOUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ACCESSTIMEOUT = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    iTimeOutMSec: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SOUNDSENTRYA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SOUNDSENTRYA = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    iFSTextEffect: {"kind":"UInt32"},
    iFSTextEffectMSec: {"kind":"UInt32"},
    iFSTextEffectColorBits: {"kind":"UInt32"},
    iFSGrafEffect: {"kind":"UInt32"},
    iFSGrafEffectMSec: {"kind":"UInt32"},
    iFSGrafEffectColor: {"kind":"UInt32"},
    iWindowsEffect: {"kind":"UInt32"},
    iWindowsEffectMSec: {"kind":"UInt32"},
    lpszWindowsEffectDLL: {"kind""Ptr","child":{"kind":"SByte"}},
    iWindowsEffectOrdinal: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: SOUNDSENTRYW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SOUNDSENTRYW = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    iFSTextEffect: {"kind":"UInt32"},
    iFSTextEffectMSec: {"kind":"UInt32"},
    iFSTextEffectColorBits: {"kind":"UInt32"},
    iFSGrafEffect: {"kind":"UInt32"},
    iFSGrafEffectMSec: {"kind":"UInt32"},
    iFSGrafEffectColor: {"kind":"UInt32"},
    iWindowsEffect: {"kind":"UInt32"},
    iWindowsEffectMSec: {"kind":"UInt32"},
    lpszWindowsEffectDLL: {"kind""Ptr","child":{"kind":"UInt16"}},
    iWindowsEffectOrdinal: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: TOGGLEKEYS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TOGGLEKEYS = extern struct {
    cbSize: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: WINEVENTPROC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WINEVENTPROC = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MSAAControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MSAAControl = opaque {
};
// --------------------------------------------------------
// Type: AccStore
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AccStore = opaque {
};
// --------------------------------------------------------
// Type: AccDictionary
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AccDictionary = opaque {
};
// --------------------------------------------------------
// Type: AccServerDocMgr
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AccServerDocMgr = opaque {
};
// --------------------------------------------------------
// Type: AccClientDocMgr
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AccClientDocMgr = opaque {
};
// --------------------------------------------------------
// Type: DocWrap
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DocWrap = opaque {
};
// --------------------------------------------------------
// Type: IInternalDocWrap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInternalDocWrap = *opaque{
    // TODO: Method 'NotifyRevoke'
};
// --------------------------------------------------------
// Type: ITextStoreACPEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextStoreACPEx = *opaque{
    // TODO: Method 'ScrollToRect'
};
// --------------------------------------------------------
// Type: ITextStoreAnchorEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextStoreAnchorEx = *opaque{
    // TODO: Method 'ScrollToRect'
};
// --------------------------------------------------------
// Type: ITextStoreACPSinkEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextStoreACPSinkEx = *opaque{
    // TODO: Method 'OnDisconnect'
};
// --------------------------------------------------------
// Type: ITextStoreSinkAnchorEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextStoreSinkAnchorEx = *opaque{
    // TODO: Method 'OnDisconnect'
};
// --------------------------------------------------------
// Type: IAccDictionary
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccDictionary = *opaque{
    // TODO: Method 'GetLocalizedString'
    // TODO: Method 'GetParentTerm'
    // TODO: Method 'GetMnemonicString'
    // TODO: Method 'LookupMnemonicTerm'
    // TODO: Method 'ConvertValueToString'
};
// --------------------------------------------------------
// Type: IVersionInfo
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVersionInfo = *opaque{
    // TODO: Method 'GetSubcomponentCount'
    // TODO: Method 'GetImplementationID'
    // TODO: Method 'GetBuildVersion'
    // TODO: Method 'GetComponentDescription'
    // TODO: Method 'GetInstanceDescription'
};
// --------------------------------------------------------
// Type: ICoCreateLocally
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICoCreateLocally = *opaque{
    // TODO: Method 'CoCreateLocally'
};
// --------------------------------------------------------
// Type: ICoCreatedLocally
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICoCreatedLocally = *opaque{
    // TODO: Method 'LocalInit'
};
// --------------------------------------------------------
// Type: IAccStore
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccStore = *opaque{
    // TODO: Method 'Register'
    // TODO: Method 'Unregister'
    // TODO: Method 'GetDocuments'
    // TODO: Method 'LookupByHWND'
    // TODO: Method 'LookupByPoint'
    // TODO: Method 'OnDocumentFocus'
    // TODO: Method 'GetFocused'
};
// --------------------------------------------------------
// Type: IAccServerDocMgr
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccServerDocMgr = *opaque{
    // TODO: Method 'NewDocument'
    // TODO: Method 'RevokeDocument'
    // TODO: Method 'OnDocumentFocus'
};
// --------------------------------------------------------
// Type: IAccClientDocMgr
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccClientDocMgr = *opaque{
    // TODO: Method 'GetDocuments'
    // TODO: Method 'LookupByHWND'
    // TODO: Method 'LookupByPoint'
    // TODO: Method 'GetFocused'
};
// --------------------------------------------------------
// Type: IDocWrap
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDocWrap = *opaque{
    // TODO: Method 'SetDoc'
    // TODO: Method 'GetWrappedDoc'
};
// --------------------------------------------------------
// Type: IClonableWrapper
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IClonableWrapper = *opaque{
    // TODO: Method 'CloneNewWrapper'
};
// --------------------------------------------------------
// Type: CAccPropServices
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CAccPropServices = opaque {
};
// --------------------------------------------------------
// Type: LPFNLRESULTFROMOBJECT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPFNLRESULTFROMOBJECT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPFNOBJECTFROMLRESULT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPFNOBJECTFROMLRESULT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPFNACCESSIBLEOBJECTFROMWINDOW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPFNACCESSIBLEOBJECTFROMWINDOW = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPFNACCESSIBLEOBJECTFROMPOINT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPFNACCESSIBLEOBJECTFROMPOINT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPFNCREATESTDACCESSIBLEOBJECT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPFNCREATESTDACCESSIBLEOBJECT = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: LPFNACCESSIBLECHILDREN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LPFNACCESSIBLECHILDREN = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MSAAMENUINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MSAAMENUINFO = extern struct {
    dwMSAASignature: {"kind":"UInt32"},
    cchWText: {"kind":"UInt32"},
    pszWText: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IAccessible
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccessible = *opaque{
    // TODO: Method 'get_accParent'
    // TODO: Method 'get_accChildCount'
    // TODO: Method 'get_accChild'
    // TODO: Method 'get_accName'
    // TODO: Method 'get_accValue'
    // TODO: Method 'get_accDescription'
    // TODO: Method 'get_accRole'
    // TODO: Method 'get_accState'
    // TODO: Method 'get_accHelp'
    // TODO: Method 'get_accHelpTopic'
    // TODO: Method 'get_accKeyboardShortcut'
    // TODO: Method 'get_accFocus'
    // TODO: Method 'get_accSelection'
    // TODO: Method 'get_accDefaultAction'
    // TODO: Method 'accSelect'
    // TODO: Method 'accLocation'
    // TODO: Method 'accNavigate'
    // TODO: Method 'accHitTest'
    // TODO: Method 'accDoDefaultAction'
    // TODO: Method 'put_accName'
    // TODO: Method 'put_accValue'
};
// --------------------------------------------------------
// Type: IAccessibleHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccessibleHandler = *opaque{
    // TODO: Method 'AccessibleObjectFromID'
};
// --------------------------------------------------------
// Type: IAccessibleWindowlessSite
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccessibleWindowlessSite = *opaque{
    // TODO: Method 'AcquireObjectIdRange'
    // TODO: Method 'ReleaseObjectIdRange'
    // TODO: Method 'QueryObjectIdRanges'
    // TODO: Method 'GetParentAccessible'
};
// --------------------------------------------------------
// Type: AnnoScope
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AnnoScope = *opaque{
};
// --------------------------------------------------------
// Type: IAccIdentity
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccIdentity = *opaque{
    // TODO: Method 'GetIdentityString'
};
// --------------------------------------------------------
// Type: IAccPropServer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccPropServer = *opaque{
    // TODO: Method 'GetPropValue'
};
// --------------------------------------------------------
// Type: IAccPropServices
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccPropServices = *opaque{
    // TODO: Method 'SetPropValue'
    // TODO: Method 'SetPropServer'
    // TODO: Method 'ClearProps'
    // TODO: Method 'SetHwndProp'
    // TODO: Method 'SetHwndPropStr'
    // TODO: Method 'SetHwndPropServer'
    // TODO: Method 'ClearHwndProps'
    // TODO: Method 'ComposeHwndIdentityString'
    // TODO: Method 'DecomposeHwndIdentityString'
    // TODO: Method 'SetHmenuProp'
    // TODO: Method 'SetHmenuPropStr'
    // TODO: Method 'SetHmenuPropServer'
    // TODO: Method 'ClearHmenuProps'
    // TODO: Method 'ComposeHmenuIdentityString'
    // TODO: Method 'DecomposeHmenuIdentityString'
};
// --------------------------------------------------------
// Type: CUIAutomationRegistrar
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CUIAutomationRegistrar = opaque {
};
// --------------------------------------------------------
// Type: NavigateDirection
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NavigateDirection = *opaque{
};
// --------------------------------------------------------
// Type: ProviderOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ProviderOptions = *opaque{
};
// --------------------------------------------------------
// Type: StructureChangeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const StructureChangeType = *opaque{
};
// --------------------------------------------------------
// Type: TextEditChangeType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TextEditChangeType = *opaque{
};
// --------------------------------------------------------
// Type: OrientationType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const OrientationType = *opaque{
};
// --------------------------------------------------------
// Type: DockPosition
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DockPosition = *opaque{
};
// --------------------------------------------------------
// Type: ExpandCollapseState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ExpandCollapseState = *opaque{
};
// --------------------------------------------------------
// Type: ScrollAmount
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ScrollAmount = *opaque{
};
// --------------------------------------------------------
// Type: RowOrColumnMajor
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const RowOrColumnMajor = *opaque{
};
// --------------------------------------------------------
// Type: ToggleState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ToggleState = *opaque{
};
// --------------------------------------------------------
// Type: WindowVisualState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WindowVisualState = *opaque{
};
// --------------------------------------------------------
// Type: SynchronizedInputType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SynchronizedInputType = *opaque{
};
// --------------------------------------------------------
// Type: WindowInteractionState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const WindowInteractionState = *opaque{
};
// --------------------------------------------------------
// Type: SayAsInterpretAs
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SayAsInterpretAs = *opaque{
};
// --------------------------------------------------------
// Type: TextUnit
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TextUnit = *opaque{
};
// --------------------------------------------------------
// Type: TextPatternRangeEndpoint
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TextPatternRangeEndpoint = *opaque{
};
// --------------------------------------------------------
// Type: SupportedTextSelection
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SupportedTextSelection = *opaque{
};
// --------------------------------------------------------
// Type: LiveSetting
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const LiveSetting = *opaque{
};
// --------------------------------------------------------
// Type: ActiveEnd
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ActiveEnd = *opaque{
};
// --------------------------------------------------------
// Type: CaretPosition
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CaretPosition = *opaque{
};
// --------------------------------------------------------
// Type: CaretBidiMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CaretBidiMode = *opaque{
};
// --------------------------------------------------------
// Type: ZoomUnit
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ZoomUnit = *opaque{
};
// --------------------------------------------------------
// Type: AnimationStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AnimationStyle = *opaque{
};
// --------------------------------------------------------
// Type: BulletStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const BulletStyle = *opaque{
};
// --------------------------------------------------------
// Type: CapStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CapStyle = *opaque{
};
// --------------------------------------------------------
// Type: FillType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FillType = *opaque{
};
// --------------------------------------------------------
// Type: FlowDirections
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FlowDirections = *opaque{
};
// --------------------------------------------------------
// Type: HorizontalTextAlignment
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const HorizontalTextAlignment = *opaque{
};
// --------------------------------------------------------
// Type: OutlineStyles
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const OutlineStyles = *opaque{
};
// --------------------------------------------------------
// Type: TextDecorationLineStyle
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TextDecorationLineStyle = *opaque{
};
// --------------------------------------------------------
// Type: VisualEffects
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const VisualEffects = *opaque{
};
// --------------------------------------------------------
// Type: NotificationProcessing
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NotificationProcessing = *opaque{
};
// --------------------------------------------------------
// Type: NotificationKind
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NotificationKind = *opaque{
};
// --------------------------------------------------------
// Type: UiaRect
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaRect = extern struct {
    left: {"kind":"Double"},
    top: {"kind":"Double"},
    width: {"kind":"Double"},
    height: {"kind":"Double"},
};
// --------------------------------------------------------
// Type: UiaPoint
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaPoint = extern struct {
    x: {"kind":"Double"},
    y: {"kind":"Double"},
};
// --------------------------------------------------------
// Type: UiaChangeInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaChangeInfo = extern struct {
    uiaId: {"kind":"Int32"},
    payload: Windows.Win32.Automation.VARIANT,
    extraInfo: Windows.Win32.Automation.VARIANT,
};
// --------------------------------------------------------
// Type: UIAutomationType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const UIAutomationType = *opaque{
};
// --------------------------------------------------------
// Type: UIAutomationParameter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UIAutomationParameter = extern struct {
    type: Windows.Win32.WindowsAccessibility.UIAutomationType,
    pData: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: UIAutomationPropertyInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UIAutomationPropertyInfo = extern struct {
    guid: Guid,
    pProgrammaticName: {"kind""Ptr","child":{"kind":"UInt16"}},
    type: Windows.Win32.WindowsAccessibility.UIAutomationType,
};
// --------------------------------------------------------
// Type: UIAutomationEventInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UIAutomationEventInfo = extern struct {
    guid: Guid,
    pProgrammaticName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: UIAutomationMethodInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UIAutomationMethodInfo = extern struct {
    pProgrammaticName: {"kind""Ptr","child":{"kind":"UInt16"}},
    doSetFocus: Windows.Win32.SystemServices.BOOL,
    cInParameters: {"kind":"UInt32"},
    cOutParameters: {"kind":"UInt32"},
    pParameterTypes: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UIAutomationType},
    pParameterNames: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
};
// --------------------------------------------------------
// Type: UIAutomationPatternInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UIAutomationPatternInfo = extern struct {
    guid: Guid,
    pProgrammaticName: {"kind""Ptr","child":{"kind":"UInt16"}},
    providerInterfaceId: Guid,
    clientInterfaceId: Guid,
    cProperties: {"kind":"UInt32"},
    pProperties: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UIAutomationPropertyInfo},
    cMethods: {"kind":"UInt32"},
    pMethods: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UIAutomationMethodInfo},
    cEvents: {"kind":"UInt32"},
    pEvents: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UIAutomationEventInfo},
    pPatternHandler: Windows.Win32.WindowsAccessibility.IUIAutomationPatternHandler,
};
// --------------------------------------------------------
// Type: IRawElementProviderSimple
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderSimple = *opaque{
    // TODO: Method 'get_ProviderOptions'
    // TODO: Method 'GetPatternProvider'
    // TODO: Method 'GetPropertyValue'
    // TODO: Method 'get_HostRawElementProvider'
};
// --------------------------------------------------------
// Type: IAccessibleEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccessibleEx = *opaque{
    // TODO: Method 'GetObjectForChild'
    // TODO: Method 'GetIAccessiblePair'
    // TODO: Method 'GetRuntimeId'
    // TODO: Method 'ConvertReturnedElement'
};
// --------------------------------------------------------
// Type: IRawElementProviderSimple2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderSimple2 = *opaque{
    // TODO: Method 'ShowContextMenu'
};
// --------------------------------------------------------
// Type: IRawElementProviderSimple3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderSimple3 = *opaque{
    // TODO: Method 'GetMetadataValue'
};
// --------------------------------------------------------
// Type: IRawElementProviderFragmentRoot
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderFragmentRoot = *opaque{
    // TODO: Method 'ElementProviderFromPoint'
    // TODO: Method 'GetFocus'
};
// --------------------------------------------------------
// Type: IRawElementProviderFragment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderFragment = *opaque{
    // TODO: Method 'Navigate'
    // TODO: Method 'GetRuntimeId'
    // TODO: Method 'get_BoundingRectangle'
    // TODO: Method 'GetEmbeddedFragmentRoots'
    // TODO: Method 'SetFocus'
    // TODO: Method 'get_FragmentRoot'
};
// --------------------------------------------------------
// Type: IRawElementProviderAdviseEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderAdviseEvents = *opaque{
    // TODO: Method 'AdviseEventAdded'
    // TODO: Method 'AdviseEventRemoved'
};
// --------------------------------------------------------
// Type: IRawElementProviderHwndOverride
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderHwndOverride = *opaque{
    // TODO: Method 'GetOverrideProviderForHwnd'
};
// --------------------------------------------------------
// Type: IProxyProviderWinEventSink
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IProxyProviderWinEventSink = *opaque{
    // TODO: Method 'AddAutomationPropertyChangedEvent'
    // TODO: Method 'AddAutomationEvent'
    // TODO: Method 'AddStructureChangedEvent'
};
// --------------------------------------------------------
// Type: IProxyProviderWinEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IProxyProviderWinEventHandler = *opaque{
    // TODO: Method 'RespondToWinEvent'
};
// --------------------------------------------------------
// Type: IRawElementProviderWindowlessSite
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderWindowlessSite = *opaque{
    // TODO: Method 'GetAdjacentFragment'
    // TODO: Method 'GetRuntimeIdPrefix'
};
// --------------------------------------------------------
// Type: IAccessibleHostingElementProviders
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAccessibleHostingElementProviders = *opaque{
    // TODO: Method 'GetEmbeddedFragmentRoots'
    // TODO: Method 'GetObjectIdForProvider'
};
// --------------------------------------------------------
// Type: IRawElementProviderHostingAccessibles
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRawElementProviderHostingAccessibles = *opaque{
    // TODO: Method 'GetEmbeddedAccessibles'
};
// --------------------------------------------------------
// Type: IDockProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDockProvider = *opaque{
    // TODO: Method 'SetDockPosition'
    // TODO: Method 'get_DockPosition'
};
// --------------------------------------------------------
// Type: IExpandCollapseProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IExpandCollapseProvider = *opaque{
    // TODO: Method 'Expand'
    // TODO: Method 'Collapse'
    // TODO: Method 'get_ExpandCollapseState'
};
// --------------------------------------------------------
// Type: IGridProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGridProvider = *opaque{
    // TODO: Method 'GetItem'
    // TODO: Method 'get_RowCount'
    // TODO: Method 'get_ColumnCount'
};
// --------------------------------------------------------
// Type: IGridItemProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IGridItemProvider = *opaque{
    // TODO: Method 'get_Row'
    // TODO: Method 'get_Column'
    // TODO: Method 'get_RowSpan'
    // TODO: Method 'get_ColumnSpan'
    // TODO: Method 'get_ContainingGrid'
};
// --------------------------------------------------------
// Type: IInvokeProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IInvokeProvider = *opaque{
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IMultipleViewProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMultipleViewProvider = *opaque{
    // TODO: Method 'GetViewName'
    // TODO: Method 'SetCurrentView'
    // TODO: Method 'get_CurrentView'
    // TODO: Method 'GetSupportedViews'
};
// --------------------------------------------------------
// Type: IRangeValueProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IRangeValueProvider = *opaque{
    // TODO: Method 'SetValue'
    // TODO: Method 'get_Value'
    // TODO: Method 'get_IsReadOnly'
    // TODO: Method 'get_Maximum'
    // TODO: Method 'get_Minimum'
    // TODO: Method 'get_LargeChange'
    // TODO: Method 'get_SmallChange'
};
// --------------------------------------------------------
// Type: IScrollItemProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IScrollItemProvider = *opaque{
    // TODO: Method 'ScrollIntoView'
};
// --------------------------------------------------------
// Type: ISelectionProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISelectionProvider = *opaque{
    // TODO: Method 'GetSelection'
    // TODO: Method 'get_CanSelectMultiple'
    // TODO: Method 'get_IsSelectionRequired'
};
// --------------------------------------------------------
// Type: ISelectionProvider2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISelectionProvider2 = *opaque{
    // TODO: Method 'get_FirstSelectedItem'
    // TODO: Method 'get_LastSelectedItem'
    // TODO: Method 'get_CurrentSelectedItem'
    // TODO: Method 'get_ItemCount'
};
// --------------------------------------------------------
// Type: IScrollProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IScrollProvider = *opaque{
    // TODO: Method 'Scroll'
    // TODO: Method 'SetScrollPercent'
    // TODO: Method 'get_HorizontalScrollPercent'
    // TODO: Method 'get_VerticalScrollPercent'
    // TODO: Method 'get_HorizontalViewSize'
    // TODO: Method 'get_VerticalViewSize'
    // TODO: Method 'get_HorizontallyScrollable'
    // TODO: Method 'get_VerticallyScrollable'
};
// --------------------------------------------------------
// Type: ISelectionItemProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISelectionItemProvider = *opaque{
    // TODO: Method 'Select'
    // TODO: Method 'AddToSelection'
    // TODO: Method 'RemoveFromSelection'
    // TODO: Method 'get_IsSelected'
    // TODO: Method 'get_SelectionContainer'
};
// --------------------------------------------------------
// Type: ISynchronizedInputProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISynchronizedInputProvider = *opaque{
    // TODO: Method 'StartListening'
    // TODO: Method 'Cancel'
};
// --------------------------------------------------------
// Type: ITableProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITableProvider = *opaque{
    // TODO: Method 'GetRowHeaders'
    // TODO: Method 'GetColumnHeaders'
    // TODO: Method 'get_RowOrColumnMajor'
};
// --------------------------------------------------------
// Type: ITableItemProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITableItemProvider = *opaque{
    // TODO: Method 'GetRowHeaderItems'
    // TODO: Method 'GetColumnHeaderItems'
};
// --------------------------------------------------------
// Type: IToggleProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IToggleProvider = *opaque{
    // TODO: Method 'Toggle'
    // TODO: Method 'get_ToggleState'
};
// --------------------------------------------------------
// Type: ITransformProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITransformProvider = *opaque{
    // TODO: Method 'Move'
    // TODO: Method 'Resize'
    // TODO: Method 'Rotate'
    // TODO: Method 'get_CanMove'
    // TODO: Method 'get_CanResize'
    // TODO: Method 'get_CanRotate'
};
// --------------------------------------------------------
// Type: IValueProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IValueProvider = *opaque{
    // TODO: Method 'SetValue'
    // TODO: Method 'get_Value'
    // TODO: Method 'get_IsReadOnly'
};
// --------------------------------------------------------
// Type: IWindowProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IWindowProvider = *opaque{
    // TODO: Method 'SetVisualState'
    // TODO: Method 'Close'
    // TODO: Method 'WaitForInputIdle'
    // TODO: Method 'get_CanMaximize'
    // TODO: Method 'get_CanMinimize'
    // TODO: Method 'get_IsModal'
    // TODO: Method 'get_WindowVisualState'
    // TODO: Method 'get_WindowInteractionState'
    // TODO: Method 'get_IsTopmost'
};
// --------------------------------------------------------
// Type: ILegacyIAccessibleProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ILegacyIAccessibleProvider = *opaque{
    // TODO: Method 'Select'
    // TODO: Method 'DoDefaultAction'
    // TODO: Method 'SetValue'
    // TODO: Method 'GetIAccessible'
    // TODO: Method 'get_ChildId'
    // TODO: Method 'get_Name'
    // TODO: Method 'get_Value'
    // TODO: Method 'get_Description'
    // TODO: Method 'get_Role'
    // TODO: Method 'get_State'
    // TODO: Method 'get_Help'
    // TODO: Method 'get_KeyboardShortcut'
    // TODO: Method 'GetSelection'
    // TODO: Method 'get_DefaultAction'
};
// --------------------------------------------------------
// Type: IItemContainerProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IItemContainerProvider = *opaque{
    // TODO: Method 'FindItemByProperty'
};
// --------------------------------------------------------
// Type: IVirtualizedItemProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IVirtualizedItemProvider = *opaque{
    // TODO: Method 'Realize'
};
// --------------------------------------------------------
// Type: IObjectModelProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IObjectModelProvider = *opaque{
    // TODO: Method 'GetUnderlyingObjectModel'
};
// --------------------------------------------------------
// Type: IAnnotationProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAnnotationProvider = *opaque{
    // TODO: Method 'get_AnnotationTypeId'
    // TODO: Method 'get_AnnotationTypeName'
    // TODO: Method 'get_Author'
    // TODO: Method 'get_DateTime'
    // TODO: Method 'get_Target'
};
// --------------------------------------------------------
// Type: IStylesProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IStylesProvider = *opaque{
    // TODO: Method 'get_StyleId'
    // TODO: Method 'get_StyleName'
    // TODO: Method 'get_FillColor'
    // TODO: Method 'get_FillPatternStyle'
    // TODO: Method 'get_Shape'
    // TODO: Method 'get_FillPatternColor'
    // TODO: Method 'get_ExtendedProperties'
};
// --------------------------------------------------------
// Type: ISpreadsheetProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpreadsheetProvider = *opaque{
    // TODO: Method 'GetItemByName'
};
// --------------------------------------------------------
// Type: ISpreadsheetItemProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpreadsheetItemProvider = *opaque{
    // TODO: Method 'get_Formula'
    // TODO: Method 'GetAnnotationObjects'
    // TODO: Method 'GetAnnotationTypes'
};
// --------------------------------------------------------
// Type: ITransformProvider2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITransformProvider2 = *opaque{
    // TODO: Method 'Zoom'
    // TODO: Method 'get_CanZoom'
    // TODO: Method 'get_ZoomLevel'
    // TODO: Method 'get_ZoomMinimum'
    // TODO: Method 'get_ZoomMaximum'
    // TODO: Method 'ZoomByUnit'
};
// --------------------------------------------------------
// Type: IDragProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDragProvider = *opaque{
    // TODO: Method 'get_IsGrabbed'
    // TODO: Method 'get_DropEffect'
    // TODO: Method 'get_DropEffects'
    // TODO: Method 'GetGrabbedItems'
};
// --------------------------------------------------------
// Type: IDropTargetProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDropTargetProvider = *opaque{
    // TODO: Method 'get_DropTargetEffect'
    // TODO: Method 'get_DropTargetEffects'
};
// --------------------------------------------------------
// Type: ITextRangeProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextRangeProvider = *opaque{
    // TODO: Method 'Clone'
    // TODO: Method 'Compare'
    // TODO: Method 'CompareEndpoints'
    // TODO: Method 'ExpandToEnclosingUnit'
    // TODO: Method 'FindAttribute'
    // TODO: Method 'FindTextA'
    // TODO: Method 'GetAttributeValue'
    // TODO: Method 'GetBoundingRectangles'
    // TODO: Method 'GetEnclosingElement'
    // TODO: Method 'GetText'
    // TODO: Method 'Move'
    // TODO: Method 'MoveEndpointByUnit'
    // TODO: Method 'MoveEndpointByRange'
    // TODO: Method 'Select'
    // TODO: Method 'AddToSelection'
    // TODO: Method 'RemoveFromSelection'
    // TODO: Method 'ScrollIntoView'
    // TODO: Method 'GetChildren'
};
// --------------------------------------------------------
// Type: ITextProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextProvider = *opaque{
    // TODO: Method 'GetSelection'
    // TODO: Method 'GetVisibleRanges'
    // TODO: Method 'RangeFromChild'
    // TODO: Method 'RangeFromPoint'
    // TODO: Method 'get_DocumentRange'
    // TODO: Method 'get_SupportedTextSelection'
};
// --------------------------------------------------------
// Type: ITextProvider2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextProvider2 = *opaque{
    // TODO: Method 'RangeFromAnnotation'
    // TODO: Method 'GetCaretRange'
};
// --------------------------------------------------------
// Type: ITextEditProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextEditProvider = *opaque{
    // TODO: Method 'GetActiveComposition'
    // TODO: Method 'GetConversionTarget'
};
// --------------------------------------------------------
// Type: ITextRangeProvider2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextRangeProvider2 = *opaque{
    // TODO: Method 'ShowContextMenu'
};
// --------------------------------------------------------
// Type: ITextChildProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ITextChildProvider = *opaque{
    // TODO: Method 'get_TextContainer'
    // TODO: Method 'get_TextRange'
};
// --------------------------------------------------------
// Type: ICustomNavigationProvider
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ICustomNavigationProvider = *opaque{
    // TODO: Method 'Navigate'
};
// --------------------------------------------------------
// Type: IUIAutomationPatternInstance
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationPatternInstance = *opaque{
    // TODO: Method 'GetProperty'
    // TODO: Method 'CallMethod'
};
// --------------------------------------------------------
// Type: IUIAutomationPatternHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationPatternHandler = *opaque{
    // TODO: Method 'CreateClientWrapper'
    // TODO: Method 'Dispatch'
};
// --------------------------------------------------------
// Type: IUIAutomationRegistrar
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationRegistrar = *opaque{
    // TODO: Method 'RegisterProperty'
    // TODO: Method 'RegisterEvent'
    // TODO: Method 'RegisterPattern'
};
// --------------------------------------------------------
// Type: HUIANODE__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HUIANODE__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HUIAPATTERNOBJECT__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HUIAPATTERNOBJECT__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HUIATEXTRANGE__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HUIATEXTRANGE__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: HUIAEVENT__
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const HUIAEVENT__ = extern struct {
    unused: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: TreeScope
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TreeScope = *opaque{
};
// --------------------------------------------------------
// Type: ConditionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ConditionType = *opaque{
};
// --------------------------------------------------------
// Type: UiaCondition
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaCondition = extern struct {
    ConditionType: Windows.Win32.WindowsAccessibility.ConditionType,
};
// --------------------------------------------------------
// Type: PropertyConditionFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PropertyConditionFlags = *opaque{
};
// --------------------------------------------------------
// Type: UiaPropertyCondition
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaPropertyCondition = extern struct {
    ConditionType: Windows.Win32.WindowsAccessibility.ConditionType,
    PropertyId: {"kind":"Int32"},
    Value: Windows.Win32.Automation.VARIANT,
    Flags: Windows.Win32.WindowsAccessibility.PropertyConditionFlags,
};
// --------------------------------------------------------
// Type: UiaAndOrCondition
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaAndOrCondition = extern struct {
    ConditionType: Windows.Win32.WindowsAccessibility.ConditionType,
    ppConditions: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCondition}},
    cConditions: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: UiaNotCondition
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaNotCondition = extern struct {
    ConditionType: Windows.Win32.WindowsAccessibility.ConditionType,
    pCondition: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCondition},
};
// --------------------------------------------------------
// Type: AutomationElementMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AutomationElementMode = *opaque{
};
// --------------------------------------------------------
// Type: UiaCacheRequest
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaCacheRequest = extern struct {
    pViewCondition: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCondition},
    Scope: Windows.Win32.WindowsAccessibility.TreeScope,
    pProperties: {"kind""Ptr","child":{"kind":"Int32"}},
    cProperties: {"kind":"Int32"},
    pPatterns: {"kind""Ptr","child":{"kind":"Int32"}},
    cPatterns: {"kind":"Int32"},
    automationElementMode: Windows.Win32.WindowsAccessibility.AutomationElementMode,
};
// --------------------------------------------------------
// Type: NormalizeState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NormalizeState = *opaque{
};
// --------------------------------------------------------
// Type: TreeTraversalOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TreeTraversalOptions = *opaque{
};
// --------------------------------------------------------
// Type: UiaFindParams
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaFindParams = extern struct {
    MaxDepth: {"kind":"Int32"},
    FindFirst: Windows.Win32.SystemServices.BOOL,
    ExcludeRoot: Windows.Win32.SystemServices.BOOL,
    pFindCondition: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCondition},
};
// --------------------------------------------------------
// Type: ProviderType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ProviderType = *opaque{
};
// --------------------------------------------------------
// Type: UiaProviderCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const UiaProviderCallback = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: AutomationIdentifierType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AutomationIdentifierType = *opaque{
};
// --------------------------------------------------------
// Type: EventArgsType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EventArgsType = *opaque{
};
// --------------------------------------------------------
// Type: AsyncContentLoadedState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AsyncContentLoadedState = *opaque{
};
// --------------------------------------------------------
// Type: UiaEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: UiaPropertyChangedEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaPropertyChangedEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
    PropertyId: {"kind":"Int32"},
    OldValue: Windows.Win32.Automation.VARIANT,
    NewValue: Windows.Win32.Automation.VARIANT,
};
// --------------------------------------------------------
// Type: UiaStructureChangedEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaStructureChangedEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
    StructureChangeType: Windows.Win32.WindowsAccessibility.StructureChangeType,
    pRuntimeId: {"kind""Ptr","child":{"kind":"Int32"}},
    cRuntimeIdLen: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: UiaTextEditTextChangedEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaTextEditTextChangedEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
    TextEditChangeType: Windows.Win32.WindowsAccessibility.TextEditChangeType,
    pTextChange: {"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY},
};
// --------------------------------------------------------
// Type: UiaChangesEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaChangesEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
    EventIdCount: {"kind":"Int32"},
    pUiaChanges: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaChangeInfo},
};
// --------------------------------------------------------
// Type: UiaAsyncContentLoadedEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaAsyncContentLoadedEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
    AsyncContentLoadedState: Windows.Win32.WindowsAccessibility.AsyncContentLoadedState,
    PercentComplete: {"kind":"Double"},
};
// --------------------------------------------------------
// Type: UiaWindowClosedEventArgs
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const UiaWindowClosedEventArgs = extern struct {
    Type: Windows.Win32.WindowsAccessibility.EventArgsType,
    EventId: {"kind":"Int32"},
    pRuntimeId: {"kind""Ptr","child":{"kind":"Int32"}},
    cRuntimeIdLen: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: UiaEventCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const UiaEventCallback = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: CUIAutomation
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CUIAutomation = opaque {
};
// --------------------------------------------------------
// Type: CUIAutomation8
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CUIAutomation8 = opaque {
};
// --------------------------------------------------------
// Type: ExtendedProperty
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ExtendedProperty = extern struct {
    PropertyName: Windows.Win32.Automation.BSTR,
    PropertyValue: Windows.Win32.Automation.BSTR,
};
// --------------------------------------------------------
// Type: IUIAutomationElement
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement = *opaque{
    // TODO: Method 'SetFocus'
    // TODO: Method 'GetRuntimeId'
    // TODO: Method 'FindFirst'
    // TODO: Method 'FindAll'
    // TODO: Method 'FindFirstBuildCache'
    // TODO: Method 'FindAllBuildCache'
    // TODO: Method 'BuildUpdatedCache'
    // TODO: Method 'GetCurrentPropertyValue'
    // TODO: Method 'GetCurrentPropertyValueEx'
    // TODO: Method 'GetCachedPropertyValue'
    // TODO: Method 'GetCachedPropertyValueEx'
    // TODO: Method 'GetCurrentPatternAs'
    // TODO: Method 'GetCachedPatternAs'
    // TODO: Method 'GetCurrentPattern'
    // TODO: Method 'GetCachedPattern'
    // TODO: Method 'GetCachedParent'
    // TODO: Method 'GetCachedChildren'
    // TODO: Method 'get_CurrentProcessId'
    // TODO: Method 'get_CurrentControlType'
    // TODO: Method 'get_CurrentLocalizedControlType'
    // TODO: Method 'get_CurrentName'
    // TODO: Method 'get_CurrentAcceleratorKey'
    // TODO: Method 'get_CurrentAccessKey'
    // TODO: Method 'get_CurrentHasKeyboardFocus'
    // TODO: Method 'get_CurrentIsKeyboardFocusable'
    // TODO: Method 'get_CurrentIsEnabled'
    // TODO: Method 'get_CurrentAutomationId'
    // TODO: Method 'get_CurrentClassName'
    // TODO: Method 'get_CurrentHelpText'
    // TODO: Method 'get_CurrentCulture'
    // TODO: Method 'get_CurrentIsControlElement'
    // TODO: Method 'get_CurrentIsContentElement'
    // TODO: Method 'get_CurrentIsPassword'
    // TODO: Method 'get_CurrentNativeWindowHandle'
    // TODO: Method 'get_CurrentItemType'
    // TODO: Method 'get_CurrentIsOffscreen'
    // TODO: Method 'get_CurrentOrientation'
    // TODO: Method 'get_CurrentFrameworkId'
    // TODO: Method 'get_CurrentIsRequiredForForm'
    // TODO: Method 'get_CurrentItemStatus'
    // TODO: Method 'get_CurrentBoundingRectangle'
    // TODO: Method 'get_CurrentLabeledBy'
    // TODO: Method 'get_CurrentAriaRole'
    // TODO: Method 'get_CurrentAriaProperties'
    // TODO: Method 'get_CurrentIsDataValidForForm'
    // TODO: Method 'get_CurrentControllerFor'
    // TODO: Method 'get_CurrentDescribedBy'
    // TODO: Method 'get_CurrentFlowsTo'
    // TODO: Method 'get_CurrentProviderDescription'
    // TODO: Method 'get_CachedProcessId'
    // TODO: Method 'get_CachedControlType'
    // TODO: Method 'get_CachedLocalizedControlType'
    // TODO: Method 'get_CachedName'
    // TODO: Method 'get_CachedAcceleratorKey'
    // TODO: Method 'get_CachedAccessKey'
    // TODO: Method 'get_CachedHasKeyboardFocus'
    // TODO: Method 'get_CachedIsKeyboardFocusable'
    // TODO: Method 'get_CachedIsEnabled'
    // TODO: Method 'get_CachedAutomationId'
    // TODO: Method 'get_CachedClassName'
    // TODO: Method 'get_CachedHelpText'
    // TODO: Method 'get_CachedCulture'
    // TODO: Method 'get_CachedIsControlElement'
    // TODO: Method 'get_CachedIsContentElement'
    // TODO: Method 'get_CachedIsPassword'
    // TODO: Method 'get_CachedNativeWindowHandle'
    // TODO: Method 'get_CachedItemType'
    // TODO: Method 'get_CachedIsOffscreen'
    // TODO: Method 'get_CachedOrientation'
    // TODO: Method 'get_CachedFrameworkId'
    // TODO: Method 'get_CachedIsRequiredForForm'
    // TODO: Method 'get_CachedItemStatus'
    // TODO: Method 'get_CachedBoundingRectangle'
    // TODO: Method 'get_CachedLabeledBy'
    // TODO: Method 'get_CachedAriaRole'
    // TODO: Method 'get_CachedAriaProperties'
    // TODO: Method 'get_CachedIsDataValidForForm'
    // TODO: Method 'get_CachedControllerFor'
    // TODO: Method 'get_CachedDescribedBy'
    // TODO: Method 'get_CachedFlowsTo'
    // TODO: Method 'get_CachedProviderDescription'
    // TODO: Method 'GetClickablePoint'
};
// --------------------------------------------------------
// Type: IUIAutomationElementArray
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElementArray = *opaque{
    // TODO: Method 'get_Length'
    // TODO: Method 'GetElement'
};
// --------------------------------------------------------
// Type: IUIAutomationCondition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationCondition = *opaque{
};
// --------------------------------------------------------
// Type: IUIAutomationBoolCondition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationBoolCondition = *opaque{
    // TODO: Method 'get_BooleanValue'
};
// --------------------------------------------------------
// Type: IUIAutomationPropertyCondition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationPropertyCondition = *opaque{
    // TODO: Method 'get_PropertyId'
    // TODO: Method 'get_PropertyValue'
    // TODO: Method 'get_PropertyConditionFlags'
};
// --------------------------------------------------------
// Type: IUIAutomationAndCondition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationAndCondition = *opaque{
    // TODO: Method 'get_ChildCount'
    // TODO: Method 'GetChildrenAsNativeArray'
    // TODO: Method 'GetChildren'
};
// --------------------------------------------------------
// Type: IUIAutomationOrCondition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationOrCondition = *opaque{
    // TODO: Method 'get_ChildCount'
    // TODO: Method 'GetChildrenAsNativeArray'
    // TODO: Method 'GetChildren'
};
// --------------------------------------------------------
// Type: IUIAutomationNotCondition
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationNotCondition = *opaque{
    // TODO: Method 'GetChild'
};
// --------------------------------------------------------
// Type: IUIAutomationCacheRequest
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationCacheRequest = *opaque{
    // TODO: Method 'AddProperty'
    // TODO: Method 'AddPattern'
    // TODO: Method 'Clone'
    // TODO: Method 'get_TreeScope'
    // TODO: Method 'put_TreeScope'
    // TODO: Method 'get_TreeFilter'
    // TODO: Method 'put_TreeFilter'
    // TODO: Method 'get_AutomationElementMode'
    // TODO: Method 'put_AutomationElementMode'
};
// --------------------------------------------------------
// Type: IUIAutomationTreeWalker
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTreeWalker = *opaque{
    // TODO: Method 'GetParentElement'
    // TODO: Method 'GetFirstChildElement'
    // TODO: Method 'GetLastChildElement'
    // TODO: Method 'GetNextSiblingElement'
    // TODO: Method 'GetPreviousSiblingElement'
    // TODO: Method 'NormalizeElement'
    // TODO: Method 'GetParentElementBuildCache'
    // TODO: Method 'GetFirstChildElementBuildCache'
    // TODO: Method 'GetLastChildElementBuildCache'
    // TODO: Method 'GetNextSiblingElementBuildCache'
    // TODO: Method 'GetPreviousSiblingElementBuildCache'
    // TODO: Method 'NormalizeElementBuildCache'
    // TODO: Method 'get_Condition'
};
// --------------------------------------------------------
// Type: IUIAutomationEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationEventHandler = *opaque{
    // TODO: Method 'HandleAutomationEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationPropertyChangedEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationPropertyChangedEventHandler = *opaque{
    // TODO: Method 'HandlePropertyChangedEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationStructureChangedEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationStructureChangedEventHandler = *opaque{
    // TODO: Method 'HandleStructureChangedEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationFocusChangedEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationFocusChangedEventHandler = *opaque{
    // TODO: Method 'HandleFocusChangedEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationTextEditTextChangedEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextEditTextChangedEventHandler = *opaque{
    // TODO: Method 'HandleTextEditTextChangedEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationChangesEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationChangesEventHandler = *opaque{
    // TODO: Method 'HandleChangesEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationNotificationEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationNotificationEventHandler = *opaque{
    // TODO: Method 'HandleNotificationEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationInvokePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationInvokePattern = *opaque{
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IUIAutomationDockPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationDockPattern = *opaque{
    // TODO: Method 'SetDockPosition'
    // TODO: Method 'get_CurrentDockPosition'
    // TODO: Method 'get_CachedDockPosition'
};
// --------------------------------------------------------
// Type: IUIAutomationExpandCollapsePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationExpandCollapsePattern = *opaque{
    // TODO: Method 'Expand'
    // TODO: Method 'Collapse'
    // TODO: Method 'get_CurrentExpandCollapseState'
    // TODO: Method 'get_CachedExpandCollapseState'
};
// --------------------------------------------------------
// Type: IUIAutomationGridPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationGridPattern = *opaque{
    // TODO: Method 'GetItem'
    // TODO: Method 'get_CurrentRowCount'
    // TODO: Method 'get_CurrentColumnCount'
    // TODO: Method 'get_CachedRowCount'
    // TODO: Method 'get_CachedColumnCount'
};
// --------------------------------------------------------
// Type: IUIAutomationGridItemPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationGridItemPattern = *opaque{
    // TODO: Method 'get_CurrentContainingGrid'
    // TODO: Method 'get_CurrentRow'
    // TODO: Method 'get_CurrentColumn'
    // TODO: Method 'get_CurrentRowSpan'
    // TODO: Method 'get_CurrentColumnSpan'
    // TODO: Method 'get_CachedContainingGrid'
    // TODO: Method 'get_CachedRow'
    // TODO: Method 'get_CachedColumn'
    // TODO: Method 'get_CachedRowSpan'
    // TODO: Method 'get_CachedColumnSpan'
};
// --------------------------------------------------------
// Type: IUIAutomationMultipleViewPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationMultipleViewPattern = *opaque{
    // TODO: Method 'GetViewName'
    // TODO: Method 'SetCurrentView'
    // TODO: Method 'get_CurrentCurrentView'
    // TODO: Method 'GetCurrentSupportedViews'
    // TODO: Method 'get_CachedCurrentView'
    // TODO: Method 'GetCachedSupportedViews'
};
// --------------------------------------------------------
// Type: IUIAutomationObjectModelPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationObjectModelPattern = *opaque{
    // TODO: Method 'GetUnderlyingObjectModel'
};
// --------------------------------------------------------
// Type: IUIAutomationRangeValuePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationRangeValuePattern = *opaque{
    // TODO: Method 'SetValue'
    // TODO: Method 'get_CurrentValue'
    // TODO: Method 'get_CurrentIsReadOnly'
    // TODO: Method 'get_CurrentMaximum'
    // TODO: Method 'get_CurrentMinimum'
    // TODO: Method 'get_CurrentLargeChange'
    // TODO: Method 'get_CurrentSmallChange'
    // TODO: Method 'get_CachedValue'
    // TODO: Method 'get_CachedIsReadOnly'
    // TODO: Method 'get_CachedMaximum'
    // TODO: Method 'get_CachedMinimum'
    // TODO: Method 'get_CachedLargeChange'
    // TODO: Method 'get_CachedSmallChange'
};
// --------------------------------------------------------
// Type: IUIAutomationScrollPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationScrollPattern = *opaque{
    // TODO: Method 'Scroll'
    // TODO: Method 'SetScrollPercent'
    // TODO: Method 'get_CurrentHorizontalScrollPercent'
    // TODO: Method 'get_CurrentVerticalScrollPercent'
    // TODO: Method 'get_CurrentHorizontalViewSize'
    // TODO: Method 'get_CurrentVerticalViewSize'
    // TODO: Method 'get_CurrentHorizontallyScrollable'
    // TODO: Method 'get_CurrentVerticallyScrollable'
    // TODO: Method 'get_CachedHorizontalScrollPercent'
    // TODO: Method 'get_CachedVerticalScrollPercent'
    // TODO: Method 'get_CachedHorizontalViewSize'
    // TODO: Method 'get_CachedVerticalViewSize'
    // TODO: Method 'get_CachedHorizontallyScrollable'
    // TODO: Method 'get_CachedVerticallyScrollable'
};
// --------------------------------------------------------
// Type: IUIAutomationScrollItemPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationScrollItemPattern = *opaque{
    // TODO: Method 'ScrollIntoView'
};
// --------------------------------------------------------
// Type: IUIAutomationSelectionPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationSelectionPattern = *opaque{
    // TODO: Method 'GetCurrentSelection'
    // TODO: Method 'get_CurrentCanSelectMultiple'
    // TODO: Method 'get_CurrentIsSelectionRequired'
    // TODO: Method 'GetCachedSelection'
    // TODO: Method 'get_CachedCanSelectMultiple'
    // TODO: Method 'get_CachedIsSelectionRequired'
};
// --------------------------------------------------------
// Type: IUIAutomationSelectionPattern2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationSelectionPattern2 = *opaque{
    // TODO: Method 'get_CurrentFirstSelectedItem'
    // TODO: Method 'get_CurrentLastSelectedItem'
    // TODO: Method 'get_CurrentCurrentSelectedItem'
    // TODO: Method 'get_CurrentItemCount'
    // TODO: Method 'get_CachedFirstSelectedItem'
    // TODO: Method 'get_CachedLastSelectedItem'
    // TODO: Method 'get_CachedCurrentSelectedItem'
    // TODO: Method 'get_CachedItemCount'
};
// --------------------------------------------------------
// Type: IUIAutomationSelectionItemPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationSelectionItemPattern = *opaque{
    // TODO: Method 'Select'
    // TODO: Method 'AddToSelection'
    // TODO: Method 'RemoveFromSelection'
    // TODO: Method 'get_CurrentIsSelected'
    // TODO: Method 'get_CurrentSelectionContainer'
    // TODO: Method 'get_CachedIsSelected'
    // TODO: Method 'get_CachedSelectionContainer'
};
// --------------------------------------------------------
// Type: IUIAutomationSynchronizedInputPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationSynchronizedInputPattern = *opaque{
    // TODO: Method 'StartListening'
    // TODO: Method 'Cancel'
};
// --------------------------------------------------------
// Type: IUIAutomationTablePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTablePattern = *opaque{
    // TODO: Method 'GetCurrentRowHeaders'
    // TODO: Method 'GetCurrentColumnHeaders'
    // TODO: Method 'get_CurrentRowOrColumnMajor'
    // TODO: Method 'GetCachedRowHeaders'
    // TODO: Method 'GetCachedColumnHeaders'
    // TODO: Method 'get_CachedRowOrColumnMajor'
};
// --------------------------------------------------------
// Type: IUIAutomationTableItemPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTableItemPattern = *opaque{
    // TODO: Method 'GetCurrentRowHeaderItems'
    // TODO: Method 'GetCurrentColumnHeaderItems'
    // TODO: Method 'GetCachedRowHeaderItems'
    // TODO: Method 'GetCachedColumnHeaderItems'
};
// --------------------------------------------------------
// Type: IUIAutomationTogglePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTogglePattern = *opaque{
    // TODO: Method 'Toggle'
    // TODO: Method 'get_CurrentToggleState'
    // TODO: Method 'get_CachedToggleState'
};
// --------------------------------------------------------
// Type: IUIAutomationTransformPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTransformPattern = *opaque{
    // TODO: Method 'Move'
    // TODO: Method 'Resize'
    // TODO: Method 'Rotate'
    // TODO: Method 'get_CurrentCanMove'
    // TODO: Method 'get_CurrentCanResize'
    // TODO: Method 'get_CurrentCanRotate'
    // TODO: Method 'get_CachedCanMove'
    // TODO: Method 'get_CachedCanResize'
    // TODO: Method 'get_CachedCanRotate'
};
// --------------------------------------------------------
// Type: IUIAutomationValuePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationValuePattern = *opaque{
    // TODO: Method 'SetValue'
    // TODO: Method 'get_CurrentValue'
    // TODO: Method 'get_CurrentIsReadOnly'
    // TODO: Method 'get_CachedValue'
    // TODO: Method 'get_CachedIsReadOnly'
};
// --------------------------------------------------------
// Type: IUIAutomationWindowPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationWindowPattern = *opaque{
    // TODO: Method 'Close'
    // TODO: Method 'WaitForInputIdle'
    // TODO: Method 'SetWindowVisualState'
    // TODO: Method 'get_CurrentCanMaximize'
    // TODO: Method 'get_CurrentCanMinimize'
    // TODO: Method 'get_CurrentIsModal'
    // TODO: Method 'get_CurrentIsTopmost'
    // TODO: Method 'get_CurrentWindowVisualState'
    // TODO: Method 'get_CurrentWindowInteractionState'
    // TODO: Method 'get_CachedCanMaximize'
    // TODO: Method 'get_CachedCanMinimize'
    // TODO: Method 'get_CachedIsModal'
    // TODO: Method 'get_CachedIsTopmost'
    // TODO: Method 'get_CachedWindowVisualState'
    // TODO: Method 'get_CachedWindowInteractionState'
};
// --------------------------------------------------------
// Type: IUIAutomationTextRange
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextRange = *opaque{
    // TODO: Method 'Clone'
    // TODO: Method 'Compare'
    // TODO: Method 'CompareEndpoints'
    // TODO: Method 'ExpandToEnclosingUnit'
    // TODO: Method 'FindAttribute'
    // TODO: Method 'FindTextA'
    // TODO: Method 'GetAttributeValue'
    // TODO: Method 'GetBoundingRectangles'
    // TODO: Method 'GetEnclosingElement'
    // TODO: Method 'GetText'
    // TODO: Method 'Move'
    // TODO: Method 'MoveEndpointByUnit'
    // TODO: Method 'MoveEndpointByRange'
    // TODO: Method 'Select'
    // TODO: Method 'AddToSelection'
    // TODO: Method 'RemoveFromSelection'
    // TODO: Method 'ScrollIntoView'
    // TODO: Method 'GetChildren'
};
// --------------------------------------------------------
// Type: IUIAutomationTextRange2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextRange2 = *opaque{
    // TODO: Method 'ShowContextMenu'
};
// --------------------------------------------------------
// Type: IUIAutomationTextRange3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextRange3 = *opaque{
    // TODO: Method 'GetEnclosingElementBuildCache'
    // TODO: Method 'GetChildrenBuildCache'
    // TODO: Method 'GetAttributeValues'
};
// --------------------------------------------------------
// Type: IUIAutomationTextRangeArray
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextRangeArray = *opaque{
    // TODO: Method 'get_Length'
    // TODO: Method 'GetElement'
};
// --------------------------------------------------------
// Type: IUIAutomationTextPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextPattern = *opaque{
    // TODO: Method 'RangeFromPoint'
    // TODO: Method 'RangeFromChild'
    // TODO: Method 'GetSelection'
    // TODO: Method 'GetVisibleRanges'
    // TODO: Method 'get_DocumentRange'
    // TODO: Method 'get_SupportedTextSelection'
};
// --------------------------------------------------------
// Type: IUIAutomationTextPattern2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextPattern2 = *opaque{
    // TODO: Method 'RangeFromAnnotation'
    // TODO: Method 'GetCaretRange'
};
// --------------------------------------------------------
// Type: IUIAutomationTextEditPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextEditPattern = *opaque{
    // TODO: Method 'GetActiveComposition'
    // TODO: Method 'GetConversionTarget'
};
// --------------------------------------------------------
// Type: IUIAutomationCustomNavigationPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationCustomNavigationPattern = *opaque{
    // TODO: Method 'Navigate'
};
// --------------------------------------------------------
// Type: IUIAutomationActiveTextPositionChangedEventHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationActiveTextPositionChangedEventHandler = *opaque{
    // TODO: Method 'HandleActiveTextPositionChangedEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationLegacyIAccessiblePattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationLegacyIAccessiblePattern = *opaque{
    // TODO: Method 'Select'
    // TODO: Method 'DoDefaultAction'
    // TODO: Method 'SetValue'
    // TODO: Method 'get_CurrentChildId'
    // TODO: Method 'get_CurrentName'
    // TODO: Method 'get_CurrentValue'
    // TODO: Method 'get_CurrentDescription'
    // TODO: Method 'get_CurrentRole'
    // TODO: Method 'get_CurrentState'
    // TODO: Method 'get_CurrentHelp'
    // TODO: Method 'get_CurrentKeyboardShortcut'
    // TODO: Method 'GetCurrentSelection'
    // TODO: Method 'get_CurrentDefaultAction'
    // TODO: Method 'get_CachedChildId'
    // TODO: Method 'get_CachedName'
    // TODO: Method 'get_CachedValue'
    // TODO: Method 'get_CachedDescription'
    // TODO: Method 'get_CachedRole'
    // TODO: Method 'get_CachedState'
    // TODO: Method 'get_CachedHelp'
    // TODO: Method 'get_CachedKeyboardShortcut'
    // TODO: Method 'GetCachedSelection'
    // TODO: Method 'get_CachedDefaultAction'
    // TODO: Method 'GetIAccessible'
};
// --------------------------------------------------------
// Type: IUIAutomationItemContainerPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationItemContainerPattern = *opaque{
    // TODO: Method 'FindItemByProperty'
};
// --------------------------------------------------------
// Type: IUIAutomationVirtualizedItemPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationVirtualizedItemPattern = *opaque{
    // TODO: Method 'Realize'
};
// --------------------------------------------------------
// Type: IUIAutomationAnnotationPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationAnnotationPattern = *opaque{
    // TODO: Method 'get_CurrentAnnotationTypeId'
    // TODO: Method 'get_CurrentAnnotationTypeName'
    // TODO: Method 'get_CurrentAuthor'
    // TODO: Method 'get_CurrentDateTime'
    // TODO: Method 'get_CurrentTarget'
    // TODO: Method 'get_CachedAnnotationTypeId'
    // TODO: Method 'get_CachedAnnotationTypeName'
    // TODO: Method 'get_CachedAuthor'
    // TODO: Method 'get_CachedDateTime'
    // TODO: Method 'get_CachedTarget'
};
// --------------------------------------------------------
// Type: IUIAutomationStylesPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationStylesPattern = *opaque{
    // TODO: Method 'get_CurrentStyleId'
    // TODO: Method 'get_CurrentStyleName'
    // TODO: Method 'get_CurrentFillColor'
    // TODO: Method 'get_CurrentFillPatternStyle'
    // TODO: Method 'get_CurrentShape'
    // TODO: Method 'get_CurrentFillPatternColor'
    // TODO: Method 'get_CurrentExtendedProperties'
    // TODO: Method 'GetCurrentExtendedPropertiesAsArray'
    // TODO: Method 'get_CachedStyleId'
    // TODO: Method 'get_CachedStyleName'
    // TODO: Method 'get_CachedFillColor'
    // TODO: Method 'get_CachedFillPatternStyle'
    // TODO: Method 'get_CachedShape'
    // TODO: Method 'get_CachedFillPatternColor'
    // TODO: Method 'get_CachedExtendedProperties'
    // TODO: Method 'GetCachedExtendedPropertiesAsArray'
};
// --------------------------------------------------------
// Type: IUIAutomationSpreadsheetPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationSpreadsheetPattern = *opaque{
    // TODO: Method 'GetItemByName'
};
// --------------------------------------------------------
// Type: IUIAutomationSpreadsheetItemPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationSpreadsheetItemPattern = *opaque{
    // TODO: Method 'get_CurrentFormula'
    // TODO: Method 'GetCurrentAnnotationObjects'
    // TODO: Method 'GetCurrentAnnotationTypes'
    // TODO: Method 'get_CachedFormula'
    // TODO: Method 'GetCachedAnnotationObjects'
    // TODO: Method 'GetCachedAnnotationTypes'
};
// --------------------------------------------------------
// Type: IUIAutomationTransformPattern2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTransformPattern2 = *opaque{
    // TODO: Method 'Zoom'
    // TODO: Method 'ZoomByUnit'
    // TODO: Method 'get_CurrentCanZoom'
    // TODO: Method 'get_CachedCanZoom'
    // TODO: Method 'get_CurrentZoomLevel'
    // TODO: Method 'get_CachedZoomLevel'
    // TODO: Method 'get_CurrentZoomMinimum'
    // TODO: Method 'get_CachedZoomMinimum'
    // TODO: Method 'get_CurrentZoomMaximum'
    // TODO: Method 'get_CachedZoomMaximum'
};
// --------------------------------------------------------
// Type: IUIAutomationTextChildPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationTextChildPattern = *opaque{
    // TODO: Method 'get_TextContainer'
    // TODO: Method 'get_TextRange'
};
// --------------------------------------------------------
// Type: IUIAutomationDragPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationDragPattern = *opaque{
    // TODO: Method 'get_CurrentIsGrabbed'
    // TODO: Method 'get_CachedIsGrabbed'
    // TODO: Method 'get_CurrentDropEffect'
    // TODO: Method 'get_CachedDropEffect'
    // TODO: Method 'get_CurrentDropEffects'
    // TODO: Method 'get_CachedDropEffects'
    // TODO: Method 'GetCurrentGrabbedItems'
    // TODO: Method 'GetCachedGrabbedItems'
};
// --------------------------------------------------------
// Type: IUIAutomationDropTargetPattern
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationDropTargetPattern = *opaque{
    // TODO: Method 'get_CurrentDropTargetEffect'
    // TODO: Method 'get_CachedDropTargetEffect'
    // TODO: Method 'get_CurrentDropTargetEffects'
    // TODO: Method 'get_CachedDropTargetEffects'
};
// --------------------------------------------------------
// Type: IUIAutomationElement2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement2 = *opaque{
    // TODO: Method 'get_CurrentOptimizeForVisualContent'
    // TODO: Method 'get_CachedOptimizeForVisualContent'
    // TODO: Method 'get_CurrentLiveSetting'
    // TODO: Method 'get_CachedLiveSetting'
    // TODO: Method 'get_CurrentFlowsFrom'
    // TODO: Method 'get_CachedFlowsFrom'
};
// --------------------------------------------------------
// Type: IUIAutomationElement3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement3 = *opaque{
    // TODO: Method 'ShowContextMenu'
    // TODO: Method 'get_CurrentIsPeripheral'
    // TODO: Method 'get_CachedIsPeripheral'
};
// --------------------------------------------------------
// Type: IUIAutomationElement4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement4 = *opaque{
    // TODO: Method 'get_CurrentPositionInSet'
    // TODO: Method 'get_CurrentSizeOfSet'
    // TODO: Method 'get_CurrentLevel'
    // TODO: Method 'get_CurrentAnnotationTypes'
    // TODO: Method 'get_CurrentAnnotationObjects'
    // TODO: Method 'get_CachedPositionInSet'
    // TODO: Method 'get_CachedSizeOfSet'
    // TODO: Method 'get_CachedLevel'
    // TODO: Method 'get_CachedAnnotationTypes'
    // TODO: Method 'get_CachedAnnotationObjects'
};
// --------------------------------------------------------
// Type: IUIAutomationElement5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement5 = *opaque{
    // TODO: Method 'get_CurrentLandmarkType'
    // TODO: Method 'get_CurrentLocalizedLandmarkType'
    // TODO: Method 'get_CachedLandmarkType'
    // TODO: Method 'get_CachedLocalizedLandmarkType'
};
// --------------------------------------------------------
// Type: IUIAutomationElement6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement6 = *opaque{
    // TODO: Method 'get_CurrentFullDescription'
    // TODO: Method 'get_CachedFullDescription'
};
// --------------------------------------------------------
// Type: IUIAutomationElement7
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement7 = *opaque{
    // TODO: Method 'FindFirstWithOptions'
    // TODO: Method 'FindAllWithOptions'
    // TODO: Method 'FindFirstWithOptionsBuildCache'
    // TODO: Method 'FindAllWithOptionsBuildCache'
    // TODO: Method 'GetCurrentMetadataValue'
};
// --------------------------------------------------------
// Type: IUIAutomationElement8
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement8 = *opaque{
    // TODO: Method 'get_CurrentHeadingLevel'
    // TODO: Method 'get_CachedHeadingLevel'
};
// --------------------------------------------------------
// Type: IUIAutomationElement9
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationElement9 = *opaque{
    // TODO: Method 'get_CurrentIsDialog'
    // TODO: Method 'get_CachedIsDialog'
};
// --------------------------------------------------------
// Type: IUIAutomationProxyFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationProxyFactory = *opaque{
    // TODO: Method 'CreateProvider'
    // TODO: Method 'get_ProxyFactoryId'
};
// --------------------------------------------------------
// Type: IUIAutomationProxyFactoryEntry
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationProxyFactoryEntry = *opaque{
    // TODO: Method 'get_ProxyFactory'
    // TODO: Method 'get_ClassName'
    // TODO: Method 'get_ImageName'
    // TODO: Method 'get_AllowSubstringMatch'
    // TODO: Method 'get_CanCheckBaseClass'
    // TODO: Method 'get_NeedsAdviseEvents'
    // TODO: Method 'put_ClassName'
    // TODO: Method 'put_ImageName'
    // TODO: Method 'put_AllowSubstringMatch'
    // TODO: Method 'put_CanCheckBaseClass'
    // TODO: Method 'put_NeedsAdviseEvents'
    // TODO: Method 'SetWinEventsForAutomationEvent'
    // TODO: Method 'GetWinEventsForAutomationEvent'
};
// --------------------------------------------------------
// Type: IUIAutomationProxyFactoryMapping
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationProxyFactoryMapping = *opaque{
    // TODO: Method 'get_Count'
    // TODO: Method 'GetTable'
    // TODO: Method 'GetEntry'
    // TODO: Method 'SetTable'
    // TODO: Method 'InsertEntries'
    // TODO: Method 'InsertEntry'
    // TODO: Method 'RemoveEntry'
    // TODO: Method 'ClearTable'
    // TODO: Method 'RestoreDefaultTable'
};
// --------------------------------------------------------
// Type: IUIAutomationEventHandlerGroup
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomationEventHandlerGroup = *opaque{
    // TODO: Method 'AddActiveTextPositionChangedEventHandler'
    // TODO: Method 'AddAutomationEventHandler'
    // TODO: Method 'AddChangesEventHandler'
    // TODO: Method 'AddNotificationEventHandler'
    // TODO: Method 'AddPropertyChangedEventHandler'
    // TODO: Method 'AddStructureChangedEventHandler'
    // TODO: Method 'AddTextEditTextChangedEventHandler'
};
// --------------------------------------------------------
// Type: IUIAutomation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomation = *opaque{
    // TODO: Method 'CompareElements'
    // TODO: Method 'CompareRuntimeIds'
    // TODO: Method 'GetRootElement'
    // TODO: Method 'ElementFromHandle'
    // TODO: Method 'ElementFromPoint'
    // TODO: Method 'GetFocusedElement'
    // TODO: Method 'GetRootElementBuildCache'
    // TODO: Method 'ElementFromHandleBuildCache'
    // TODO: Method 'ElementFromPointBuildCache'
    // TODO: Method 'GetFocusedElementBuildCache'
    // TODO: Method 'CreateTreeWalker'
    // TODO: Method 'get_ControlViewWalker'
    // TODO: Method 'get_ContentViewWalker'
    // TODO: Method 'get_RawViewWalker'
    // TODO: Method 'get_RawViewCondition'
    // TODO: Method 'get_ControlViewCondition'
    // TODO: Method 'get_ContentViewCondition'
    // TODO: Method 'CreateCacheRequest'
    // TODO: Method 'CreateTrueCondition'
    // TODO: Method 'CreateFalseCondition'
    // TODO: Method 'CreatePropertyCondition'
    // TODO: Method 'CreatePropertyConditionEx'
    // TODO: Method 'CreateAndCondition'
    // TODO: Method 'CreateAndConditionFromArray'
    // TODO: Method 'CreateAndConditionFromNativeArray'
    // TODO: Method 'CreateOrCondition'
    // TODO: Method 'CreateOrConditionFromArray'
    // TODO: Method 'CreateOrConditionFromNativeArray'
    // TODO: Method 'CreateNotCondition'
    // TODO: Method 'AddAutomationEventHandler'
    // TODO: Method 'RemoveAutomationEventHandler'
    // TODO: Method 'AddPropertyChangedEventHandlerNativeArray'
    // TODO: Method 'AddPropertyChangedEventHandler'
    // TODO: Method 'RemovePropertyChangedEventHandler'
    // TODO: Method 'AddStructureChangedEventHandler'
    // TODO: Method 'RemoveStructureChangedEventHandler'
    // TODO: Method 'AddFocusChangedEventHandler'
    // TODO: Method 'RemoveFocusChangedEventHandler'
    // TODO: Method 'RemoveAllEventHandlers'
    // TODO: Method 'IntNativeArrayToSafeArray'
    // TODO: Method 'IntSafeArrayToNativeArray'
    // TODO: Method 'RectToVariant'
    // TODO: Method 'VariantToRect'
    // TODO: Method 'SafeArrayToRectNativeArray'
    // TODO: Method 'CreateProxyFactoryEntry'
    // TODO: Method 'get_ProxyFactoryMapping'
    // TODO: Method 'GetPropertyProgrammaticName'
    // TODO: Method 'GetPatternProgrammaticName'
    // TODO: Method 'PollForPotentialSupportedPatterns'
    // TODO: Method 'PollForPotentialSupportedProperties'
    // TODO: Method 'CheckNotSupported'
    // TODO: Method 'get_ReservedNotSupportedValue'
    // TODO: Method 'get_ReservedMixedAttributeValue'
    // TODO: Method 'ElementFromIAccessible'
    // TODO: Method 'ElementFromIAccessibleBuildCache'
};
// --------------------------------------------------------
// Type: IUIAutomation2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomation2 = *opaque{
    // TODO: Method 'get_AutoSetFocus'
    // TODO: Method 'put_AutoSetFocus'
    // TODO: Method 'get_ConnectionTimeout'
    // TODO: Method 'put_ConnectionTimeout'
    // TODO: Method 'get_TransactionTimeout'
    // TODO: Method 'put_TransactionTimeout'
};
// --------------------------------------------------------
// Type: IUIAutomation3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomation3 = *opaque{
    // TODO: Method 'AddTextEditTextChangedEventHandler'
    // TODO: Method 'RemoveTextEditTextChangedEventHandler'
};
// --------------------------------------------------------
// Type: IUIAutomation4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomation4 = *opaque{
    // TODO: Method 'AddChangesEventHandler'
    // TODO: Method 'RemoveChangesEventHandler'
};
// --------------------------------------------------------
// Type: IUIAutomation5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomation5 = *opaque{
    // TODO: Method 'AddNotificationEventHandler'
    // TODO: Method 'RemoveNotificationEventHandler'
};
// --------------------------------------------------------
// Type: IUIAutomation6
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IUIAutomation6 = *opaque{
    // TODO: Method 'CreateEventHandlerGroup'
    // TODO: Method 'AddEventHandlerGroup'
    // TODO: Method 'RemoveEventHandlerGroup'
    // TODO: Method 'get_ConnectionRecoveryBehavior'
    // TODO: Method 'put_ConnectionRecoveryBehavior'
    // TODO: Method 'get_CoalesceEvents'
    // TODO: Method 'put_CoalesceEvents'
    // TODO: Method 'AddActiveTextPositionChangedEventHandler'
    // TODO: Method 'RemoveActiveTextPositionChangedEventHandler'
};
],

"func_definitions": [

// set_last_errror=True (can and should we use this?)
pub extern "USER32" fn RegisterPointerInputTarget(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pointerType: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "USER32" fn UnregisterPointerInputTarget(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pointerType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "USER32" fn RegisterPointerInputTargetEx(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pointerType: {"kind":"UInt32"},
    fObserve: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "USER32" fn UnregisterPointerInputTargetEx(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pointerType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "USER32" fn NotifyWinEvent(
    event: {"kind":"UInt32"},
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    idObject: {"kind":"Int32"},
    idChild: {"kind":"Int32"},

// set_last_errror=False (can and should we use this?)
pub extern "USER32" fn SetWinEventHook(
    eventMin: {"kind":"UInt32"},
    eventMax: {"kind":"UInt32"},
    hmodWinEventProc: {"kind":"IntPtr"},
    pfnWinEventProc: Windows.Win32.WindowsAccessibility.WINEVENTPROC,
    idProcess: {"kind":"UInt32"},
    idThread: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "USER32" fn IsWinEventHookInstalled(
    event: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "USER32" fn UnhookWinEvent(
    hWinEventHook: {"kind":"IntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn LresultFromObject(
    riid: {"kind""Ptr","child":Guid},
    wParam: Windows.Win32.WindowsAndMessaging.WPARAM,
    punk: Windows.Win32.Com.IUnknown,

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn ObjectFromLresult(
    lResult: Windows.Win32.SystemServices.LRESULT,
    riid: {"kind""Ptr","child":Guid},
    wParam: Windows.Win32.WindowsAndMessaging.WPARAM,
    ppvObject: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn WindowFromAccessibleObject(
    param0: Windows.Win32.WindowsAccessibility.IAccessible,
    phwnd: {"kind""Ptr","child":Windows.Win32.WindowsAndMessaging.HWND},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn AccessibleObjectFromWindow(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    dwId: {"kind":"UInt32"},
    riid: {"kind""Ptr","child":Guid},
    ppvObject: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn AccessibleObjectFromEvent(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    dwId: {"kind":"UInt32"},
    dwChildId: {"kind":"UInt32"},
    ppacc: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IAccessible},
    pvarChild: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn AccessibleObjectFromPoint(
    ptScreen: Windows.Win32.DisplayDevices.POINT,
    ppacc: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IAccessible},
    pvarChild: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn AccessibleChildren(
    paccContainer: Windows.Win32.WindowsAccessibility.IAccessible,
    iChildStart: {"kind":"Int32"},
    cChildren: {"kind":"Int32"},
    rgvarChildren: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},
    pcObtained: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=True (can and should we use this?)
pub extern "OLEACC" fn GetRoleTextA(
    lRole: {"kind":"UInt32"},
    lpszRole: {"kind""Ptr","child":{"kind":"SByte"}},
    cchRoleMax: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "OLEACC" fn GetRoleTextW(
    lRole: {"kind":"UInt32"},
    lpszRole: {"kind""Ptr","child":{"kind":"UInt16"}},
    cchRoleMax: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "OLEACC" fn GetStateTextA(
    lStateBit: {"kind":"UInt32"},
    lpszState: {"kind""Ptr","child":{"kind":"SByte"}},
    cchState: {"kind":"UInt32"},

// set_last_errror=True (can and should we use this?)
pub extern "OLEACC" fn GetStateTextW(
    lStateBit: {"kind":"UInt32"},
    lpszState: {"kind""Ptr","child":{"kind":"UInt16"}},
    cchState: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn GetOleaccVersionInfo(
    pVer: {"kind""Ptr","child":{"kind":"UInt32"}},
    pBuild: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn CreateStdAccessibleObject(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    idObject: {"kind":"Int32"},
    riid: {"kind""Ptr","child":Guid},
    ppvObject: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn CreateStdAccessibleProxyA(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pClassName: {"kind""Ptr","child":{"kind":"SByte"}},
    idObject: {"kind":"Int32"},
    riid: {"kind""Ptr","child":Guid},
    ppvObject: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn CreateStdAccessibleProxyW(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    pClassName: {"kind""Ptr","child":{"kind":"UInt16"}},
    idObject: {"kind":"Int32"},
    riid: {"kind""Ptr","child":Guid},
    ppvObject: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn AccSetRunningUtilityState(
    hwndApp: Windows.Win32.WindowsAndMessaging.HWND,
    dwUtilityStateMask: {"kind":"UInt32"},
    dwUtilityState: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "OLEACC" fn AccNotifyTouchInteraction(
    hwndApp: Windows.Win32.WindowsAndMessaging.HWND,
    hwndTarget: Windows.Win32.WindowsAndMessaging.HWND,
    ptTarget: Windows.Win32.DisplayDevices.POINT,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetErrorDescription(
    pDescription: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaHUiaNodeFromVariant(
    pvar: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},
    phnode: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaHPatternObjectFromVariant(
    pvar: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},
    phobj: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaHTextRangeFromVariant(
    pvar: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},
    phtextrange: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaNodeRelease(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetPropertyValue(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    propertyId: {"kind":"Int32"},
    pValue: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetPatternProvider(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    patternId: {"kind":"Int32"},
    phobj: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetRuntimeId(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    pruntimeId: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaSetFocus(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaNavigate(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    direction: Windows.Win32.WindowsAccessibility.NavigateDirection,
    pCondition: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCondition},
    pRequest: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCacheRequest},
    ppRequestedData: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},
    ppTreeStructure: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetUpdatedCache(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    pRequest: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCacheRequest},
    normalizeState: Windows.Win32.WindowsAccessibility.NormalizeState,
    pNormalizeCondition: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCondition},
    ppRequestedData: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},
    ppTreeStructure: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaFind(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    pParams: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaFindParams},
    pRequest: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCacheRequest},
    ppRequestedData: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},
    ppOffsets: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},
    ppTreeStructures: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaNodeFromPoint(
    x: {"kind":"Double"},
    y: {"kind":"Double"},
    pRequest: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCacheRequest},
    ppRequestedData: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},
    ppTreeStructure: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaNodeFromFocus(
    pRequest: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCacheRequest},
    ppRequestedData: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},
    ppTreeStructure: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaNodeFromHandle(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    phnode: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaNodeFromProvider(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    phnode: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetRootNode(
    phnode: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRegisterProviderCallback(
    pCallback: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaProviderCallback},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaLookupId(
    type: Windows.Win32.WindowsAccessibility.AutomationIdentifierType,
    pGuid: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetReservedNotSupportedValue(
    punkNotSupportedValue: {"kind""Ptr","child":Windows.Win32.Com.IUnknown},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaGetReservedMixedAttributeValue(
    punkMixedAttributeValue: {"kind""Ptr","child":Windows.Win32.Com.IUnknown},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaClientsAreListening(

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseAutomationPropertyChangedEvent(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    id: {"kind":"Int32"},
    oldValue: Windows.Win32.Automation.VARIANT,
    newValue: Windows.Win32.Automation.VARIANT,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseAutomationEvent(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    id: {"kind":"Int32"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseStructureChangedEvent(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    structureChangeType: Windows.Win32.WindowsAccessibility.StructureChangeType,
    pRuntimeId: {"kind""Ptr","child":{"kind":"Int32"}},
    cRuntimeIdLen: {"kind":"Int32"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseAsyncContentLoadedEvent(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    asyncContentLoadedState: Windows.Win32.WindowsAccessibility.AsyncContentLoadedState,
    percentComplete: {"kind":"Double"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseTextEditTextChangedEvent(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    textEditChangeType: Windows.Win32.WindowsAccessibility.TextEditChangeType,
    pChangedData: {"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseChangesEvent(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    eventIdCount: {"kind":"Int32"},
    pUiaChanges: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaChangeInfo},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseNotificationEvent(
    provider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    notificationKind: Windows.Win32.WindowsAccessibility.NotificationKind,
    notificationProcessing: Windows.Win32.WindowsAccessibility.NotificationProcessing,
    displayString: Windows.Win32.Automation.BSTR,
    activityId: Windows.Win32.Automation.BSTR,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRaiseActiveTextPositionChangedEvent(
    provider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    textRange: Windows.Win32.WindowsAccessibility.ITextRangeProvider,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaAddEvent(
    hnode: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    eventId: {"kind":"Int32"},
    pCallback: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaEventCallback},
    scope: Windows.Win32.WindowsAccessibility.TreeScope,
    pProperties: {"kind""Ptr","child":{"kind":"Int32"}},
    cProperties: {"kind":"Int32"},
    pRequest: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.UiaCacheRequest},
    phEvent: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAEVENT__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaRemoveEvent(
    hEvent: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAEVENT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaEventAddWindow(
    hEvent: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAEVENT__},
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaEventRemoveWindow(
    hEvent: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAEVENT__},
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn DockPattern_SetDockPosition(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    dockPosition: Windows.Win32.WindowsAccessibility.DockPosition,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ExpandCollapsePattern_Collapse(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ExpandCollapsePattern_Expand(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn GridPattern_GetItem(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    row: {"kind":"Int32"},
    column: {"kind":"Int32"},
    pResult: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn InvokePattern_Invoke(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn MultipleViewPattern_GetViewName(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    viewId: {"kind":"Int32"},
    ppStr: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn MultipleViewPattern_SetCurrentView(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    viewId: {"kind":"Int32"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn RangeValuePattern_SetValue(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    val: {"kind":"Double"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ScrollItemPattern_ScrollIntoView(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ScrollPattern_Scroll(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    horizontalAmount: Windows.Win32.WindowsAccessibility.ScrollAmount,
    verticalAmount: Windows.Win32.WindowsAccessibility.ScrollAmount,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ScrollPattern_SetScrollPercent(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    horizontalPercent: {"kind":"Double"},
    verticalPercent: {"kind":"Double"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn SelectionItemPattern_AddToSelection(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn SelectionItemPattern_RemoveFromSelection(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn SelectionItemPattern_Select(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TogglePattern_Toggle(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TransformPattern_Move(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    x: {"kind":"Double"},
    y: {"kind":"Double"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TransformPattern_Resize(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    width: {"kind":"Double"},
    height: {"kind":"Double"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TransformPattern_Rotate(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    degrees: {"kind":"Double"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ValuePattern_SetValue(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    pVal: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn WindowPattern_Close(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn WindowPattern_SetWindowVisualState(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    state: Windows.Win32.WindowsAccessibility.WindowVisualState,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn WindowPattern_WaitForInputIdle(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    milliseconds: {"kind":"Int32"},
    pResult: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextPattern_GetSelection(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextPattern_GetVisibleRanges(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextPattern_RangeFromChild(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    hnodeChild: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextPattern_RangeFromPoint(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    point: Windows.Win32.WindowsAccessibility.UiaPoint,
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextPattern_get_DocumentRange(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextPattern_get_SupportedTextSelection(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    pRetVal: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.SupportedTextSelection},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_Clone(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_Compare(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    range: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    pRetVal: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_CompareEndpoints(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    endpoint: Windows.Win32.WindowsAccessibility.TextPatternRangeEndpoint,
    targetRange: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    targetEndpoint: Windows.Win32.WindowsAccessibility.TextPatternRangeEndpoint,
    pRetVal: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_ExpandToEnclosingUnit(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    unit: Windows.Win32.WindowsAccessibility.TextUnit,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_GetAttributeValue(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    attributeId: {"kind":"Int32"},
    pRetVal: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_FindAttribute(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    attributeId: {"kind":"Int32"},
    val: Windows.Win32.Automation.VARIANT,
    backward: Windows.Win32.SystemServices.BOOL,
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_FindText(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    text: Windows.Win32.Automation.BSTR,
    backward: Windows.Win32.SystemServices.BOOL,
    ignoreCase: Windows.Win32.SystemServices.BOOL,
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_GetBoundingRectangles(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_GetEnclosingElement(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_GetText(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    maxLength: {"kind":"Int32"},
    pRetVal: {"kind""Ptr","child":Windows.Win32.Automation.BSTR},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_Move(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    unit: Windows.Win32.WindowsAccessibility.TextUnit,
    count: {"kind":"Int32"},
    pRetVal: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_MoveEndpointByUnit(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    endpoint: Windows.Win32.WindowsAccessibility.TextPatternRangeEndpoint,
    unit: Windows.Win32.WindowsAccessibility.TextUnit,
    count: {"kind":"Int32"},
    pRetVal: {"kind""Ptr","child":{"kind":"Int32"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_MoveEndpointByRange(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    endpoint: Windows.Win32.WindowsAccessibility.TextPatternRangeEndpoint,
    targetRange: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    targetEndpoint: Windows.Win32.WindowsAccessibility.TextPatternRangeEndpoint,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_Select(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_AddToSelection(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_RemoveFromSelection(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_ScrollIntoView(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    alignToTop: Windows.Win32.SystemServices.BOOL,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn TextRange_GetChildren(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},
    pRetVal: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Automation.SAFEARRAY}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn ItemContainerPattern_FindItemByProperty(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    hnodeStartAfter: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__},
    propertyId: {"kind":"Int32"},
    value: Windows.Win32.Automation.VARIANT,
    pFound: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIANODE__}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn LegacyIAccessiblePattern_Select(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    flagsSelect: {"kind":"Int32"},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn LegacyIAccessiblePattern_DoDefaultAction(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn LegacyIAccessiblePattern_SetValue(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    szValue: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn LegacyIAccessiblePattern_GetIAccessible(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    pAccessible: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IAccessible},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn SynchronizedInputPattern_StartListening(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},
    inputType: Windows.Win32.WindowsAccessibility.SynchronizedInputType,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn SynchronizedInputPattern_Cancel(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn VirtualizedItemPattern_Realize(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaPatternRelease(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIAPATTERNOBJECT__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaTextRangeRelease(
    hobj: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.HUIATEXTRANGE__},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaReturnRawElementProvider(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    wParam: Windows.Win32.WindowsAndMessaging.WPARAM,
    lParam: Windows.Win32.WindowsAndMessaging.LPARAM,
    el: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaHostProviderFromHwnd(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    ppProvider: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IRawElementProviderSimple},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaProviderForNonClient(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
    idObject: {"kind":"Int32"},
    idChild: {"kind":"Int32"},
    ppProvider: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IRawElementProviderSimple},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaIAccessibleFromProvider(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,
    dwFlags: {"kind":"UInt32"},
    ppAccessible: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IAccessible},
    pvarChild: {"kind""Ptr","child":Windows.Win32.Automation.VARIANT},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaProviderFromIAccessible(
    pAccessible: Windows.Win32.WindowsAccessibility.IAccessible,
    idChild: {"kind":"Int32"},
    dwFlags: {"kind":"UInt32"},
    ppProvider: {"kind""Ptr","child":Windows.Win32.WindowsAccessibility.IRawElementProviderSimple},

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaDisconnectAllProviders(

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaDisconnectProvider(
    pProvider: Windows.Win32.WindowsAccessibility.IRawElementProviderSimple,

// set_last_errror=False (can and should we use this?)
pub extern "UIAutomationCore" fn UiaHasServerSideProvider(
    hwnd: Windows.Win32.WindowsAndMessaging.HWND,
],

"unicode_aliases": [
     "SERIALKEYS"
     "HIGHCONTRAST"
     "SOUNDSENTRY"
     "GetRoleText"
     "GetStateText"
     "CreateStdAccessibleProxy"
]}
