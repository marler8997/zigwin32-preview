{
"constants": [
     {
         "name": "D3D11_SDK_VERSION"
        ,"type": {"kind":"Int32"}
        ,"value": 7
    }
    ,{
         "name": "D3D_FL9_1_REQ_TEXTURE1D_U_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 2048
    }
    ,{
         "name": "D3D_FL9_3_REQ_TEXTURE1D_U_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 4096
    }
    ,{
         "name": "D3D_FL9_1_REQ_TEXTURE2D_U_OR_V_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 2048
    }
    ,{
         "name": "D3D_FL9_3_REQ_TEXTURE2D_U_OR_V_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 4096
    }
    ,{
         "name": "D3D_FL9_1_REQ_TEXTURECUBE_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 512
    }
    ,{
         "name": "D3D_FL9_3_REQ_TEXTURECUBE_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 4096
    }
    ,{
         "name": "D3D_FL9_1_REQ_TEXTURE3D_U_V_OR_W_DIMENSION"
        ,"type": {"kind":"Int32"}
        ,"value": 256
    }
    ,{
         "name": "D3D_FL9_1_DEFAULT_MAX_ANISOTROPY"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "D3D_FL9_1_IA_PRIMITIVE_MAX_COUNT"
        ,"type": {"kind":"Int32"}
        ,"value": 65535
    }
    ,{
         "name": "D3D_FL9_2_IA_PRIMITIVE_MAX_COUNT"
        ,"type": {"kind":"Int32"}
        ,"value": 1048575
    }
    ,{
         "name": "D3D_FL9_1_SIMULTANEOUS_RENDER_TARGET_COUNT"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "D3D_FL9_3_SIMULTANEOUS_RENDER_TARGET_COUNT"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "D3D_FL9_1_MAX_TEXTURE_REPEAT"
        ,"type": {"kind":"Int32"}
        ,"value": 128
    }
    ,{
         "name": "D3D_FL9_2_MAX_TEXTURE_REPEAT"
        ,"type": {"kind":"Int32"}
        ,"value": 2048
    }
    ,{
         "name": "D3D_FL9_3_MAX_TEXTURE_REPEAT"
        ,"type": {"kind":"Int32"}
        ,"value": 8192
    }
    ,{
         "name": "D3D_COMPONENT_MASK_X"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
    ,{
         "name": "D3D_COMPONENT_MASK_Y"
        ,"type": {"kind":"Int32"}
        ,"value": 2
    }
    ,{
         "name": "D3D_COMPONENT_MASK_Z"
        ,"type": {"kind":"Int32"}
        ,"value": 4
    }
    ,{
         "name": "D3D_COMPONENT_MASK_W"
        ,"type": {"kind":"Int32"}
        ,"value": 8
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: D3D_DRIVER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_DRIVER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_FEATURE_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_FEATURE_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: D3D_PRIMITIVE_TOPOLOGY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_PRIMITIVE_TOPOLOGY = *opaque{
};
// --------------------------------------------------------
// Type: D3D_PRIMITIVE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_PRIMITIVE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SRV_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SRV_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SHADER_MACRO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D_SHADER_MACRO = extern struct {
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
    Definition: {"kind""Ptr","child":{"kind":"SByte"}},
};
// --------------------------------------------------------
// Type: ID3DBlob
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DBlob = *opaque{
    // TODO: Method 'GetBufferPointer'
    // TODO: Method 'GetBufferSize'
};
// --------------------------------------------------------
// Type: PFN_DESTRUCTION_CALLBACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFN_DESTRUCTION_CALLBACK = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: ID3DDestructionNotifier
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DDestructionNotifier = *opaque{
    // TODO: Method 'RegisterDestructionCallback'
    // TODO: Method 'UnregisterDestructionCallback'
};
// --------------------------------------------------------
// Type: D3D_INCLUDE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_INCLUDE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: ID3DInclude
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DInclude = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: D3D_SHADER_VARIABLE_CLASS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SHADER_VARIABLE_CLASS = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SHADER_VARIABLE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SHADER_VARIABLE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SHADER_VARIABLE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SHADER_VARIABLE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SHADER_INPUT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SHADER_INPUT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SHADER_INPUT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SHADER_INPUT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_SHADER_CBUFFER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_SHADER_CBUFFER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D_CBUFFER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_CBUFFER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_NAME
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_NAME = *opaque{
};
// --------------------------------------------------------
// Type: D3D_RESOURCE_RETURN_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_RESOURCE_RETURN_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_REGISTER_COMPONENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_REGISTER_COMPONENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_TESSELLATOR_DOMAIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_TESSELLATOR_DOMAIN = *opaque{
};
// --------------------------------------------------------
// Type: D3D_TESSELLATOR_PARTITIONING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_TESSELLATOR_PARTITIONING = *opaque{
};
// --------------------------------------------------------
// Type: D3D_TESSELLATOR_OUTPUT_PRIMITIVE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_TESSELLATOR_OUTPUT_PRIMITIVE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_MIN_PRECISION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_MIN_PRECISION = *opaque{
};
// --------------------------------------------------------
// Type: D3D_INTERPOLATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_INTERPOLATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D_PARAMETER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D_PARAMETER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_INPUT_CLASSIFICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_INPUT_CLASSIFICATION = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_INPUT_ELEMENT_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_INPUT_ELEMENT_DESC = extern struct {
    SemanticName: {"kind""Ptr","child":{"kind":"SByte"}},
    SemanticIndex: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    InputSlot: {"kind":"UInt32"},
    AlignedByteOffset: {"kind":"UInt32"},
    InputSlotClass: Windows.Win32.Direct3D11.D3D11_INPUT_CLASSIFICATION,
    InstanceDataStepRate: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_FILL_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FILL_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_CULL_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CULL_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_SO_DECLARATION_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SO_DECLARATION_ENTRY = extern struct {
    Stream: {"kind":"UInt32"},
    SemanticName: {"kind""Ptr","child":{"kind":"SByte"}},
    SemanticIndex: {"kind":"UInt32"},
    StartComponent: {"kind":"Byte"},
    ComponentCount: {"kind":"Byte"},
    OutputSlot: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: D3D11_VIEWPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_VIEWPORT = extern struct {
    TopLeftX: {"kind":"Single"},
    TopLeftY: {"kind":"Single"},
    Width: {"kind":"Single"},
    Height: {"kind":"Single"},
    MinDepth: {"kind":"Single"},
    MaxDepth: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: D3D11_DRAW_INSTANCED_INDIRECT_ARGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_DRAW_INSTANCED_INDIRECT_ARGS = extern struct {
    VertexCountPerInstance: {"kind":"UInt32"},
    InstanceCount: {"kind":"UInt32"},
    StartVertexLocation: {"kind":"UInt32"},
    StartInstanceLocation: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_DRAW_INDEXED_INSTANCED_INDIRECT_ARGS = extern struct {
    IndexCountPerInstance: {"kind":"UInt32"},
    InstanceCount: {"kind":"UInt32"},
    StartIndexLocation: {"kind":"UInt32"},
    BaseVertexLocation: {"kind":"Int32"},
    StartInstanceLocation: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_RESOURCE_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_RESOURCE_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_DSV_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_DSV_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RTV_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_RTV_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_UAV_DIMENSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_UAV_DIMENSION = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_USAGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_USAGE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_BIND_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_BIND_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_CPU_ACCESS_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CPU_ACCESS_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RESOURCE_MISC_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_RESOURCE_MISC_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_MAP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_MAP = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_MAP_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_MAP_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RAISE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_RAISE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_CLEAR_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CLEAR_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_BOX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BOX = extern struct {
    left: {"kind":"UInt32"},
    top: {"kind":"UInt32"},
    front: {"kind":"UInt32"},
    right: {"kind":"UInt32"},
    bottom: {"kind":"UInt32"},
    back: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11DeviceChild
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DeviceChild = *opaque{
    // TODO: Method 'GetDevice'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'SetPrivateDataInterface'
};
// --------------------------------------------------------
// Type: D3D11_COMPARISON_FUNC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_COMPARISON_FUNC = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_DEPTH_WRITE_MASK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_DEPTH_WRITE_MASK = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_STENCIL_OP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_STENCIL_OP = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_DEPTH_STENCILOP_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_DEPTH_STENCILOP_DESC = extern struct {
    StencilFailOp: Windows.Win32.Direct3D11.D3D11_STENCIL_OP,
    StencilDepthFailOp: Windows.Win32.Direct3D11.D3D11_STENCIL_OP,
    StencilPassOp: Windows.Win32.Direct3D11.D3D11_STENCIL_OP,
    StencilFunc: Windows.Win32.Direct3D11.D3D11_COMPARISON_FUNC,
};
// --------------------------------------------------------
// Type: D3D11_DEPTH_STENCIL_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_DEPTH_STENCIL_DESC = extern struct {
    DepthEnable: Windows.Win32.SystemServices.BOOL,
    DepthWriteMask: Windows.Win32.Direct3D11.D3D11_DEPTH_WRITE_MASK,
    DepthFunc: Windows.Win32.Direct3D11.D3D11_COMPARISON_FUNC,
    StencilEnable: Windows.Win32.SystemServices.BOOL,
    StencilReadMask: {"kind":"Byte"},
    StencilWriteMask: {"kind":"Byte"},
    FrontFace: Windows.Win32.Direct3D11.D3D11_DEPTH_STENCILOP_DESC,
    BackFace: Windows.Win32.Direct3D11.D3D11_DEPTH_STENCILOP_DESC,
};
// --------------------------------------------------------
// Type: ID3D11DepthStencilState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DepthStencilState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_BLEND
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_BLEND = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_BLEND_OP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_BLEND_OP = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_COLOR_WRITE_ENABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_COLOR_WRITE_ENABLE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RENDER_TARGET_BLEND_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RENDER_TARGET_BLEND_DESC = extern struct {
    BlendEnable: Windows.Win32.SystemServices.BOOL,
    SrcBlend: Windows.Win32.Direct3D11.D3D11_BLEND,
    DestBlend: Windows.Win32.Direct3D11.D3D11_BLEND,
    BlendOp: Windows.Win32.Direct3D11.D3D11_BLEND_OP,
    SrcBlendAlpha: Windows.Win32.Direct3D11.D3D11_BLEND,
    DestBlendAlpha: Windows.Win32.Direct3D11.D3D11_BLEND,
    BlendOpAlpha: Windows.Win32.Direct3D11.D3D11_BLEND_OP,
    RenderTargetWriteMask: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: D3D11_BLEND_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BLEND_DESC = extern struct {
    AlphaToCoverageEnable: Windows.Win32.SystemServices.BOOL,
    IndependentBlendEnable: Windows.Win32.SystemServices.BOOL,
    RenderTarget: {"kind":"Array","child": Windows.Win32.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC},
};
// --------------------------------------------------------
// Type: ID3D11BlendState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11BlendState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_RASTERIZER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RASTERIZER_DESC = extern struct {
    FillMode: Windows.Win32.Direct3D11.D3D11_FILL_MODE,
    CullMode: Windows.Win32.Direct3D11.D3D11_CULL_MODE,
    FrontCounterClockwise: Windows.Win32.SystemServices.BOOL,
    DepthBias: {"kind":"Int32"},
    DepthBiasClamp: {"kind":"Single"},
    SlopeScaledDepthBias: {"kind":"Single"},
    DepthClipEnable: Windows.Win32.SystemServices.BOOL,
    ScissorEnable: Windows.Win32.SystemServices.BOOL,
    MultisampleEnable: Windows.Win32.SystemServices.BOOL,
    AntialiasedLineEnable: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: ID3D11RasterizerState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RasterizerState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_SUBRESOURCE_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SUBRESOURCE_DATA = extern struct {
    pSysMem: {"kind""Ptr","child":{"kind":"Void"}},
    SysMemPitch: {"kind":"UInt32"},
    SysMemSlicePitch: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_MAPPED_SUBRESOURCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_MAPPED_SUBRESOURCE = extern struct {
    pData: {"kind""Ptr","child":{"kind":"Void"}},
    RowPitch: {"kind":"UInt32"},
    DepthPitch: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11Resource
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Resource = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'SetEvictionPriority'
    // TODO: Method 'GetEvictionPriority'
};
// --------------------------------------------------------
// Type: D3D11_BUFFER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BUFFER_DESC = extern struct {
    ByteWidth: {"kind":"UInt32"},
    Usage: Windows.Win32.Direct3D11.D3D11_USAGE,
    BindFlags: {"kind":"UInt32"},
    CPUAccessFlags: {"kind":"UInt32"},
    MiscFlags: {"kind":"UInt32"},
    StructureByteStride: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11Buffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Buffer = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE1D_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXTURE1D_DESC = extern struct {
    Width: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    Usage: Windows.Win32.Direct3D11.D3D11_USAGE,
    BindFlags: {"kind":"UInt32"},
    CPUAccessFlags: {"kind":"UInt32"},
    MiscFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11Texture1D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Texture1D = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE2D_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXTURE2D_DESC = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    SampleDesc: Windows.Win32.Dxgi.DXGI_SAMPLE_DESC,
    Usage: Windows.Win32.Direct3D11.D3D11_USAGE,
    BindFlags: {"kind":"UInt32"},
    CPUAccessFlags: {"kind":"UInt32"},
    MiscFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11Texture2D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Texture2D = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE3D_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXTURE3D_DESC = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    Depth: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    Usage: Windows.Win32.Direct3D11.D3D11_USAGE,
    BindFlags: {"kind":"UInt32"},
    CPUAccessFlags: {"kind":"UInt32"},
    MiscFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11Texture3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Texture3D = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_TEXTURECUBE_FACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TEXTURECUBE_FACE = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11View
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11View = *opaque{
    // TODO: Method 'GetResource'
};
// --------------------------------------------------------
// Type: D3D11_BUFFER_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BUFFER_SRV = extern struct {
    Anonymous1: Windows.Win32.Direct3D11.D3D11_BUFFER_SRV+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.Direct3D11.D3D11_BUFFER_SRV+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: D3D11_BUFFEREX_SRV_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_BUFFEREX_SRV_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_BUFFEREX_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BUFFEREX_SRV = extern struct {
    FirstElement: {"kind":"UInt32"},
    NumElements: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_ARRAY_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX3D_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX3D_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEXCUBE_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXCUBE_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEXCUBE_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXCUBE_ARRAY_SRV = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    First2DArrayFace: {"kind":"UInt32"},
    NumCubes: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2DMS_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2DMS_SRV = extern struct {
    UnusedField_NothingToDefine: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2DMS_ARRAY_SRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2DMS_ARRAY_SRV = extern struct {
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_RESOURCE_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_RESOURCE_VIEW_DESC = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D_SRV_DIMENSION,
    Anonymous: Windows.Win32.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11ShaderResourceView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderResourceView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_BUFFER_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BUFFER_RTV = extern struct {
    Anonymous1: Windows.Win32.Direct3D11.D3D11_BUFFER_RTV+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.Direct3D11.D3D11_BUFFER_RTV+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_RTV = extern struct {
    MipSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_ARRAY_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_ARRAY_RTV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_RTV = extern struct {
    MipSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2DMS_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2DMS_RTV = extern struct {
    UnusedField_NothingToDefine: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_RTV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2DMS_ARRAY_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2DMS_ARRAY_RTV = extern struct {
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX3D_RTV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX3D_RTV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstWSlice: {"kind":"UInt32"},
    WSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_RENDER_TARGET_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RENDER_TARGET_VIEW_DESC = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D11_RTV_DIMENSION,
    Anonymous: Windows.Win32.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11RenderTargetView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RenderTargetView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_DSV = extern struct {
    MipSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_ARRAY_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_ARRAY_DSV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_DSV = extern struct {
    MipSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_DSV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2DMS_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2DMS_DSV = extern struct {
    UnusedField_NothingToDefine: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2DMS_ARRAY_DSV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2DMS_ARRAY_DSV = extern struct {
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_DSV_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_DSV_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_DEPTH_STENCIL_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_DEPTH_STENCIL_VIEW_DESC = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D11_DSV_DIMENSION,
    Flags: {"kind":"UInt32"},
    Anonymous: Windows.Win32.Direct3D11.D3D11_DEPTH_STENCIL_VIEW_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11DepthStencilView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DepthStencilView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_BUFFER_UAV_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_BUFFER_UAV_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_BUFFER_UAV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BUFFER_UAV = extern struct {
    FirstElement: {"kind":"UInt32"},
    NumElements: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_UAV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_UAV = extern struct {
    MipSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX1D_ARRAY_UAV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX1D_ARRAY_UAV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_UAV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_UAV = extern struct {
    MipSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_UAV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_UAV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX3D_UAV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX3D_UAV = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstWSlice: {"kind":"UInt32"},
    WSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_UNORDERED_ACCESS_VIEW_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_UNORDERED_ACCESS_VIEW_DESC = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D11_UAV_DIMENSION,
    Anonymous: Windows.Win32.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11UnorderedAccessView
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11UnorderedAccessView = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: ID3D11VertexShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11VertexShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11HullShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11HullShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11DomainShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DomainShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11GeometryShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11GeometryShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11PixelShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11PixelShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11ComputeShader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ComputeShader = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11InputLayout
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11InputLayout = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FILTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FILTER = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FILTER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FILTER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FILTER_REDUCTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FILTER_REDUCTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE_ADDRESS_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TEXTURE_ADDRESS_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_SAMPLER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SAMPLER_DESC = extern struct {
    Filter: Windows.Win32.Direct3D11.D3D11_FILTER,
    AddressU: Windows.Win32.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE,
    AddressV: Windows.Win32.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE,
    AddressW: Windows.Win32.Direct3D11.D3D11_TEXTURE_ADDRESS_MODE,
    MipLODBias: {"kind":"Single"},
    MaxAnisotropy: {"kind":"UInt32"},
    ComparisonFunc: Windows.Win32.Direct3D11.D3D11_COMPARISON_FUNC,
    BorderColor: {"kind":"Array","child": {"kind":"Single"}},
    MinLOD: {"kind":"Single"},
    MaxLOD: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: ID3D11SamplerState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11SamplerState = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_FORMAT_SUPPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FORMAT_SUPPORT = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FORMAT_SUPPORT2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FORMAT_SUPPORT2 = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11Asynchronous
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Asynchronous = *opaque{
    // TODO: Method 'GetDataSize'
};
// --------------------------------------------------------
// Type: D3D11_ASYNC_GETDATA_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_ASYNC_GETDATA_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_QUERY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_QUERY = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_QUERY_MISC_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_QUERY_MISC_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_QUERY_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_QUERY_DESC = extern struct {
    Query: Windows.Win32.Direct3D11.D3D11_QUERY,
    MiscFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11Query
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Query = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: ID3D11Predicate
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Predicate = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_QUERY_DATA_TIMESTAMP_DISJOINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_QUERY_DATA_TIMESTAMP_DISJOINT = extern struct {
    Frequency: {"kind":"UInt64"},
    Disjoint: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_QUERY_DATA_PIPELINE_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_QUERY_DATA_PIPELINE_STATISTICS = extern struct {
    IAVertices: {"kind":"UInt64"},
    IAPrimitives: {"kind":"UInt64"},
    VSInvocations: {"kind":"UInt64"},
    GSInvocations: {"kind":"UInt64"},
    GSPrimitives: {"kind":"UInt64"},
    CInvocations: {"kind":"UInt64"},
    CPrimitives: {"kind":"UInt64"},
    PSInvocations: {"kind":"UInt64"},
    HSInvocations: {"kind":"UInt64"},
    DSInvocations: {"kind":"UInt64"},
    CSInvocations: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_QUERY_DATA_SO_STATISTICS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_QUERY_DATA_SO_STATISTICS = extern struct {
    NumPrimitivesWritten: {"kind":"UInt64"},
    PrimitivesStorageNeeded: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_COUNTER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_COUNTER = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_COUNTER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_COUNTER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_COUNTER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_COUNTER_DESC = extern struct {
    Counter: Windows.Win32.Direct3D11.D3D11_COUNTER,
    MiscFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_COUNTER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_COUNTER_INFO = extern struct {
    LastDeviceDependentCounter: Windows.Win32.Direct3D11.D3D11_COUNTER,
    NumSimultaneousCounters: {"kind":"UInt32"},
    NumDetectableParallelUnits: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: ID3D11Counter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Counter = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_DEVICE_CONTEXT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_DEVICE_CONTEXT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_CLASS_INSTANCE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_CLASS_INSTANCE_DESC = extern struct {
    InstanceId: {"kind":"UInt32"},
    InstanceIndex: {"kind":"UInt32"},
    TypeId: {"kind":"UInt32"},
    ConstantBuffer: {"kind":"UInt32"},
    BaseConstantBufferOffset: {"kind":"UInt32"},
    BaseTexture: {"kind":"UInt32"},
    BaseSampler: {"kind":"UInt32"},
    Created: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: ID3D11ClassInstance
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ClassInstance = *opaque{
    // TODO: Method 'GetClassLinkage'
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetInstanceName'
    // TODO: Method 'GetTypeName'
};
// --------------------------------------------------------
// Type: ID3D11ClassLinkage
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ClassLinkage = *opaque{
    // TODO: Method 'GetClassInstance'
    // TODO: Method 'CreateClassInstance'
};
// --------------------------------------------------------
// Type: ID3D11CommandList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11CommandList = *opaque{
    // TODO: Method 'GetContextFlags'
};
// --------------------------------------------------------
// Type: D3D11_FEATURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FEATURE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_THREADING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_THREADING = extern struct {
    DriverConcurrentCreates: Windows.Win32.SystemServices.BOOL,
    DriverCommandLists: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_DOUBLES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_DOUBLES = extern struct {
    DoublePrecisionFloatShaderOps: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_FORMAT_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_FORMAT_SUPPORT = extern struct {
    InFormat: Windows.Win32.Dxgi.DXGI_FORMAT,
    OutFormatSupport: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_FORMAT_SUPPORT2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_FORMAT_SUPPORT2 = extern struct {
    InFormat: Windows.Win32.Dxgi.DXGI_FORMAT,
    OutFormatSupport2: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS = extern struct {
    ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D11_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D11_OPTIONS = extern struct {
    OutputMergerLogicOp: Windows.Win32.SystemServices.BOOL,
    UAVOnlyRenderingForcedSampleCount: Windows.Win32.SystemServices.BOOL,
    DiscardAPIsSeenByDriver: Windows.Win32.SystemServices.BOOL,
    FlagsForUpdateAndCopySeenByDriver: Windows.Win32.SystemServices.BOOL,
    ClearView: Windows.Win32.SystemServices.BOOL,
    CopyWithOverlap: Windows.Win32.SystemServices.BOOL,
    ConstantBufferPartialUpdate: Windows.Win32.SystemServices.BOOL,
    ConstantBufferOffsetting: Windows.Win32.SystemServices.BOOL,
    MapNoOverwriteOnDynamicConstantBuffer: Windows.Win32.SystemServices.BOOL,
    MapNoOverwriteOnDynamicBufferSRV: Windows.Win32.SystemServices.BOOL,
    MultisampleRTVWithForcedSampleCountOne: Windows.Win32.SystemServices.BOOL,
    SAD4ShaderInstructions: Windows.Win32.SystemServices.BOOL,
    ExtendedDoublesShaderInstructions: Windows.Win32.SystemServices.BOOL,
    ExtendedResourceSharing: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_ARCHITECTURE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_ARCHITECTURE_INFO = extern struct {
    TileBasedDeferredRenderer: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D9_OPTIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D9_OPTIONS = extern struct {
    FullNonPow2TextureSupport: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT = extern struct {
    SupportsDepthAsTextureWithLessEqualComparisonFilter: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_SHADER_MIN_PRECISION_SUPPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHADER_MIN_PRECISION_SUPPORT = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT = extern struct {
    PixelShaderMinPrecision: {"kind":"UInt32"},
    AllOtherShaderStagesMinPrecision: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TILED_RESOURCES_TIER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TILED_RESOURCES_TIER = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D11_OPTIONS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D11_OPTIONS1 = extern struct {
    TiledResourcesTier: Windows.Win32.Direct3D11.D3D11_TILED_RESOURCES_TIER,
    MinMaxFiltering: Windows.Win32.SystemServices.BOOL,
    ClearViewAlsoSupportsDepthOnlyFormats: Windows.Win32.SystemServices.BOOL,
    MapOnDefaultBuffers: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D9_SIMPLE_INSTANCING_SUPPORT = extern struct {
    SimpleInstancingSupported: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_MARKER_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_MARKER_SUPPORT = extern struct {
    Profile: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D9_OPTIONS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D9_OPTIONS1 = extern struct {
    FullNonPow2TextureSupported: Windows.Win32.SystemServices.BOOL,
    DepthAsTextureWithLessEqualComparisonFilterSupported: Windows.Win32.SystemServices.BOOL,
    SimpleInstancingSupported: Windows.Win32.SystemServices.BOOL,
    TextureCubeFaceRenderTargetWithNonCubeDepthStencilSupported: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_CONSERVATIVE_RASTERIZATION_TIER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CONSERVATIVE_RASTERIZATION_TIER = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D11_OPTIONS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D11_OPTIONS2 = extern struct {
    PSSpecifiedStencilRefSupported: Windows.Win32.SystemServices.BOOL,
    TypedUAVLoadAdditionalFormats: Windows.Win32.SystemServices.BOOL,
    ROVsSupported: Windows.Win32.SystemServices.BOOL,
    ConservativeRasterizationTier: Windows.Win32.Direct3D11.D3D11_CONSERVATIVE_RASTERIZATION_TIER,
    TiledResourcesTier: Windows.Win32.Direct3D11.D3D11_TILED_RESOURCES_TIER,
    MapOnDefaultTextures: Windows.Win32.SystemServices.BOOL,
    StandardSwizzle: Windows.Win32.SystemServices.BOOL,
    UnifiedMemoryArchitecture: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D11_OPTIONS3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D11_OPTIONS3 = extern struct {
    VPAndRTArrayIndexFromAnyShaderFeedingRasterizer: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT = extern struct {
    MaxGPUVirtualAddressBitsPerResource: {"kind":"UInt32"},
    MaxGPUVirtualAddressBitsPerProcess: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_CACHE_SUPPORT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHADER_CACHE_SUPPORT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_SHADER_CACHE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_SHADER_CACHE = extern struct {
    SupportFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHARED_RESOURCE_TIER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHARED_RESOURCE_TIER = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D11_OPTIONS5
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D11_OPTIONS5 = extern struct {
    SharedResourceTier: Windows.Win32.Direct3D11.D3D11_SHARED_RESOURCE_TIER,
};
// --------------------------------------------------------
// Type: ID3D11DeviceContext
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DeviceContext = *opaque{
    // TODO: Method 'VSSetConstantBuffers'
    // TODO: Method 'PSSetShaderResources'
    // TODO: Method 'PSSetShader'
    // TODO: Method 'PSSetSamplers'
    // TODO: Method 'VSSetShader'
    // TODO: Method 'DrawIndexed'
    // TODO: Method 'Draw'
    // TODO: Method 'Map'
    // TODO: Method 'Unmap'
    // TODO: Method 'PSSetConstantBuffers'
    // TODO: Method 'IASetInputLayout'
    // TODO: Method 'IASetVertexBuffers'
    // TODO: Method 'IASetIndexBuffer'
    // TODO: Method 'DrawIndexedInstanced'
    // TODO: Method 'DrawInstanced'
    // TODO: Method 'GSSetConstantBuffers'
    // TODO: Method 'GSSetShader'
    // TODO: Method 'IASetPrimitiveTopology'
    // TODO: Method 'VSSetShaderResources'
    // TODO: Method 'VSSetSamplers'
    // TODO: Method 'Begin'
    // TODO: Method 'End'
    // TODO: Method 'GetData'
    // TODO: Method 'SetPredication'
    // TODO: Method 'GSSetShaderResources'
    // TODO: Method 'GSSetSamplers'
    // TODO: Method 'OMSetRenderTargets'
    // TODO: Method 'OMSetRenderTargetsAndUnorderedAccessViews'
    // TODO: Method 'OMSetBlendState'
    // TODO: Method 'OMSetDepthStencilState'
    // TODO: Method 'SOSetTargets'
    // TODO: Method 'DrawAuto'
    // TODO: Method 'DrawIndexedInstancedIndirect'
    // TODO: Method 'DrawInstancedIndirect'
    // TODO: Method 'Dispatch'
    // TODO: Method 'DispatchIndirect'
    // TODO: Method 'RSSetState'
    // TODO: Method 'RSSetViewports'
    // TODO: Method 'RSSetScissorRects'
    // TODO: Method 'CopySubresourceRegion'
    // TODO: Method 'CopyResource'
    // TODO: Method 'UpdateSubresource'
    // TODO: Method 'CopyStructureCount'
    // TODO: Method 'ClearRenderTargetView'
    // TODO: Method 'ClearUnorderedAccessViewUint'
    // TODO: Method 'ClearUnorderedAccessViewFloat'
    // TODO: Method 'ClearDepthStencilView'
    // TODO: Method 'GenerateMips'
    // TODO: Method 'SetResourceMinLOD'
    // TODO: Method 'GetResourceMinLOD'
    // TODO: Method 'ResolveSubresource'
    // TODO: Method 'ExecuteCommandList'
    // TODO: Method 'HSSetShaderResources'
    // TODO: Method 'HSSetShader'
    // TODO: Method 'HSSetSamplers'
    // TODO: Method 'HSSetConstantBuffers'
    // TODO: Method 'DSSetShaderResources'
    // TODO: Method 'DSSetShader'
    // TODO: Method 'DSSetSamplers'
    // TODO: Method 'DSSetConstantBuffers'
    // TODO: Method 'CSSetShaderResources'
    // TODO: Method 'CSSetUnorderedAccessViews'
    // TODO: Method 'CSSetShader'
    // TODO: Method 'CSSetSamplers'
    // TODO: Method 'CSSetConstantBuffers'
    // TODO: Method 'VSGetConstantBuffers'
    // TODO: Method 'PSGetShaderResources'
    // TODO: Method 'PSGetShader'
    // TODO: Method 'PSGetSamplers'
    // TODO: Method 'VSGetShader'
    // TODO: Method 'PSGetConstantBuffers'
    // TODO: Method 'IAGetInputLayout'
    // TODO: Method 'IAGetVertexBuffers'
    // TODO: Method 'IAGetIndexBuffer'
    // TODO: Method 'GSGetConstantBuffers'
    // TODO: Method 'GSGetShader'
    // TODO: Method 'IAGetPrimitiveTopology'
    // TODO: Method 'VSGetShaderResources'
    // TODO: Method 'VSGetSamplers'
    // TODO: Method 'GetPredication'
    // TODO: Method 'GSGetShaderResources'
    // TODO: Method 'GSGetSamplers'
    // TODO: Method 'OMGetRenderTargets'
    // TODO: Method 'OMGetRenderTargetsAndUnorderedAccessViews'
    // TODO: Method 'OMGetBlendState'
    // TODO: Method 'OMGetDepthStencilState'
    // TODO: Method 'SOGetTargets'
    // TODO: Method 'RSGetState'
    // TODO: Method 'RSGetViewports'
    // TODO: Method 'RSGetScissorRects'
    // TODO: Method 'HSGetShaderResources'
    // TODO: Method 'HSGetShader'
    // TODO: Method 'HSGetSamplers'
    // TODO: Method 'HSGetConstantBuffers'
    // TODO: Method 'DSGetShaderResources'
    // TODO: Method 'DSGetShader'
    // TODO: Method 'DSGetSamplers'
    // TODO: Method 'DSGetConstantBuffers'
    // TODO: Method 'CSGetShaderResources'
    // TODO: Method 'CSGetUnorderedAccessViews'
    // TODO: Method 'CSGetShader'
    // TODO: Method 'CSGetSamplers'
    // TODO: Method 'CSGetConstantBuffers'
    // TODO: Method 'ClearState'
    // TODO: Method 'Flush'
    // TODO: Method 'GetType'
    // TODO: Method 'GetContextFlags'
    // TODO: Method 'FinishCommandList'
};
// --------------------------------------------------------
// Type: CD3D11_VIDEO_DEFAULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CD3D11_VIDEO_DEFAULT = opaque {
};
// --------------------------------------------------------
// Type: D3D11_AUTHENTICATED_PROTECTION_FLAGS
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const D3D11_AUTHENTICATED_PROTECTION_FLAGS = *opaque{
    // --------------------------------------------------------
    // Type: _Flags_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Flags_e__Struct = extern struct {
        _bitfield: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: ID3D11Device
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Device = *opaque{
    // TODO: Method 'CreateBuffer'
    // TODO: Method 'CreateTexture1D'
    // TODO: Method 'CreateTexture2D'
    // TODO: Method 'CreateTexture3D'
    // TODO: Method 'CreateShaderResourceView'
    // TODO: Method 'CreateUnorderedAccessView'
    // TODO: Method 'CreateRenderTargetView'
    // TODO: Method 'CreateDepthStencilView'
    // TODO: Method 'CreateInputLayout'
    // TODO: Method 'CreateVertexShader'
    // TODO: Method 'CreateGeometryShader'
    // TODO: Method 'CreateGeometryShaderWithStreamOutput'
    // TODO: Method 'CreatePixelShader'
    // TODO: Method 'CreateHullShader'
    // TODO: Method 'CreateDomainShader'
    // TODO: Method 'CreateComputeShader'
    // TODO: Method 'CreateClassLinkage'
    // TODO: Method 'CreateBlendState'
    // TODO: Method 'CreateDepthStencilState'
    // TODO: Method 'CreateRasterizerState'
    // TODO: Method 'CreateSamplerState'
    // TODO: Method 'CreateQuery'
    // TODO: Method 'CreatePredicate'
    // TODO: Method 'CreateCounter'
    // TODO: Method 'CreateDeferredContext'
    // TODO: Method 'OpenSharedResource'
    // TODO: Method 'CheckFormatSupport'
    // TODO: Method 'CheckMultisampleQualityLevels'
    // TODO: Method 'CheckCounterInfo'
    // TODO: Method 'CheckCounter'
    // TODO: Method 'CheckFeatureSupport'
    // TODO: Method 'GetPrivateData'
    // TODO: Method 'SetPrivateData'
    // TODO: Method 'SetPrivateDataInterface'
    // TODO: Method 'GetFeatureLevel'
    // TODO: Method 'GetCreationFlags'
    // TODO: Method 'GetDeviceRemovedReason'
    // TODO: Method 'GetImmediateContext'
    // TODO: Method 'SetExceptionMode'
    // TODO: Method 'GetExceptionMode'
};
// --------------------------------------------------------
// Type: D3D11_CREATE_DEVICE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CREATE_DEVICE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RLDO_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_RLDO_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11Debug
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Debug = *opaque{
    // TODO: Method 'SetFeatureMask'
    // TODO: Method 'GetFeatureMask'
    // TODO: Method 'SetPresentPerRenderOpDelay'
    // TODO: Method 'GetPresentPerRenderOpDelay'
    // TODO: Method 'SetSwapChain'
    // TODO: Method 'GetSwapChain'
    // TODO: Method 'ValidateContext'
    // TODO: Method 'ReportLiveDeviceObjects'
    // TODO: Method 'ValidateContextForDispatch'
};
// --------------------------------------------------------
// Type: ID3D11SwitchToRef
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11SwitchToRef = *opaque{
    // TODO: Method 'SetUseRef'
    // TODO: Method 'GetUseRef'
};
// --------------------------------------------------------
// Type: D3D11_SHADER_TRACKING_RESOURCE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHADER_TRACKING_RESOURCE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_SHADER_TRACKING_OPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHADER_TRACKING_OPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11TracingDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11TracingDevice = *opaque{
    // TODO: Method 'SetShaderTrackingOptionsByType'
    // TODO: Method 'SetShaderTrackingOptions'
};
// --------------------------------------------------------
// Type: ID3D11RefTrackingOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RefTrackingOptions = *opaque{
    // TODO: Method 'SetTrackingOptions'
};
// --------------------------------------------------------
// Type: ID3D11RefDefaultTrackingOptions
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RefDefaultTrackingOptions = *opaque{
    // TODO: Method 'SetTrackingOptions'
};
// --------------------------------------------------------
// Type: D3D11_MESSAGE_CATEGORY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_MESSAGE_CATEGORY = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_MESSAGE_SEVERITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_MESSAGE_SEVERITY = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_MESSAGE_ID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_MESSAGE_ID = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_MESSAGE = extern struct {
    Category: Windows.Win32.Direct3D11.D3D11_MESSAGE_CATEGORY,
    Severity: Windows.Win32.Direct3D11.D3D11_MESSAGE_SEVERITY,
    ID: Windows.Win32.Direct3D11.D3D11_MESSAGE_ID,
    pDescription: {"kind""Ptr","child":{"kind":"SByte"}},
    DescriptionByteLength: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: D3D11_INFO_QUEUE_FILTER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_INFO_QUEUE_FILTER_DESC = extern struct {
    NumCategories: {"kind":"UInt32"},
    pCategoryList: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D11_MESSAGE_CATEGORY},
    NumSeverities: {"kind":"UInt32"},
    pSeverityList: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D11_MESSAGE_SEVERITY},
    NumIDs: {"kind":"UInt32"},
    pIDList: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D11_MESSAGE_ID},
};
// --------------------------------------------------------
// Type: D3D11_INFO_QUEUE_FILTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_INFO_QUEUE_FILTER = extern struct {
    AllowList: Windows.Win32.Direct3D11.D3D11_INFO_QUEUE_FILTER_DESC,
    DenyList: Windows.Win32.Direct3D11.D3D11_INFO_QUEUE_FILTER_DESC,
};
// --------------------------------------------------------
// Type: ID3D11InfoQueue
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11InfoQueue = *opaque{
    // TODO: Method 'SetMessageCountLimit'
    // TODO: Method 'ClearStoredMessages'
    // TODO: Method 'GetMessageA'
    // TODO: Method 'GetNumMessagesAllowedByStorageFilter'
    // TODO: Method 'GetNumMessagesDeniedByStorageFilter'
    // TODO: Method 'GetNumStoredMessages'
    // TODO: Method 'GetNumStoredMessagesAllowedByRetrievalFilter'
    // TODO: Method 'GetNumMessagesDiscardedByMessageCountLimit'
    // TODO: Method 'GetMessageCountLimit'
    // TODO: Method 'AddStorageFilterEntries'
    // TODO: Method 'GetStorageFilter'
    // TODO: Method 'ClearStorageFilter'
    // TODO: Method 'PushEmptyStorageFilter'
    // TODO: Method 'PushCopyOfStorageFilter'
    // TODO: Method 'PushStorageFilter'
    // TODO: Method 'PopStorageFilter'
    // TODO: Method 'GetStorageFilterStackSize'
    // TODO: Method 'AddRetrievalFilterEntries'
    // TODO: Method 'GetRetrievalFilter'
    // TODO: Method 'ClearRetrievalFilter'
    // TODO: Method 'PushEmptyRetrievalFilter'
    // TODO: Method 'PushCopyOfRetrievalFilter'
    // TODO: Method 'PushRetrievalFilter'
    // TODO: Method 'PopRetrievalFilter'
    // TODO: Method 'GetRetrievalFilterStackSize'
    // TODO: Method 'AddMessage'
    // TODO: Method 'AddApplicationMessage'
    // TODO: Method 'SetBreakOnCategory'
    // TODO: Method 'SetBreakOnSeverity'
    // TODO: Method 'SetBreakOnID'
    // TODO: Method 'GetBreakOnCategory'
    // TODO: Method 'GetBreakOnSeverity'
    // TODO: Method 'GetBreakOnID'
    // TODO: Method 'SetMuteDebugOutput'
    // TODO: Method 'GetMuteDebugOutput'
};
// --------------------------------------------------------
// Type: PFN_D3D11_CREATE_DEVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFN_D3D11_CREATE_DEVICE = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: D3D11_COPY_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_COPY_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_LOGIC_OP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_LOGIC_OP = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RENDER_TARGET_BLEND_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RENDER_TARGET_BLEND_DESC1 = extern struct {
    BlendEnable: Windows.Win32.SystemServices.BOOL,
    LogicOpEnable: Windows.Win32.SystemServices.BOOL,
    SrcBlend: Windows.Win32.Direct3D11.D3D11_BLEND,
    DestBlend: Windows.Win32.Direct3D11.D3D11_BLEND,
    BlendOp: Windows.Win32.Direct3D11.D3D11_BLEND_OP,
    SrcBlendAlpha: Windows.Win32.Direct3D11.D3D11_BLEND,
    DestBlendAlpha: Windows.Win32.Direct3D11.D3D11_BLEND,
    BlendOpAlpha: Windows.Win32.Direct3D11.D3D11_BLEND_OP,
    LogicOp: Windows.Win32.Direct3D11.D3D11_LOGIC_OP,
    RenderTargetWriteMask: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: D3D11_BLEND_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_BLEND_DESC1 = extern struct {
    AlphaToCoverageEnable: Windows.Win32.SystemServices.BOOL,
    IndependentBlendEnable: Windows.Win32.SystemServices.BOOL,
    RenderTarget: {"kind":"Array","child": Windows.Win32.Direct3D11.D3D11_RENDER_TARGET_BLEND_DESC1},
};
// --------------------------------------------------------
// Type: ID3D11BlendState1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11BlendState1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_RASTERIZER_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RASTERIZER_DESC1 = extern struct {
    FillMode: Windows.Win32.Direct3D11.D3D11_FILL_MODE,
    CullMode: Windows.Win32.Direct3D11.D3D11_CULL_MODE,
    FrontCounterClockwise: Windows.Win32.SystemServices.BOOL,
    DepthBias: {"kind":"Int32"},
    DepthBiasClamp: {"kind":"Single"},
    SlopeScaledDepthBias: {"kind":"Single"},
    DepthClipEnable: Windows.Win32.SystemServices.BOOL,
    ScissorEnable: Windows.Win32.SystemServices.BOOL,
    MultisampleEnable: Windows.Win32.SystemServices.BOOL,
    AntialiasedLineEnable: Windows.Win32.SystemServices.BOOL,
    ForcedSampleCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11RasterizerState1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RasterizerState1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: ID3DDeviceContextState
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DDeviceContextState = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11DeviceContext1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DeviceContext1 = *opaque{
    // TODO: Method 'CopySubresourceRegion1'
    // TODO: Method 'UpdateSubresource1'
    // TODO: Method 'DiscardResource'
    // TODO: Method 'DiscardView'
    // TODO: Method 'VSSetConstantBuffers1'
    // TODO: Method 'HSSetConstantBuffers1'
    // TODO: Method 'DSSetConstantBuffers1'
    // TODO: Method 'GSSetConstantBuffers1'
    // TODO: Method 'PSSetConstantBuffers1'
    // TODO: Method 'CSSetConstantBuffers1'
    // TODO: Method 'VSGetConstantBuffers1'
    // TODO: Method 'HSGetConstantBuffers1'
    // TODO: Method 'DSGetConstantBuffers1'
    // TODO: Method 'GSGetConstantBuffers1'
    // TODO: Method 'PSGetConstantBuffers1'
    // TODO: Method 'CSGetConstantBuffers1'
    // TODO: Method 'SwapDeviceContextState'
    // TODO: Method 'ClearView'
    // TODO: Method 'DiscardView1'
};
// --------------------------------------------------------
// Type: ID3D11Device1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Device1 = *opaque{
    // TODO: Method 'GetImmediateContext1'
    // TODO: Method 'CreateDeferredContext1'
    // TODO: Method 'CreateBlendState1'
    // TODO: Method 'CreateRasterizerState1'
    // TODO: Method 'CreateDeviceContextState'
    // TODO: Method 'OpenSharedResource1'
    // TODO: Method 'OpenSharedResourceByName'
};
// --------------------------------------------------------
// Type: ID3DUserDefinedAnnotation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DUserDefinedAnnotation = *opaque{
    // TODO: Method 'BeginEvent'
    // TODO: Method 'EndEvent'
    // TODO: Method 'SetMarker'
    // TODO: Method 'GetStatus'
};
// --------------------------------------------------------
// Type: D3D11_TILED_RESOURCE_COORDINATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TILED_RESOURCE_COORDINATE = extern struct {
    X: {"kind":"UInt32"},
    Y: {"kind":"UInt32"},
    Z: {"kind":"UInt32"},
    Subresource: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TILE_REGION_SIZE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TILE_REGION_SIZE = extern struct {
    NumTiles: {"kind":"UInt32"},
    bUseBox: Windows.Win32.SystemServices.BOOL,
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt16"},
    Depth: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: D3D11_TILE_MAPPING_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TILE_MAPPING_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TILE_RANGE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TILE_RANGE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_SUBRESOURCE_TILING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SUBRESOURCE_TILING = extern struct {
    WidthInTiles: {"kind":"UInt32"},
    HeightInTiles: {"kind":"UInt16"},
    DepthInTiles: {"kind":"UInt16"},
    StartTileIndexInOverallResource: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TILE_SHAPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TILE_SHAPE = extern struct {
    WidthInTexels: {"kind":"UInt32"},
    HeightInTexels: {"kind":"UInt32"},
    DepthInTexels: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_PACKED_MIP_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_PACKED_MIP_DESC = extern struct {
    NumStandardMips: {"kind":"Byte"},
    NumPackedMips: {"kind":"Byte"},
    NumTilesForPackedMips: {"kind":"UInt32"},
    StartTileIndexInOverallResource: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CHECK_MULTISAMPLE_QUALITY_LEVELS_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TILE_COPY_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TILE_COPY_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11DeviceContext2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DeviceContext2 = *opaque{
    // TODO: Method 'UpdateTileMappings'
    // TODO: Method 'CopyTileMappings'
    // TODO: Method 'CopyTiles'
    // TODO: Method 'UpdateTiles'
    // TODO: Method 'ResizeTilePool'
    // TODO: Method 'TiledResourceBarrier'
    // TODO: Method 'IsAnnotationEnabled'
    // TODO: Method 'SetMarkerInt'
    // TODO: Method 'BeginEventInt'
    // TODO: Method 'EndEvent'
};
// --------------------------------------------------------
// Type: ID3D11Device2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Device2 = *opaque{
    // TODO: Method 'GetImmediateContext2'
    // TODO: Method 'CreateDeferredContext2'
    // TODO: Method 'GetResourceTiling'
    // TODO: Method 'CheckMultisampleQualityLevels1'
};
// --------------------------------------------------------
// Type: D3D11_CONTEXT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CONTEXT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE_LAYOUT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TEXTURE_LAYOUT = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE2D_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXTURE2D_DESC1 = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    SampleDesc: Windows.Win32.Dxgi.DXGI_SAMPLE_DESC,
    Usage: Windows.Win32.Direct3D11.D3D11_USAGE,
    BindFlags: {"kind":"UInt32"},
    CPUAccessFlags: {"kind":"UInt32"},
    MiscFlags: {"kind":"UInt32"},
    TextureLayout: Windows.Win32.Direct3D11.D3D11_TEXTURE_LAYOUT,
};
// --------------------------------------------------------
// Type: ID3D11Texture2D1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Texture2D1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_TEXTURE3D_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEXTURE3D_DESC1 = extern struct {
    Width: {"kind":"UInt32"},
    Height: {"kind":"UInt32"},
    Depth: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    Usage: Windows.Win32.Direct3D11.D3D11_USAGE,
    BindFlags: {"kind":"UInt32"},
    CPUAccessFlags: {"kind":"UInt32"},
    MiscFlags: {"kind":"UInt32"},
    TextureLayout: Windows.Win32.Direct3D11.D3D11_TEXTURE_LAYOUT,
};
// --------------------------------------------------------
// Type: ID3D11Texture3D1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Texture3D1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_CONSERVATIVE_RASTERIZATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CONSERVATIVE_RASTERIZATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_RASTERIZER_DESC2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RASTERIZER_DESC2 = extern struct {
    FillMode: Windows.Win32.Direct3D11.D3D11_FILL_MODE,
    CullMode: Windows.Win32.Direct3D11.D3D11_CULL_MODE,
    FrontCounterClockwise: Windows.Win32.SystemServices.BOOL,
    DepthBias: {"kind":"Int32"},
    DepthBiasClamp: {"kind":"Single"},
    SlopeScaledDepthBias: {"kind":"Single"},
    DepthClipEnable: Windows.Win32.SystemServices.BOOL,
    ScissorEnable: Windows.Win32.SystemServices.BOOL,
    MultisampleEnable: Windows.Win32.SystemServices.BOOL,
    AntialiasedLineEnable: Windows.Win32.SystemServices.BOOL,
    ForcedSampleCount: {"kind":"UInt32"},
    ConservativeRaster: Windows.Win32.Direct3D11.D3D11_CONSERVATIVE_RASTERIZATION_MODE,
};
// --------------------------------------------------------
// Type: ID3D11RasterizerState2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RasterizerState2 = *opaque{
    // TODO: Method 'GetDesc2'
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_SRV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_SRV1 = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    PlaneSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_SRV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_SRV1 = extern struct {
    MostDetailedMip: {"kind":"UInt32"},
    MipLevels: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
    PlaneSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_RESOURCE_VIEW_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_RESOURCE_VIEW_DESC1 = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D_SRV_DIMENSION,
    Anonymous: Windows.Win32.Direct3D11.D3D11_SHADER_RESOURCE_VIEW_DESC1+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11ShaderResourceView1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderResourceView1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_RTV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_RTV1 = extern struct {
    MipSlice: {"kind":"UInt32"},
    PlaneSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_RTV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_RTV1 = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
    PlaneSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_RENDER_TARGET_VIEW_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_RENDER_TARGET_VIEW_DESC1 = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D11_RTV_DIMENSION,
    Anonymous: Windows.Win32.Direct3D11.D3D11_RENDER_TARGET_VIEW_DESC1+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11RenderTargetView1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11RenderTargetView1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_UAV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_UAV1 = extern struct {
    MipSlice: {"kind":"UInt32"},
    PlaneSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_TEX2D_ARRAY_UAV1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TEX2D_ARRAY_UAV1 = extern struct {
    MipSlice: {"kind":"UInt32"},
    FirstArraySlice: {"kind":"UInt32"},
    ArraySize: {"kind":"UInt32"},
    PlaneSlice: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_UNORDERED_ACCESS_VIEW_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_UNORDERED_ACCESS_VIEW_DESC1 = extern struct {
    Format: Windows.Win32.Dxgi.DXGI_FORMAT,
    ViewDimension: Windows.Win32.Direct3D11.D3D11_UAV_DIMENSION,
    Anonymous: Windows.Win32.Direct3D11.D3D11_UNORDERED_ACCESS_VIEW_DESC1+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: ID3D11UnorderedAccessView1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11UnorderedAccessView1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_QUERY_DESC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_QUERY_DESC1 = extern struct {
    Query: Windows.Win32.Direct3D11.D3D11_QUERY,
    MiscFlags: {"kind":"UInt32"},
    ContextType: Windows.Win32.Direct3D11.D3D11_CONTEXT_TYPE,
};
// --------------------------------------------------------
// Type: ID3D11Query1
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Query1 = *opaque{
    // TODO: Method 'GetDesc1'
};
// --------------------------------------------------------
// Type: D3D11_FENCE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_FENCE_FLAG = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11DeviceContext3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DeviceContext3 = *opaque{
    // TODO: Method 'Flush1'
    // TODO: Method 'SetHardwareProtectionState'
    // TODO: Method 'GetHardwareProtectionState'
};
// --------------------------------------------------------
// Type: ID3D11Fence
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Fence = *opaque{
    // TODO: Method 'CreateSharedHandle'
    // TODO: Method 'GetCompletedValue'
    // TODO: Method 'SetEventOnCompletion'
};
// --------------------------------------------------------
// Type: ID3D11DeviceContext4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11DeviceContext4 = *opaque{
    // TODO: Method 'Signal'
    // TODO: Method 'Wait'
};
// --------------------------------------------------------
// Type: ID3D11Device3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Device3 = *opaque{
    // TODO: Method 'CreateTexture2D1'
    // TODO: Method 'CreateTexture3D1'
    // TODO: Method 'CreateRasterizerState2'
    // TODO: Method 'CreateShaderResourceView1'
    // TODO: Method 'CreateUnorderedAccessView1'
    // TODO: Method 'CreateRenderTargetView1'
    // TODO: Method 'CreateQuery1'
    // TODO: Method 'GetImmediateContext3'
    // TODO: Method 'CreateDeferredContext3'
    // TODO: Method 'WriteToSubresource'
    // TODO: Method 'ReadFromSubresource'
};
// --------------------------------------------------------
// Type: ID3D11Device4
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Device4 = *opaque{
    // TODO: Method 'RegisterDeviceRemovedEvent'
    // TODO: Method 'UnregisterDeviceRemoved'
};
// --------------------------------------------------------
// Type: ID3D11Device5
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Device5 = *opaque{
    // TODO: Method 'OpenSharedFence'
    // TODO: Method 'CreateFence'
};
// --------------------------------------------------------
// Type: ID3D11Multithread
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Multithread = *opaque{
    // TODO: Method 'Enter'
    // TODO: Method 'Leave'
    // TODO: Method 'SetMultithreadProtected'
    // TODO: Method 'GetMultithreadProtected'
};
// --------------------------------------------------------
// Type: D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_VIDEO_DECODER_HISTOGRAM = extern struct {
    DecoderDesc: Windows.Win32.MediaFoundation.D3D11_VIDEO_DECODER_DESC,
    Components: Windows.Win32.Direct3D11.D3D11_VIDEO_DECODER_HISTOGRAM_COMPONENT_FLAGS,
    BinCount: {"kind":"UInt32"},
    CounterBitDepth: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_CRYPTO_SESSION_KEY_EXCHANGE_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11VideoDevice2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11VideoDevice2 = *opaque{
    // TODO: Method 'CheckFeatureSupport'
    // TODO: Method 'NegotiateCryptoSessionKeyExchangeMT'
};
// --------------------------------------------------------
// Type: D3D11_VIDEO_DECODER_BUFFER_DESC2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_VIDEO_DECODER_BUFFER_DESC2 = extern struct {
    BufferType: Windows.Win32.MediaFoundation.D3D11_VIDEO_DECODER_BUFFER_TYPE,
    DataOffset: {"kind":"UInt32"},
    DataSize: {"kind":"UInt32"},
    pIV: {"kind""Ptr","child":{"kind":"Void"}},
    IVSize: {"kind":"UInt32"},
    pSubSampleMappingBlock: {"kind""Ptr","child":Windows.Win32.MediaFoundation.D3D11_VIDEO_DECODER_SUB_SAMPLE_MAPPING_BLOCK},
    SubSampleMappingCount: {"kind":"UInt32"},
    cBlocksStripeEncrypted: {"kind":"UInt32"},
    cBlocksStripeClear: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11VideoContext3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11VideoContext3 = *opaque{
    // TODO: Method 'DecoderBeginFrame1'
    // TODO: Method 'SubmitDecoderBuffers2'
};
// --------------------------------------------------------
// Type: D3D11_FEATURE_DATA_D3D11_OPTIONS4
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FEATURE_DATA_D3D11_OPTIONS4 = extern struct {
    ExtendedNV12SharedTextureSupported: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_SHADER_VERSION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHADER_VERSION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_SIGNATURE_PARAMETER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SIGNATURE_PARAMETER_DESC = extern struct {
    SemanticName: {"kind""Ptr","child":{"kind":"SByte"}},
    SemanticIndex: {"kind":"UInt32"},
    Register: {"kind":"UInt32"},
    SystemValueType: Windows.Win32.Direct3D11.D3D_NAME,
    ComponentType: Windows.Win32.Direct3D11.D3D_REGISTER_COMPONENT_TYPE,
    Mask: {"kind":"Byte"},
    ReadWriteMask: {"kind":"Byte"},
    Stream: {"kind":"UInt32"},
    MinPrecision: Windows.Win32.Direct3D11.D3D_MIN_PRECISION,
};
// --------------------------------------------------------
// Type: D3D11_SHADER_BUFFER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_BUFFER_DESC = extern struct {
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
    Type: Windows.Win32.Direct3D11.D3D_CBUFFER_TYPE,
    Variables: {"kind":"UInt32"},
    Size: {"kind":"UInt32"},
    uFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_VARIABLE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_VARIABLE_DESC = extern struct {
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
    StartOffset: {"kind":"UInt32"},
    Size: {"kind":"UInt32"},
    uFlags: {"kind":"UInt32"},
    DefaultValue: {"kind""Ptr","child":{"kind":"Void"}},
    StartTexture: {"kind":"UInt32"},
    TextureSize: {"kind":"UInt32"},
    StartSampler: {"kind":"UInt32"},
    SamplerSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_TYPE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_TYPE_DESC = extern struct {
    Class: Windows.Win32.Direct3D11.D3D_SHADER_VARIABLE_CLASS,
    Type: Windows.Win32.Direct3D11.D3D_SHADER_VARIABLE_TYPE,
    Rows: {"kind":"UInt32"},
    Columns: {"kind":"UInt32"},
    Elements: {"kind":"UInt32"},
    Members: {"kind":"UInt32"},
    Offset: {"kind":"UInt32"},
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_DESC = extern struct {
    Version: {"kind":"UInt32"},
    Creator: {"kind""Ptr","child":{"kind":"SByte"}},
    Flags: {"kind":"UInt32"},
    ConstantBuffers: {"kind":"UInt32"},
    BoundResources: {"kind":"UInt32"},
    InputParameters: {"kind":"UInt32"},
    OutputParameters: {"kind":"UInt32"},
    InstructionCount: {"kind":"UInt32"},
    TempRegisterCount: {"kind":"UInt32"},
    TempArrayCount: {"kind":"UInt32"},
    DefCount: {"kind":"UInt32"},
    DclCount: {"kind":"UInt32"},
    TextureNormalInstructions: {"kind":"UInt32"},
    TextureLoadInstructions: {"kind":"UInt32"},
    TextureCompInstructions: {"kind":"UInt32"},
    TextureBiasInstructions: {"kind":"UInt32"},
    TextureGradientInstructions: {"kind":"UInt32"},
    FloatInstructionCount: {"kind":"UInt32"},
    IntInstructionCount: {"kind":"UInt32"},
    UintInstructionCount: {"kind":"UInt32"},
    StaticFlowControlCount: {"kind":"UInt32"},
    DynamicFlowControlCount: {"kind":"UInt32"},
    MacroInstructionCount: {"kind":"UInt32"},
    ArrayInstructionCount: {"kind":"UInt32"},
    CutInstructionCount: {"kind":"UInt32"},
    EmitInstructionCount: {"kind":"UInt32"},
    GSOutputTopology: Windows.Win32.Direct3D11.D3D_PRIMITIVE_TOPOLOGY,
    GSMaxOutputVertexCount: {"kind":"UInt32"},
    InputPrimitive: Windows.Win32.Direct3D11.D3D_PRIMITIVE,
    PatchConstantParameters: {"kind":"UInt32"},
    cGSInstanceCount: {"kind":"UInt32"},
    cControlPoints: {"kind":"UInt32"},
    HSOutputPrimitive: Windows.Win32.Direct3D11.D3D_TESSELLATOR_OUTPUT_PRIMITIVE,
    HSPartitioning: Windows.Win32.Direct3D11.D3D_TESSELLATOR_PARTITIONING,
    TessellatorDomain: Windows.Win32.Direct3D11.D3D_TESSELLATOR_DOMAIN,
    cBarrierInstructions: {"kind":"UInt32"},
    cInterlockedInstructions: {"kind":"UInt32"},
    cTextureStoreInstructions: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_INPUT_BIND_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_INPUT_BIND_DESC = extern struct {
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
    Type: Windows.Win32.Direct3D11.D3D_SHADER_INPUT_TYPE,
    BindPoint: {"kind":"UInt32"},
    BindCount: {"kind":"UInt32"},
    uFlags: {"kind":"UInt32"},
    ReturnType: Windows.Win32.Direct3D11.D3D_RESOURCE_RETURN_TYPE,
    Dimension: Windows.Win32.Direct3D11.D3D_SRV_DIMENSION,
    NumSamples: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_LIBRARY_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_LIBRARY_DESC = extern struct {
    Creator: {"kind""Ptr","child":{"kind":"SByte"}},
    Flags: {"kind":"UInt32"},
    FunctionCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: D3D11_FUNCTION_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_FUNCTION_DESC = extern struct {
    Version: {"kind":"UInt32"},
    Creator: {"kind""Ptr","child":{"kind":"SByte"}},
    Flags: {"kind":"UInt32"},
    ConstantBuffers: {"kind":"UInt32"},
    BoundResources: {"kind":"UInt32"},
    InstructionCount: {"kind":"UInt32"},
    TempRegisterCount: {"kind":"UInt32"},
    TempArrayCount: {"kind":"UInt32"},
    DefCount: {"kind":"UInt32"},
    DclCount: {"kind":"UInt32"},
    TextureNormalInstructions: {"kind":"UInt32"},
    TextureLoadInstructions: {"kind":"UInt32"},
    TextureCompInstructions: {"kind":"UInt32"},
    TextureBiasInstructions: {"kind":"UInt32"},
    TextureGradientInstructions: {"kind":"UInt32"},
    FloatInstructionCount: {"kind":"UInt32"},
    IntInstructionCount: {"kind":"UInt32"},
    UintInstructionCount: {"kind":"UInt32"},
    StaticFlowControlCount: {"kind":"UInt32"},
    DynamicFlowControlCount: {"kind":"UInt32"},
    MacroInstructionCount: {"kind":"UInt32"},
    ArrayInstructionCount: {"kind":"UInt32"},
    MovInstructionCount: {"kind":"UInt32"},
    MovcInstructionCount: {"kind":"UInt32"},
    ConversionInstructionCount: {"kind":"UInt32"},
    BitwiseInstructionCount: {"kind":"UInt32"},
    MinFeatureLevel: Windows.Win32.Direct3D11.D3D_FEATURE_LEVEL,
    RequiredFeatureFlags: {"kind":"UInt64"},
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
    FunctionParameterCount: {"kind":"Int32"},
    HasReturn: Windows.Win32.SystemServices.BOOL,
    Has10Level9VertexShader: Windows.Win32.SystemServices.BOOL,
    Has10Level9PixelShader: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: D3D11_PARAMETER_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_PARAMETER_DESC = extern struct {
    Name: {"kind""Ptr","child":{"kind":"SByte"}},
    SemanticName: {"kind""Ptr","child":{"kind":"SByte"}},
    Type: Windows.Win32.Direct3D11.D3D_SHADER_VARIABLE_TYPE,
    Class: Windows.Win32.Direct3D11.D3D_SHADER_VARIABLE_CLASS,
    Rows: {"kind":"UInt32"},
    Columns: {"kind":"UInt32"},
    InterpolationMode: Windows.Win32.Direct3D11.D3D_INTERPOLATION_MODE,
    Flags: Windows.Win32.Direct3D11.D3D_PARAMETER_FLAGS,
    FirstInRegister: {"kind":"UInt32"},
    FirstInComponent: {"kind":"UInt32"},
    FirstOutRegister: {"kind":"UInt32"},
    FirstOutComponent: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ID3D11ShaderReflectionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderReflectionType = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetMemberTypeByIndex'
    // TODO: Method 'GetMemberTypeByName'
    // TODO: Method 'GetMemberTypeName'
    // TODO: Method 'IsEqual'
    // TODO: Method 'GetSubType'
    // TODO: Method 'GetBaseClass'
    // TODO: Method 'GetNumInterfaces'
    // TODO: Method 'GetInterfaceByIndex'
    // TODO: Method 'IsOfType'
    // TODO: Method 'ImplementsInterface'
};
// --------------------------------------------------------
// Type: ID3D11ShaderReflectionVariable
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderReflectionVariable = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetType'
    // TODO: Method 'GetBuffer'
    // TODO: Method 'GetInterfaceSlot'
};
// --------------------------------------------------------
// Type: ID3D11ShaderReflectionConstantBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderReflectionConstantBuffer = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetVariableByIndex'
    // TODO: Method 'GetVariableByName'
};
// --------------------------------------------------------
// Type: ID3D11ShaderReflection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderReflection = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetConstantBufferByIndex'
    // TODO: Method 'GetConstantBufferByName'
    // TODO: Method 'GetResourceBindingDesc'
    // TODO: Method 'GetInputParameterDesc'
    // TODO: Method 'GetOutputParameterDesc'
    // TODO: Method 'GetPatchConstantParameterDesc'
    // TODO: Method 'GetVariableByName'
    // TODO: Method 'GetResourceBindingDescByName'
    // TODO: Method 'GetMovInstructionCount'
    // TODO: Method 'GetMovcInstructionCount'
    // TODO: Method 'GetConversionInstructionCount'
    // TODO: Method 'GetBitwiseInstructionCount'
    // TODO: Method 'GetGSInputPrimitive'
    // TODO: Method 'IsSampleFrequencyShader'
    // TODO: Method 'GetNumInterfaceSlots'
    // TODO: Method 'GetMinFeatureLevel'
    // TODO: Method 'GetThreadGroupSize'
    // TODO: Method 'GetRequiresFlags'
};
// --------------------------------------------------------
// Type: ID3D11LibraryReflection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11LibraryReflection = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetFunctionByIndex'
};
// --------------------------------------------------------
// Type: ID3D11FunctionReflection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11FunctionReflection = *opaque{
    // TODO: Method 'GetDesc'
    // TODO: Method 'GetConstantBufferByIndex'
    // TODO: Method 'GetConstantBufferByName'
    // TODO: Method 'GetResourceBindingDesc'
    // TODO: Method 'GetVariableByName'
    // TODO: Method 'GetResourceBindingDescByName'
    // TODO: Method 'GetFunctionParameter'
};
// --------------------------------------------------------
// Type: ID3D11FunctionParameterReflection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11FunctionParameterReflection = *opaque{
    // TODO: Method 'GetDesc'
};
// --------------------------------------------------------
// Type: ID3D11Module
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Module = *opaque{
    // TODO: Method 'CreateInstance'
};
// --------------------------------------------------------
// Type: ID3D11ModuleInstance
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ModuleInstance = *opaque{
    // TODO: Method 'BindConstantBuffer'
    // TODO: Method 'BindConstantBufferByName'
    // TODO: Method 'BindResource'
    // TODO: Method 'BindResourceByName'
    // TODO: Method 'BindSampler'
    // TODO: Method 'BindSamplerByName'
    // TODO: Method 'BindUnorderedAccessView'
    // TODO: Method 'BindUnorderedAccessViewByName'
    // TODO: Method 'BindResourceAsUnorderedAccessView'
    // TODO: Method 'BindResourceAsUnorderedAccessViewByName'
};
// --------------------------------------------------------
// Type: ID3D11Linker
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11Linker = *opaque{
    // TODO: Method 'Link'
    // TODO: Method 'UseLibrary'
    // TODO: Method 'AddClipPlaneFromCBuffer'
};
// --------------------------------------------------------
// Type: ID3D11LinkingNode
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11LinkingNode = *opaque{
};
// --------------------------------------------------------
// Type: ID3D11FunctionLinkingGraph
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11FunctionLinkingGraph = *opaque{
    // TODO: Method 'CreateModuleInstance'
    // TODO: Method 'SetInputSignature'
    // TODO: Method 'SetOutputSignature'
    // TODO: Method 'CallFunction'
    // TODO: Method 'PassValue'
    // TODO: Method 'PassValueWithSwizzle'
    // TODO: Method 'GetLastError'
    // TODO: Method 'GenerateHlsl'
};
// --------------------------------------------------------
// Type: D3D11_SHADER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_SHADER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_VERTEX_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_VERTEX_SHADER_TRACE_DESC = extern struct {
    Invocation: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_HULL_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_HULL_SHADER_TRACE_DESC = extern struct {
    Invocation: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_DOMAIN_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_DOMAIN_SHADER_TRACE_DESC = extern struct {
    Invocation: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_GEOMETRY_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_GEOMETRY_SHADER_TRACE_DESC = extern struct {
    Invocation: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_PIXEL_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_PIXEL_SHADER_TRACE_DESC = extern struct {
    Invocation: {"kind":"UInt64"},
    X: {"kind":"Int32"},
    Y: {"kind":"Int32"},
    SampleMask: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: D3D11_COMPUTE_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_COMPUTE_SHADER_TRACE_DESC = extern struct {
    Invocation: {"kind":"UInt64"},
    ThreadIDInGroup: {"kind":"Array","child": {"kind":"UInt32"}},
    ThreadGroupID: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: D3D11_SHADER_TRACE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_SHADER_TRACE_DESC = extern struct {
    Type: Windows.Win32.Direct3D11.D3D11_SHADER_TYPE,
    Flags: {"kind":"UInt32"},
    Anonymous: Windows.Win32.Direct3D11.D3D11_SHADER_TRACE_DESC+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: D3D11_TRACE_GS_INPUT_PRIMITIVE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TRACE_GS_INPUT_PRIMITIVE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TRACE_STATS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TRACE_STATS = extern struct {
    TraceDesc: Windows.Win32.Direct3D11.D3D11_SHADER_TRACE_DESC,
    NumInvocationsInStamp: {"kind":"Byte"},
    TargetStampIndex: {"kind":"Byte"},
    NumTraceSteps: {"kind":"UInt32"},
    InputMask: {"kind":"Array","child": {"kind":"Byte"}},
    OutputMask: {"kind":"Array","child": {"kind":"Byte"}},
    NumTemps: {"kind":"UInt16"},
    MaxIndexableTempIndex: {"kind":"UInt16"},
    IndexableTempSize: {"kind":"Array","child": {"kind":"UInt16"}},
    ImmediateConstantBufferSize: {"kind":"UInt16"},
    PixelPosition: {"kind":"Array","child": {"kind":"UInt32"}},
    PixelCoverageMask: {"kind":"Array","child": {"kind":"UInt64"}},
    PixelDiscardedMask: {"kind":"Array","child": {"kind":"UInt64"}},
    PixelCoverageMaskAfterShader: {"kind":"Array","child": {"kind":"UInt64"}},
    PixelCoverageMaskAfterA2CSampleMask: {"kind":"Array","child": {"kind":"UInt64"}},
    PixelCoverageMaskAfterA2CSampleMaskDepth: {"kind":"Array","child": {"kind":"UInt64"}},
    PixelCoverageMaskAfterA2CSampleMaskDepthStencil: {"kind":"Array","child": {"kind":"UInt64"}},
    PSOutputsDepth: Windows.Win32.SystemServices.BOOL,
    PSOutputsMask: Windows.Win32.SystemServices.BOOL,
    GSInputPrimitive: Windows.Win32.Direct3D11.D3D11_TRACE_GS_INPUT_PRIMITIVE,
    GSInputsPrimitiveID: Windows.Win32.SystemServices.BOOL,
    HSOutputPatchConstantMask: {"kind":"Array","child": {"kind":"Byte"}},
    DSInputPatchConstantMask: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: D3D11_TRACE_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TRACE_VALUE = extern struct {
    Bits: {"kind":"Array","child": {"kind":"UInt32"}},
    ValidMask: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: D3D11_TRACE_REGISTER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3D11_TRACE_REGISTER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3D11_TRACE_REGISTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TRACE_REGISTER = extern struct {
    RegType: Windows.Win32.Direct3D11.D3D11_TRACE_REGISTER_TYPE,
    Anonymous: Windows.Win32.Direct3D11.D3D11_TRACE_REGISTER+_Anonymous_e__Union,
    OperandIndex: {"kind":"Byte"},
    Flags: {"kind":"Byte"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: D3D11_TRACE_STEP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3D11_TRACE_STEP = extern struct {
    ID: {"kind":"UInt32"},
    InstructionActive: Windows.Win32.SystemServices.BOOL,
    NumRegistersWritten: {"kind":"Byte"},
    NumRegistersRead: {"kind":"Byte"},
    MiscOperations: {"kind":"UInt16"},
    OpcodeType: {"kind":"UInt32"},
    CurrentGlobalCycle: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: ID3D11ShaderTrace
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderTrace = *opaque{
    // TODO: Method 'TraceReady'
    // TODO: Method 'ResetTrace'
    // TODO: Method 'GetTraceStats'
    // TODO: Method 'PSSelectStamp'
    // TODO: Method 'GetInitialRegisterContents'
    // TODO: Method 'GetStep'
    // TODO: Method 'GetWrittenRegister'
    // TODO: Method 'GetReadRegister'
};
// --------------------------------------------------------
// Type: ID3D11ShaderTraceFactory
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3D11ShaderTraceFactory = *opaque{
    // TODO: Method 'CreateShaderTrace'
};
// --------------------------------------------------------
// Type: D3DX11_SCAN_DATA_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3DX11_SCAN_DATA_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3DX11_SCAN_OPCODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3DX11_SCAN_OPCODE = *opaque{
};
// --------------------------------------------------------
// Type: D3DX11_SCAN_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3DX11_SCAN_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: ID3DX11Scan
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DX11Scan = *opaque{
    // TODO: Method 'SetScanDirection'
    // TODO: Method 'Scan'
    // TODO: Method 'Multiscan'
};
// --------------------------------------------------------
// Type: ID3DX11SegmentedScan
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DX11SegmentedScan = *opaque{
    // TODO: Method 'SetScanDirection'
    // TODO: Method 'SegScan'
};
// --------------------------------------------------------
// Type: ID3DX11FFT
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ID3DX11FFT = *opaque{
    // TODO: Method 'SetForwardScale'
    // TODO: Method 'GetForwardScale'
    // TODO: Method 'SetInverseScale'
    // TODO: Method 'GetInverseScale'
    // TODO: Method 'AttachBuffersAndPrecompute'
    // TODO: Method 'ForwardTransform'
    // TODO: Method 'InverseTransform'
};
// --------------------------------------------------------
// Type: D3DX11_FFT_DATA_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3DX11_FFT_DATA_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: D3DX11_FFT_DIM_MASK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3DX11_FFT_DIM_MASK = *opaque{
};
// --------------------------------------------------------
// Type: D3DX11_FFT_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3DX11_FFT_DESC = extern struct {
    NumDimensions: {"kind":"UInt32"},
    ElementLengths: {"kind":"Array","child": {"kind":"UInt32"}},
    DimensionMask: {"kind":"UInt32"},
    Type: Windows.Win32.Direct3D11.D3DX11_FFT_DATA_TYPE,
};
// --------------------------------------------------------
// Type: D3DX11_FFT_BUFFER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const D3DX11_FFT_BUFFER_INFO = extern struct {
    NumTempBufferSizes: {"kind":"UInt32"},
    TempBufferFloatSizes: {"kind":"Array","child": {"kind":"UInt32"}},
    NumPrecomputeBufferSizes: {"kind":"UInt32"},
    PrecomputeBufferFloatSizes: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: D3DX11_FFT_CREATE_FLAG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const D3DX11_FFT_CREATE_FLAG = *opaque{
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "d3d11" fn D3D11CreateDevice(
    pAdapter: Windows.Win32.Dxgi.IDXGIAdapter,
    DriverType: Windows.Win32.Direct3D11.D3D_DRIVER_TYPE,
    Software: {"kind":"IntPtr"},
    Flags: {"kind":"UInt32"},
    pFeatureLevels: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D_FEATURE_LEVEL},
    FeatureLevels: {"kind":"UInt32"},
    SDKVersion: {"kind":"UInt32"},
    ppDevice: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3D11Device},
    pFeatureLevel: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D_FEATURE_LEVEL},
    ppImmediateContext: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3D11DeviceContext},

// set_last_errror=False (can and should we use this?)
pub extern "d3d11" fn D3D11CreateDeviceAndSwapChain(
    pAdapter: Windows.Win32.Dxgi.IDXGIAdapter,
    DriverType: Windows.Win32.Direct3D11.D3D_DRIVER_TYPE,
    Software: {"kind":"IntPtr"},
    Flags: {"kind":"UInt32"},
    pFeatureLevels: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D_FEATURE_LEVEL},
    FeatureLevels: {"kind":"UInt32"},
    SDKVersion: {"kind":"UInt32"},
    pSwapChainDesc: {"kind""Ptr","child":Windows.Win32.Dxgi.DXGI_SWAP_CHAIN_DESC},
    ppSwapChain: {"kind""Ptr","child":Windows.Win32.Dxgi.IDXGISwapChain},
    ppDevice: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3D11Device},
    pFeatureLevel: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3D_FEATURE_LEVEL},
    ppImmediateContext: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3D11DeviceContext},

// set_last_errror=False (can and should we use this?)
pub extern "D3DCOMPILER_47" fn D3DDisassemble11Trace(
    pSrcData: {"kind""Ptr","child":{"kind":"Void"}},
    SrcDataSize: {"kind":"UIntPtr"},
    pTrace: Windows.Win32.Direct3D11.ID3D11ShaderTrace,
    StartStep: {"kind":"UInt32"},
    NumSteps: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    ppDisassembly: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DBlob},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateScan(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    MaxElementScanSize: {"kind":"UInt32"},
    MaxScanCount: {"kind":"UInt32"},
    ppScan: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11Scan},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateSegmentedScan(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    MaxElementScanSize: {"kind":"UInt32"},
    ppScan: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11SegmentedScan},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    pDesc: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_DESC},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT1DReal(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    X: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT1DComplex(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    X: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT2DReal(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    X: {"kind":"UInt32"},
    Y: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT2DComplex(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    X: {"kind":"UInt32"},
    Y: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT3DReal(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    X: {"kind":"UInt32"},
    Y: {"kind":"UInt32"},
    Z: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},

// set_last_errror=False (can and should we use this?)
pub extern "d3dcsx" fn D3DX11CreateFFT3DComplex(
    pDeviceContext: Windows.Win32.Direct3D11.ID3D11DeviceContext,
    X: {"kind":"UInt32"},
    Y: {"kind":"UInt32"},
    Z: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    pBufferInfo: {"kind""Ptr","child":Windows.Win32.Direct3D11.D3DX11_FFT_BUFFER_INFO},
    ppFFT: {"kind""Ptr","child":Windows.Win32.Direct3D11.ID3DX11FFT},
],

"unicode_aliases": [
]}
