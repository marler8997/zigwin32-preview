{
"constants": [
],

"types_definitions": [
// --------------------------------------------------------
// Type: FWP_DIRECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_DIRECTION = *opaque{
};
// --------------------------------------------------------
// Type: FWP_IP_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_IP_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: FWP_AF
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_AF = *opaque{
};
// --------------------------------------------------------
// Type: FWP_ETHER_ENCAP_METHOD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_ETHER_ENCAP_METHOD = *opaque{
};
// --------------------------------------------------------
// Type: FWP_DATA_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_DATA_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWP_BITMAP_ARRAY64_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_BITMAP_ARRAY64_ = extern struct {
    bitmapArray64: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: FWP_BYTE_ARRAY6
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_BYTE_ARRAY6 = extern struct {
    byteArray6: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: FWP_BYTE_ARRAY16
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_BYTE_ARRAY16 = extern struct {
    byteArray16: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: FWP_BYTE_BLOB
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_BYTE_BLOB = extern struct {
    size: {"kind":"UInt32"},
    data: {"kind""Ptr","child":{"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: FWP_TOKEN_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_TOKEN_INFORMATION = extern struct {
    sidCount: {"kind":"UInt32"},
    sids: {"kind""Ptr","child":Windows.Win32.Security.SID_AND_ATTRIBUTES},
    restrictedSidCount: {"kind":"UInt32"},
    restrictedSids: {"kind""Ptr","child":Windows.Win32.Security.SID_AND_ATTRIBUTES},
};
// --------------------------------------------------------
// Type: FWP_VALUE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_VALUE0 = extern struct {
    type: Windows.Win32.WindowsFiltering.FWP_DATA_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWP_VALUE0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWP_MATCH_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_MATCH_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWP_V4_ADDR_AND_MASK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_V4_ADDR_AND_MASK = extern struct {
    addr: {"kind":"UInt32"},
    mask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWP_V6_ADDR_AND_MASK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_V6_ADDR_AND_MASK = extern struct {
    addr: {"kind":"Array","child": {"kind":"Byte"}},
    prefixLength: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: FWP_RANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_RANGE0 = extern struct {
    valueLow: Windows.Win32.WindowsFiltering.FWP_VALUE0,
    valueHigh: Windows.Win32.WindowsFiltering.FWP_VALUE0,
};
// --------------------------------------------------------
// Type: FWP_CONDITION_VALUE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWP_CONDITION_VALUE0 = extern struct {
    type: Windows.Win32.WindowsFiltering.FWP_DATA_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWP_CONDITION_VALUE0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWP_CLASSIFY_OPTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_CLASSIFY_OPTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWP_VSWITCH_NETWORK_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_VSWITCH_NETWORK_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWP_FILTER_ENUM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWP_FILTER_ENUM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_DISPLAY_DATA0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_DISPLAY_DATA0 = extern struct {
    name: {"kind""Ptr","child":{"kind":"UInt16"}},
    description: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IPSEC_VIRTUAL_IF_TUNNEL_INFO0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_VIRTUAL_IF_TUNNEL_INFO0 = extern struct {
    virtualIfTunnelId: {"kind":"UInt64"},
    trafficSelectorId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IKEEXT_KEY_MODULE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_KEY_MODULE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_AUTHENTICATION_METHOD_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_AUTHENTICATION_METHOD_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_PRESHARED_KEY_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_PRESHARED_KEY_AUTHENTICATION0 = extern struct {
    presharedKey: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
};
// --------------------------------------------------------
// Type: IKEEXT_PRESHARED_KEY_AUTHENTICATION1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_PRESHARED_KEY_AUTHENTICATION1 = extern struct {
    presharedKey: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_CERT_ROOT_CONFIG0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERT_ROOT_CONFIG0 = extern struct {
    certData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_CERT_CONFIG_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_CERT_CONFIG_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_CERTIFICATE_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERTIFICATE_AUTHENTICATION0 = extern struct {
    inboundConfigType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CONFIG_TYPE,
    Anonymous1: Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_AUTHENTICATION0+_Anonymous1_e__Union,
    outboundConfigType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CONFIG_TYPE,
    Anonymous2: Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_AUTHENTICATION0+_Anonymous2_e__Union,
    flags: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            outboundRootArraySize: {"kind":"UInt32"},
            outboundRootArray: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERT_ROOT_CONFIG0},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            inboundRootArraySize: {"kind":"UInt32"},
            inboundRootArray: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERT_ROOT_CONFIG0},
        };
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CERTIFICATE_AUTHENTICATION1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERTIFICATE_AUTHENTICATION1 = extern struct {
    inboundConfigType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CONFIG_TYPE,
    Anonymous1: Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_AUTHENTICATION1+_Anonymous1_e__Union,
    outboundConfigType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CONFIG_TYPE,
    Anonymous2: Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_AUTHENTICATION1+_Anonymous2_e__Union,
    flags: {"kind":"UInt32"},
    localCertLocationUrl: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            outboundRootArraySize: {"kind":"UInt32"},
            outboundRootArray: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERT_ROOT_CONFIG0},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            inboundRootArraySize: {"kind":"UInt32"},
            inboundRootArray: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERT_ROOT_CONFIG0},
        };
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CERT_CRITERIA_NAME_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_CERT_CRITERIA_NAME_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_CERT_EKUS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERT_EKUS0 = extern struct {
    numEku: {"kind":"UInt32"},
    eku: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"SByte"}}},
};
// --------------------------------------------------------
// Type: IKEEXT_CERT_NAME0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERT_NAME0 = extern struct {
    nameType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CRITERIA_NAME_TYPE,
    certName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IKEEXT_CERTIFICATE_CRITERIA0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERTIFICATE_CRITERIA0 = extern struct {
    certData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    certHash: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    eku: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERT_EKUS0},
    name: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERT_NAME0},
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_CERTIFICATE_AUTHENTICATION2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERTIFICATE_AUTHENTICATION2 = extern struct {
    inboundConfigType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CONFIG_TYPE,
    Anonymous1: Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_AUTHENTICATION2+_Anonymous1_e__Union,
    outboundConfigType: Windows.Win32.WindowsFiltering.IKEEXT_CERT_CONFIG_TYPE,
    Anonymous2: Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_AUTHENTICATION2+_Anonymous2_e__Union,
    flags: {"kind":"UInt32"},
    localCertLocationUrl: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous2_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous2_e__Struct = extern struct {
            outboundEnterpriseStoreArraySize: {"kind":"UInt32"},
            outboundEnterpriseStoreCriteria: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_CRITERIA0},
        };
        // --------------------------------------------------------
        // Type: _Anonymous3_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous3_e__Struct = extern struct {
            outboundRootStoreArraySize: {"kind":"UInt32"},
            outboundTrustedRootStoreCriteria: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_CRITERIA0},
        };
        // --------------------------------------------------------
        // Type: _Anonymous1_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous1_e__Struct = extern struct {
            outboundRootArraySize: {"kind":"UInt32"},
            outboundRootCriteria: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_CRITERIA0},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous3_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous3_e__Struct = extern struct {
            inboundRootStoreArraySize: {"kind":"UInt32"},
            inboundTrustedRootStoreCriteria: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_CRITERIA0},
        };
        // --------------------------------------------------------
        // Type: _Anonymous1_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous1_e__Struct = extern struct {
            inboundRootArraySize: {"kind":"UInt32"},
            inboundRootCriteria: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_CRITERIA0},
        };
        // --------------------------------------------------------
        // Type: _Anonymous2_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous2_e__Struct = extern struct {
            inboundEnterpriseStoreArraySize: {"kind":"UInt32"},
            inboundEnterpriseStoreCriteria: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CERTIFICATE_CRITERIA0},
        };
    };
};
// --------------------------------------------------------
// Type: IKEEXT_IPV6_CGA_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_IPV6_CGA_AUTHENTICATION0 = extern struct {
    keyContainerName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cspName: {"kind""Ptr","child":{"kind":"UInt16"}},
    cspType: {"kind":"UInt32"},
    cgaModifier: Windows.Win32.WindowsFiltering.FWP_BYTE_ARRAY16,
    cgaCollisionCount: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: IKEEXT_KERBEROS_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_KERBEROS_AUTHENTICATION0 = extern struct {
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_KERBEROS_AUTHENTICATION1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_KERBEROS_AUTHENTICATION1 = extern struct {
    flags: {"kind":"UInt32"},
    proxyServer: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IKEEXT_RESERVED_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_RESERVED_AUTHENTICATION0 = extern struct {
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_NTLM_V2_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_NTLM_V2_AUTHENTICATION0 = extern struct {
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_EAP_AUTHENTICATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_EAP_AUTHENTICATION0 = extern struct {
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_AUTHENTICATION_METHOD0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_AUTHENTICATION_METHOD0 = extern struct {
    authenticationMethodType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_AUTHENTICATION_METHOD1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_AUTHENTICATION_METHOD1 = extern struct {
    authenticationMethodType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD1+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_AUTHENTICATION_METHOD2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_AUTHENTICATION_METHOD2 = extern struct {
    authenticationMethodType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD2+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CIPHER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_CIPHER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_CIPHER_ALGORITHM0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CIPHER_ALGORITHM0 = extern struct {
    algoIdentifier: Windows.Win32.WindowsFiltering.IKEEXT_CIPHER_TYPE,
    keyLen: {"kind":"UInt32"},
    rounds: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_INTEGRITY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_INTEGRITY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_INTEGRITY_ALGORITHM0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_INTEGRITY_ALGORITHM0 = extern struct {
    algoIdentifier: Windows.Win32.WindowsFiltering.IKEEXT_INTEGRITY_TYPE,
};
// --------------------------------------------------------
// Type: IKEEXT_DH_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_DH_GROUP = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_PROPOSAL0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_PROPOSAL0 = extern struct {
    cipherAlgorithm: Windows.Win32.WindowsFiltering.IKEEXT_CIPHER_ALGORITHM0,
    integrityAlgorithm: Windows.Win32.WindowsFiltering.IKEEXT_INTEGRITY_ALGORITHM0,
    maxLifetimeSeconds: {"kind":"UInt32"},
    dhGroup: Windows.Win32.WindowsFiltering.IKEEXT_DH_GROUP,
    quickModeLimit: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_POLICY0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_POLICY0 = extern struct {
    softExpirationTime: {"kind":"UInt32"},
    numAuthenticationMethods: {"kind":"UInt32"},
    authenticationMethods: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD0},
    initiatorImpersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
    numIkeProposals: {"kind":"UInt32"},
    ikeProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0},
    flags: {"kind":"UInt32"},
    maxDynamicFilters: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_POLICY1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_POLICY1 = extern struct {
    softExpirationTime: {"kind":"UInt32"},
    numAuthenticationMethods: {"kind":"UInt32"},
    authenticationMethods: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD1},
    initiatorImpersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
    numIkeProposals: {"kind":"UInt32"},
    ikeProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0},
    flags: {"kind":"UInt32"},
    maxDynamicFilters: {"kind":"UInt32"},
    retransmitDurationSecs: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_POLICY2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_POLICY2 = extern struct {
    softExpirationTime: {"kind":"UInt32"},
    numAuthenticationMethods: {"kind":"UInt32"},
    authenticationMethods: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD2},
    initiatorImpersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
    numIkeProposals: {"kind":"UInt32"},
    ikeProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0},
    flags: {"kind":"UInt32"},
    maxDynamicFilters: {"kind":"UInt32"},
    retransmitDurationSecs: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_EM_POLICY0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_EM_POLICY0 = extern struct {
    numAuthenticationMethods: {"kind":"UInt32"},
    authenticationMethods: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD0},
    initiatorImpersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
};
// --------------------------------------------------------
// Type: IKEEXT_EM_POLICY1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_EM_POLICY1 = extern struct {
    numAuthenticationMethods: {"kind":"UInt32"},
    authenticationMethods: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD1},
    initiatorImpersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
};
// --------------------------------------------------------
// Type: IKEEXT_EM_POLICY2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_EM_POLICY2 = extern struct {
    numAuthenticationMethods: {"kind":"UInt32"},
    authenticationMethods: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD2},
    initiatorImpersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
};
// --------------------------------------------------------
// Type: IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0 = extern struct {
    currentActiveMainModes: {"kind":"UInt32"},
    totalMainModesStarted: {"kind":"UInt32"},
    totalSuccessfulMainModes: {"kind":"UInt32"},
    totalFailedMainModes: {"kind":"UInt32"},
    totalResponderMainModes: {"kind":"UInt32"},
    currentNewResponderMainModes: {"kind":"UInt32"},
    currentActiveQuickModes: {"kind":"UInt32"},
    totalQuickModesStarted: {"kind":"UInt32"},
    totalSuccessfulQuickModes: {"kind":"UInt32"},
    totalFailedQuickModes: {"kind":"UInt32"},
    totalAcquires: {"kind":"UInt32"},
    totalReinitAcquires: {"kind":"UInt32"},
    currentActiveExtendedModes: {"kind":"UInt32"},
    totalExtendedModesStarted: {"kind":"UInt32"},
    totalSuccessfulExtendedModes: {"kind":"UInt32"},
    totalFailedExtendedModes: {"kind":"UInt32"},
    totalImpersonationExtendedModes: {"kind":"UInt32"},
    totalImpersonationMainModes: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1 = extern struct {
    currentActiveMainModes: {"kind":"UInt32"},
    totalMainModesStarted: {"kind":"UInt32"},
    totalSuccessfulMainModes: {"kind":"UInt32"},
    totalFailedMainModes: {"kind":"UInt32"},
    totalResponderMainModes: {"kind":"UInt32"},
    currentNewResponderMainModes: {"kind":"UInt32"},
    currentActiveQuickModes: {"kind":"UInt32"},
    totalQuickModesStarted: {"kind":"UInt32"},
    totalSuccessfulQuickModes: {"kind":"UInt32"},
    totalFailedQuickModes: {"kind":"UInt32"},
    totalAcquires: {"kind":"UInt32"},
    totalReinitAcquires: {"kind":"UInt32"},
    currentActiveExtendedModes: {"kind":"UInt32"},
    totalExtendedModesStarted: {"kind":"UInt32"},
    totalSuccessfulExtendedModes: {"kind":"UInt32"},
    totalFailedExtendedModes: {"kind":"UInt32"},
    totalImpersonationExtendedModes: {"kind":"UInt32"},
    totalImpersonationMainModes: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_KEYMODULE_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_KEYMODULE_STATISTICS0 = extern struct {
    v4Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0,
    v6Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0,
    errorFrequencyTable: {"kind":"Array","child": {"kind":"UInt32"}},
    mainModeNegotiationTime: {"kind":"UInt32"},
    quickModeNegotiationTime: {"kind":"UInt32"},
    extendedModeNegotiationTime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_KEYMODULE_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_KEYMODULE_STATISTICS1 = extern struct {
    v4Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1,
    v6Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1,
    errorFrequencyTable: {"kind":"Array","child": {"kind":"UInt32"}},
    mainModeNegotiationTime: {"kind":"UInt32"},
    quickModeNegotiationTime: {"kind":"UInt32"},
    extendedModeNegotiationTime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0 = extern struct {
    totalSocketReceiveFailures: {"kind":"UInt32"},
    totalSocketSendFailures: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1 = extern struct {
    totalSocketReceiveFailures: {"kind":"UInt32"},
    totalSocketSendFailures: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_COMMON_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_COMMON_STATISTICS0 = extern struct {
    v4Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0,
    v6Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0,
    totalPacketsReceived: {"kind":"UInt32"},
    totalInvalidPacketsReceived: {"kind":"UInt32"},
    currentQueuedWorkitems: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_COMMON_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_COMMON_STATISTICS1 = extern struct {
    v4Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1,
    v6Statistics: Windows.Win32.WindowsFiltering.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1,
    totalPacketsReceived: {"kind":"UInt32"},
    totalInvalidPacketsReceived: {"kind":"UInt32"},
    currentQueuedWorkitems: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_STATISTICS0 = extern struct {
    ikeStatistics: Windows.Win32.WindowsFiltering.IKEEXT_KEYMODULE_STATISTICS0,
    authipStatistics: Windows.Win32.WindowsFiltering.IKEEXT_KEYMODULE_STATISTICS0,
    commonStatistics: Windows.Win32.WindowsFiltering.IKEEXT_COMMON_STATISTICS0,
};
// --------------------------------------------------------
// Type: IKEEXT_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_STATISTICS1 = extern struct {
    ikeStatistics: Windows.Win32.WindowsFiltering.IKEEXT_KEYMODULE_STATISTICS1,
    authipStatistics: Windows.Win32.WindowsFiltering.IKEEXT_KEYMODULE_STATISTICS1,
    ikeV2Statistics: Windows.Win32.WindowsFiltering.IKEEXT_KEYMODULE_STATISTICS1,
    commonStatistics: Windows.Win32.WindowsFiltering.IKEEXT_COMMON_STATISTICS1,
};
// --------------------------------------------------------
// Type: IKEEXT_TRAFFIC0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_TRAFFIC0 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IKEEXT_TRAFFIC0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IKEEXT_TRAFFIC0+_Anonymous2_e__Union,
    authIpFilterId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_COOKIE_PAIR0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_COOKIE_PAIR0 = extern struct {
    initiator: {"kind":"UInt64"},
    responder: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IKEEXT_CERTIFICATE_CREDENTIAL0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERTIFICATE_CREDENTIAL0 = extern struct {
    subjectName: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    certHash: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IKEEXT_NAME_CREDENTIAL0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_NAME_CREDENTIAL0 = extern struct {
    principalName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIAL0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIAL0 = extern struct {
    authenticationMethodType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    impersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIAL_PAIR0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIAL_PAIR0 = extern struct {
    localCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL0,
    peerCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL0,
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIALS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIALS0 = extern struct {
    numCredentials: {"kind":"UInt32"},
    credentials: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL_PAIR0},
};
// --------------------------------------------------------
// Type: IKEEXT_SA_DETAILS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_SA_DETAILS0 = extern struct {
    saId: {"kind":"UInt64"},
    keyModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS0+_Anonymous_e__Union,
    ikeTraffic: Windows.Win32.WindowsFiltering.IKEEXT_TRAFFIC0,
    ikeProposal: Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0,
    cookiePair: Windows.Win32.WindowsFiltering.IKEEXT_COOKIE_PAIR0,
    ikeCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIALS0,
    ikePolicyKey: Guid,
    virtualIfTunnelId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CERTIFICATE_CREDENTIAL1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CERTIFICATE_CREDENTIAL1 = extern struct {
    subjectName: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    certHash: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    flags: {"kind":"UInt32"},
    certificate: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIAL1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIAL1 = extern struct {
    authenticationMethodType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    impersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL1+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIAL_PAIR1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIAL_PAIR1 = extern struct {
    localCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL1,
    peerCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL1,
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIALS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIALS1 = extern struct {
    numCredentials: {"kind":"UInt32"},
    credentials: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL_PAIR1},
};
// --------------------------------------------------------
// Type: IKEEXT_SA_DETAILS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_SA_DETAILS1 = extern struct {
    saId: {"kind":"UInt64"},
    keyModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS1+_Anonymous_e__Union,
    ikeTraffic: Windows.Win32.WindowsFiltering.IKEEXT_TRAFFIC0,
    ikeProposal: Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0,
    cookiePair: Windows.Win32.WindowsFiltering.IKEEXT_COOKIE_PAIR0,
    ikeCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIALS1,
    ikePolicyKey: Guid,
    virtualIfTunnelId: {"kind":"UInt64"},
    correlationKey: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIAL2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIAL2 = extern struct {
    authenticationMethodType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    impersonationType: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL2+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIAL_PAIR2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIAL_PAIR2 = extern struct {
    localCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL2,
    peerCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL2,
};
// --------------------------------------------------------
// Type: IKEEXT_CREDENTIALS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_CREDENTIALS2 = extern struct {
    numCredentials: {"kind":"UInt32"},
    credentials: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL_PAIR2},
};
// --------------------------------------------------------
// Type: IKEEXT_SA_DETAILS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_SA_DETAILS2 = extern struct {
    saId: {"kind":"UInt64"},
    keyModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS2+_Anonymous_e__Union,
    ikeTraffic: Windows.Win32.WindowsFiltering.IKEEXT_TRAFFIC0,
    ikeProposal: Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0,
    cookiePair: Windows.Win32.WindowsFiltering.IKEEXT_COOKIE_PAIR0,
    ikeCredentials: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIALS2,
    ikePolicyKey: Guid,
    virtualIfTunnelId: {"kind":"UInt64"},
    correlationKey: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IKEEXT_SA_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IKEEXT_SA_ENUM_TEMPLATE0 = extern struct {
    localSubNet: Windows.Win32.WindowsFiltering.FWP_CONDITION_VALUE0,
    remoteSubNet: Windows.Win32.WindowsFiltering.FWP_CONDITION_VALUE0,
    localMainModeCertHash: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
};
// --------------------------------------------------------
// Type: IKEEXT_MM_SA_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_MM_SA_STATE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_QM_SA_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_QM_SA_STATE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_EM_SA_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_EM_SA_STATE = *opaque{
};
// --------------------------------------------------------
// Type: IKEEXT_SA_ROLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IKEEXT_SA_ROLE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_SA_LIFETIME0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_LIFETIME0 = extern struct {
    lifetimeSeconds: {"kind":"UInt32"},
    lifetimeKilobytes: {"kind":"UInt32"},
    lifetimePackets: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_TRANSFORM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_TRANSFORM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_AUTH_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_AUTH_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_AUTH_TRANSFORM_ID0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AUTH_TRANSFORM_ID0 = extern struct {
    authType: Windows.Win32.WindowsFiltering.IPSEC_AUTH_TYPE,
    authConfig: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: IPSEC_AUTH_TRANSFORM0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AUTH_TRANSFORM0 = extern struct {
    authTransformId: Windows.Win32.WindowsFiltering.IPSEC_AUTH_TRANSFORM_ID0,
    cryptoModuleId: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: IPSEC_CIPHER_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_CIPHER_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_CIPHER_TRANSFORM_ID0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_CIPHER_TRANSFORM_ID0 = extern struct {
    cipherType: Windows.Win32.WindowsFiltering.IPSEC_CIPHER_TYPE,
    cipherConfig: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: IPSEC_CIPHER_TRANSFORM0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_CIPHER_TRANSFORM0 = extern struct {
    cipherTransformId: Windows.Win32.WindowsFiltering.IPSEC_CIPHER_TRANSFORM_ID0,
    cryptoModuleId: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: IPSEC_AUTH_AND_CIPHER_TRANSFORM0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AUTH_AND_CIPHER_TRANSFORM0 = extern struct {
    authTransform: Windows.Win32.WindowsFiltering.IPSEC_AUTH_TRANSFORM0,
    cipherTransform: Windows.Win32.WindowsFiltering.IPSEC_CIPHER_TRANSFORM0,
};
// --------------------------------------------------------
// Type: IPSEC_SA_TRANSFORM0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_TRANSFORM0 = extern struct {
    ipsecTransformType: Windows.Win32.WindowsFiltering.IPSEC_TRANSFORM_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_SA_TRANSFORM0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_PFS_GROUP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_PFS_GROUP = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_PROPOSAL0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_PROPOSAL0 = extern struct {
    lifetime: Windows.Win32.WindowsFiltering.IPSEC_SA_LIFETIME0,
    numSaTransforms: {"kind":"UInt32"},
    saTransforms: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_TRANSFORM0},
    pfsGroup: Windows.Win32.WindowsFiltering.IPSEC_PFS_GROUP,
};
// --------------------------------------------------------
// Type: IPSEC_SA_IDLE_TIMEOUT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_IDLE_TIMEOUT0 = extern struct {
    idleTimeoutSeconds: {"kind":"UInt32"},
    idleTimeoutSecondsFailOver: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC_SELECTOR0_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRAFFIC_SELECTOR0_ = extern struct {
    protocolId: {"kind":"Byte"},
    portStart: {"kind":"UInt16"},
    portEnd: {"kind":"UInt16"},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_SELECTOR0_+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_SELECTOR0_+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC_SELECTOR_POLICY0_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRAFFIC_SELECTOR_POLICY0_ = extern struct {
    flags: {"kind":"UInt32"},
    numLocalTrafficSelectors: {"kind":"UInt32"},
    localTrafficSelectors: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_SELECTOR0_},
    numRemoteTrafficSelectors: {"kind":"UInt32"},
    remoteTrafficSelectors: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_SELECTOR0_},
};
// --------------------------------------------------------
// Type: IPSEC_TRANSPORT_POLICY0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRANSPORT_POLICY0 = extern struct {
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    flags: {"kind":"UInt32"},
    ndAllowClearTimeoutSeconds: {"kind":"UInt32"},
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY0},
};
// --------------------------------------------------------
// Type: IPSEC_TRANSPORT_POLICY1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRANSPORT_POLICY1 = extern struct {
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    flags: {"kind":"UInt32"},
    ndAllowClearTimeoutSeconds: {"kind":"UInt32"},
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY1},
};
// --------------------------------------------------------
// Type: IPSEC_TRANSPORT_POLICY2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRANSPORT_POLICY2 = extern struct {
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    flags: {"kind":"UInt32"},
    ndAllowClearTimeoutSeconds: {"kind":"UInt32"},
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY2},
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_ENDPOINTS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_ENDPOINTS0 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS0+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_ENDPOINT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_ENDPOINT0 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINT0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_ENDPOINTS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_ENDPOINTS2 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS2+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS2+_Anonymous2_e__Union,
    localIfLuid: {"kind":"UInt64"},
    remoteFqdn: {"kind""Ptr","child":{"kind":"UInt16"}},
    numAddresses: {"kind":"UInt32"},
    remoteAddresses: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINT0},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_ENDPOINTS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_ENDPOINTS1 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS1+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS1+_Anonymous2_e__Union,
    localIfLuid: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_POLICY0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_POLICY0 = extern struct {
    flags: {"kind":"UInt32"},
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    tunnelEndpoints: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS0,
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY0},
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_POLICY1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_POLICY1 = extern struct {
    flags: {"kind":"UInt32"},
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    tunnelEndpoints: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS1,
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY1},
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_POLICY2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_POLICY2 = extern struct {
    flags: {"kind":"UInt32"},
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    tunnelEndpoints: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS2,
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY2},
    fwdPathSaLifetime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_TUNNEL_POLICY3_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TUNNEL_POLICY3_ = extern struct {
    flags: {"kind":"UInt32"},
    numIpsecProposals: {"kind":"UInt32"},
    ipsecProposals: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_PROPOSAL0},
    tunnelEndpoints: Windows.Win32.WindowsFiltering.IPSEC_TUNNEL_ENDPOINTS2,
    saIdleTimeout: Windows.Win32.WindowsFiltering.IPSEC_SA_IDLE_TIMEOUT0,
    emPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_EM_POLICY2},
    fwdPathSaLifetime: {"kind":"UInt32"},
    compartmentId: {"kind":"UInt32"},
    numTrafficSelectorPolicy: {"kind":"UInt32"},
    trafficSelectorPolicies: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_SELECTOR_POLICY0_},
};
// --------------------------------------------------------
// Type: IPSEC_KEYING_POLICY0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_KEYING_POLICY0 = extern struct {
    numKeyMods: {"kind":"UInt32"},
    keyModKeys: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: IPSEC_KEYING_POLICY1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_KEYING_POLICY1 = extern struct {
    numKeyMods: {"kind":"UInt32"},
    keyModKeys: {"kind""Ptr","child":Guid},
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_AGGREGATE_SA_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AGGREGATE_SA_STATISTICS0 = extern struct {
    activeSas: {"kind":"UInt32"},
    pendingSaNegotiations: {"kind":"UInt32"},
    totalSasAdded: {"kind":"UInt32"},
    totalSasDeleted: {"kind":"UInt32"},
    successfulRekeys: {"kind":"UInt32"},
    activeTunnels: {"kind":"UInt32"},
    offloadedSas: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_ESP_DROP_PACKET_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_ESP_DROP_PACKET_STATISTICS0 = extern struct {
    invalidSpisOnInbound: {"kind":"UInt32"},
    decryptionFailuresOnInbound: {"kind":"UInt32"},
    authenticationFailuresOnInbound: {"kind":"UInt32"},
    replayCheckFailuresOnInbound: {"kind":"UInt32"},
    saNotInitializedOnInbound: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_AH_DROP_PACKET_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AH_DROP_PACKET_STATISTICS0 = extern struct {
    invalidSpisOnInbound: {"kind":"UInt32"},
    authenticationFailuresOnInbound: {"kind":"UInt32"},
    replayCheckFailuresOnInbound: {"kind":"UInt32"},
    saNotInitializedOnInbound: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0 = extern struct {
    invalidSpisOnInbound: {"kind":"UInt32"},
    decryptionFailuresOnInbound: {"kind":"UInt32"},
    authenticationFailuresOnInbound: {"kind":"UInt32"},
    udpEspValidationFailuresOnInbound: {"kind":"UInt32"},
    replayCheckFailuresOnInbound: {"kind":"UInt32"},
    invalidClearTextInbound: {"kind":"UInt32"},
    saNotInitializedOnInbound: {"kind":"UInt32"},
    receiveOverIncorrectSaInbound: {"kind":"UInt32"},
    secureReceivesNotMatchingFilters: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1 = extern struct {
    invalidSpisOnInbound: {"kind":"UInt32"},
    decryptionFailuresOnInbound: {"kind":"UInt32"},
    authenticationFailuresOnInbound: {"kind":"UInt32"},
    udpEspValidationFailuresOnInbound: {"kind":"UInt32"},
    replayCheckFailuresOnInbound: {"kind":"UInt32"},
    invalidClearTextInbound: {"kind":"UInt32"},
    saNotInitializedOnInbound: {"kind":"UInt32"},
    receiveOverIncorrectSaInbound: {"kind":"UInt32"},
    secureReceivesNotMatchingFilters: {"kind":"UInt32"},
    totalDropPacketsInbound: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRAFFIC_STATISTICS0 = extern struct {
    encryptedByteCount: {"kind":"UInt64"},
    authenticatedAHByteCount: {"kind":"UInt64"},
    authenticatedESPByteCount: {"kind":"UInt64"},
    transportByteCount: {"kind":"UInt64"},
    tunnelByteCount: {"kind":"UInt64"},
    offloadByteCount: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRAFFIC_STATISTICS1 = extern struct {
    encryptedByteCount: {"kind":"UInt64"},
    authenticatedAHByteCount: {"kind":"UInt64"},
    authenticatedESPByteCount: {"kind":"UInt64"},
    transportByteCount: {"kind":"UInt64"},
    tunnelByteCount: {"kind":"UInt64"},
    offloadByteCount: {"kind":"UInt64"},
    totalSuccessfulPackets: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IPSEC_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_STATISTICS0 = extern struct {
    aggregateSaStatistics: Windows.Win32.WindowsFiltering.IPSEC_AGGREGATE_SA_STATISTICS0,
    espDropPacketStatistics: Windows.Win32.WindowsFiltering.IPSEC_ESP_DROP_PACKET_STATISTICS0,
    ahDropPacketStatistics: Windows.Win32.WindowsFiltering.IPSEC_AH_DROP_PACKET_STATISTICS0,
    aggregateDropPacketStatistics: Windows.Win32.WindowsFiltering.IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0,
    inboundTrafficStatistics: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_STATISTICS0,
    outboundTrafficStatistics: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_STATISTICS0,
};
// --------------------------------------------------------
// Type: IPSEC_STATISTICS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_STATISTICS1 = extern struct {
    aggregateSaStatistics: Windows.Win32.WindowsFiltering.IPSEC_AGGREGATE_SA_STATISTICS0,
    espDropPacketStatistics: Windows.Win32.WindowsFiltering.IPSEC_ESP_DROP_PACKET_STATISTICS0,
    ahDropPacketStatistics: Windows.Win32.WindowsFiltering.IPSEC_AH_DROP_PACKET_STATISTICS0,
    aggregateDropPacketStatistics: Windows.Win32.WindowsFiltering.IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1,
    inboundTrafficStatistics: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_STATISTICS1,
    outboundTrafficStatistics: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_STATISTICS1,
};
// --------------------------------------------------------
// Type: IPSEC_SA_AUTH_INFORMATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_AUTH_INFORMATION0 = extern struct {
    authTransform: Windows.Win32.WindowsFiltering.IPSEC_AUTH_TRANSFORM0,
    authKey: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
};
// --------------------------------------------------------
// Type: IPSEC_SA_CIPHER_INFORMATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_CIPHER_INFORMATION0 = extern struct {
    cipherTransform: Windows.Win32.WindowsFiltering.IPSEC_CIPHER_TRANSFORM0,
    cipherKey: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
};
// --------------------------------------------------------
// Type: IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0 = extern struct {
    saCipherInformation: Windows.Win32.WindowsFiltering.IPSEC_SA_CIPHER_INFORMATION0,
    saAuthInformation: Windows.Win32.WindowsFiltering.IPSEC_SA_AUTH_INFORMATION0,
};
// --------------------------------------------------------
// Type: IPSEC_SA0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA0 = extern struct {
    spi: {"kind":"UInt32"},
    saTransformType: Windows.Win32.WindowsFiltering.IPSEC_TRANSFORM_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_SA0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_KEYMODULE_STATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_KEYMODULE_STATE0 = extern struct {
    keyModuleKey: Guid,
    stateBlob: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
};
// --------------------------------------------------------
// Type: IPSEC_TOKEN_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_TOKEN_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_TOKEN_PRINCIPAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_TOKEN_PRINCIPAL = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_TOKEN_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_TOKEN_MODE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_TOKEN0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TOKEN0 = extern struct {
    type: Windows.Win32.WindowsFiltering.IPSEC_TOKEN_TYPE,
    principal: Windows.Win32.WindowsFiltering.IPSEC_TOKEN_PRINCIPAL,
    mode: Windows.Win32.WindowsFiltering.IPSEC_TOKEN_MODE,
    token: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IPSEC_ID0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_ID0 = extern struct {
    mmTargetName: {"kind""Ptr","child":{"kind":"UInt16"}},
    emTargetName: {"kind""Ptr","child":{"kind":"UInt16"}},
    numTokens: {"kind":"UInt32"},
    tokens: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TOKEN0},
    explicitCredentials: {"kind":"UInt64"},
    logonId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IPSEC_SA_BUNDLE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_BUNDLE0 = extern struct {
    flags: {"kind":"UInt32"},
    lifetime: Windows.Win32.WindowsFiltering.IPSEC_SA_LIFETIME0,
    idleTimeoutSeconds: {"kind":"UInt32"},
    ndAllowClearTimeoutSeconds: {"kind":"UInt32"},
    ipsecId: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_ID0},
    napContext: {"kind":"UInt32"},
    qmSaId: {"kind":"UInt32"},
    numSAs: {"kind":"UInt32"},
    saList: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA0},
    keyModuleState: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_KEYMODULE_STATE0},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE0+_Anonymous_e__Union,
    mmSaId: {"kind":"UInt64"},
    pfsGroup: Windows.Win32.WindowsFiltering.IPSEC_PFS_GROUP,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_SA_BUNDLE1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_BUNDLE1 = extern struct {
    flags: {"kind":"UInt32"},
    lifetime: Windows.Win32.WindowsFiltering.IPSEC_SA_LIFETIME0,
    idleTimeoutSeconds: {"kind":"UInt32"},
    ndAllowClearTimeoutSeconds: {"kind":"UInt32"},
    ipsecId: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_ID0},
    napContext: {"kind":"UInt32"},
    qmSaId: {"kind":"UInt32"},
    numSAs: {"kind":"UInt32"},
    saList: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA0},
    keyModuleState: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_KEYMODULE_STATE0},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE1+_Anonymous_e__Union,
    mmSaId: {"kind":"UInt64"},
    pfsGroup: Windows.Win32.WindowsFiltering.IPSEC_PFS_GROUP,
    saLookupContext: Guid,
    qmFilterId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_TRAFFIC_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRAFFIC0 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC0+_Anonymous2_e__Union,
    trafficType: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_TYPE,
    Anonymous3: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC0+_Anonymous3_e__Union,
    remotePort: {"kind":"UInt16"},
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_TRAFFIC1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_TRAFFIC1 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC1+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC1+_Anonymous2_e__Union,
    trafficType: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_TYPE,
    Anonymous3: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC1+_Anonymous3_e__Union,
    remotePort: {"kind":"UInt16"},
    localPort: {"kind":"UInt16"},
    ipProtocol: {"kind":"Byte"},
    localIfLuid: {"kind":"UInt64"},
    realIfProfileId: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_V4_UDP_ENCAPSULATION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_V4_UDP_ENCAPSULATION0 = extern struct {
    localUdpEncapPort: {"kind":"UInt16"},
    remoteUdpEncapPort: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: IPSEC_GETSPI0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_GETSPI0 = extern struct {
    inboundIpsecTraffic: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC0,
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_GETSPI0+_Anonymous_e__Union,
    rngCryptoModuleID: {"kind""Ptr","child":Guid},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_GETSPI1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_GETSPI1 = extern struct {
    inboundIpsecTraffic: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC1,
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_GETSPI1+_Anonymous_e__Union,
    rngCryptoModuleID: {"kind""Ptr","child":Guid},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_SA_DETAILS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_DETAILS0 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    saDirection: Windows.Win32.WindowsFiltering.FWP_DIRECTION,
    traffic: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC0,
    saBundle: Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE0,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS0+_Anonymous_e__Union,
    transportFilter: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER0},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_SA_DETAILS1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_DETAILS1 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    saDirection: Windows.Win32.WindowsFiltering.FWP_DIRECTION,
    traffic: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC1,
    saBundle: Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE1,
    Anonymous: Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS1+_Anonymous_e__Union,
    transportFilter: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER0},
    virtualIfTunnelInfo: Windows.Win32.WindowsFiltering.IPSEC_VIRTUAL_IF_TUNNEL_INFO0,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_CONTEXT0 = extern struct {
    saContextId: {"kind":"UInt64"},
    inboundSa: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS0},
    outboundSa: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS0},
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_CONTEXT1 = extern struct {
    saContextId: {"kind":"UInt64"},
    inboundSa: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS1},
    outboundSa: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS1},
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_CONTEXT_ENUM_TEMPLATE0 = extern struct {
    localSubNet: Windows.Win32.WindowsFiltering.FWP_CONDITION_VALUE0,
    remoteSubNet: Windows.Win32.WindowsFiltering.FWP_CONDITION_VALUE0,
};
// --------------------------------------------------------
// Type: IPSEC_SA_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_ENUM_TEMPLATE0 = extern struct {
    saDirection: Windows.Win32.WindowsFiltering.FWP_DIRECTION,
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_CONTEXT_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT_EVENT_TYPE0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_SA_CONTEXT_EVENT_TYPE0 = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT_CHANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_SA_CONTEXT_CHANGE0 = extern struct {
    changeType: Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT_EVENT_TYPE0,
    saContextId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IPSEC_FAILURE_POINT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_FAILURE_POINT = *opaque{
};
// --------------------------------------------------------
// Type: IPSEC_ADDRESS_INFO0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_ADDRESS_INFO0 = extern struct {
    numV4Addresses: {"kind":"UInt32"},
    v4Addresses: {"kind""Ptr","child":{"kind":"UInt32"}},
    numV6Addresses: {"kind":"UInt32"},
    v6Addresses: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWP_BYTE_ARRAY16},
};
// --------------------------------------------------------
// Type: IPSEC_DOSP_OPTIONS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_DOSP_OPTIONS0 = extern struct {
    stateIdleTimeoutSeconds: {"kind":"UInt32"},
    perIPRateLimitQueueIdleTimeoutSeconds: {"kind":"UInt32"},
    ipV6IPsecUnauthDscp: {"kind":"Byte"},
    ipV6IPsecUnauthRateLimitBytesPerSec: {"kind":"UInt32"},
    ipV6IPsecUnauthPerIPRateLimitBytesPerSec: {"kind":"UInt32"},
    ipV6IPsecAuthDscp: {"kind":"Byte"},
    ipV6IPsecAuthRateLimitBytesPerSec: {"kind":"UInt32"},
    icmpV6Dscp: {"kind":"Byte"},
    icmpV6RateLimitBytesPerSec: {"kind":"UInt32"},
    ipV6FilterExemptDscp: {"kind":"Byte"},
    ipV6FilterExemptRateLimitBytesPerSec: {"kind":"UInt32"},
    defBlockExemptDscp: {"kind":"Byte"},
    defBlockExemptRateLimitBytesPerSec: {"kind":"UInt32"},
    maxStateEntries: {"kind":"UInt32"},
    maxPerIPRateLimitQueues: {"kind":"UInt32"},
    flags: {"kind":"UInt32"},
    numPublicIFLuids: {"kind":"UInt32"},
    publicIFLuids: {"kind""Ptr","child":{"kind":"UInt64"}},
    numInternalIFLuids: {"kind":"UInt32"},
    internalIFLuids: {"kind""Ptr","child":{"kind":"UInt64"}},
    publicV6AddrMask: Windows.Win32.WindowsFiltering.FWP_V6_ADDR_AND_MASK,
    internalV6AddrMask: Windows.Win32.WindowsFiltering.FWP_V6_ADDR_AND_MASK,
};
// --------------------------------------------------------
// Type: IPSEC_DOSP_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_DOSP_STATISTICS0 = extern struct {
    totalStateEntriesCreated: {"kind":"UInt64"},
    currentStateEntries: {"kind":"UInt64"},
    totalInboundAllowedIPv6IPsecUnauthPkts: {"kind":"UInt64"},
    totalInboundRatelimitDiscardedIPv6IPsecUnauthPkts: {"kind":"UInt64"},
    totalInboundPerIPRatelimitDiscardedIPv6IPsecUnauthPkts: {"kind":"UInt64"},
    totalInboundOtherDiscardedIPv6IPsecUnauthPkts: {"kind":"UInt64"},
    totalInboundAllowedIPv6IPsecAuthPkts: {"kind":"UInt64"},
    totalInboundRatelimitDiscardedIPv6IPsecAuthPkts: {"kind":"UInt64"},
    totalInboundOtherDiscardedIPv6IPsecAuthPkts: {"kind":"UInt64"},
    totalInboundAllowedICMPv6Pkts: {"kind":"UInt64"},
    totalInboundRatelimitDiscardedICMPv6Pkts: {"kind":"UInt64"},
    totalInboundAllowedIPv6FilterExemptPkts: {"kind":"UInt64"},
    totalInboundRatelimitDiscardedIPv6FilterExemptPkts: {"kind":"UInt64"},
    totalInboundDiscardedIPv6FilterBlockPkts: {"kind":"UInt64"},
    totalInboundAllowedDefBlockExemptPkts: {"kind":"UInt64"},
    totalInboundRatelimitDiscardedDefBlockExemptPkts: {"kind":"UInt64"},
    totalInboundDiscardedDefBlockPkts: {"kind":"UInt64"},
    currentInboundIPv6IPsecUnauthPerIPRateLimitQueues: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: IPSEC_DOSP_STATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_DOSP_STATE0 = extern struct {
    publicHostV6Addr: {"kind":"Array","child": {"kind":"Byte"}},
    internalHostV6Addr: {"kind":"Array","child": {"kind":"Byte"}},
    totalInboundIPv6IPsecAuthPackets: {"kind":"UInt64"},
    totalOutboundIPv6IPsecAuthPackets: {"kind":"UInt64"},
    durationSecs: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPSEC_DOSP_STATE_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_DOSP_STATE_ENUM_TEMPLATE0 = extern struct {
    publicV6AddrMask: Windows.Win32.WindowsFiltering.FWP_V6_ADDR_AND_MASK,
    internalV6AddrMask: Windows.Win32.WindowsFiltering.FWP_V6_ADDR_AND_MASK,
};
// --------------------------------------------------------
// Type: IPSEC_KEY_MANAGER0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_KEY_MANAGER0 = extern struct {
    keyManagerKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    keyDictationTimeoutHint: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: DL_ADDRESS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DL_ADDRESS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_CHANGE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_CHANGE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_SERVICE_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_SERVICE_STATE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_ENGINE_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_ENGINE_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_SESSION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SESSION0 = extern struct {
    sessionKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    txnWaitTimeoutInMSec: {"kind":"UInt32"},
    processId: {"kind":"UInt32"},
    sid: {"kind""Ptr","child":Windows.Win32.Security.SID},
    username: {"kind""Ptr","child":{"kind":"UInt16"}},
    kernelMode: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: FWPM_SESSION_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SESSION_ENUM_TEMPLATE0 = extern struct {
    reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER0 = extern struct {
    providerKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    serviceName: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_ENUM_TEMPLATE0 = extern struct {
    reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CHANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CHANGE0 = extern struct {
    changeType: Windows.Win32.WindowsFiltering.FWPM_CHANGE_TYPE,
    providerKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_CLASSIFY_OPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CLASSIFY_OPTION0 = extern struct {
    type: Windows.Win32.WindowsFiltering.FWP_CLASSIFY_OPTION_TYPE,
    value: Windows.Win32.WindowsFiltering.FWP_VALUE0,
};
// --------------------------------------------------------
// Type: FWPM_CLASSIFY_OPTIONS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CLASSIFY_OPTIONS0 = extern struct {
    numOptions: {"kind":"UInt32"},
    options: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CLASSIFY_OPTION0},
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_PROVIDER_CONTEXT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT0 = extern struct {
    providerContextKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    type: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0+_Anonymous_e__Union,
    providerContextId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT1 = extern struct {
    providerContextKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    type: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1+_Anonymous_e__Union,
    providerContextId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT2 = extern struct {
    providerContextKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    type: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2+_Anonymous_e__Union,
    providerContextId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT3_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT3_ = extern struct {
    providerContextKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    type: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_+_Anonymous_e__Union,
    providerContextId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0 = extern struct {
    providerKey: {"kind""Ptr","child":Guid},
    providerContextType: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_TYPE,
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT_CHANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT_CHANGE0 = extern struct {
    changeType: Windows.Win32.WindowsFiltering.FWPM_CHANGE_TYPE,
    providerContextKey: Guid,
    providerContextId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_SUBLAYER0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SUBLAYER0 = extern struct {
    subLayerKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    weight: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: FWPM_SUBLAYER_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SUBLAYER_ENUM_TEMPLATE0 = extern struct {
    providerKey: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: FWPM_SUBLAYER_CHANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SUBLAYER_CHANGE0 = extern struct {
    changeType: Windows.Win32.WindowsFiltering.FWPM_CHANGE_TYPE,
    subLayerKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_SUBLAYER_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SUBLAYER_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_FIELD_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_FIELD_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_FIELD0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_FIELD0 = extern struct {
    fieldKey: {"kind""Ptr","child":Guid},
    type: Windows.Win32.WindowsFiltering.FWPM_FIELD_TYPE,
    dataType: Windows.Win32.WindowsFiltering.FWP_DATA_TYPE,
};
// --------------------------------------------------------
// Type: FWPM_LAYER0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_LAYER0 = extern struct {
    layerKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    numFields: {"kind":"UInt32"},
    field: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FIELD0},
    defaultSubLayerKey: Guid,
    layerId: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: FWPM_LAYER_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_LAYER_ENUM_TEMPLATE0 = extern struct {
    reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_CALLOUT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CALLOUT0 = extern struct {
    calloutKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    applicableLayer: Guid,
    calloutId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_CALLOUT_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CALLOUT_ENUM_TEMPLATE0 = extern struct {
    providerKey: {"kind""Ptr","child":Guid},
    layerKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_CALLOUT_CHANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CALLOUT_CHANGE0 = extern struct {
    changeType: Windows.Win32.WindowsFiltering.FWPM_CHANGE_TYPE,
    calloutKey: Guid,
    calloutId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_CALLOUT_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CALLOUT_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_ACTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_ACTION0 = extern struct {
    type: {"kind":"UInt32"},
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_ACTION0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_FILTER_CONDITION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_FILTER_CONDITION0 = extern struct {
    fieldKey: Guid,
    matchType: Windows.Win32.WindowsFiltering.FWP_MATCH_TYPE,
    conditionValue: Windows.Win32.WindowsFiltering.FWP_CONDITION_VALUE0,
};
// --------------------------------------------------------
// Type: FWPM_FILTER0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_FILTER0 = extern struct {
    filterKey: Guid,
    displayData: Windows.Win32.WindowsFiltering.FWPM_DISPLAY_DATA0,
    flags: {"kind":"UInt32"},
    providerKey: {"kind""Ptr","child":Guid},
    providerData: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    layerKey: Guid,
    subLayerKey: Guid,
    weight: Windows.Win32.WindowsFiltering.FWP_VALUE0,
    numFilterConditions: {"kind":"UInt32"},
    filterCondition: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
    action: Windows.Win32.WindowsFiltering.FWPM_ACTION0,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_FILTER0+_Anonymous_e__Union,
    reserved: {"kind""Ptr","child":Guid},
    filterId: {"kind":"UInt64"},
    effectiveWeight: Windows.Win32.WindowsFiltering.FWP_VALUE0,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_FILTER_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_FILTER_ENUM_TEMPLATE0 = extern struct {
    providerKey: {"kind""Ptr","child":Guid},
    layerKey: Guid,
    enumType: Windows.Win32.WindowsFiltering.FWP_FILTER_ENUM_TYPE,
    flags: {"kind":"UInt32"},
    providerContextTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0},
    numFilterConditions: {"kind":"UInt32"},
    filterCondition: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
    actionMask: {"kind":"UInt32"},
    calloutKey: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: FWPM_FILTER_CHANGE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_FILTER_CHANGE0 = extern struct {
    changeType: Windows.Win32.WindowsFiltering.FWPM_CHANGE_TYPE,
    filterKey: Guid,
    filterId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_FILTER_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_FILTER_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_LAYER_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_LAYER_STATISTICS0 = extern struct {
    layerId: Guid,
    classifyPermitCount: {"kind":"UInt32"},
    classifyBlockCount: {"kind":"UInt32"},
    classifyVetoCount: {"kind":"UInt32"},
    numCacheEntries: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_STATISTICS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_STATISTICS0 = extern struct {
    numLayerStatistics: {"kind":"UInt32"},
    layerStatistics: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_LAYER_STATISTICS0},
    inboundAllowedConnectionsV4: {"kind":"UInt32"},
    inboundBlockedConnectionsV4: {"kind":"UInt32"},
    outboundAllowedConnectionsV4: {"kind":"UInt32"},
    outboundBlockedConnectionsV4: {"kind":"UInt32"},
    inboundAllowedConnectionsV6: {"kind":"UInt32"},
    inboundBlockedConnectionsV6: {"kind":"UInt32"},
    outboundAllowedConnectionsV6: {"kind":"UInt32"},
    outboundBlockedConnectionsV6: {"kind":"UInt32"},
    inboundActiveConnectionsV4: {"kind":"UInt32"},
    outboundActiveConnectionsV4: {"kind":"UInt32"},
    inboundActiveConnectionsV6: {"kind":"UInt32"},
    outboundActiveConnectionsV6: {"kind":"UInt32"},
    reauthDirInbound: {"kind":"UInt64"},
    reauthDirOutbound: {"kind":"UInt64"},
    reauthFamilyV4: {"kind":"UInt64"},
    reauthFamilyV6: {"kind":"UInt64"},
    reauthProtoOther: {"kind":"UInt64"},
    reauthProtoIPv4: {"kind":"UInt64"},
    reauthProtoIPv6: {"kind":"UInt64"},
    reauthProtoICMP: {"kind":"UInt64"},
    reauthProtoICMP6: {"kind":"UInt64"},
    reauthProtoUDP: {"kind":"UInt64"},
    reauthProtoTCP: {"kind":"UInt64"},
    reauthReasonPolicyChange: {"kind":"UInt64"},
    reauthReasonNewArrivalInterface: {"kind":"UInt64"},
    reauthReasonNewNextHopInterface: {"kind":"UInt64"},
    reauthReasonProfileCrossing: {"kind":"UInt64"},
    reauthReasonClassifyCompletion: {"kind":"UInt64"},
    reauthReasonIPSecPropertiesChanged: {"kind":"UInt64"},
    reauthReasonMidStreamInspection: {"kind":"UInt64"},
    reauthReasonSocketPropertyChanged: {"kind":"UInt64"},
    reauthReasonNewInboundMCastBCastPacket: {"kind":"UInt64"},
    reauthReasonEDPPolicyChanged: {"kind":"UInt64"},
    reauthReasonPreclassifyLocalAddrLayerChange: {"kind":"UInt64"},
    reauthReasonPreclassifyRemoteAddrLayerChange: {"kind":"UInt64"},
    reauthReasonPreclassifyLocalPortLayerChange: {"kind":"UInt64"},
    reauthReasonPreclassifyRemotePortLayerChange: {"kind":"UInt64"},
    reauthReasonProxyHandleChanged: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_HEADER0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_HEADER0 = extern struct {
    timeStamp: Windows.Win32.WindowsProgramming.FILETIME,
    flags: {"kind":"UInt32"},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    ipProtocol: {"kind":"Byte"},
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER0+_Anonymous2_e__Union,
    localPort: {"kind":"UInt16"},
    remotePort: {"kind":"UInt16"},
    scopeId: {"kind":"UInt32"},
    appId: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    userId: {"kind""Ptr","child":Windows.Win32.Security.SID},
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_HEADER1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_HEADER1 = extern struct {
    timeStamp: Windows.Win32.WindowsProgramming.FILETIME,
    flags: {"kind":"UInt32"},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    ipProtocol: {"kind":"Byte"},
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER1+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER1+_Anonymous2_e__Union,
    localPort: {"kind":"UInt16"},
    remotePort: {"kind":"UInt16"},
    scopeId: {"kind":"UInt32"},
    appId: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    userId: {"kind""Ptr","child":Windows.Win32.Security.SID},
    Anonymous3: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER1+_Anonymous3_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            reserved1: Windows.Win32.WindowsFiltering.FWP_AF,
            Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER1+_Anonymous3_e__Union+_Anonymous_e__Struct+_Anonymous_e__Union,
            // --------------------------------------------------------
            // Type: _Anonymous_e__Union
            // TypeLayoutAttr: explicit
            // not generating the actual code for this type because it has an explicit layout
            pub const _Anonymous_e__Union = *opaque{
                // --------------------------------------------------------
                // Type: _Anonymous_e__Struct
                // TypeLayoutAttr: sequential
                // TODO: I think this is a struct, but not sure at this point, assuming it is for now
                pub const _Anonymous_e__Struct = extern struct {
                    reserved2: Windows.Win32.WindowsFiltering.FWP_BYTE_ARRAY6,
                    reserved3: Windows.Win32.WindowsFiltering.FWP_BYTE_ARRAY6,
                    reserved4: {"kind":"UInt32"},
                    reserved5: {"kind":"UInt32"},
                    reserved6: {"kind":"UInt16"},
                    reserved7: {"kind":"UInt32"},
                    reserved8: {"kind":"UInt32"},
                    reserved9: {"kind":"UInt16"},
                    reserved10: {"kind":"UInt64"},
                };
            };
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_HEADER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_HEADER2 = extern struct {
    timeStamp: Windows.Win32.WindowsProgramming.FILETIME,
    flags: {"kind":"UInt32"},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    ipProtocol: {"kind":"Byte"},
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER2+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER2+_Anonymous2_e__Union,
    localPort: {"kind":"UInt16"},
    remotePort: {"kind":"UInt16"},
    scopeId: {"kind":"UInt32"},
    appId: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    userId: {"kind""Ptr","child":Windows.Win32.Security.SID},
    addressFamily: Windows.Win32.WindowsFiltering.FWP_AF,
    packageSid: {"kind""Ptr","child":Windows.Win32.Security.SID},
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_HEADER3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_HEADER3 = extern struct {
    timeStamp: Windows.Win32.WindowsProgramming.FILETIME,
    flags: {"kind":"UInt32"},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    ipProtocol: {"kind":"Byte"},
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER3+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER3+_Anonymous2_e__Union,
    localPort: {"kind":"UInt16"},
    remotePort: {"kind":"UInt16"},
    scopeId: {"kind":"UInt32"},
    appId: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    userId: {"kind""Ptr","child":Windows.Win32.Security.SID},
    addressFamily: Windows.Win32.WindowsFiltering.FWP_AF,
    packageSid: {"kind""Ptr","child":Windows.Win32.Security.SID},
    enterpriseId: {"kind""Ptr","child":{"kind":"UInt16"}},
    policyFlags: {"kind":"UInt64"},
    effectiveName: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_NET_EVENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_MM_FAILURE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_MM_FAILURE0 = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    flags: {"kind":"UInt32"},
    keyingModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    mmState: Windows.Win32.WindowsFiltering.IKEEXT_MM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    mmAuthMethod: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    endCertHash: {"kind":"Array","child": {"kind":"Byte"}},
    mmId: {"kind":"UInt64"},
    mmFilterId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_MM_FAILURE1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_MM_FAILURE1 = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    flags: {"kind":"UInt32"},
    keyingModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    mmState: Windows.Win32.WindowsFiltering.IKEEXT_MM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    mmAuthMethod: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    endCertHash: {"kind":"Array","child": {"kind":"Byte"}},
    mmId: {"kind":"UInt64"},
    mmFilterId: {"kind":"UInt64"},
    localPrincipalNameForAuth: {"kind""Ptr","child":{"kind":"UInt16"}},
    remotePrincipalNameForAuth: {"kind""Ptr","child":{"kind":"UInt16"}},
    numLocalPrincipalGroupSids: {"kind":"UInt32"},
    localPrincipalGroupSids: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    numRemotePrincipalGroupSids: {"kind":"UInt32"},
    remotePrincipalGroupSids: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_ = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    flags: {"kind":"UInt32"},
    keyingModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    mmState: Windows.Win32.WindowsFiltering.IKEEXT_MM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    mmAuthMethod: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    endCertHash: {"kind":"Array","child": {"kind":"Byte"}},
    mmId: {"kind":"UInt64"},
    mmFilterId: {"kind":"UInt64"},
    localPrincipalNameForAuth: {"kind""Ptr","child":{"kind":"UInt16"}},
    remotePrincipalNameForAuth: {"kind""Ptr","child":{"kind":"UInt16"}},
    numLocalPrincipalGroupSids: {"kind":"UInt32"},
    localPrincipalGroupSids: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    numRemotePrincipalGroupSids: {"kind":"UInt32"},
    remotePrincipalGroupSids: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    providerContextKey: {"kind""Ptr","child":Guid},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_QM_FAILURE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_QM_FAILURE0 = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    keyingModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    qmState: Windows.Win32.WindowsFiltering.IKEEXT_QM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    saTrafficType: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_TYPE,
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0+_Anonymous2_e__Union,
    qmFilterId: {"kind":"UInt64"},
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_ = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    keyingModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    qmState: Windows.Win32.WindowsFiltering.IKEEXT_QM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    saTrafficType: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_TYPE,
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_+_Anonymous2_e__Union,
    qmFilterId: {"kind":"UInt64"},
    mmSaLuid: {"kind":"UInt64"},
    mmProviderContextKey: Guid,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_EM_FAILURE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_EM_FAILURE0 = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    flags: {"kind":"UInt32"},
    emState: Windows.Win32.WindowsFiltering.IKEEXT_EM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    emAuthMethod: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    endCertHash: {"kind":"Array","child": {"kind":"Byte"}},
    mmId: {"kind":"UInt64"},
    qmFilterId: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IKEEXT_EM_FAILURE1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IKEEXT_EM_FAILURE1 = extern struct {
    failureErrorCode: {"kind":"UInt32"},
    failurePoint: Windows.Win32.WindowsFiltering.IPSEC_FAILURE_POINT,
    flags: {"kind":"UInt32"},
    emState: Windows.Win32.WindowsFiltering.IKEEXT_EM_SA_STATE,
    saRole: Windows.Win32.WindowsFiltering.IKEEXT_SA_ROLE,
    emAuthMethod: Windows.Win32.WindowsFiltering.IKEEXT_AUTHENTICATION_METHOD_TYPE,
    endCertHash: {"kind":"Array","child": {"kind":"Byte"}},
    mmId: {"kind":"UInt64"},
    qmFilterId: {"kind":"UInt64"},
    localPrincipalNameForAuth: {"kind""Ptr","child":{"kind":"UInt16"}},
    remotePrincipalNameForAuth: {"kind""Ptr","child":{"kind":"UInt16"}},
    numLocalPrincipalGroupSids: {"kind":"UInt32"},
    localPrincipalGroupSids: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    numRemotePrincipalGroupSids: {"kind":"UInt32"},
    remotePrincipalGroupSids: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
    saTrafficType: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_TYPE,
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CLASSIFY_DROP0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CLASSIFY_DROP0 = extern struct {
    filterId: {"kind":"UInt64"},
    layerId: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CLASSIFY_DROP1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CLASSIFY_DROP1 = extern struct {
    filterId: {"kind":"UInt64"},
    layerId: {"kind":"UInt16"},
    reauthReason: {"kind":"UInt32"},
    originalProfile: {"kind":"UInt32"},
    currentProfile: {"kind":"UInt32"},
    msFwpDirection: {"kind":"UInt32"},
    isLoopback: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CLASSIFY_DROP2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CLASSIFY_DROP2 = extern struct {
    filterId: {"kind":"UInt64"},
    layerId: {"kind":"UInt16"},
    reauthReason: {"kind":"UInt32"},
    originalProfile: {"kind":"UInt32"},
    currentProfile: {"kind":"UInt32"},
    msFwpDirection: {"kind":"UInt32"},
    isLoopback: Windows.Win32.SystemServices.BOOL,
    vSwitchId: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    vSwitchSourcePort: {"kind":"UInt32"},
    vSwitchDestinationPort: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CLASSIFY_DROP_MAC0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CLASSIFY_DROP_MAC0 = extern struct {
    localMacAddr: Windows.Win32.WindowsFiltering.FWP_BYTE_ARRAY6,
    remoteMacAddr: Windows.Win32.WindowsFiltering.FWP_BYTE_ARRAY6,
    mediaType: {"kind":"UInt32"},
    ifType: {"kind":"UInt32"},
    etherType: {"kind":"UInt16"},
    ndisPortNumber: {"kind":"UInt32"},
    reserved: {"kind":"UInt32"},
    vlanTag: {"kind":"UInt16"},
    ifLuid: {"kind":"UInt64"},
    filterId: {"kind":"UInt64"},
    layerId: {"kind":"UInt16"},
    reauthReason: {"kind":"UInt32"},
    originalProfile: {"kind":"UInt32"},
    currentProfile: {"kind":"UInt32"},
    msFwpDirection: {"kind":"UInt32"},
    isLoopback: Windows.Win32.SystemServices.BOOL,
    vSwitchId: Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB,
    vSwitchSourcePort: {"kind":"UInt32"},
    vSwitchDestinationPort: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CLASSIFY_ALLOW0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CLASSIFY_ALLOW0 = extern struct {
    filterId: {"kind":"UInt64"},
    layerId: {"kind":"UInt16"},
    reauthReason: {"kind":"UInt32"},
    originalProfile: {"kind":"UInt32"},
    currentProfile: {"kind":"UInt32"},
    msFwpDirection: {"kind":"UInt32"},
    isLoopback: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IPSEC_KERNEL_DROP0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IPSEC_KERNEL_DROP0 = extern struct {
    failureStatus: {"kind":"Int32"},
    direction: Windows.Win32.WindowsFiltering.FWP_DIRECTION,
    spi: {"kind":"UInt32"},
    filterId: {"kind":"UInt64"},
    layerId: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_IPSEC_DOSP_DROP0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_IPSEC_DOSP_DROP0 = extern struct {
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_IPSEC_DOSP_DROP0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_IPSEC_DOSP_DROP0+_Anonymous2_e__Union,
    failureStatus: {"kind":"Int32"},
    direction: Windows.Win32.WindowsFiltering.FWP_DIRECTION,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_APPC_NETWORK_CAPABILITY_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_APPC_NETWORK_CAPABILITY_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CAPABILITY_DROP0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CAPABILITY_DROP0 = extern struct {
    networkCapabilityId: Windows.Win32.WindowsFiltering.FWPM_APPC_NETWORK_CAPABILITY_TYPE,
    filterId: {"kind":"UInt64"},
    isLoopback: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CAPABILITY_ALLOW0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_CAPABILITY_ALLOW0 = extern struct {
    networkCapabilityId: Windows.Win32.WindowsFiltering.FWPM_APPC_NETWORK_CAPABILITY_TYPE,
    filterId: {"kind":"UInt64"},
    isLoopback: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_ = extern struct {
    spi: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT0 = extern struct {
    header: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER0,
    type: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT1 = extern struct {
    header: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER1,
    type: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT1+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT2 = extern struct {
    header: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER2,
    type: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT2+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT3 = extern struct {
    header: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER3,
    type: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT3+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT4_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT4_ = extern struct {
    header: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER3,
    type: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT4_+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT5_
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT5_ = extern struct {
    header: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_HEADER3,
    type: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT5_+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_ENUM_TEMPLATE0 = extern struct {
    startTime: Windows.Win32.WindowsProgramming.FILETIME,
    endTime: Windows.Win32.WindowsProgramming.FILETIME,
    numFilterConditions: {"kind":"UInt32"},
    filterCondition: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_NET_EVENT_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_SYSTEM_PORT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_SYSTEM_PORT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_SYSTEM_PORTS_BY_TYPE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SYSTEM_PORTS_BY_TYPE0 = extern struct {
    type: Windows.Win32.WindowsFiltering.FWPM_SYSTEM_PORT_TYPE,
    numPorts: {"kind":"UInt32"},
    ports: {"kind""Ptr","child":{"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: FWPM_SYSTEM_PORTS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_SYSTEM_PORTS0 = extern struct {
    numTypes: {"kind":"UInt32"},
    types: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SYSTEM_PORTS_BY_TYPE0},
};
// --------------------------------------------------------
// Type: FWPM_CONNECTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CONNECTION0 = extern struct {
    connectionId: {"kind":"UInt64"},
    ipVersion: Windows.Win32.WindowsFiltering.FWP_IP_VERSION,
    Anonymous1: Windows.Win32.WindowsFiltering.FWPM_CONNECTION0+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.FWPM_CONNECTION0+_Anonymous2_e__Union,
    providerKey: {"kind""Ptr","child":Guid},
    ipsecTrafficModeType: Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC_TYPE,
    keyModuleType: Windows.Win32.WindowsFiltering.IKEEXT_KEY_MODULE_TYPE,
    mmCrypto: Windows.Win32.WindowsFiltering.IKEEXT_PROPOSAL0,
    mmPeer: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL2,
    emPeer: Windows.Win32.WindowsFiltering.IKEEXT_CREDENTIAL2,
    bytesTransferredIn: {"kind":"UInt64"},
    bytesTransferredOut: {"kind":"UInt64"},
    bytesTransferredTotal: {"kind":"UInt64"},
    startSysTime: Windows.Win32.WindowsProgramming.FILETIME,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FWPM_CONNECTION_ENUM_TEMPLATE0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CONNECTION_ENUM_TEMPLATE0 = extern struct {
    connectionId: {"kind":"UInt64"},
    flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: FWPM_CONNECTION_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_CONNECTION_SUBSCRIPTION0 = extern struct {
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CONNECTION_ENUM_TEMPLATE0},
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_CONNECTION_EVENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_CONNECTION_EVENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_VSWITCH_EVENT_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_VSWITCH_EVENT_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: FWPM_VSWITCH_EVENT0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_VSWITCH_EVENT0 = extern struct {
    eventType: Windows.Win32.WindowsFiltering.FWPM_VSWITCH_EVENT_TYPE,
    vSwitchId: {"kind""Ptr","child":{"kind":"UInt16"}},
    Anonymous: Windows.Win32.WindowsFiltering.FWPM_VSWITCH_EVENT0+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _reorderInfo_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _reorderInfo_e__Struct = extern struct {
            inRequiredPosition: Windows.Win32.SystemServices.BOOL,
            numvSwitchFilterExtensions: {"kind":"UInt32"},
            vSwitchFilterExtensions: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
        };
        // --------------------------------------------------------
        // Type: _positionInfo_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _positionInfo_e__Struct = extern struct {
            numvSwitchFilterExtensions: {"kind":"UInt32"},
            vSwitchFilterExtensions: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"UInt16"}}},
        };
    };
};
// --------------------------------------------------------
// Type: FWPM_VSWITCH_EVENT_SUBSCRIPTION0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const FWPM_VSWITCH_EVENT_SUBSCRIPTION0 = extern struct {
    flags: {"kind":"UInt32"},
    sessionKey: Guid,
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CHANGE_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_PROVIDER_CHANGE_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_SUBLAYER_CHANGE_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_SUBLAYER_CHANGE_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_CALLOUT_CHANGE_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_CALLOUT_CHANGE_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_FILTER_CHANGE_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_FILTER_CHANGE_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IPSEC_SA_CONTEXT_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_SA_CONTEXT_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IPSEC_KEY_MANAGER_DICTATE_KEY0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_KEY_MANAGER_DICTATE_KEY0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IPSEC_KEY_MANAGER_NOTIFY_KEY0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPSEC_KEY_MANAGER_NOTIFY_KEY0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: IPSEC_KEY_MANAGER_CALLBACKS0
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPSEC_KEY_MANAGER_CALLBACKS0 = extern struct {
    reserved: Guid,
    flags: {"kind":"UInt32"},
    keyDictationCheck: Windows.Win32.WindowsFiltering.IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0,
    keyDictation: Windows.Win32.WindowsFiltering.IPSEC_KEY_MANAGER_DICTATE_KEY0,
    keyNotify: Windows.Win32.WindowsFiltering.IPSEC_KEY_MANAGER_NOTIFY_KEY0,
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_NET_EVENT_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CALLBACK1
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_NET_EVENT_CALLBACK1 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CALLBACK2
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_NET_EVENT_CALLBACK2 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CALLBACK3
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_NET_EVENT_CALLBACK3 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_NET_EVENT_CALLBACK4
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_NET_EVENT_CALLBACK4 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_SYSTEM_PORTS_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_SYSTEM_PORTS_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_CONNECTION_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_CONNECTION_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: FWPM_VSWITCH_EVENT_CALLBACK0
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FWPM_VSWITCH_EVENT_CALLBACK0 = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: DL_OUI
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const DL_OUI = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        _bitfield: {"kind":"Byte"},
    };
};
// --------------------------------------------------------
// Type: DL_EI48
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const DL_EI48 = *opaque{
};
// --------------------------------------------------------
// Type: DL_EUI48
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const DL_EUI48 = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        Oui: Windows.Win32.WindowsFiltering.DL_OUI,
        Ei48: Windows.Win32.WindowsFiltering.DL_EI48,
    };
};
// --------------------------------------------------------
// Type: DL_EI64
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const DL_EI64 = *opaque{
};
// --------------------------------------------------------
// Type: DL_EUI64
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const DL_EUI64 = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        Oui: Windows.Win32.WindowsFiltering.DL_OUI,
        Anonymous: Windows.Win32.WindowsFiltering.DL_EUI64+_Anonymous_e__Struct+_Anonymous_e__Union,
        // --------------------------------------------------------
        // Type: _Anonymous_e__Union
        // TypeLayoutAttr: explicit
        // not generating the actual code for this type because it has an explicit layout
        pub const _Anonymous_e__Union = *opaque{
            // --------------------------------------------------------
            // Type: _Anonymous_e__Struct
            // TypeLayoutAttr: sequential
            // TODO: I think this is a struct, but not sure at this point, assuming it is for now
            pub const _Anonymous_e__Struct = extern struct {
                Type: {"kind":"Byte"},
                Tse: {"kind":"Byte"},
                Ei48: Windows.Win32.WindowsFiltering.DL_EI48,
            };
        };
    };
};
// --------------------------------------------------------
// Type: SNAP_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SNAP_HEADER = extern struct {
    Dsap: {"kind":"Byte"},
    Ssap: {"kind":"Byte"},
    Control: {"kind":"Byte"},
    Oui: {"kind":"Array","child": {"kind":"Byte"}},
    Type: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: ETHERNET_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ETHERNET_HEADER = extern struct {
    Destination: Windows.Win32.WindowsFiltering.DL_EUI48,
    Source: Windows.Win32.WindowsFiltering.DL_EUI48,
    Anonymous: Windows.Win32.WindowsFiltering.ETHERNET_HEADER+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: VLAN_TAG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VLAN_TAG = extern struct {
    Anonymous: Windows.Win32.WindowsFiltering.VLAN_TAG+_Anonymous_e__Union,
    Type: {"kind":"UInt16"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"UInt16"},
        };
    };
};
// --------------------------------------------------------
// Type: ICMP_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMP_HEADER = extern struct {
    Type: {"kind":"Byte"},
    Code: {"kind":"Byte"},
    Checksum: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: ICMP_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMP_MESSAGE = extern struct {
    Header: Windows.Win32.WindowsFiltering.ICMP_HEADER,
    Data: Windows.Win32.WindowsFiltering.ICMP_MESSAGE+_Data_e__Union,
    // --------------------------------------------------------
    // Type: _Data_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Data_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IPV4_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV4_HEADER = extern struct {
    Anonymous1: Windows.Win32.WindowsFiltering.IPV4_HEADER+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IPV4_HEADER+_Anonymous2_e__Union,
    TotalLength: {"kind":"UInt16"},
    Identification: {"kind":"UInt16"},
    Anonymous3: Windows.Win32.WindowsFiltering.IPV4_HEADER+_Anonymous3_e__Union,
    TimeToLive: {"kind":"Byte"},
    Protocol: {"kind":"Byte"},
    HeaderChecksum: {"kind":"UInt16"},
    SourceAddress: Windows.Win32.WinSock.in_addr,
    DestinationAddress: Windows.Win32.WinSock.in_addr,
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"UInt16"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: IPV4_OPTION_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV4_OPTION_HEADER = extern struct {
    Anonymous: Windows.Win32.WindowsFiltering.IPV4_OPTION_HEADER+_Anonymous_e__Union,
    OptionLength: {"kind":"Byte"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: IPV4_OPTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPV4_OPTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPV4_TIMESTAMP_OPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV4_TIMESTAMP_OPTION = extern struct {
    OptionHeader: Windows.Win32.WindowsFiltering.IPV4_OPTION_HEADER,
    Pointer: {"kind":"Byte"},
    Anonymous: Windows.Win32.WindowsFiltering.IPV4_TIMESTAMP_OPTION+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: IP_OPTION_TIMESTAMP_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IP_OPTION_TIMESTAMP_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: IPV4_ROUTING_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV4_ROUTING_HEADER = extern struct {
    OptionHeader: Windows.Win32.WindowsFiltering.IPV4_OPTION_HEADER,
    Pointer: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: ICMP4_UNREACH_CODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ICMP4_UNREACH_CODE = *opaque{
};
// --------------------------------------------------------
// Type: ICMP4_TIME_EXCEED_CODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ICMP4_TIME_EXCEED_CODE = *opaque{
};
// --------------------------------------------------------
// Type: ICMPV4_ROUTER_SOLICIT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMPV4_ROUTER_SOLICIT = extern struct {
    RsHeader: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
};
// --------------------------------------------------------
// Type: ICMPV4_ROUTER_ADVERT_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMPV4_ROUTER_ADVERT_HEADER = extern struct {
    RaHeader: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
};
// --------------------------------------------------------
// Type: ICMPV4_ROUTER_ADVERT_ENTRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMPV4_ROUTER_ADVERT_ENTRY = extern struct {
    RouterAdvertAddr: Windows.Win32.WinSock.in_addr,
    PreferenceLevel: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: ICMPV4_TIMESTAMP_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMPV4_TIMESTAMP_MESSAGE = extern struct {
    Header: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
    OriginateTimestamp: {"kind":"UInt32"},
    ReceiveTimestamp: {"kind":"UInt32"},
    TransmitTimestamp: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ICMPV4_ADDRESS_MASK_MESSAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ICMPV4_ADDRESS_MASK_MESSAGE = extern struct {
    Header: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
    AddressMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: ARP_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const ARP_HEADER = extern struct {
    HardwareAddressSpace: {"kind":"UInt16"},
    ProtocolAddressSpace: {"kind":"UInt16"},
    HardwareAddressLength: {"kind":"Byte"},
    ProtocolAddressLength: {"kind":"Byte"},
    Opcode: {"kind":"UInt16"},
    SenderHardwareAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: ARP_OPCODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ARP_OPCODE = *opaque{
};
// --------------------------------------------------------
// Type: ARP_HARDWARE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ARP_HARDWARE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IGMP_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IGMP_HEADER = extern struct {
    Anonymous1: Windows.Win32.WindowsFiltering.IGMP_HEADER+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.WindowsFiltering.IGMP_HEADER+_Anonymous2_e__Union,
    Checksum: {"kind":"UInt16"},
    MulticastAddress: Windows.Win32.WinSock.in_addr,
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: IGMP_MAX_RESP_CODE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IGMP_MAX_RESP_CODE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IGMPV3_QUERY_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IGMPV3_QUERY_HEADER = extern struct {
    Type: {"kind":"Byte"},
    Anonymous1: Windows.Win32.WindowsFiltering.IGMPV3_QUERY_HEADER+_Anonymous1_e__Union,
    Checksum: {"kind":"UInt16"},
    MulticastAddress: Windows.Win32.WinSock.in_addr,
    _bitfield: {"kind":"Byte"},
    Anonymous2: Windows.Win32.WindowsFiltering.IGMPV3_QUERY_HEADER+_Anonymous2_e__Union,
    SourceCount: {"kind":"UInt16"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: IGMPV3_REPORT_RECORD_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IGMPV3_REPORT_RECORD_HEADER = extern struct {
    Type: {"kind":"Byte"},
    AuxillaryDataLength: {"kind":"Byte"},
    SourceCount: {"kind":"UInt16"},
    MulticastAddress: Windows.Win32.WinSock.in_addr,
};
// --------------------------------------------------------
// Type: IGMPV3_REPORT_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IGMPV3_REPORT_HEADER = extern struct {
    Type: {"kind":"Byte"},
    Reserved: {"kind":"Byte"},
    Checksum: {"kind":"UInt16"},
    Reserved2: {"kind":"UInt16"},
    RecordCount: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: IPV6_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_HEADER = extern struct {
    Anonymous: Windows.Win32.WindowsFiltering.IPV6_HEADER+_Anonymous_e__Union,
    PayloadLength: {"kind":"UInt16"},
    NextHeader: {"kind":"Byte"},
    HopLimit: {"kind":"Byte"},
    SourceAddress: Windows.Win32.WinSock.in6_addr,
    DestinationAddress: Windows.Win32.WinSock.in6_addr,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"UInt32"},
        };
    };
};
// --------------------------------------------------------
// Type: IPV6_FRAGMENT_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_FRAGMENT_HEADER = extern struct {
    NextHeader: {"kind":"Byte"},
    Reserved: {"kind":"Byte"},
    Anonymous: Windows.Win32.WindowsFiltering.IPV6_FRAGMENT_HEADER+_Anonymous_e__Union,
    Id: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"UInt16"},
        };
    };
};
// --------------------------------------------------------
// Type: IPV6_EXTENSION_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_EXTENSION_HEADER = extern struct {
    NextHeader: {"kind":"Byte"},
    Length: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: IPV6_OPTION_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_OPTION_HEADER = extern struct {
    Type: {"kind":"Byte"},
    DataLength: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: IPV6_OPTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const IPV6_OPTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: IPV6_OPTION_JUMBOGRAM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_OPTION_JUMBOGRAM = extern struct {
    Header: Windows.Win32.WindowsFiltering.IPV6_OPTION_HEADER,
    JumbogramLength: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: IPV6_OPTION_ROUTER_ALERT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_OPTION_ROUTER_ALERT = extern struct {
    Header: Windows.Win32.WindowsFiltering.IPV6_OPTION_HEADER,
    Value: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: IPV6_ROUTING_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const IPV6_ROUTING_HEADER = extern struct {
    NextHeader: {"kind":"Byte"},
    Length: {"kind":"Byte"},
    RoutingType: {"kind":"Byte"},
    SegmentsLeft: {"kind":"Byte"},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: nd_router_solicit
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_router_solicit = extern struct {
    nd_rs_hdr: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
};
// --------------------------------------------------------
// Type: nd_router_advert
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_router_advert = extern struct {
    nd_ra_hdr: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
    nd_ra_reachable: {"kind":"UInt32"},
    nd_ra_retransmit: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: IPV6_ROUTER_ADVERTISEMENT_FLAGS
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const IPV6_ROUTER_ADVERTISEMENT_FLAGS = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        _bitfield: {"kind":"Byte"},
    };
};
// --------------------------------------------------------
// Type: nd_neighbor_solicit
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_neighbor_solicit = extern struct {
    nd_ns_hdr: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
    nd_ns_target: Windows.Win32.WinSock.in6_addr,
};
// --------------------------------------------------------
// Type: nd_neighbor_advert
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_neighbor_advert = extern struct {
    nd_na_hdr: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
    nd_na_target: Windows.Win32.WinSock.in6_addr,
};
// --------------------------------------------------------
// Type: IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        _bitfield: {"kind":"Byte"},
        Reserved2: {"kind":"Array","child": {"kind":"Byte"}},
    };
};
// --------------------------------------------------------
// Type: nd_redirect
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_redirect = extern struct {
    nd_rd_hdr: Windows.Win32.WindowsFiltering.ICMP_MESSAGE,
    nd_rd_target: Windows.Win32.WinSock.in6_addr,
    nd_rd_dst: Windows.Win32.WinSock.in6_addr,
};
// --------------------------------------------------------
// Type: nd_opt_hdr
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_hdr = extern struct {
    nd_opt_type: {"kind":"Byte"},
    nd_opt_len: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: ND_OPTION_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ND_OPTION_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: nd_opt_prefix_info
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_prefix_info = extern struct {
    nd_opt_pi_type: {"kind":"Byte"},
    nd_opt_pi_len: {"kind":"Byte"},
    nd_opt_pi_prefix_len: {"kind":"Byte"},
    Anonymous1: Windows.Win32.WindowsFiltering.nd_opt_prefix_info+_Anonymous1_e__Union,
    nd_opt_pi_valid_time: {"kind":"UInt32"},
    nd_opt_pi_preferred_time: {"kind":"UInt32"},
    Anonymous2: Windows.Win32.WindowsFiltering.nd_opt_prefix_info+_Anonymous2_e__Union,
    nd_opt_pi_prefix: Windows.Win32.WinSock.in6_addr,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            nd_opt_pi_reserved3: {"kind":"Array","child": {"kind":"Byte"}},
            nd_opt_pi_site_prefix_len: {"kind":"Byte"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Flags_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Flags_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: nd_opt_rd_hdr
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_rd_hdr = extern struct {
    nd_opt_rh_type: {"kind":"Byte"},
    nd_opt_rh_len: {"kind":"Byte"},
    nd_opt_rh_reserved1: {"kind":"UInt16"},
    nd_opt_rh_reserved2: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: nd_opt_mtu
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_mtu = extern struct {
    nd_opt_mtu_type: {"kind":"Byte"},
    nd_opt_mtu_len: {"kind":"Byte"},
    nd_opt_mtu_reserved: {"kind":"UInt16"},
    nd_opt_mtu_mtu: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: nd_opt_route_info
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_route_info = extern struct {
    nd_opt_ri_type: {"kind":"Byte"},
    nd_opt_ri_len: {"kind":"Byte"},
    nd_opt_ri_prefix_len: {"kind":"Byte"},
    Anonymous: Windows.Win32.WindowsFiltering.nd_opt_route_info+_Anonymous_e__Union,
    nd_opt_ri_route_lifetime: {"kind":"UInt32"},
    nd_opt_ri_prefix: Windows.Win32.WinSock.in6_addr,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Flags_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Flags_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: nd_opt_rdnss
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_rdnss = extern struct {
    nd_opt_rdnss_type: {"kind":"Byte"},
    nd_opt_rdnss_len: {"kind":"Byte"},
    nd_opt_rdnss_reserved: {"kind":"UInt16"},
    nd_opt_rdnss_lifetime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: nd_opt_dnssl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const nd_opt_dnssl = extern struct {
    nd_opt_dnssl_type: {"kind":"Byte"},
    nd_opt_dnssl_len: {"kind":"Byte"},
    nd_opt_dnssl_reserved: {"kind":"UInt16"},
    nd_opt_dnssl_lifetime: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: MLD_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLD_HEADER = extern struct {
    IcmpHeader: Windows.Win32.WindowsFiltering.ICMP_HEADER,
    MaxRespTime: {"kind":"UInt16"},
    Reserved: {"kind":"UInt16"},
    MulticastAddress: Windows.Win32.WinSock.in6_addr,
};
// --------------------------------------------------------
// Type: MLD_MAX_RESP_CODE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const MLD_MAX_RESP_CODE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: MLDV2_QUERY_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLDV2_QUERY_HEADER = extern struct {
    IcmpHeader: Windows.Win32.WindowsFiltering.ICMP_HEADER,
    Anonymous1: Windows.Win32.WindowsFiltering.MLDV2_QUERY_HEADER+_Anonymous1_e__Union,
    Reserved: {"kind":"UInt16"},
    MulticastAddress: Windows.Win32.WinSock.in6_addr,
    _bitfield: {"kind":"Byte"},
    Anonymous2: Windows.Win32.WindowsFiltering.MLDV2_QUERY_HEADER+_Anonymous2_e__Union,
    SourceCount: {"kind":"UInt16"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"Byte"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"UInt16"},
        };
    };
};
// --------------------------------------------------------
// Type: MLDV2_REPORT_RECORD_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLDV2_REPORT_RECORD_HEADER = extern struct {
    Type: {"kind":"Byte"},
    AuxillaryDataLength: {"kind":"Byte"},
    SourceCount: {"kind":"UInt16"},
    MulticastAddress: Windows.Win32.WinSock.in6_addr,
};
// --------------------------------------------------------
// Type: MLDV2_REPORT_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MLDV2_REPORT_HEADER = extern struct {
    IcmpHeader: Windows.Win32.WindowsFiltering.ICMP_HEADER,
    Reserved: {"kind":"UInt16"},
    RecordCount: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: tcp_hdr
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const tcp_hdr = *opaque{
};
// --------------------------------------------------------
// Type: tcp_opt_mss
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const tcp_opt_mss = *opaque{
};
// --------------------------------------------------------
// Type: tcp_opt_ws
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tcp_opt_ws = extern struct {
    Kind: {"kind":"Byte"},
    Length: {"kind":"Byte"},
    ShiftCnt: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: tcp_opt_sack_permitted
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tcp_opt_sack_permitted = extern struct {
    Kind: {"kind":"Byte"},
    Length: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: tcp_opt_sack
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tcp_opt_sack = extern struct {
    Kind: {"kind":"Byte"},
    Length: {"kind":"Byte"},
    Block: {"kind":"Array","child": Windows.Win32.WindowsFiltering.tcp_opt_sack+tcp_opt_sack_block},
    // --------------------------------------------------------
    // Type: tcp_opt_sack_block
    // TypeLayoutAttr: sequential
    // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
    pub const tcp_opt_sack_block = *opaque{
    };
};
// --------------------------------------------------------
// Type: tcp_opt_ts
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const tcp_opt_ts = *opaque{
};
// --------------------------------------------------------
// Type: tcp_opt_unknown
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tcp_opt_unknown = extern struct {
    Kind: {"kind":"Byte"},
    Length: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: tcp_opt_fastopen
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tcp_opt_fastopen = extern struct {
    Kind: {"kind":"Byte"},
    Length: {"kind":"Byte"},
    Cookie: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: DL_TUNNEL_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DL_TUNNEL_ADDRESS = extern struct {
    CompartmentId: Windows.Win32.Kernel.COMPARTMENT_ID,
    ScopeId: Windows.Win32.WinSock.SCOPE_ID,
    IpAddress: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: TUNNEL_SUB_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TUNNEL_SUB_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: DL_TEREDO_ADDRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DL_TEREDO_ADDRESS = extern struct {
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
    Anonymous: Windows.Win32.WindowsFiltering.DL_TEREDO_ADDRESS+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
        pub const _Anonymous_e__Struct = *opaque{
        };
    };
};
// --------------------------------------------------------
// Type: DL_TEREDO_ADDRESS_PRV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DL_TEREDO_ADDRESS_PRV = extern struct {
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
    Anonymous: Windows.Win32.WindowsFiltering.DL_TEREDO_ADDRESS_PRV+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
        pub const _Anonymous_e__Struct = *opaque{
        };
    };
};
// --------------------------------------------------------
// Type: IPTLS_METADATA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const IPTLS_METADATA = *opaque{
};
// --------------------------------------------------------
// Type: NPI_MODULEID_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const NPI_MODULEID_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: NPI_MODULEID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NPI_MODULEID = extern struct {
    Length: {"kind":"UInt16"},
    Type: Windows.Win32.WindowsFiltering.NPI_MODULEID_TYPE,
    Anonymous: Windows.Win32.WindowsFiltering.NPI_MODULEID+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: FALLBACK_INDEX
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const FALLBACK_INDEX = *opaque{
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFreeMemory0(
    p: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmEngineOpen0(
    serverName: {"kind""Ptr","child":{"kind":"UInt16"}},
    authnService: {"kind":"UInt32"},
    authIdentity: {"kind""Ptr","child":Windows.Win32.Security.SEC_WINNT_AUTH_IDENTITY_W},
    session: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SESSION0},
    engineHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmEngineClose0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmEngineGetOption0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    option: Windows.Win32.WindowsFiltering.FWPM_ENGINE_OPTION,
    value: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWP_VALUE0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmEngineSetOption0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    option: Windows.Win32.WindowsFiltering.FWPM_ENGINE_OPTION,
    newValue: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWP_VALUE0},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmEngineGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmEngineSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSessionCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SESSION_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSessionEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SESSION0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSessionDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmTransactionBegin0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    flags: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmTransactionCommit0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmTransactionAbort0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderAdd0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    provider: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER0},
    sd: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderDeleteByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderGetByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    provider: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderSubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CHANGE_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    changeHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderUnsubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    changeHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextAdd0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    providerContext: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0},
    sd: {"kind""Ptr","child":{"kind":"Void"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextAdd1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    providerContext: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1},
    sd: {"kind""Ptr","child":{"kind":"Void"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextAdd2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    providerContext: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2},
    sd: {"kind""Ptr","child":{"kind":"Void"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextAdd3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    providerContext: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_},
    sd: {"kind""Ptr","child":{"kind":"Void"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextDeleteById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextDeleteByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetById1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetById2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetById3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetByKey1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetByKey2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetByKey3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    providerContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextEnum1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextEnum2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextEnum3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextSubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    changeHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextUnsubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    changeHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmProviderContextSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerAdd0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subLayer: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER0},
    sd: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerDeleteByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerGetByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    subLayer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerSubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_SUBLAYER_CHANGE_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    changeHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerUnsubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    changeHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSubLayerSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SUBLAYER_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt16"},
    layer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_LAYER0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerGetByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    layer: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_LAYER0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_LAYER_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_LAYER0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmLayerSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutAdd0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    callout: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT0},
    sd: {"kind""Ptr","child":{"kind":"Void"}},
    id: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutDeleteById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutDeleteByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt32"},
    callout: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutGetByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    callout: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutSubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_CALLOUT_CHANGE_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    changeHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutUnsubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    changeHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmCalloutSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CALLOUT_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterAdd0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    filter: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER0},
    sd: {"kind""Ptr","child":{"kind":"Void"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterDeleteById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterDeleteByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    filter: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterGetByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    filter: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterSubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_FILTER_CHANGE_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    changeHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterUnsubscribeChanges0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    changeHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmFilterSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmGetAppIdFromFileName0(
    fileName: {"kind""Ptr","child":{"kind":"UInt16"}},
    appId: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWP_BYTE_BLOB}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmBitmapIndexGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    fieldId: {"kind""Ptr","child":Guid},
    idx: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmBitmapIndexFree0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    fieldId: {"kind""Ptr","child":Guid},
    idx: {"kind""Ptr","child":{"kind":"Byte"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmIPsecTunnelAdd0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    flags: {"kind":"UInt32"},
    mainModePolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0},
    tunnelPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT0},
    numFilterConditions: {"kind":"UInt32"},
    filterConditions: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
    sd: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmIPsecTunnelAdd1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    flags: {"kind":"UInt32"},
    mainModePolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1},
    tunnelPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT1},
    numFilterConditions: {"kind":"UInt32"},
    filterConditions: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
    keyModKey: {"kind""Ptr","child":Guid},
    sd: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmIPsecTunnelAdd2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    flags: {"kind":"UInt32"},
    mainModePolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2},
    tunnelPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT2},
    numFilterConditions: {"kind":"UInt32"},
    filterConditions: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
    keyModKey: {"kind""Ptr","child":Guid},
    sd: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmIPsecTunnelAdd3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    flags: {"kind":"UInt32"},
    mainModePolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_},
    tunnelPolicy: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_PROVIDER_CONTEXT3_},
    numFilterConditions: {"kind":"UInt32"},
    filterConditions: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_FILTER_CONDITION0},
    keyModKey: {"kind""Ptr","child":Guid},
    sd: {"kind""Ptr","child":{"kind":"Void"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmIPsecTunnelDeleteByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    key: {"kind""Ptr","child":Guid},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecGetStatistics0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    ipsecStatistics: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_STATISTICS0},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecGetStatistics1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    ipsecStatistics: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_STATISTICS1},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextCreate0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    outboundTraffic: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC0},
    inboundFilterId: {"kind""Ptr","child":{"kind":"UInt64"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextCreate1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    outboundTraffic: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_TRAFFIC1},
    virtualIfTunnelInfo: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_VIRTUAL_IF_TUNNEL_INFO0},
    inboundFilterId: {"kind""Ptr","child":{"kind":"UInt64"}},
    id: {"kind""Ptr","child":{"kind":"UInt64"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextDeleteById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    saContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextGetById1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    saContext: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT1}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextGetSpi0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    getSpi: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_GETSPI0},
    inboundSpi: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextGetSpi1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    getSpi: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_GETSPI1},
    inboundSpi: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextSetSpi0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    getSpi: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_GETSPI1},
    inboundSpi: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextAddInbound0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    inboundBundle: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE0},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextAddOutbound0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    outboundBundle: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE0},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextAddInbound1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    inboundBundle: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE1},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextAddOutbound1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    outboundBundle: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_BUNDLE1},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextExpire0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextUpdate0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    flags: {"kind":"UInt64"},
    newValues: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT1},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextEnum1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT1}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextSubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextUnsubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    eventsHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaContextSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_CONTEXT_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaEnum1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_SA_DETAILS1}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaDbGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecSaDbSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecDospGetStatistics0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    idpStatistics: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_DOSP_STATISTICS0},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecDospStateCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_DOSP_STATE_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecDospStateEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_DOSP_STATE0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecDospStateDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecDospGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecDospSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecKeyManagerAddAndRegister0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    keyManager: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_KEY_MANAGER0},
    keyManagerCallbacks: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_KEY_MANAGER_CALLBACKS0},
    keyMgmtHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecKeyManagerUnregisterAndDelete0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    keyMgmtHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecKeyManagersGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IPSEC_KEY_MANAGER0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecKeyManagerGetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    reserved: {"kind""Ptr","child":{"kind":"Void"}},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IPsecKeyManagerSetSecurityInfoByKey0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    reserved: {"kind""Ptr","child":{"kind":"Void"}},
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextGetStatistics0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    ikeextStatistics: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_STATISTICS0},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextGetStatistics1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    ikeextStatistics: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_STATISTICS1},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaDeleteById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    sa: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaGetById1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    saLookupContext: {"kind""Ptr","child":Guid},
    sa: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS1}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaGetById2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    saLookupContext: {"kind""Ptr","child":Guid},
    sa: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS2}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaEnum1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS1}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaEnum2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.IKEEXT_SA_DETAILS2}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaDbGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn IkeextSaDbSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventEnum1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT1}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventEnum2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT2}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventEnum3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT3}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventEnum4(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT4_}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventEnum5(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT5_}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventsGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventsSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventSubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventUnsubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    eventsHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventSubscriptionsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_SUBSCRIPTION0}}},
    numEntries: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventSubscribe1(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_CALLBACK1,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventSubscribe2(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_CALLBACK2,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventSubscribe3(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_CALLBACK3,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmNetEventSubscribe4(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_NET_EVENT_CALLBACK4,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSystemPortsGet0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    sysPorts: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_SYSTEM_PORTS0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSystemPortsSubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    reserved: {"kind""Ptr","child":{"kind":"Void"}},
    callback: Windows.Win32.WindowsFiltering.FWPM_SYSTEM_PORTS_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    sysPortsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmSystemPortsUnsubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    sysPortsHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionGetById0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    id: {"kind":"UInt64"},
    connection: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CONNECTION0}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionEnum0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,
    numEntriesRequested: {"kind":"UInt32"},
    entries: {"kind""Ptr","child":{"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CONNECTION0}}},
    numEntriesReturned: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionCreateEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumTemplate: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CONNECTION_ENUM_TEMPLATE0},
    enumHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionDestroyEnumHandle0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    enumHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionSubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_CONNECTION_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_CONNECTION_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    eventsHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmConnectionUnsubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    eventsHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmvSwitchEventSubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscription: {"kind""Ptr","child":Windows.Win32.WindowsFiltering.FWPM_VSWITCH_EVENT_SUBSCRIPTION0},
    callback: Windows.Win32.WindowsFiltering.FWPM_VSWITCH_EVENT_CALLBACK0,
    context: {"kind""Ptr","child":{"kind":"Void"}},
    subscriptionHandle: {"kind""Ptr","child":Windows.Win32.SystemServices.HANDLE},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmvSwitchEventUnsubscribe0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    subscriptionHandle: Windows.Win32.SystemServices.HANDLE,

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmvSwitchEventsGetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    sidGroup: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},
    dacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    sacl: {"kind""Ptr","child":{"kind""Ptr","child":Windows.Win32.Security.ACL}},
    securityDescriptor: {"kind""Ptr","child":{"kind""Ptr","child":{"kind":"Void"}}},

// set_last_errror=False (can and should we use this?)
pub extern "fwpuclnt" fn FwpmvSwitchEventsSetSecurityInfo0(
    engineHandle: Windows.Win32.SystemServices.HANDLE,
    securityInfo: {"kind":"UInt32"},
    sidOwner: {"kind""Ptr","child":Windows.Win32.Security.SID},
    sidGroup: {"kind""Ptr","child":Windows.Win32.Security.SID},
    dacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
    sacl: {"kind""Ptr","child":Windows.Win32.Security.ACL},
],

"unicode_aliases": [
]}
