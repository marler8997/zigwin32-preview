{
"constants": [
     {
         "name": "KSPROPERTY_MEMORY_TRANSPORT"
        ,"type": {"kind":"Int32"}
        ,"value": 1
    }
],

"types_definitions": [
// --------------------------------------------------------
// Type: YIELDPROC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const YIELDPROC = *opaque{
    // TODO: Method '.ctor'
    // TODO: Method 'Invoke'
};
// --------------------------------------------------------
// Type: MCI_GENERIC_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_GENERIC_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OPEN_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OPEN_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OPEN_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OPEN_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_PLAY_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_PLAY_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SEEK_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SEEK_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_STATUS_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_STATUS_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_INFO_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_INFO_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_INFO_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_INFO_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_GETDEVCAPS_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_GETDEVCAPS_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SYSINFO_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SYSINFO_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SYSINFO_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SYSINFO_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SET_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SET_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_BREAK_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_BREAK_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SAVE_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SAVE_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SAVE_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SAVE_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_LOAD_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_LOAD_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_LOAD_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_LOAD_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_RECORD_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_RECORD_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_VD_PLAY_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_VD_PLAY_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_VD_STEP_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_VD_STEP_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_VD_ESCAPE_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_VD_ESCAPE_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_VD_ESCAPE_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_VD_ESCAPE_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_WAVE_OPEN_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_WAVE_OPEN_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_WAVE_OPEN_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_WAVE_OPEN_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_WAVE_DELETE_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_WAVE_DELETE_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_WAVE_SET_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_WAVE_SET_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_SEQ_SET_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_SEQ_SET_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_OPEN_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_OPEN_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_OPEN_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_OPEN_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_PLAY_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_PLAY_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_STEP_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_STEP_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_WINDOW_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_WINDOW_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_WINDOW_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_WINDOW_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_RECT_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_RECT_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_ANIM_UPDATE_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_ANIM_UPDATE_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_OPEN_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_OPEN_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_OPEN_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_OPEN_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_WINDOW_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_WINDOW_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_WINDOW_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_WINDOW_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_RECT_PARMS
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_RECT_PARMS = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_SAVE_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_SAVE_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_SAVE_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_SAVE_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_LOAD_PARMSA
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_LOAD_PARMSA = *opaque{
};
// --------------------------------------------------------
// Type: MCI_OVLY_LOAD_PARMSW
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const MCI_OVLY_LOAD_PARMSW = *opaque{
};
// --------------------------------------------------------
// Type: AUDCLNT_SHAREMODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDCLNT_SHAREMODE = *opaque{
};
// --------------------------------------------------------
// Type: AUDIO_STREAM_CATEGORY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDIO_STREAM_CATEGORY = *opaque{
};
// --------------------------------------------------------
// Type: AudioSessionState
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AudioSessionState = *opaque{
};
// --------------------------------------------------------
// Type: GUID_NULL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const GUID_NULL = opaque {
};
// --------------------------------------------------------
// Type: KSRESET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSRESET = *opaque{
};
// --------------------------------------------------------
// Type: KSSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSSTATE = *opaque{
};
// --------------------------------------------------------
// Type: KSPRIORITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPRIORITY = extern struct {
    PriorityClass: {"kind":"UInt32"},
    PrioritySubClass: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSIDENTIFIER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSIDENTIFIER = extern struct {
    Anonymous: Windows.Win32.CoreAudio.KSIDENTIFIER+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            Set: Guid,
            Id: {"kind":"UInt32"},
            Flags: {"kind":"UInt32"},
        };
    };
};
// --------------------------------------------------------
// Type: KSP_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSP_NODE = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NodeId: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSM_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSM_NODE = extern struct {
    Method: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NodeId: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSE_NODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSE_NODE = extern struct {
    Event: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NodeId: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPTYPESETID_General
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPTYPESETID_General = opaque {
};
// --------------------------------------------------------
// Type: KSMULTIPLE_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSMULTIPLE_ITEM = extern struct {
    Size: {"kind":"UInt32"},
    Count: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_DESCRIPTION = extern struct {
    AccessFlags: {"kind":"UInt32"},
    DescriptionSize: {"kind":"UInt32"},
    PropTypeSet: Windows.Win32.CoreAudio.KSIDENTIFIER,
    MembersListCount: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_MEMBERSHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_MEMBERSHEADER = extern struct {
    MembersFlags: {"kind":"UInt32"},
    MembersSize: {"kind":"UInt32"},
    MembersCount: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_BOUNDS_LONG
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const KSPROPERTY_BOUNDS_LONG = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous1_e__Struct = extern struct {
        SignedMinimum: {"kind":"Int32"},
        SignedMaximum: {"kind":"Int32"},
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous2_e__Struct = extern struct {
        UnsignedMinimum: {"kind":"UInt32"},
        UnsignedMaximum: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: KSPROPERTY_BOUNDS_LONGLONG
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const KSPROPERTY_BOUNDS_LONGLONG = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous1_e__Struct = extern struct {
        SignedMinimum: {"kind":"Int64"},
        SignedMaximum: {"kind":"Int64"},
    };
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous2_e__Struct = extern struct {
        UnsignedMinimum: {"kind":"UInt64"},
        UnsignedMaximum: {"kind":"UInt64"},
    };
};
// --------------------------------------------------------
// Type: KSPROPERTY_STEPPING_LONG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_STEPPING_LONG = extern struct {
    SteppingDelta: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
    Bounds: Windows.Win32.CoreAudio.KSPROPERTY_BOUNDS_LONG,
};
// --------------------------------------------------------
// Type: KSPROPERTY_STEPPING_LONGLONG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_STEPPING_LONGLONG = extern struct {
    SteppingDelta: {"kind":"UInt64"},
    Bounds: Windows.Win32.CoreAudio.KSPROPERTY_BOUNDS_LONGLONG,
};
// --------------------------------------------------------
// Type: KSEVENTDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSEVENTDATA = extern struct {
    NotificationType: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KSEVENTDATA+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Alignment_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Alignment_e__Struct = extern struct {
            Unused: {"kind""Ptr","child":{"kind":"Void"}},
            Alignment: {"kind":"Array","child": {"kind":"IntPtr"}},
        };
        // --------------------------------------------------------
        // Type: _EventHandle_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _EventHandle_e__Struct = extern struct {
            Event: Windows.Win32.SystemServices.HANDLE,
            Reserved: {"kind":"Array","child": {"kind":"UIntPtr"}},
        };
        // --------------------------------------------------------
        // Type: _SemaphoreHandle_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _SemaphoreHandle_e__Struct = extern struct {
            Semaphore: Windows.Win32.SystemServices.HANDLE,
            Reserved: {"kind":"UInt32"},
            Adjustment: {"kind":"Int32"},
        };
    };
};
// --------------------------------------------------------
// Type: KSQUERYBUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSQUERYBUFFER = extern struct {
    Event: Windows.Win32.CoreAudio.KSIDENTIFIER,
    EventData: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSEVENTDATA},
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSRELATIVEEVENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRELATIVEEVENT = extern struct {
    Size: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KSRELATIVEEVENT+_Anonymous_e__Union,
    Reserved: {"kind""Ptr","child":{"kind":"Void"}},
    Event: Windows.Win32.CoreAudio.KSIDENTIFIER,
    EventData: Windows.Win32.CoreAudio.KSEVENTDATA,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSEVENT_TIME_MARK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSEVENT_TIME_MARK = extern struct {
    EventData: Windows.Win32.CoreAudio.KSEVENTDATA,
    MarkTime: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSEVENT_TIME_INTERVAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSEVENT_TIME_INTERVAL = extern struct {
    EventData: Windows.Win32.CoreAudio.KSEVENTDATA,
    TimeBase: {"kind":"Int64"},
    Interval: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSINTERVAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSINTERVAL = extern struct {
    TimeBase: {"kind":"Int64"},
    Interval: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_General
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_General = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_GENERAL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_GENERAL = *opaque{
};
// --------------------------------------------------------
// Type: KSCOMPONENTID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCOMPONENTID = extern struct {
    Manufacturer: Guid,
    Product: Guid,
    Component: Guid,
    Name: Guid,
    Version: {"kind":"UInt32"},
    Revision: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSMETHODSETID_StreamIo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_StreamIo = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_STREAMIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_STREAMIO = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_MediaSeeking
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_MediaSeeking = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_MEDIASEEKING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_MEDIASEEKING = *opaque{
};
// --------------------------------------------------------
// Type: KS_SEEKING_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_SEEKING_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: KS_SEEKING_CAPABILITIES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_SEEKING_CAPABILITIES = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_POSITIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_POSITIONS = extern struct {
    Current: {"kind":"Int64"},
    Stop: {"kind":"Int64"},
    CurrentFlags: Windows.Win32.CoreAudio.KS_SEEKING_FLAGS,
    StopFlags: Windows.Win32.CoreAudio.KS_SEEKING_FLAGS,
};
// --------------------------------------------------------
// Type: KSPROPERTY_MEDIAAVAILABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_MEDIAAVAILABLE = extern struct {
    Earliest: {"kind":"Int64"},
    Latest: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSP_TIMEFORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSP_TIMEFORMAT = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    SourceFormat: Guid,
    TargetFormat: Guid,
    Time: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_Topology
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Topology = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_TOPOLOGY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TOPOLOGY = *opaque{
};
// --------------------------------------------------------
// Type: KSCATEGORY_BRIDGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_BRIDGE = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_CAPTURE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_CAPTURE = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_VIDEO_CAMERA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_VIDEO_CAMERA = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_SENSOR_CAMERA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_SENSOR_CAMERA = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_NETWORK_CAMERA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_NETWORK_CAMERA = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_SENSOR_GROUP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_SENSOR_GROUP = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_RENDER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_RENDER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_MIXER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_MIXER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_SPLITTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_SPLITTER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_DATACOMPRESSOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_DATACOMPRESSOR = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_DATADECOMPRESSOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_DATADECOMPRESSOR = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_DATATRANSFORM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_DATATRANSFORM = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_VIDEO_DECODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_VIDEO_DECODER = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_VIDEO_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_VIDEO_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_VIDEO_EFFECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_VIDEO_EFFECT = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_MULTIPLEXER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_MULTIPLEXER = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_DEMULTIPLEXER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_DEMULTIPLEXER = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_AUDIO_DECODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_AUDIO_DECODER = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_AUDIO_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_AUDIO_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_AUDIO_EFFECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_AUDIO_EFFECT = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_VIDEO_PROCESSOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_VIDEO_PROCESSOR = opaque {
};
// --------------------------------------------------------
// Type: KSMFT_CATEGORY_OTHER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMFT_CATEGORY_OTHER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_COMMUNICATIONSTRANSFORM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_COMMUNICATIONSTRANSFORM = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_INTERFACETRANSFORM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_INTERFACETRANSFORM = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_MEDIUMTRANSFORM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_MEDIUMTRANSFORM = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_FILESYSTEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_FILESYSTEM = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_CLOCK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_CLOCK = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_PROXY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_PROXY = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_QUALITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_QUALITY = opaque {
};
// --------------------------------------------------------
// Type: KSTOPOLOGY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTOPOLOGY = extern struct {
    CategoriesCount: {"kind":"UInt32"},
    Categories: {"kind""Ptr","child":Guid},
    TopologyNodesCount: {"kind":"UInt32"},
    TopologyNodes: {"kind""Ptr","child":Guid},
    TopologyConnectionsCount: {"kind":"UInt32"},
    TopologyConnections: {"kind""Ptr","child":Windows.Win32.DirectShow.KSTOPOLOGY_CONNECTION},
    TopologyNodesNames: {"kind""Ptr","child":Guid},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNODE_CREATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSNODE_CREATE = extern struct {
    CreateFlags: {"kind":"UInt32"},
    Node: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSTIME_FORMAT_FRAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSTIME_FORMAT_FRAME = opaque {
};
// --------------------------------------------------------
// Type: KSTIME_FORMAT_BYTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSTIME_FORMAT_BYTE = opaque {
};
// --------------------------------------------------------
// Type: KSTIME_FORMAT_SAMPLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSTIME_FORMAT_SAMPLE = opaque {
};
// --------------------------------------------------------
// Type: KSTIME_FORMAT_FIELD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSTIME_FORMAT_FIELD = opaque {
};
// --------------------------------------------------------
// Type: KSTIME_FORMAT_MEDIA_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSTIME_FORMAT_MEDIA_TIME = opaque {
};
// --------------------------------------------------------
// Type: KSINTERFACESETID_Standard
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSINTERFACESETID_Standard = opaque {
};
// --------------------------------------------------------
// Type: KSINTERFACE_STANDARD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSINTERFACE_STANDARD = *opaque{
};
// --------------------------------------------------------
// Type: KSINTERFACESETID_FileIo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSINTERFACESETID_FileIo = opaque {
};
// --------------------------------------------------------
// Type: KSINTERFACE_FILEIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSINTERFACE_FILEIO = *opaque{
};
// --------------------------------------------------------
// Type: KSMEDIUMSETID_Standard
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEDIUMSETID_Standard = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_Pin
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Pin = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_PIN
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_PIN = *opaque{
};
// --------------------------------------------------------
// Type: KSP_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSP_PIN = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    PinId: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KSP_PIN+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSE_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSE_PIN = extern struct {
    Event: Windows.Win32.CoreAudio.KSIDENTIFIER,
    PinId: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPIN_CINSTANCES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPIN_CINSTANCES = extern struct {
    PossibleCount: {"kind":"UInt32"},
    CurrentCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPIN_DATAFLOW
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPIN_DATAFLOW = *opaque{
};
// --------------------------------------------------------
// Type: KSDATAFORMAT
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const KSDATAFORMAT = *opaque{
    // --------------------------------------------------------
    // Type: _Anonymous_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Anonymous_e__Struct = extern struct {
        FormatSize: {"kind":"UInt32"},
        Flags: {"kind":"UInt32"},
        SampleSize: {"kind":"UInt32"},
        Reserved: {"kind":"UInt32"},
        MajorFormat: Guid,
        SubFormat: Guid,
        Specifier: Guid,
    };
};
// --------------------------------------------------------
// Type: KSATTRIBUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSATTRIBUTE = extern struct {
    Size: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    Attribute: Guid,
};
// --------------------------------------------------------
// Type: KSPIN_COMMUNICATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPIN_COMMUNICATION = *opaque{
};
// --------------------------------------------------------
// Type: KSPIN_CONNECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPIN_CONNECT = extern struct {
    Interface: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Medium: Windows.Win32.CoreAudio.KSIDENTIFIER,
    PinId: {"kind":"UInt32"},
    PinToHandle: Windows.Win32.SystemServices.HANDLE,
    Priority: Windows.Win32.CoreAudio.KSPRIORITY,
};
// --------------------------------------------------------
// Type: KSPIN_PHYSICALCONNECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPIN_PHYSICALCONNECTION = extern struct {
    Size: {"kind":"UInt32"},
    Pin: {"kind":"UInt32"},
    SymbolicLinkName: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: KSEVENTSETID_PinCapsChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_PinCapsChange = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_PINCAPS_CHANGENOTIFICATIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_PINCAPS_CHANGENOTIFICATIONS = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_VolumeLimit
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_VolumeLimit = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_VOLUMELIMIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_VOLUMELIMIT = *opaque{
};
// --------------------------------------------------------
// Type: KSNAME_Filter
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNAME_Filter = opaque {
};
// --------------------------------------------------------
// Type: KSNAME_Pin
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNAME_Pin = opaque {
};
// --------------------------------------------------------
// Type: KSNAME_Clock
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNAME_Clock = opaque {
};
// --------------------------------------------------------
// Type: KSNAME_Allocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNAME_Allocator = opaque {
};
// --------------------------------------------------------
// Type: KSNAME_TopologyNode
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNAME_TopologyNode = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_STREAM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_STREAM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_NONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_NONE = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_FILENAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_FILENAME = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_FILEHANDLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_FILEHANDLE = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_NONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_NONE = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_Quality
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Quality = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_QUALITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_QUALITY = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_Connection
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Connection = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CONNECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CONNECTION = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_MemoryTransport
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_MemoryTransport = opaque {
};
// --------------------------------------------------------
// Type: KSALLOCATOR_FRAMING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSALLOCATOR_FRAMING = extern struct {
    Anonymous1: Windows.Win32.CoreAudio.KSALLOCATOR_FRAMING+_Anonymous1_e__Union,
    PoolType: {"kind":"UInt32"},
    Frames: {"kind":"UInt32"},
    FrameSize: {"kind":"UInt32"},
    Anonymous2: Windows.Win32.CoreAudio.KSALLOCATOR_FRAMING+_Anonymous2_e__Union,
    Reserved: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KS_FRAMING_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_FRAMING_RANGE = extern struct {
    MinFrameSize: {"kind":"UInt32"},
    MaxFrameSize: {"kind":"UInt32"},
    Stepping: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_FRAMING_RANGE_WEIGHTED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_FRAMING_RANGE_WEIGHTED = extern struct {
    Range: Windows.Win32.CoreAudio.KS_FRAMING_RANGE,
    InPlaceWeight: {"kind":"UInt32"},
    NotInPlaceWeight: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_COMPRESSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_COMPRESSION = extern struct {
    RatioNumerator: {"kind":"UInt32"},
    RatioDenominator: {"kind":"UInt32"},
    RatioConstantMargin: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_FRAMING_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_FRAMING_ITEM = extern struct {
    MemoryType: Guid,
    BusType: Guid,
    MemoryFlags: {"kind":"UInt32"},
    BusFlags: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    Frames: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KS_FRAMING_ITEM+_Anonymous_e__Union,
    MemoryTypeWeight: {"kind":"UInt32"},
    PhysicalRange: Windows.Win32.CoreAudio.KS_FRAMING_RANGE,
    FramingRange: Windows.Win32.CoreAudio.KS_FRAMING_RANGE_WEIGHTED,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSALLOCATOR_FRAMING_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSALLOCATOR_FRAMING_EX = extern struct {
    CountItems: {"kind":"UInt32"},
    PinFlags: {"kind":"UInt32"},
    OutputCompression: Windows.Win32.CoreAudio.KS_COMPRESSION,
    PinWeight: {"kind":"UInt32"},
    FramingItem: {"kind":"Array","child": Windows.Win32.CoreAudio.KS_FRAMING_ITEM},
};
// --------------------------------------------------------
// Type: KSMEMORY_TYPE_SYSTEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEMORY_TYPE_SYSTEM = opaque {
};
// --------------------------------------------------------
// Type: KSMEMORY_TYPE_USER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEMORY_TYPE_USER = opaque {
};
// --------------------------------------------------------
// Type: KSMEMORY_TYPE_KERNEL_PAGED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEMORY_TYPE_KERNEL_PAGED = opaque {
};
// --------------------------------------------------------
// Type: KSMEMORY_TYPE_KERNEL_NONPAGED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEMORY_TYPE_KERNEL_NONPAGED = opaque {
};
// --------------------------------------------------------
// Type: KSMEMORY_TYPE_DEVICE_UNKNOWN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEMORY_TYPE_DEVICE_UNKNOWN = opaque {
};
// --------------------------------------------------------
// Type: KSEVENTSETID_StreamAllocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_StreamAllocator = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_STREAMALLOCATOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_STREAMALLOCATOR = *opaque{
};
// --------------------------------------------------------
// Type: KSMETHODSETID_StreamAllocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_StreamAllocator = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_STREAMALLOCATOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_STREAMALLOCATOR = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_StreamAllocator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_StreamAllocator = opaque {
};
// --------------------------------------------------------
// Type: KSSTREAMALLOCATOR_STATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSTREAMALLOCATOR_STATUS = extern struct {
    Framing: Windows.Win32.CoreAudio.KSALLOCATOR_FRAMING,
    AllocatedFrames: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSSTREAMALLOCATOR_STATUS_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSTREAMALLOCATOR_STATUS_EX = extern struct {
    Framing: Windows.Win32.CoreAudio.KSALLOCATOR_FRAMING_EX,
    AllocatedFrames: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSTIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTIME = extern struct {
    Time: {"kind":"Int64"},
    Numerator: {"kind":"UInt32"},
    Denominator: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSSTREAM_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSTREAM_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    TypeSpecificFlags: {"kind":"UInt32"},
    PresentationTime: Windows.Win32.CoreAudio.KSTIME,
    Duration: {"kind":"Int64"},
    FrameExtent: {"kind":"UInt32"},
    DataUsed: {"kind":"UInt32"},
    Data: {"kind""Ptr","child":{"kind":"Void"}},
    OptionsFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSSTREAM_METADATA_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSTREAM_METADATA_INFO = extern struct {
    BufferSize: {"kind":"UInt32"},
    UsedSize: {"kind":"UInt32"},
    Data: {"kind""Ptr","child":{"kind":"Void"}},
    SystemVa: {"kind""Ptr","child":{"kind":"Void"}},
    Flags: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSSTREAM_UVC_METADATATYPE_TIMESTAMP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSTREAM_UVC_METADATATYPE_TIMESTAMP = extern struct {
    PresentationTimeStamp: {"kind":"UInt32"},
    SourceClockReference: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KSSTREAM_UVC_METADATATYPE_TIMESTAMP+_Anonymous_e__Union,
    Reserved0: {"kind":"UInt16"},
    Reserved1: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            _bitfield: {"kind":"UInt16"},
        };
    };
};
// --------------------------------------------------------
// Type: KSSTREAM_UVC_METADATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSTREAM_UVC_METADATA = extern struct {
    StartOfFrameTimestamp: Windows.Win32.CoreAudio.KSSTREAM_UVC_METADATATYPE_TIMESTAMP,
    EndOfFrameTimestamp: Windows.Win32.CoreAudio.KSSTREAM_UVC_METADATATYPE_TIMESTAMP,
};
// --------------------------------------------------------
// Type: KSPIN_MDL_CACHING_EVENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPIN_MDL_CACHING_EVENT = *opaque{
};
// --------------------------------------------------------
// Type: KSPIN_MDL_CACHING_NOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPIN_MDL_CACHING_NOTIFICATION = extern struct {
    Event: Windows.Win32.CoreAudio.KSPIN_MDL_CACHING_EVENT,
    Buffer: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSPIN_MDL_CACHING_NOTIFICATION32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPIN_MDL_CACHING_NOTIFICATION32 = extern struct {
    Event: Windows.Win32.CoreAudio.KSPIN_MDL_CACHING_EVENT,
    Buffer: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_StreamInterface
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_StreamInterface = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_STREAMINTERFACE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_STREAMINTERFACE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_Stream
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Stream = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_STREAM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_STREAM = *opaque{
};
// --------------------------------------------------------
// Type: KSPPROPERTY_ALLOCATOR_MDLCACHING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPPROPERTY_ALLOCATOR_MDLCACHING = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_PinMDLCacheClearProp
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_PinMDLCacheClearProp = opaque {
};
// --------------------------------------------------------
// Type: KSQUALITY_MANAGER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSQUALITY_MANAGER = extern struct {
    QualityManager: Windows.Win32.SystemServices.HANDLE,
    Context: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSFRAMETIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSFRAMETIME = extern struct {
    Duration: {"kind":"Int64"},
    FrameFlags: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRATE = extern struct {
    PresentationStart: {"kind":"Int64"},
    Duration: {"kind":"Int64"},
    Interface: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Rate: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRATE_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRATE_CAPABILITY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Rate: Windows.Win32.CoreAudio.KSRATE,
};
// --------------------------------------------------------
// Type: KSPROPSETID_Clock
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Clock = opaque {
};
// --------------------------------------------------------
// Type: KSCLOCK_CREATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCLOCK_CREATE = extern struct {
    CreateFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCORRELATED_TIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCORRELATED_TIME = extern struct {
    Time: {"kind":"Int64"},
    SystemTime: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSRESOLUTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRESOLUTION = extern struct {
    Granularity: {"kind":"Int64"},
    Error: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CLOCK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CLOCK = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_Clock
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_Clock = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_CLOCK_POSITION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_CLOCK_POSITION = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_Connection
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_Connection = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_CONNECTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_CONNECTION = *opaque{
};
// --------------------------------------------------------
// Type: KSQUALITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSQUALITY = extern struct {
    Context: {"kind""Ptr","child":{"kind":"Void"}},
    Proportion: {"kind":"UInt32"},
    DeltaTime: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSERROR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSERROR = extern struct {
    Context: {"kind""Ptr","child":{"kind":"Void"}},
    Status: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDEVICE_THERMAL_STATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSDEVICE_THERMAL_STATE = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_Device
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_Device = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_DEVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_DEVICE = *opaque{
};
// --------------------------------------------------------
// Type: KSDEGRADESETID_Standard
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDEGRADESETID_Standard = opaque {
};
// --------------------------------------------------------
// Type: KSDEGRADE_STANDARD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSDEGRADE_STANDARD = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_SERIALHDR
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const KSPROPERTY_SERIALHDR = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_SERIAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_SERIAL = extern struct {
    PropTypeSet: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Id: {"kind":"UInt32"},
    PropertyLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: MF_MDL_SHARED_PAYLOAD_KEY
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const MF_MDL_SHARED_PAYLOAD_KEY = *opaque{
    // --------------------------------------------------------
    // Type: _combined_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _combined_e__Struct = extern struct {
        pHandle: {"kind":"UInt32"},
        fHandle: {"kind":"UInt32"},
        uPayload: {"kind":"UInt64"},
    };
};
// --------------------------------------------------------
// Type: KSMULTIPLE_DATA_PROP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSMULTIPLE_DATA_PROP = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    MultipleItem: Windows.Win32.CoreAudio.KSMULTIPLE_ITEM,
};
// --------------------------------------------------------
// Type: KSMEDIUMSETID_MidiBus
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEDIUMSETID_MidiBus = opaque {
};
// --------------------------------------------------------
// Type: KSMEDIUMSETID_VPBus
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMEDIUMSETID_VPBus = opaque {
};
// --------------------------------------------------------
// Type: KSINTERFACESETID_Media
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSINTERFACESETID_Media = opaque {
};
// --------------------------------------------------------
// Type: KSINTERFACE_MEDIA
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSINTERFACE_MEDIA = *opaque{
};
// --------------------------------------------------------
// Type: KSCOMPONENTID_USBAUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCOMPONENTID_USBAUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_INPUT_UNDEFINED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_INPUT_UNDEFINED = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MICROPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MICROPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DESKTOP_MICROPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DESKTOP_MICROPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PERSONAL_MICROPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PERSONAL_MICROPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_OMNI_DIRECTIONAL_MICROPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MICROPHONE_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MICROPHONE_ARRAY = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PROCESSING_MICROPHONE_ARRAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PROCESSING_MICROPHONE_ARRAY = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_MICROPHONE_ARRAY_PROCESSOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_OUTPUT_UNDEFINED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_OUTPUT_UNDEFINED = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SPEAKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SPEAKER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_HEADPHONES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_HEADPHONES = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_HEAD_MOUNTED_DISPLAY_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DESKTOP_SPEAKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DESKTOP_SPEAKER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_ROOM_SPEAKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_ROOM_SPEAKER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_COMMUNICATION_SPEAKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_COMMUNICATION_SPEAKER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_LOW_FREQUENCY_EFFECTS_SPEAKER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_BIDIRECTIONAL_UNDEFINED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_BIDIRECTIONAL_UNDEFINED = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_HANDSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_HANDSET = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_HEADSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_HEADSET = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SPEAKERPHONE_NO_ECHO_REDUCTION = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_ECHO_SUPPRESSING_SPEAKERPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_ECHO_CANCELING_SPEAKERPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_TELEPHONY_UNDEFINED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_TELEPHONY_UNDEFINED = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PHONE_LINE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PHONE_LINE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_TELEPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_TELEPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DOWN_LINE_PHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DOWN_LINE_PHONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_EXTERNAL_UNDEFINED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_EXTERNAL_UNDEFINED = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_ANALOG_CONNECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_ANALOG_CONNECTOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DIGITAL_AUDIO_INTERFACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DIGITAL_AUDIO_INTERFACE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_LINE_CONNECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_LINE_CONNECTOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_LEGACY_AUDIO_CONNECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_LEGACY_AUDIO_CONNECTOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SPDIF_INTERFACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SPDIF_INTERFACE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_1394_DA_STREAM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_1394_DA_STREAM = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_1394_DV_STREAM_SOUNDTRACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_1394_DV_STREAM_SOUNDTRACK = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_EMBEDDED_UNDEFINED
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_EMBEDDED_UNDEFINED = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_LEVEL_CALIBRATION_NOISE_SOURCE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_EQUALIZATION_NOISE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_EQUALIZATION_NOISE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_CD_PLAYER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_CD_PLAYER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DAT_IO_DIGITAL_AUDIO_TAPE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DCC_IO_DIGITAL_COMPACT_CASSETTE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MINIDISK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MINIDISK = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_ANALOG_TAPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_ANALOG_TAPE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PHONOGRAPH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PHONOGRAPH = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VCR_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VCR_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_DISC_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_DISC_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DVD_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DVD_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_TV_TUNER_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_TV_TUNER_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SATELLITE_RECEIVER_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SATELLITE_RECEIVER_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_CABLE_TUNER_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_CABLE_TUNER_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DSS_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DSS_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_RADIO_RECEIVER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_RADIO_RECEIVER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_RADIO_TRANSMITTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_RADIO_TRANSMITTER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MULTITRACK_RECORDER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MULTITRACK_RECORDER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SYNTHESIZER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SYNTHESIZER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_HDMI_INTERFACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_HDMI_INTERFACE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DISPLAYPORT_INTERFACE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DISPLAYPORT_INTERFACE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_AUDIO_LOOPBACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_AUDIO_LOOPBACK = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_AUDIO_KEYWORDDETECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_AUDIO_KEYWORDDETECTOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MIDI_JACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MIDI_JACK = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MIDI_ELEMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MIDI_ELEMENT = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_AUDIO_ENGINE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_AUDIO_ENGINE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SPEAKERS_STATIC_JACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SPEAKERS_STATIC_JACK = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_SPDIF_OUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_SPDIF_OUT = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_SPDIF_IN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_SPDIF_IN = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_HDMI_OUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_HDMI_OUT = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_DISPLAYPORT_OUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_DISPLAYPORT_OUT = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DRM_DESCRAMBLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DRM_DESCRAMBLE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_TELEPHONY_BIDI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_TELEPHONY_BIDI = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_FM_RX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_FM_RX = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_REALTIME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_REALTIME = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_TEXT = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_NETWORK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_NETWORK = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_TOPOLOGY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_TOPOLOGY = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_VIRTUAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_VIRTUAL = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_ACOUSTIC_ECHO_CANCEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_ACOUSTIC_ECHO_CANCEL = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_WDMAUD_USE_PIN_NAME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_WDMAUD_USE_PIN_NAME = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_ESCALANTE_PLATFORM_DRIVER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_ESCALANTE_PLATFORM_DRIVER = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_TEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_TEXT = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_ANALOG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_ANALOG = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_DRM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_DRM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_ALAW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_ALAW = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MULAW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MULAW = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_ADPCM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_ADPCM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_VC_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_VC_ID = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_WAVEFORMATEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_WAVEFORMATEX = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_DSOUND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_DSOUND = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_WAVEFORMATEX
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const KSDATAFORMAT_WAVEFORMATEX = *opaque{
};
// --------------------------------------------------------
// Type: WAVEFORMATEXTENSIBLE_IEC61937
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const WAVEFORMATEXTENSIBLE_IEC61937 = *opaque{
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_WAVEFORMATEXTENSIBLE
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const KSDATAFORMAT_WAVEFORMATEXTENSIBLE = *opaque{
};
// --------------------------------------------------------
// Type: KSDSOUND_BUFFERDESC
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const KSDSOUND_BUFFERDESC = *opaque{
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_DSOUND
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const KSDATAFORMAT_DSOUND = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIO_POSITION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_POSITION = extern struct {
    PlayOffset: {"kind":"UInt64"},
    WriteOffset: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSAUDIO_PRESENTATION_POSITION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_PRESENTATION_POSITION = extern struct {
    u64PositionInBlocks: {"kind":"UInt64"},
    u64QPCPosition: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: CONSTRICTOR_OPTION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CONSTRICTOR_OPTION = *opaque{
};
// --------------------------------------------------------
// Type: _KSAUDIO_PACKETSIZE_SIGNALPROCESSINGMODE_CONSTRAINT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const _KSAUDIO_PACKETSIZE_SIGNALPROCESSINGMODE_CONSTRAINT = extern struct {
    ProcessingMode: Guid,
    SamplesPerProcessingPacket: {"kind":"UInt32"},
    ProcessingPacketDurationInHns: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSAUDIO_PACKETSIZE_CONSTRAINTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_PACKETSIZE_CONSTRAINTS = extern struct {
    MinPacketPeriodInHns: {"kind":"UInt32"},
    PacketSizeFileAlignment: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
    NumProcessingModeConstraints: {"kind":"UInt32"},
    ProcessingModeConstraints: {"kind":"Array","child": Windows.Win32.CoreAudio._KSAUDIO_PACKETSIZE_SIGNALPROCESSINGMODE_CONSTRAINT},
};
// --------------------------------------------------------
// Type: KSAUDIO_PACKETSIZE_CONSTRAINTS2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_PACKETSIZE_CONSTRAINTS2 = extern struct {
    MinPacketPeriodInHns: {"kind":"UInt32"},
    PacketSizeFileAlignment: {"kind":"UInt32"},
    MaxPacketSizeInBytes: {"kind":"UInt32"},
    NumProcessingModeConstraints: {"kind":"UInt32"},
    ProcessingModeConstraints: {"kind":"Array","child": Windows.Win32.CoreAudio._KSAUDIO_PACKETSIZE_SIGNALPROCESSINGMODE_CONSTRAINT},
};
// --------------------------------------------------------
// Type: KSMICARRAY_MICTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMICARRAY_MICTYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIO_MICROPHONE_COORDINATES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_MICROPHONE_COORDINATES = extern struct {
    usType: {"kind":"UInt16"},
    wXCoord: {"kind":"Int16"},
    wYCoord: {"kind":"Int16"},
    wZCoord: {"kind":"Int16"},
    wVerticalAngle: {"kind":"Int16"},
    wHorizontalAngle: {"kind":"Int16"},
};
// --------------------------------------------------------
// Type: KSMICARRAY_MICARRAYTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMICARRAY_MICARRAYTYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIO_MIC_ARRAY_GEOMETRY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_MIC_ARRAY_GEOMETRY = extern struct {
    usVersion: {"kind":"UInt16"},
    usMicArrayType: {"kind":"UInt16"},
    wVerticalAngleBegin: {"kind":"Int16"},
    wVerticalAngleEnd: {"kind":"Int16"},
    wHorizontalAngleBegin: {"kind":"Int16"},
    wHorizontalAngleEnd: {"kind":"Int16"},
    usFrequencyBandLo: {"kind":"UInt16"},
    usFrequencyBandHi: {"kind":"UInt16"},
    usNumberOfMicrophones: {"kind":"UInt16"},
    KsMicCoord: {"kind":"Array","child": Windows.Win32.CoreAudio.KSAUDIO_MICROPHONE_COORDINATES},
};
// --------------------------------------------------------
// Type: DS3DVECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DS3DVECTOR = extern struct {
    Anonymous1: Windows.Win32.CoreAudio.DS3DVECTOR+_Anonymous1_e__Union,
    Anonymous2: Windows.Win32.CoreAudio.DS3DVECTOR+_Anonymous2_e__Union,
    Anonymous3: Windows.Win32.CoreAudio.DS3DVECTOR+_Anonymous3_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous3_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous3_e__Union = *opaque{
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSPROPSETID_DirectSound3DListener
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_DirectSound3DListener = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_DIRECTSOUND3DLISTENER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_DIRECTSOUND3DLISTENER = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_LISTENER_ALL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_LISTENER_ALL = extern struct {
    Position: Windows.Win32.CoreAudio.DS3DVECTOR,
    Velocity: Windows.Win32.CoreAudio.DS3DVECTOR,
    OrientFront: Windows.Win32.CoreAudio.DS3DVECTOR,
    OrientTop: Windows.Win32.CoreAudio.DS3DVECTOR,
    DistanceFactor: {"kind":"Single"},
    RolloffFactor: {"kind":"Single"},
    DopplerFactor: {"kind":"Single"},
};
// --------------------------------------------------------
// Type: KSDS3D_LISTENER_ORIENTATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_LISTENER_ORIENTATION = extern struct {
    Front: Windows.Win32.CoreAudio.DS3DVECTOR,
    Top: Windows.Win32.CoreAudio.DS3DVECTOR,
};
// --------------------------------------------------------
// Type: KSPROPSETID_DirectSound3DBuffer
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_DirectSound3DBuffer = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_DIRECTSOUND3DBUFFER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_DIRECTSOUND3DBUFFER = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_BUFFER_ALL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_BUFFER_ALL = extern struct {
    Position: Windows.Win32.CoreAudio.DS3DVECTOR,
    Velocity: Windows.Win32.CoreAudio.DS3DVECTOR,
    InsideConeAngle: {"kind":"UInt32"},
    OutsideConeAngle: {"kind":"UInt32"},
    ConeOrientation: Windows.Win32.CoreAudio.DS3DVECTOR,
    ConeOutsideVolume: {"kind":"Int32"},
    MinDistance: {"kind":"Single"},
    MaxDistance: {"kind":"Single"},
    Mode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDS3D_BUFFER_CONE_ANGLES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_BUFFER_CONE_ANGLES = extern struct {
    InsideConeAngle: {"kind":"UInt32"},
    OutsideConeAngle: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_PARAMS_MSG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_HRTF_PARAMS_MSG = extern struct {
    Size: {"kind":"UInt32"},
    Enabled: {"kind":"UInt32"},
    SwapChannels: Windows.Win32.SystemServices.BOOL,
    ZeroAzimuth: Windows.Win32.SystemServices.BOOL,
    CrossFadeOutput: Windows.Win32.SystemServices.BOOL,
    FilterSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_FILTER_QUALITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSDS3D_HRTF_FILTER_QUALITY = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_INIT_MSG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_HRTF_INIT_MSG = extern struct {
    Size: {"kind":"UInt32"},
    Quality: Windows.Win32.CoreAudio.KSDS3D_HRTF_FILTER_QUALITY,
    SampleRate: {"kind":"Single"},
    MaxFilterSize: {"kind":"UInt32"},
    FilterTransientMuteLength: {"kind":"UInt32"},
    FilterOverlapBufferLength: {"kind":"UInt32"},
    OutputOverlapBufferLength: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_COEFF_FORMAT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSDS3D_HRTF_COEFF_FORMAT = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_FILTER_METHOD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSDS3D_HRTF_FILTER_METHOD = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_FILTER_VERSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSDS3D_HRTF_FILTER_VERSION = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_HRTF_FILTER_FORMAT_MSG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_HRTF_FILTER_FORMAT_MSG = extern struct {
    FilterMethod: Windows.Win32.CoreAudio.KSDS3D_HRTF_FILTER_METHOD,
    CoeffFormat: Windows.Win32.CoreAudio.KSDS3D_HRTF_COEFF_FORMAT,
    Version: Windows.Win32.CoreAudio.KSDS3D_HRTF_FILTER_VERSION,
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_Hrtf3d
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Hrtf3d = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_HRTF3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_HRTF3D = *opaque{
};
// --------------------------------------------------------
// Type: KSDS3D_ITD_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_ITD_PARAMS = extern struct {
    Channel: {"kind":"Int32"},
    VolSmoothScale: {"kind":"Single"},
    TotalDryAttenuation: {"kind":"Single"},
    TotalWetAttenuation: {"kind":"Single"},
    SmoothFrequency: {"kind":"Int32"},
    Delay: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSDS3D_ITD_PARAMS_MSG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDS3D_ITD_PARAMS_MSG = extern struct {
    Enabled: {"kind":"UInt32"},
    LeftParams: Windows.Win32.CoreAudio.KSDS3D_ITD_PARAMS,
    RightParams: Windows.Win32.CoreAudio.KSDS3D_ITD_PARAMS,
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_Itd3d
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Itd3d = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_ITD3D
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_ITD3D = *opaque{
};
// --------------------------------------------------------
// Type: KSDATARANGE_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDATARANGE_AUDIO = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    MaximumChannels: {"kind":"UInt32"},
    MinimumBitsPerSample: {"kind":"UInt32"},
    MaximumBitsPerSample: {"kind":"UInt32"},
    MinimumSampleFrequency: {"kind":"UInt32"},
    MaximumSampleFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_RIFF
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_RIFF = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_RIFFWAVE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_RIFFWAVE = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_Bibliographic
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Bibliographic = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BIBLIOGRAPHIC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BIBLIOGRAPHIC = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_TopologyNode
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_TopologyNode = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_TOPOLOGYNODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TOPOLOGYNODE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_RtAudio
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_RtAudio = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_RTAUDIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_RTAUDIO = *opaque{
};
// --------------------------------------------------------
// Type: KSRTAUDIO_BUFFER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_BUFFER_PROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind""Ptr","child":{"kind":"Void"}},
    RequestedBufferSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_BUFFER_PROPERTY32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_BUFFER_PROPERTY32 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind":"UInt32"},
    RequestedBufferSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind""Ptr","child":{"kind":"Void"}},
    RequestedBufferSize: {"kind":"UInt32"},
    NotificationCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION32 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind":"UInt32"},
    RequestedBufferSize: {"kind":"UInt32"},
    NotificationCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_BUFFER = extern struct {
    BufferAddress: {"kind""Ptr","child":{"kind":"Void"}},
    ActualBufferSize: {"kind":"UInt32"},
    CallMemoryBarrier: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSRTAUDIO_BUFFER32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_BUFFER32 = extern struct {
    BufferAddress: {"kind":"UInt32"},
    ActualBufferSize: {"kind":"UInt32"},
    CallMemoryBarrier: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSRTAUDIO_HWLATENCY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_HWLATENCY = extern struct {
    FifoSize: {"kind":"UInt32"},
    ChipsetDelay: {"kind":"UInt32"},
    CodecDelay: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_HWREGISTER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_HWREGISTER_PROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_HWREGISTER_PROPERTY32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_HWREGISTER_PROPERTY32 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_HWREGISTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_HWREGISTER = extern struct {
    Register: {"kind""Ptr","child":{"kind":"Void"}},
    Width: {"kind":"UInt32"},
    Numerator: {"kind":"UInt64"},
    Denominator: {"kind":"UInt64"},
    Accuracy: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_HWREGISTER32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_HWREGISTER32 = extern struct {
    Register: {"kind":"UInt32"},
    Width: {"kind":"UInt32"},
    Numerator: {"kind":"UInt64"},
    Denominator: {"kind":"UInt64"},
    Accuracy: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_NOTIFICATION_EVENT_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_NOTIFICATION_EVENT_PROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NotificationEvent: Windows.Win32.SystemServices.HANDLE,
};
// --------------------------------------------------------
// Type: KSRTAUDIO_NOTIFICATION_EVENT_PROPERTY32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_NOTIFICATION_EVENT_PROPERTY32 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NotificationEvent: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_GETREADPACKET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_GETREADPACKET_INFO = extern struct {
    PacketNumber: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    PerformanceCounterValue: {"kind":"UInt64"},
    MoreData: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSRTAUDIO_SETWRITEPACKET_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_SETWRITEPACKET_INFO = extern struct {
    PacketNumber: {"kind":"UInt32"},
    Flags: {"kind":"UInt32"},
    EosPacketLength: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_PACKETVREGISTER_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_PACKETVREGISTER_PROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    BaseAddress: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSRTAUDIO_PACKETVREGISTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSRTAUDIO_PACKETVREGISTER = extern struct {
    CompletedPacketCount: {"kind""Ptr","child":{"kind":"UInt64"}},
    CompletedPacketQPC: {"kind""Ptr","child":{"kind":"UInt64"}},
    CompletedPacketHash: {"kind""Ptr","child":{"kind":"UInt64"}},
};
// --------------------------------------------------------
// Type: KSPROPSETID_BtAudio
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_BtAudio = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_BTAUDIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_BTAUDIO = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_DrmAudioStream
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_DrmAudioStream = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_DRMAUDIOSTREAM
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_DRMAUDIOSTREAM = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_SoundDetector
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_SoundDetector = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_SoundDetector2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_SoundDetector2 = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_InterleavedAudio
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_InterleavedAudio = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_INTERLEAVEDAUDIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_INTERLEAVEDAUDIO = *opaque{
};
// --------------------------------------------------------
// Type: INTERLEAVED_AUDIO_FORMAT_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const INTERLEAVED_AUDIO_FORMAT_INFORMATION = extern struct {
    Size: {"kind":"UInt32"},
    PrimaryChannelCount: {"kind":"UInt32"},
    PrimaryChannelStartPosition: {"kind":"UInt32"},
    PrimaryChannelMask: {"kind":"UInt32"},
    InterleavedChannelCount: {"kind":"UInt32"},
    InterleavedChannelStartPosition: {"kind":"UInt32"},
    InterleavedChannelMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSSOUNDDETECTORPROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSSOUNDDETECTORPROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    EventId: Guid,
};
// --------------------------------------------------------
// Type: KSPROPERTY_SOUNDDETECTOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_SOUNDDETECTOR = *opaque{
};
// --------------------------------------------------------
// Type: SOUNDDETECTOR_PATTERNHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SOUNDDETECTOR_PATTERNHEADER = extern struct {
    Size: {"kind":"UInt32"},
    PatternType: Guid,
};
// --------------------------------------------------------
// Type: KSEVENTSETID_SoundDetector
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_SoundDetector = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_SOUNDDETECTOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_SOUNDDETECTOR = *opaque{
};
// --------------------------------------------------------
// Type: KSNOTIFICATIONID_SoundDetector
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNOTIFICATIONID_SoundDetector = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_Audio
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Audio = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AUDIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AUDIO = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIO_COPY_PROTECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_COPY_PROTECTION = extern struct {
    fCopyrighted: Windows.Win32.SystemServices.BOOL,
    fOriginal: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSAUDIO_CHANNEL_CONFIG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_CHANNEL_CONFIG = extern struct {
    ActiveSpeakerPositions: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSAUDIO_DYNAMIC_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_DYNAMIC_RANGE = extern struct {
    QuietCompression: {"kind":"UInt32"},
    LoudCompression: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSAUDIO_MIXLEVEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_MIXLEVEL = extern struct {
    Mute: Windows.Win32.SystemServices.BOOL,
    Level: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSAUDIO_MIX_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_MIX_CAPS = extern struct {
    Mute: Windows.Win32.SystemServices.BOOL,
    Minimum: {"kind":"Int32"},
    Maximum: {"kind":"Int32"},
    Anonymous: Windows.Win32.CoreAudio.KSAUDIO_MIX_CAPS+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSAUDIO_MIXCAP_TABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_MIXCAP_TABLE = extern struct {
    InputChannels: {"kind":"UInt32"},
    OutputChannels: {"kind":"UInt32"},
    Capabilities: {"kind":"Array","child": Windows.Win32.CoreAudio.KSAUDIO_MIX_CAPS},
};
// --------------------------------------------------------
// Type: KSAUDIO_POSITIONEX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIO_POSITIONEX = extern struct {
    TimerFrequency: Windows.Win32.SystemServices.LARGE_INTEGER,
    TimeStamp1: Windows.Win32.SystemServices.LARGE_INTEGER,
    Position: Windows.Win32.CoreAudio.KSAUDIO_POSITION,
    TimeStamp2: Windows.Win32.SystemServices.LARGE_INTEGER,
};
// --------------------------------------------------------
// Type: KSPROPSETID_TelephonyControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_TelephonyControl = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_TELEPHONY_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TELEPHONY_CONTROL = *opaque{
};
// --------------------------------------------------------
// Type: TELEPHONY_CALLTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TELEPHONY_CALLTYPE = *opaque{
};
// --------------------------------------------------------
// Type: TELEPHONY_CALLCONTROLOP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TELEPHONY_CALLCONTROLOP = *opaque{
};
// --------------------------------------------------------
// Type: KSTELEPHONY_CALLCONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTELEPHONY_CALLCONTROL = extern struct {
    CallType: Windows.Win32.CoreAudio.TELEPHONY_CALLTYPE,
    CallControlOp: Windows.Win32.CoreAudio.TELEPHONY_CALLCONTROLOP,
};
// --------------------------------------------------------
// Type: TELEPHONY_PROVIDERCHANGEOP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TELEPHONY_PROVIDERCHANGEOP = *opaque{
};
// --------------------------------------------------------
// Type: KSTELEPHONY_PROVIDERCHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTELEPHONY_PROVIDERCHANGE = extern struct {
    CallType: Windows.Win32.CoreAudio.TELEPHONY_CALLTYPE,
    ProviderChangeOp: Windows.Win32.CoreAudio.TELEPHONY_PROVIDERCHANGEOP,
};
// --------------------------------------------------------
// Type: TELEPHONY_CALLSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const TELEPHONY_CALLSTATE = *opaque{
};
// --------------------------------------------------------
// Type: KSTELEPHONY_CALLINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTELEPHONY_CALLINFO = extern struct {
    CallType: Windows.Win32.CoreAudio.TELEPHONY_CALLTYPE,
    CallState: Windows.Win32.CoreAudio.TELEPHONY_CALLSTATE,
};
// --------------------------------------------------------
// Type: KSPROPSETID_TelephonyTopology
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_TelephonyTopology = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_TELEPHONY_TOPOLOGY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TELEPHONY_TOPOLOGY = *opaque{
};
// --------------------------------------------------------
// Type: KSTOPOLOGY_ENDPOINTID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTOPOLOGY_ENDPOINTID = extern struct {
    TopologyName: {"kind":"Array","child": {"kind":"UInt16"}},
    PinId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSTOPOLOGY_ENDPOINTIDPAIR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSTOPOLOGY_ENDPOINTIDPAIR = extern struct {
    RenderEndpoint: Windows.Win32.CoreAudio.KSTOPOLOGY_ENDPOINTID,
    CaptureEndpoint: Windows.Win32.CoreAudio.KSTOPOLOGY_ENDPOINTID,
};
// --------------------------------------------------------
// Type: KSPROPSETID_FMRXTopology
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_FMRXTopology = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_FMRX_TOPOLOGY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_FMRX_TOPOLOGY = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_FMRXControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_FMRXControl = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_FMRX_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_FMRX_CONTROL = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_Telephony
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_Telephony = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_TELEPHONY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_TELEPHONY = *opaque{
};
// --------------------------------------------------------
// Type: KSNODETYPE_DAC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DAC = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_ADC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_ADC = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SRC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SRC = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SUPERMIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SUPERMIX = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MUX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MUX = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DEMUX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DEMUX = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_SUM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_SUM = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_TONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_TONE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_EQUALIZER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_EQUALIZER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_AGC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_AGC = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_NOISE_SUPPRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_NOISE_SUPPRESS = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DELAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DELAY = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_LOUDNESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_LOUDNESS = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PROLOGIC_DECODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PROLOGIC_DECODER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_STEREO_WIDE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_STEREO_WIDE = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_REVERB
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_REVERB = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_CHORUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_CHORUS = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_3D_EFFECTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_3D_EFFECTS = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PARAMETRIC_EQUALIZER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PARAMETRIC_EQUALIZER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_UPDOWN_MIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_UPDOWN_MIX = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DYN_RANGE_COMPRESSOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DYN_RANGE_COMPRESSOR = opaque {
};
// --------------------------------------------------------
// Type: KSALGORITHMINSTANCE_SYSTEM_ACOUSTIC_ECHO_CANCEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSALGORITHMINSTANCE_SYSTEM_ACOUSTIC_ECHO_CANCEL = opaque {
};
// --------------------------------------------------------
// Type: KSALGORITHMINSTANCE_SYSTEM_NOISE_SUPPRESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSALGORITHMINSTANCE_SYSTEM_NOISE_SUPPRESS = opaque {
};
// --------------------------------------------------------
// Type: KSALGORITHMINSTANCE_SYSTEM_AGC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSALGORITHMINSTANCE_SYSTEM_AGC = opaque {
};
// --------------------------------------------------------
// Type: KSALGORITHMINSTANCE_SYSTEM_MICROPHONE_ARRAY_PROCESSOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSALGORITHMINSTANCE_SYSTEM_MICROPHONE_ARRAY_PROCESSOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_DEV_SPECIFIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_DEV_SPECIFIC = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PROLOGIC_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PROLOGIC_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_PEAKMETER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_PEAKMETER = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_BASS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_BASS = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_TREBLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_TREBLE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIDRANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIDRANGE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_3D_STEREO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_3D_STEREO = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MASTER_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MASTER_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MASTER_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MASTER_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_WAVE_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_WAVE_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_WAVE_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_WAVE_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIDI_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIDI_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIDI_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIDI_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_CD_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_CD_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_CD_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_CD_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_LINE_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_LINE_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_LINE_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_LINE_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIC_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIC_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIC_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIC_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_RECORDING_SOURCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_RECORDING_SOURCE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_PC_SPEAKER_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_PC_SPEAKER_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_PC_SPEAKER_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_PC_SPEAKER_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIDI_IN_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIDI_IN_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_CD_IN_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_CD_IN_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_LINE_IN_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_LINE_IN_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIC_IN_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIC_IN_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_WAVE_IN_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_WAVE_IN_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_VOLUME_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_VOLUME_CONTROL = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MIDI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MIDI = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_LINE_IN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_LINE_IN = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_RECORDING_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_RECORDING_CONTROL = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_CD_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_CD_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_AUX_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_AUX_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_AUX_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_AUX_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_AUX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_AUX = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_PC_SPEAKER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_PC_SPEAKER = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_WAVE_OUT_MIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_WAVE_OUT_MIX = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MONO_OUT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MONO_OUT = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_STEREO_MIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_STEREO_MIX = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MONO_MIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MONO_MIX = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MONO_OUT_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MONO_OUT_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MONO_OUT_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MONO_OUT_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_STEREO_MIX_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_STEREO_MIX_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_STEREO_MIX_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_STEREO_MIX_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MONO_MIX_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MONO_MIX_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MONO_MIX_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MONO_MIX_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_MICROPHONE_BOOST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_MICROPHONE_BOOST = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_ALTERNATE_MICROPHONE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_ALTERNATE_MICROPHONE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_3D_DEPTH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_3D_DEPTH = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_3D_CENTER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_3D_CENTER = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_VIDEO_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_VIDEO_VOLUME = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_VIDEO_MUTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_VIDEO_MUTE = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSAUDFNAME_PEAKMETER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSAUDFNAME_PEAKMETER = opaque {
};
// --------------------------------------------------------
// Type: KSMETHODSETID_Wavetable
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMETHODSETID_Wavetable = opaque {
};
// --------------------------------------------------------
// Type: KSMETHOD_WAVETABLE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSMETHOD_WAVETABLE = *opaque{
};
// --------------------------------------------------------
// Type: KSWAVETABLE_WAVE_DESC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSWAVETABLE_WAVE_DESC = extern struct {
    Identifier: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Size: {"kind":"UInt32"},
    Looped: Windows.Win32.SystemServices.BOOL,
    LoopPoint: {"kind":"UInt32"},
    InROM: Windows.Win32.SystemServices.BOOL,
    Format: Windows.Win32.CoreAudio.KSDATAFORMAT,
};
// --------------------------------------------------------
// Type: KSPROPSETID_Wave
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Wave = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_WAVE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_WAVE = *opaque{
};
// --------------------------------------------------------
// Type: KSWAVE_COMPATCAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSWAVE_COMPATCAPS = extern struct {
    ulDeviceType: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSWAVE_INPUT_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSWAVE_INPUT_CAPABILITIES = extern struct {
    MaximumChannelsPerConnection: {"kind":"UInt32"},
    MinimumBitsPerSample: {"kind":"UInt32"},
    MaximumBitsPerSample: {"kind":"UInt32"},
    MinimumSampleFrequency: {"kind":"UInt32"},
    MaximumSampleFrequency: {"kind":"UInt32"},
    TotalConnections: {"kind":"UInt32"},
    ActiveConnections: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSWAVE_OUTPUT_CAPABILITIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSWAVE_OUTPUT_CAPABILITIES = extern struct {
    MaximumChannelsPerConnection: {"kind":"UInt32"},
    MinimumBitsPerSample: {"kind":"UInt32"},
    MaximumBitsPerSample: {"kind":"UInt32"},
    MinimumSampleFrequency: {"kind":"UInt32"},
    MaximumSampleFrequency: {"kind":"UInt32"},
    TotalConnections: {"kind":"UInt32"},
    StaticConnections: {"kind":"UInt32"},
    StreamingConnections: {"kind":"UInt32"},
    ActiveConnections: {"kind":"UInt32"},
    ActiveStaticConnections: {"kind":"UInt32"},
    ActiveStreamingConnections: {"kind":"UInt32"},
    Total3DConnections: {"kind":"UInt32"},
    Static3DConnections: {"kind":"UInt32"},
    Streaming3DConnections: {"kind":"UInt32"},
    Active3DConnections: {"kind":"UInt32"},
    ActiveStatic3DConnections: {"kind":"UInt32"},
    ActiveStreaming3DConnections: {"kind":"UInt32"},
    TotalSampleMemory: {"kind":"UInt32"},
    FreeSampleMemory: {"kind":"UInt32"},
    LargestFreeContiguousSampleMemory: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSWAVE_VOLUME
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSWAVE_VOLUME = extern struct {
    LeftAttenuation: {"kind":"Int32"},
    RightAttenuation: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSWAVE_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSWAVE_BUFFER = extern struct {
    Attributes: {"kind":"UInt32"},
    BufferSize: {"kind":"UInt32"},
    BufferAddress: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSMUSIC_TECHNOLOGY_PORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMUSIC_TECHNOLOGY_PORT = opaque {
};
// --------------------------------------------------------
// Type: KSMUSIC_TECHNOLOGY_SQSYNTH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMUSIC_TECHNOLOGY_SQSYNTH = opaque {
};
// --------------------------------------------------------
// Type: KSMUSIC_TECHNOLOGY_FMSYNTH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMUSIC_TECHNOLOGY_FMSYNTH = opaque {
};
// --------------------------------------------------------
// Type: KSMUSIC_TECHNOLOGY_WAVETABLE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMUSIC_TECHNOLOGY_WAVETABLE = opaque {
};
// --------------------------------------------------------
// Type: KSMUSIC_TECHNOLOGY_SWSYNTH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSMUSIC_TECHNOLOGY_SWSYNTH = opaque {
};
// --------------------------------------------------------
// Type: KSDATARANGE_MUSIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDATARANGE_MUSIC = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    Technology: Guid,
    Channels: {"kind":"UInt32"},
    Notes: {"kind":"UInt32"},
    ChannelMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_Cyclic
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Cyclic = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CYCLIC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CYCLIC = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_AudioControlChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_AudioControlChange = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_AUDIO_CONTROL_CHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_AUDIO_CONTROL_CHANGE = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_LoopedStreaming
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_LoopedStreaming = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_LOOPEDSTREAMING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_LOOPEDSTREAMING = *opaque{
};
// --------------------------------------------------------
// Type: LOOPEDSTREAMING_POSITION_EVENT_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const LOOPEDSTREAMING_POSITION_EVENT_DATA = extern struct {
    KsEventData: Windows.Win32.CoreAudio.KSEVENTDATA,
    Position: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSNODEPROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSNODEPROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NodeId: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNODEPROPERTY_AUDIO_CHANNEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSNODEPROPERTY_AUDIO_CHANNEL = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSNODEPROPERTY,
    Channel: {"kind":"Int32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNODEPROPERTY_AUDIO_DEV_SPECIFIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSNODEPROPERTY_AUDIO_DEV_SPECIFIC = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSNODEPROPERTY,
    DevSpecificId: {"kind":"UInt32"},
    DeviceInfo: {"kind":"UInt32"},
    Length: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNODEPROPERTY_AUDIO_3D_LISTENER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSNODEPROPERTY_AUDIO_3D_LISTENER = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSNODEPROPERTY,
    ListenerId: {"kind""Ptr","child":{"kind":"Void"}},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNODEPROPERTY_AUDIO_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSNODEPROPERTY_AUDIO_PROPERTY = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSNODEPROPERTY,
    AppContext: {"kind""Ptr","child":{"kind":"Void"}},
    Length: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MUSIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MUSIC = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MIDI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MIDI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MIDI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MIDI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MIDI_BUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MIDI_BUS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_RIFFMIDI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_RIFFMIDI = opaque {
};
// --------------------------------------------------------
// Type: KSMUSICFORMAT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSMUSICFORMAT = extern struct {
    TimeDeltaMs: {"kind":"UInt32"},
    ByteCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_STANDARD_ELEMENTARY_STREAM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_STANDARD_ELEMENTARY_STREAM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_STANDARD_PES_PACKET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_STANDARD_PES_PACKET = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_STANDARD_PACK_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_STANDARD_PACK_HEADER = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_STANDARD_MPEG1_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_STANDARD_MPEG1_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_STANDARD_MPEG1_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_STANDARD_MPEG1_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_STANDARD_MPEG2_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_STANDARD_MPEG2_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_STANDARD_MPEG2_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_STANDARD_MPEG2_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_STANDARD_AC3_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_STANDARD_AC3_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_DIALECT_MPEG1_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_DIALECT_MPEG1_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_DIALECT_MPEG1_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_DIALECT_MPEG1_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_DIALECT_MPEG2_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_DIALECT_MPEG2_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_DIALECT_MPEG2_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_DIALECT_MPEG2_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_DIALECT_AC3_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_DIALECT_AC3_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_DSS_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_DSS_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_DSS_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_DSS_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG1Packet
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG1Packet = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG1Payload
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG1Payload = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG1Video
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG1Video = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_MPEG1_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_MPEG1_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MPEG2_PES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MPEG2_PES = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MPEG2_PROGRAM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MPEG2_PROGRAM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_MPEG2_TRANSPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_MPEG2_TRANSPORT = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG2_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG2_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_MPEG2_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_MPEG2_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_Mpeg2Vid
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Mpeg2Vid = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_MPEG2VID
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_MPEG2VID = *opaque{
};
// --------------------------------------------------------
// Type: KSMPEGVID_RECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSMPEGVID_RECT = extern struct {
    StartX: {"kind":"UInt32"},
    StartY: {"kind":"UInt32"},
    EndX: {"kind":"UInt32"},
    EndY: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG2_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG2_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_MPEG2_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_MPEG2_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_LPCM_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_LPCM_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_LPCM_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_LPCM_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_AC3_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_AC3_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_AC3_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_AC3_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_AC3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AC3 = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AC3
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AC3 = *opaque{
};
// --------------------------------------------------------
// Type: KSAC3_ERROR_CONCEALMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAC3_ERROR_CONCEALMENT = extern struct {
    fRepeatPreviousBlock: Windows.Win32.SystemServices.BOOL,
    fErrorInCurrentBlock: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSAC3_ALTERNATE_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAC3_ALTERNATE_AUDIO = extern struct {
    fStereo: Windows.Win32.SystemServices.BOOL,
    DualMode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSAC3_DOWNMIX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAC3_DOWNMIX = extern struct {
    fDownMix: Windows.Win32.SystemServices.BOOL,
    fDolbySurround: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSAC3_BIT_STREAM_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAC3_BIT_STREAM_MODE = extern struct {
    BitStreamMode: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSAC3_DIALOGUE_LEVEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAC3_DIALOGUE_LEVEL = extern struct {
    DialogueLevel: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSAC3_ROOM_TYPE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAC3_ROOM_TYPE = extern struct {
    fLargeRoom: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_WMA_PRO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_WMA_PRO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DTS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_MPEG1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_MPEG1 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_MPEG2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_MPEG2 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_MPEG3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_MPEG3 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_AAC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_AAC = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_ATRAC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_ATRAC = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_ONE_BIT_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_ONE_BIT_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS_ATMOS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS_ATMOS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DTS_HD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DTS_HD = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_MLP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_MLP = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_MAT20
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_MAT20 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_MAT21
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_MAT21 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IEC61937_DST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IEC61937_DST = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEGLAYER3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEGLAYER3 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MPEG_HEAAC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MPEG_HEAAC = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_WMAUDIO2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_WMAUDIO2 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_WMAUDIO3
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_WMAUDIO3 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_WMAUDIO_LOSSLESS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_WMAUDIO_LOSSLESS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_DTS_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_DTS_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_SDDS_AUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_SDDS_AUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_AudioDecoderOut
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AudioDecoderOut = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AUDDECOUT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AUDDECOUT = *opaque{
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_SUBPICTURE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_SUBPICTURE = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_DvdSubPic
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_DvdSubPic = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_DVDSUBPIC
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_DVDSUBPIC = *opaque{
};
// --------------------------------------------------------
// Type: KS_DVD_YCrCb
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVD_YCrCb = extern struct {
    Reserved: {"kind":"Byte"},
    Y: {"kind":"Byte"},
    Cr: {"kind":"Byte"},
    Cb: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: KS_DVD_YUV
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVD_YUV = extern struct {
    Reserved: {"kind":"Byte"},
    Y: {"kind":"Byte"},
    V: {"kind":"Byte"},
    U: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_SPPAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_SPPAL = extern struct {
    sppal: {"kind":"Array","child": Windows.Win32.CoreAudio.KS_DVD_YUV},
};
// --------------------------------------------------------
// Type: KS_COLCON
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_COLCON = extern struct {
    _bitfield1: {"kind":"Byte"},
    _bitfield2: {"kind":"Byte"},
    _bitfield3: {"kind":"Byte"},
    _bitfield4: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_SPHLI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_SPHLI = extern struct {
    HLISS: {"kind":"UInt16"},
    Reserved: {"kind":"UInt16"},
    StartPTM: {"kind":"UInt32"},
    EndPTM: {"kind":"UInt32"},
    StartX: {"kind":"UInt16"},
    StartY: {"kind":"UInt16"},
    StopX: {"kind":"UInt16"},
    StopY: {"kind":"UInt16"},
    ColCon: Windows.Win32.CoreAudio.KS_COLCON,
};
// --------------------------------------------------------
// Type: KSPROPSETID_CopyProt
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_CopyProt = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_COPYPROT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_COPYPROT = *opaque{
};
// --------------------------------------------------------
// Type: KS_DVDCOPY_CHLGKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVDCOPY_CHLGKEY = extern struct {
    ChlgKey: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KS_DVDCOPY_BUSKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVDCOPY_BUSKEY = extern struct {
    BusKey: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KS_DVDCOPY_DISCKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVDCOPY_DISCKEY = extern struct {
    DiscKey: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KS_DVDCOPY_REGION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVDCOPY_REGION = extern struct {
    Reserved: {"kind":"Byte"},
    RegionData: {"kind":"Byte"},
    Reserved2: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KS_DVDCOPY_TITLEKEY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVDCOPY_TITLEKEY = extern struct {
    KeyFlags: {"kind":"UInt32"},
    ReservedNT: {"kind":"Array","child": {"kind":"UInt32"}},
    TitleKey: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KS_COPY_MACROVISION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_COPY_MACROVISION = extern struct {
    MACROVISIONLevel: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_DVDCOPY_SET_COPY_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DVDCOPY_SET_COPY_STATE = extern struct {
    DVDCopyState: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_DVDCOPYSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_DVDCOPYSTATE = *opaque{
};
// --------------------------------------------------------
// Type: KS_COPY_MACROVISION_LEVEL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_COPY_MACROVISION_LEVEL = *opaque{
};
// --------------------------------------------------------
// Type: KSCATEGORY_TVTUNER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_TVTUNER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_CROSSBAR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_CROSSBAR = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_TVAUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_TVAUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_VPMUX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_VPMUX = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_VBICODEC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_VBICODEC = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_VPVideo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_VPVideo = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_VPVBI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_VPVBI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_VIDEOINFO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_VIDEOINFO2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_VIDEOINFO2 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_H264_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_H264_VIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_JPEG_IMAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_JPEG_IMAGE = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_IMAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_IMAGE = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_IMAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_IMAGE = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_JPEG
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_JPEG = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_IMAGE_RGB32
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_IMAGE_RGB32 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_L8
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_L8 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_L8_IR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_L8_IR = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_L8_CUSTOM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_L8_CUSTOM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_L16
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_L16 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_L16_IR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_L16_IR = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_D16
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_D16 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_L16_CUSTOM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_L16_CUSTOM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MJPG_IR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MJPG_IR = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MJPG_DEPTH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MJPG_DEPTH = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_MJPG_CUSTOM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_MJPG_CUSTOM = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_ANALOGVIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_ANALOGVIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_ANALOGVIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_ANALOGVIDEO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_ANALOGAUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_ANALOGAUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SPECIFIER_VBI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SPECIFIER_VBI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_VBI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_VBI = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_RAW8
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_RAW8 = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_CC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_CC = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_NABTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_NABTS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_TELETEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_TELETEXT = opaque {
};
// --------------------------------------------------------
// Type: KS_RGBQUAD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_RGBQUAD = extern struct {
    rgbBlue: {"kind":"Byte"},
    rgbGreen: {"kind":"Byte"},
    rgbRed: {"kind":"Byte"},
    rgbReserved: {"kind":"Byte"},
};
// --------------------------------------------------------
// Type: KS_BITMAPINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_BITMAPINFOHEADER = extern struct {
    biSize: {"kind":"UInt32"},
    biWidth: {"kind":"Int32"},
    biHeight: {"kind":"Int32"},
    biPlanes: {"kind":"UInt16"},
    biBitCount: {"kind":"UInt16"},
    biCompression: {"kind":"UInt32"},
    biSizeImage: {"kind":"UInt32"},
    biXPelsPerMeter: {"kind":"Int32"},
    biYPelsPerMeter: {"kind":"Int32"},
    biClrUsed: {"kind":"UInt32"},
    biClrImportant: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: tag_KS_TRUECOLORINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tag_KS_TRUECOLORINFO = extern struct {
    dwBitMasks: {"kind":"Array","child": {"kind":"UInt32"}},
    bmiColors: {"kind":"Array","child": Windows.Win32.CoreAudio.KS_RGBQUAD},
};
// --------------------------------------------------------
// Type: KS_VIDEOINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_VIDEOINFOHEADER = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwBitRate: {"kind":"UInt32"},
    dwBitErrorRate: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
    bmiHeader: Windows.Win32.CoreAudio.KS_BITMAPINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_VIDEOINFO = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwBitRate: {"kind":"UInt32"},
    dwBitErrorRate: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
    bmiHeader: Windows.Win32.CoreAudio.KS_BITMAPINFOHEADER,
    Anonymous: Windows.Win32.CoreAudio.KS_VIDEOINFO+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KS_VBIINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_VBIINFOHEADER = extern struct {
    StartLine: {"kind":"UInt32"},
    EndLine: {"kind":"UInt32"},
    SamplingFrequency: {"kind":"UInt32"},
    MinLineStartTime: {"kind":"UInt32"},
    MaxLineStartTime: {"kind":"UInt32"},
    ActualLineStartTime: {"kind":"UInt32"},
    ActualLineEndTime: {"kind":"UInt32"},
    VideoStandard: {"kind":"UInt32"},
    SamplesPerLine: {"kind":"UInt32"},
    StrideInBytes: {"kind":"UInt32"},
    BufferSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: tagKS_AnalogVideoInfo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tagKS_AnalogVideoInfo = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwActiveWidth: {"kind":"UInt32"},
    dwActiveHeight: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KS_TVTUNER_CHANGE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_TVTUNER_CHANGE_INFO = extern struct {
    dwFlags: {"kind":"UInt32"},
    dwCountryCode: {"kind":"UInt32"},
    dwAnalogVideoStandard: {"kind":"UInt32"},
    dwChannel: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_MPEG2Level
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_MPEG2Level = *opaque{
};
// --------------------------------------------------------
// Type: KS_MPEG2Profile
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_MPEG2Profile = *opaque{
};
// --------------------------------------------------------
// Type: KS_VIDEOINFOHEADER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_VIDEOINFOHEADER2 = extern struct {
    rcSource: Windows.Win32.DisplayDevices.RECT,
    rcTarget: Windows.Win32.DisplayDevices.RECT,
    dwBitRate: {"kind":"UInt32"},
    dwBitErrorRate: {"kind":"UInt32"},
    AvgTimePerFrame: {"kind":"Int64"},
    dwInterlaceFlags: {"kind":"UInt32"},
    dwCopyProtectFlags: {"kind":"UInt32"},
    dwPictAspectRatioX: {"kind":"UInt32"},
    dwPictAspectRatioY: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER2+_Anonymous_e__Union,
    dwReserved2: {"kind":"UInt32"},
    bmiHeader: Windows.Win32.CoreAudio.KS_BITMAPINFOHEADER,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KS_MPEG1VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_MPEG1VIDEOINFO = extern struct {
    hdr: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER,
    dwStartTimeCode: {"kind":"UInt32"},
    cbSequenceHeader: {"kind":"UInt32"},
    bSequenceHeader: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KS_MPEGVIDEOINFO2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_MPEGVIDEOINFO2 = extern struct {
    hdr: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER2,
    dwStartTimeCode: {"kind":"UInt32"},
    cbSequenceHeader: {"kind":"UInt32"},
    dwProfile: {"kind":"UInt32"},
    dwLevel: {"kind":"UInt32"},
    dwFlags: {"kind":"UInt32"},
    bSequenceHeader: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: KS_H264VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_H264VIDEOINFO = extern struct {
    wWidth: {"kind":"UInt16"},
    wHeight: {"kind":"UInt16"},
    wSARwidth: {"kind":"UInt16"},
    wSARheight: {"kind":"UInt16"},
    wProfile: {"kind":"UInt16"},
    bLevelIDC: {"kind":"Byte"},
    wConstrainedToolset: {"kind":"UInt16"},
    bmSupportedUsages: {"kind":"UInt32"},
    bmCapabilities: {"kind":"UInt16"},
    bmSVCCapabilities: {"kind":"UInt32"},
    bmMVCCapabilities: {"kind":"UInt32"},
    dwFrameInterval: {"kind":"UInt32"},
    bMaxCodecConfigDelay: {"kind":"Byte"},
    bmSupportedSliceModes: {"kind":"Byte"},
    bmSupportedSyncFrameTypes: {"kind":"Byte"},
    bResolutionScaling: {"kind":"Byte"},
    bSimulcastSupport: {"kind":"Byte"},
    bmSupportedRateControlModes: {"kind":"Byte"},
    wMaxMBperSecOneResolutionNoScalability: {"kind":"UInt16"},
    wMaxMBperSecTwoResolutionsNoScalability: {"kind":"UInt16"},
    wMaxMBperSecThreeResolutionsNoScalability: {"kind":"UInt16"},
    wMaxMBperSecFourResolutionsNoScalability: {"kind":"UInt16"},
    wMaxMBperSecOneResolutionTemporalScalability: {"kind":"UInt16"},
    wMaxMBperSecTwoResolutionsTemporalScalablility: {"kind":"UInt16"},
    wMaxMBperSecThreeResolutionsTemporalScalability: {"kind":"UInt16"},
    wMaxMBperSecFourResolutionsTemporalScalability: {"kind":"UInt16"},
    wMaxMBperSecOneResolutionTemporalQualityScalability: {"kind":"UInt16"},
    wMaxMBperSecTwoResolutionsTemporalQualityScalability: {"kind":"UInt16"},
    wMaxMBperSecThreeResolutionsTemporalQualityScalablity: {"kind":"UInt16"},
    wMaxMBperSecFourResolutionsTemporalQualityScalability: {"kind":"UInt16"},
    wMaxMBperSecOneResolutionTemporalSpatialScalability: {"kind":"UInt16"},
    wMaxMBperSecTwoResolutionsTemporalSpatialScalability: {"kind":"UInt16"},
    wMaxMBperSecThreeResolutionsTemporalSpatialScalablity: {"kind":"UInt16"},
    wMaxMBperSecFourResolutionsTemporalSpatialScalability: {"kind":"UInt16"},
    wMaxMBperSecOneResolutionFullScalability: {"kind":"UInt16"},
    wMaxMBperSecTwoResolutionsFullScalability: {"kind":"UInt16"},
    wMaxMBperSecThreeResolutionsFullScalability: {"kind":"UInt16"},
    wMaxMBperSecFourResolutionsFullScalability: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: tagKS_MPEAUDIOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const tagKS_MPEAUDIOINFO = extern struct {
    dwFlags: {"kind":"UInt32"},
    dwReserved1: {"kind":"UInt32"},
    dwReserved2: {"kind":"UInt32"},
    dwReserved3: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_VIDEOINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_VIDEOINFOHEADER = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    VideoInfoHeader: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_VIDEOINFOHEADER2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_VIDEOINFOHEADER2 = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    VideoInfoHeader2: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER2,
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_MPEGVIDEOINFO2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_MPEGVIDEOINFO2 = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    MpegVideoInfoHeader2: Windows.Win32.CoreAudio.KS_MPEGVIDEOINFO2,
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_H264VIDEOINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_H264VIDEOINFO = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    H264VideoInfoHeader: Windows.Win32.CoreAudio.KS_H264VIDEOINFO,
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_IMAGEINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_IMAGEINFO = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    ImageInfoHeader: Windows.Win32.CoreAudio.KS_BITMAPINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_VIDEOINFO_PALETTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_VIDEOINFO_PALETTE = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    VideoInfo: Windows.Win32.CoreAudio.KS_VIDEOINFO,
};
// --------------------------------------------------------
// Type: KS_DATAFORMAT_VBIINFOHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATAFORMAT_VBIINFOHEADER = extern struct {
    DataFormat: Windows.Win32.CoreAudio.KSDATAFORMAT,
    VBIInfoHeader: Windows.Win32.CoreAudio.KS_VBIINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_VIDEO_STREAM_CONFIG_CAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_VIDEO_STREAM_CONFIG_CAPS = extern struct {
    guid: Guid,
    VideoStandard: {"kind":"UInt32"},
    InputSize: Windows.Win32.DisplayDevices.SIZE,
    MinCroppingSize: Windows.Win32.DisplayDevices.SIZE,
    MaxCroppingSize: Windows.Win32.DisplayDevices.SIZE,
    CropGranularityX: {"kind":"Int32"},
    CropGranularityY: {"kind":"Int32"},
    CropAlignX: {"kind":"Int32"},
    CropAlignY: {"kind":"Int32"},
    MinOutputSize: Windows.Win32.DisplayDevices.SIZE,
    MaxOutputSize: Windows.Win32.DisplayDevices.SIZE,
    OutputGranularityX: {"kind":"Int32"},
    OutputGranularityY: {"kind":"Int32"},
    StretchTapsX: {"kind":"Int32"},
    StretchTapsY: {"kind":"Int32"},
    ShrinkTapsX: {"kind":"Int32"},
    ShrinkTapsY: {"kind":"Int32"},
    MinFrameInterval: {"kind":"Int64"},
    MaxFrameInterval: {"kind":"Int64"},
    MinBitsPerSecond: {"kind":"Int32"},
    MaxBitsPerSecond: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KS_DATARANGE_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_VIDEO = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VideoInfoHeader: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_VIDEO2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_VIDEO2 = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VideoInfoHeader: Windows.Win32.CoreAudio.KS_VIDEOINFOHEADER2,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_MPEG1_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_MPEG1_VIDEO = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VideoInfoHeader: Windows.Win32.CoreAudio.KS_MPEG1VIDEOINFO,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_MPEG2_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_MPEG2_VIDEO = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VideoInfoHeader: Windows.Win32.CoreAudio.KS_MPEGVIDEOINFO2,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_H264_VIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_H264_VIDEO = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VideoInfoHeader: Windows.Win32.CoreAudio.KS_H264VIDEOINFO,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_IMAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_IMAGE = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    ImageInfoHeader: Windows.Win32.CoreAudio.KS_BITMAPINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_VIDEO_PALETTE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_VIDEO_PALETTE = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VideoInfo: Windows.Win32.CoreAudio.KS_VIDEOINFO,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_VIDEO_VBI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_VIDEO_VBI = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    bFixedSizeSamples: Windows.Win32.SystemServices.BOOL,
    bTemporalCompression: Windows.Win32.SystemServices.BOOL,
    StreamDescriptionFlags: {"kind":"UInt32"},
    MemoryAllocationFlags: {"kind":"UInt32"},
    ConfigCaps: Windows.Win32.CoreAudio.KS_VIDEO_STREAM_CONFIG_CAPS,
    VBIInfoHeader: Windows.Win32.CoreAudio.KS_VBIINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_DATARANGE_ANALOGVIDEO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_DATARANGE_ANALOGVIDEO = extern struct {
    DataRange: Windows.Win32.CoreAudio.KSDATAFORMAT,
    AnalogVideoInfo: Windows.Win32.CoreAudio.tagKS_AnalogVideoInfo,
};
// --------------------------------------------------------
// Type: KSPROPSETID_VBICAP_PROPERTIES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_VBICAP_PROPERTIES = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICAP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VBICAP = *opaque{
};
// --------------------------------------------------------
// Type: VBICAP_PROPERTIES_PROTECTION_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICAP_PROPERTIES_PROTECTION_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    Status: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_NABTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_NABTS = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_NABTS_FEC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_NABTS_FEC = opaque {
};
// --------------------------------------------------------
// Type: NABTSFEC_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NABTSFEC_BUFFER = extern struct {
    dataSize: {"kind":"UInt32"},
    groupID: {"kind":"UInt16"},
    Reserved: {"kind":"UInt16"},
    data: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: KSPROPSETID_VBICodecFiltering
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_VBICodecFiltering = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VBICODECFILTERING = *opaque{
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_SCANLINES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_SCANLINES = extern struct {
    DwordBitArray: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_NABTS_SUBSTREAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_NABTS_SUBSTREAMS = extern struct {
    SubstreamMask: {"kind":"Array","child": {"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_CC_SUBSTREAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_CC_SUBSTREAMS = extern struct {
    SubstreamMask: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: CC_BYTE_PAIR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CC_BYTE_PAIR = extern struct {
    Decoded: {"kind":"Array","child": {"kind":"Byte"}},
    Reserved: {"kind":"UInt16"},
};
// --------------------------------------------------------
// Type: CC_HW_FIELD
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const CC_HW_FIELD = extern struct {
    ScanlinesRequested: Windows.Win32.CoreAudio.VBICODECFILTERING_SCANLINES,
    fieldFlags: {"kind":"UInt32"},
    PictureNumber: {"kind":"Int64"},
    Lines: {"kind":"Array","child": Windows.Win32.CoreAudio.CC_BYTE_PAIR},
};
// --------------------------------------------------------
// Type: NABTS_BUFFER_LINE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const NABTS_BUFFER_LINE = extern struct {
    Confidence: {"kind":"Byte"},
    Bytes: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: NABTS_BUFFER
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const NABTS_BUFFER = *opaque{
};
// --------------------------------------------------------
// Type: WST_BUFFER_LINE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WST_BUFFER_LINE = extern struct {
    Confidence: {"kind":"Byte"},
    Bytes: {"kind":"Array","child": {"kind":"Byte"}},
};
// --------------------------------------------------------
// Type: WST_BUFFER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WST_BUFFER = extern struct {
    ScanlinesRequested: Windows.Win32.CoreAudio.VBICODECFILTERING_SCANLINES,
    WstLines: {"kind":"Array","child": Windows.Win32.CoreAudio.WST_BUFFER_LINE},
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_COMMON
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_COMMON = extern struct {
    InputSRBsProcessed: {"kind":"UInt32"},
    OutputSRBsProcessed: {"kind":"UInt32"},
    SRBsIgnored: {"kind":"UInt32"},
    InputSRBsMissing: {"kind":"UInt32"},
    OutputSRBsMissing: {"kind":"UInt32"},
    OutputFailures: {"kind":"UInt32"},
    InternalErrors: {"kind":"UInt32"},
    ExternalErrors: {"kind":"UInt32"},
    InputDiscontinuities: {"kind":"UInt32"},
    DSPFailures: {"kind":"UInt32"},
    TvTunerChanges: {"kind":"UInt32"},
    VBIHeaderChanges: {"kind":"UInt32"},
    LineConfidenceAvg: {"kind":"UInt32"},
    BytesOutput: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_COMMON_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_COMMON_PIN = extern struct {
    SRBsProcessed: {"kind":"UInt32"},
    SRBsIgnored: {"kind":"UInt32"},
    SRBsMissing: {"kind":"UInt32"},
    InternalErrors: {"kind":"UInt32"},
    ExternalErrors: {"kind":"UInt32"},
    Discontinuities: {"kind":"UInt32"},
    LineConfidenceAvg: {"kind":"UInt32"},
    BytesOutput: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_NABTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_NABTS = extern struct {
    Common: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON,
    FECBundleBadLines: {"kind":"UInt32"},
    FECQueueOverflows: {"kind":"UInt32"},
    FECCorrectedLines: {"kind":"UInt32"},
    FECUncorrectableLines: {"kind":"UInt32"},
    BundlesProcessed: {"kind":"UInt32"},
    BundlesSent2IP: {"kind":"UInt32"},
    FilteredLines: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_NABTS_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_NABTS_PIN = extern struct {
    Common: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON_PIN,
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_CC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_CC = extern struct {
    Common: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON,
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_CC_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_CC_PIN = extern struct {
    Common: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON_PIN,
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_TELETEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_TELETEXT = extern struct {
    Common: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON,
};
// --------------------------------------------------------
// Type: VBICODECFILTERING_STATISTICS_TELETEXT_PIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VBICODECFILTERING_STATISTICS_TELETEXT_PIN = extern struct {
    Common: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON_PIN,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_SCANLINES_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_SCANLINES_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Scanlines: Windows.Win32.CoreAudio.VBICODECFILTERING_SCANLINES,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_NABTS_SUBSTREAMS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_NABTS_SUBSTREAMS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Substreams: Windows.Win32.CoreAudio.VBICODECFILTERING_NABTS_SUBSTREAMS,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_CC_SUBSTREAMS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_CC_SUBSTREAMS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Substreams: Windows.Win32.CoreAudio.VBICODECFILTERING_CC_SUBSTREAMS,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Statistics: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_PIN_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_PIN_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Statistics: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_COMMON_PIN,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Statistics: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_NABTS,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_PIN_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_PIN_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Statistics: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_NABTS_PIN,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Statistics: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_CC,
};
// --------------------------------------------------------
// Type: KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_PIN_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_PIN_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Statistics: Windows.Win32.CoreAudio.VBICODECFILTERING_STATISTICS_CC_PIN,
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_CAPTURE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_CAPTURE = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_CC_CAPTURE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_CC_CAPTURE = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_NABTS_CAPTURE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_NABTS_CAPTURE = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_PREVIEW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_PREVIEW = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_ANALOGVIDEOIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_ANALOGVIDEOIN = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_VBI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_VBI = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_VIDEOPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_VIDEOPORT = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_NABTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_NABTS = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_EDS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_EDS = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_TELETEXT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_TELETEXT = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_CC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_CC = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_STILL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_STILL = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_IMAGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_IMAGE = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_TIMECODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_TIMECODE = opaque {
};
// --------------------------------------------------------
// Type: PINNAME_VIDEO_VIDEOPORT_VBI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PINNAME_VIDEO_VIDEOPORT_VBI = opaque {
};
// --------------------------------------------------------
// Type: CAPTURE_MEMORY_ALLOCATION_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const CAPTURE_MEMORY_ALLOCATION_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPSETID_VramCapture
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_VramCapture = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDMEM_TRANSPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDMEM_TRANSPORT = *opaque{
};
// --------------------------------------------------------
// Type: VRAM_SURFACE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VRAM_SURFACE_INFO = extern struct {
    hSurface: {"kind":"UIntPtr"},
    VramPhysicalAddress: {"kind":"Int64"},
    cbCaptured: {"kind":"UInt32"},
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
    dwLinearSize: {"kind":"UInt32"},
    lPitch: {"kind":"Int32"},
    ullReserved: {"kind":"Array","child": {"kind":"UInt64"}},
};
// --------------------------------------------------------
// Type: VRAM_SURFACE_INFO_PROPERTY_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const VRAM_SURFACE_INFO_PROPERTY_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    pVramSurfaceInfo: {"kind""Ptr","child":Windows.Win32.CoreAudio.VRAM_SURFACE_INFO},
};
// --------------------------------------------------------
// Type: SECURE_BUFFER_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SECURE_BUFFER_INFO = extern struct {
    guidBufferIdentifier: Guid,
    cbBufferSize: {"kind":"UInt32"},
    cbCaptured: {"kind":"UInt32"},
    ullReserved: {"kind":"Array","child": {"kind":"UInt64"}},
};
// --------------------------------------------------------
// Type: KS_SECURE_CAMERA_SCENARIO_ID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KS_SECURE_CAMERA_SCENARIO_ID = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_MPEG4_MediaType_Attributes
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_MPEG4_MediaType_Attributes = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_MPEG4_MEDIATYPE_ATTRIBUTES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_MPEG4_MEDIATYPE_ATTRIBUTES = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_DynamicFormatChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_DynamicFormatChange = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_DYNAMICFORMATCHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_DYNAMICFORMATCHANGE = *opaque{
};
// --------------------------------------------------------
// Type: KS_FRAME_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_FRAME_INFO = extern struct {
    ExtendedHeaderSize: {"kind":"UInt32"},
    dwFrameFlags: {"kind":"UInt32"},
    PictureNumber: {"kind":"Int64"},
    DropCount: {"kind":"Int64"},
    hDirectDraw: Windows.Win32.SystemServices.HANDLE,
    hSurfaceHandle: Windows.Win32.SystemServices.HANDLE,
    DirectDrawRect: Windows.Win32.DisplayDevices.RECT,
    Anonymous1: Windows.Win32.CoreAudio.KS_FRAME_INFO+_Anonymous1_e__Union,
    Reserved2: {"kind":"UInt32"},
    Anonymous2: Windows.Win32.CoreAudio.KS_FRAME_INFO+_Anonymous2_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous2_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous2_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            Reserved3: {"kind":"UInt32"},
            Reserved4: {"kind":"UInt32"},
        };
    };
    // --------------------------------------------------------
    // Type: _Anonymous1_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous1_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KS_VBI_FRAME_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_VBI_FRAME_INFO = extern struct {
    ExtendedHeaderSize: {"kind":"UInt32"},
    dwFrameFlags: {"kind":"UInt32"},
    PictureNumber: {"kind":"Int64"},
    DropCount: {"kind":"Int64"},
    dwSamplingFrequency: {"kind":"UInt32"},
    TvTunerChangeInfo: Windows.Win32.CoreAudio.KS_TVTUNER_CHANGE_INFO,
    VBIInfoHeader: Windows.Win32.CoreAudio.KS_VBIINFOHEADER,
};
// --------------------------------------------------------
// Type: KS_AnalogVideoStandard
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_AnalogVideoStandard = *opaque{
};
// --------------------------------------------------------
// Type: PROPSETID_ALLOCATOR_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_ALLOCATOR_CONTROL = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_ALLOCATOR_CONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_ALLOCATOR_CONTROL = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE_S = extern struct {
    CX: {"kind":"UInt32"},
    CY: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS_S = extern struct {
    InterleavedCapSupported: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE_S = extern struct {
    InterleavedCapPossible: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_VIDEOPROCAMP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_VIDEOPROCAMP = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_VIDEOPROCAMP
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_VIDEOPROCAMP = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOPROCAMP_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOPROCAMP_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOPROCAMP_NODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOPROCAMP_NODE_S = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOPROCAMP_S2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOPROCAMP_S2 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value1: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
    Value2: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOPROCAMP_NODE_S2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOPROCAMP_NODE_S2 = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    Value1: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
    Value2: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_SELECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_SELECTOR = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_SELECTOR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_SELECTOR = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_SELECTOR_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_SELECTOR_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_SELECTOR_NODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_SELECTOR_NODE_S = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PROPSETID_TUNER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_TUNER = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TUNER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_MODES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TUNER_MODES = *opaque{
};
// --------------------------------------------------------
// Type: KS_TUNER_TUNING_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_TUNER_TUNING_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: KS_TUNER_STRATEGY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_TUNER_STRATEGY = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ModesSupported: {"kind":"UInt32"},
    VideoMedium: Windows.Win32.CoreAudio.KSIDENTIFIER,
    TVAudioMedium: Windows.Win32.CoreAudio.KSIDENTIFIER,
    RadioAudioMedium: Windows.Win32.CoreAudio.KSIDENTIFIER,
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_IF_MEDIUM_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_IF_MEDIUM_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    IFMedium: Windows.Win32.CoreAudio.KSIDENTIFIER,
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_MODE_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_MODE_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Mode: {"kind":"UInt32"},
    StandardsSupported: {"kind":"UInt32"},
    MinFrequency: {"kind":"UInt32"},
    MaxFrequency: {"kind":"UInt32"},
    TuningGranularity: {"kind":"UInt32"},
    NumberOfInputs: {"kind":"UInt32"},
    SettlingTime: {"kind":"UInt32"},
    Strategy: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_MODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_MODE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Mode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_FREQUENCY_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_FREQUENCY_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Frequency: {"kind":"UInt32"},
    LastFrequency: {"kind":"UInt32"},
    TuningFlags: {"kind":"UInt32"},
    VideoSubChannel: {"kind":"UInt32"},
    AudioSubChannel: {"kind":"UInt32"},
    Channel: {"kind":"UInt32"},
    Country: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_STANDARD_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_STANDARD_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Standard: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_STANDARD_MODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_STANDARD_MODE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    AutoDetect: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_INPUT_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_INPUT_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    InputIndex: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_STATUS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_STATUS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    CurrentFrequency: {"kind":"UInt32"},
    PLLOffset: {"kind":"UInt32"},
    SignalStrength: {"kind":"UInt32"},
    Busy: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: _TunerDecoderLockType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _TunerDecoderLockType = *opaque{
};
// --------------------------------------------------------
// Type: TUNER_ANALOG_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TUNER_ANALOG_CAPS_S = extern struct {
    Mode: {"kind":"UInt32"},
    StandardsSupported: {"kind":"UInt32"},
    MinFrequency: {"kind":"UInt32"},
    MaxFrequency: {"kind":"UInt32"},
    TuningGranularity: {"kind":"UInt32"},
    SettlingTime: {"kind":"UInt32"},
    ScanSensingRange: {"kind":"UInt32"},
    FineTuneSensingRange: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: EVENTSETID_TUNER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTSETID_TUNER = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_TUNER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_TUNER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_SCAN_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_SCAN_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    fSupportsHardwareAssistedScanning: Windows.Win32.SystemServices.BOOL,
    SupportedBroadcastStandards: {"kind":"UInt32"},
    GUIDBucket: {"kind""Ptr","child":{"kind":"Void"}},
    lengthofBucket: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_NETWORKTYPE_SCAN_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_NETWORKTYPE_SCAN_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NetworkType: Guid,
    BufferSize: {"kind":"UInt32"},
    NetworkTunerCapabilities: {"kind""Ptr","child":{"kind":"Void"}},
};
// --------------------------------------------------------
// Type: KSPROPERTY_TUNER_SCAN_STATUS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TUNER_SCAN_STATUS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    LockStatus: Windows.Win32.CoreAudio._TunerDecoderLockType,
    CurrentFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSEVENT_TUNER_INITIATE_SCAN_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSEVENT_TUNER_INITIATE_SCAN_S = extern struct {
    EventData: Windows.Win32.CoreAudio.KSEVENTDATA,
    StartFrequency: {"kind":"UInt32"},
    EndFrequency: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_STREAMING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_STREAMING = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_INPUT_TERMINAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_INPUT_TERMINAL = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_OUTPUT_TERMINAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_OUTPUT_TERMINAL = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_SELECTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_SELECTOR = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_PROCESSING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_PROCESSING = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_CAMERA_TERMINAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_CAMERA_TERMINAL = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_INPUT_MTT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_INPUT_MTT = opaque {
};
// --------------------------------------------------------
// Type: KSNODETYPE_VIDEO_OUTPUT_MTT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNODETYPE_VIDEO_OUTPUT_MTT = opaque {
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_VIDEOENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_VIDEOENCODER = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_VIDEOENCODER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_VIDEOENCODER = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOENCODER_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOENCODER_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_VIDEODECODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_VIDEODECODER = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_VIDEODECODER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_VIDEODECODER = *opaque{
};
// --------------------------------------------------------
// Type: KS_VIDEODECODER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_VIDEODECODER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEODECODER_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEODECODER_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StandardsSupported: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
    SettlingTime: {"kind":"UInt32"},
    HSyncPerVSync: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEODECODER_STATUS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEODECODER_STATUS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NumberOfLines: {"kind":"UInt32"},
    SignalLocked: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEODECODER_STATUS2_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEODECODER_STATUS2_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NumberOfLines: {"kind":"UInt32"},
    SignalLocked: {"kind":"UInt32"},
    ChromaLock: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEODECODER_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEODECODER_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: EVENTSETID_VIDEODECODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTSETID_VIDEODECODER = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_VIDEODECODER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_VIDEODECODER = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_CameraAsyncControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_CameraAsyncControl = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_CAMERACONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_CAMERACONTROL = *opaque{
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_CAMERACONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_CAMERACONTROL = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_CAMERACONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_CAMERACONTROL = *opaque{
};
// --------------------------------------------------------
// Type: KS_CameraControlAsyncOperation
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_CameraControlAsyncOperation = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_S_EX
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_S_EX = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
    FocusRect: Windows.Win32.DisplayDevices.RECT,
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_NODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_NODE_S = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_S2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_S2 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Value1: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
    Value2: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_NODE_S2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_NODE_S2 = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    Value1: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
    Value2: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_FOCAL_LENGTH_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_FOCAL_LENGTH_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    lOcularFocalLength: {"kind":"Int32"},
    lObjectiveFocalLengthMin: {"kind":"Int32"},
    lObjectiveFocalLengthMax: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_NODE_FOCAL_LENGTH_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_NODE_FOCAL_LENGTH_S = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSNODEPROPERTY,
    lOcularFocalLength: {"kind":"Int32"},
    lObjectiveFocalLengthMin: {"kind":"Int32"},
    lObjectiveFocalLengthMax: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_CAMERACONTROL_FLASH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_CAMERACONTROL_FLASH = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_FLASH
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERACONTROL_FLASH = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_FLASH_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_FLASH_S = extern struct {
    Flash: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_CAMERACONTROL_VIDEO_STABILIZATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_CAMERACONTROL_VIDEO_STABILIZATION = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_VIDEO_STABILIZATION_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERACONTROL_VIDEO_STABILIZATION_MODE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_S = extern struct {
    VideoStabilizationMode: {"kind":"UInt32"},
    Capabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_CAMERACONTROL_REGION_OF_INTEREST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_CAMERACONTROL_REGION_OF_INTEREST = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST = *opaque{
};
// --------------------------------------------------------
// Type: EVENTSETID_VIDCAP_CAMERACONTROL_REGION_OF_INTEREST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTSETID_VIDCAP_CAMERACONTROL_REGION_OF_INTEREST = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_S = extern struct {
    FocusRect: Windows.Win32.DisplayDevices.RECT,
    AutoFocusLock: Windows.Win32.SystemServices.BOOL,
    AutoExposureLock: Windows.Win32.SystemServices.BOOL,
    AutoWhitebalanceLock: Windows.Win32.SystemServices.BOOL,
    Anonymous: Windows.Win32.CoreAudio.KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_S+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_CAMERACONTROL_IMAGE_PIN_CAPABILITY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_CAMERACONTROL_IMAGE_PIN_CAPABILITY = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY_S = extern struct {
    Capabilities: {"kind":"UInt32"},
    Reserved0: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_EXTENDED_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERACONTROL_EXTENDED_PROPERTY = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTYSETID_ExtendedCameraControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPERTYSETID_ExtendedCameraControl = opaque {
};
// --------------------------------------------------------
// Type: KSEVENTSETID_ExtendedCameraControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_ExtendedCameraControl = opaque {
};
// --------------------------------------------------------
// Type: KSEVENTSETID_CameraEvent
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_CameraEvent = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_CAMERAEVENT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_CAMERAEVENT = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_WHITEBALANCE_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_EXTENDEDPROP_WHITEBALANCE_MODE = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_WBPRESET
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_EXTENDEDPROP_WBPRESET = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERA_PHOTOTRIGGERTIME_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERA_PHOTOTRIGGERTIME_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_HEADER = extern struct {
    Version: {"kind":"UInt32"},
    PinId: {"kind":"UInt32"},
    Size: {"kind":"UInt32"},
    Result: {"kind":"UInt32"},
    Flags: {"kind":"UInt64"},
    Capability: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_VALUE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_VALUE = extern struct {
    Value: Windows.Win32.CoreAudio.KSCAMERA_EXTENDEDPROP_VALUE+_Value_e__Union,
    // --------------------------------------------------------
    // Type: _Value_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Value_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: KSCAMERA_MAXVIDEOFPS_FORPHOTORES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_MAXVIDEOFPS_FORPHOTORES = extern struct {
    PhotoResWidth: {"kind":"UInt32"},
    PhotoResHeight: {"kind":"UInt32"},
    PreviewFPSNum: {"kind":"UInt32"},
    PreviewFPSDenom: {"kind":"UInt32"},
    CaptureFPSNum: {"kind":"UInt32"},
    CaptureFPSDenom: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_PHOTOMODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_PHOTOMODE = extern struct {
    RequestedHistoryFrames: {"kind":"UInt32"},
    MaxHistoryFrames: {"kind":"UInt32"},
    SubMode: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_VIDEOPROCSETTING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_VIDEOPROCSETTING = extern struct {
    Mode: {"kind":"UInt32"},
    Min: {"kind":"Int32"},
    Max: {"kind":"Int32"},
    Step: {"kind":"Int32"},
    VideoProc: Windows.Win32.CoreAudio.KSCAMERA_EXTENDEDPROP_VALUE,
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_EVCOMPENSATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_EVCOMPENSATION = extern struct {
    Mode: {"kind":"UInt32"},
    Min: {"kind":"Int32"},
    Max: {"kind":"Int32"},
    Value: {"kind":"Int32"},
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_FIELDOFVIEW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_FIELDOFVIEW = extern struct {
    NormalizedFocalLengthX: {"kind":"UInt32"},
    NormalizedFocalLengthY: {"kind":"UInt32"},
    Flag: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_CAMERAOFFSET
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_CAMERAOFFSET = extern struct {
    PitchAngle: {"kind":"Int32"},
    YawAngle: {"kind":"Int32"},
    Flag: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_METADATAINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_METADATAINFO = extern struct {
    BufferAlignment: {"kind":"Int32"},
    MaxMetadataBufferSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_MetadataAlignment
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_EXTENDEDPROP_MetadataAlignment = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_MetadataId
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_MetadataId = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_METADATA_ITEMHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_METADATA_ITEMHEADER = extern struct {
    MetadataId: {"kind":"UInt32"},
    Size: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_METADATA_PHOTOCONFIRMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_METADATA_PHOTOCONFIRMATION = extern struct {
    Header: Windows.Win32.CoreAudio.KSCAMERA_METADATA_ITEMHEADER,
    PhotoConfirmationIndex: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_METADATA_FRAMEILLUMINATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_METADATA_FRAMEILLUMINATION = extern struct {
    Header: Windows.Win32.CoreAudio.KSCAMERA_METADATA_ITEMHEADER,
    Flags: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_METADATA_CAPTURESTATS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_METADATA_CAPTURESTATS = extern struct {
    Header: Windows.Win32.CoreAudio.KSCAMERA_METADATA_ITEMHEADER,
    Flags: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
    ExposureTime: {"kind":"UInt64"},
    ExposureCompensationFlags: {"kind":"UInt64"},
    ExposureCompensationValue: {"kind":"Int32"},
    IsoSpeed: {"kind":"UInt32"},
    FocusState: {"kind":"UInt32"},
    LensPosition: {"kind":"UInt32"},
    WhiteBalance: {"kind":"UInt32"},
    Flash: {"kind":"UInt32"},
    FlashPower: {"kind":"UInt32"},
    ZoomFactor: {"kind":"UInt32"},
    SceneMode: {"kind":"UInt64"},
    SensorFramerate: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_FOCUSSTATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_EXTENDEDPROP_FOCUSSTATE = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_CONFIGCAPSHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_CONFIGCAPSHEADER = extern struct {
    Size: {"kind":"UInt32"},
    ConfigCapCount: {"kind":"UInt32"},
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_CONFIGCAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_CONFIGCAPS = extern struct {
    ControlId: {"kind":"UInt32"},
    MaxNumberOfROIs: {"kind":"UInt32"},
    Capability: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_ISPCONTROLHEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_ISPCONTROLHEADER = extern struct {
    Size: {"kind":"UInt32"},
    ControlCount: {"kind":"UInt32"},
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_ISPCONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_ISPCONTROL = extern struct {
    ControlId: {"kind":"UInt32"},
    ROICount: {"kind":"UInt32"},
    Result: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_INFO = extern struct {
    Region: Windows.Win32.DisplayDevices.RECT,
    Flags: {"kind":"UInt64"},
    Weight: {"kind":"Int32"},
    RegionOfInterestType: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROITYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_EXTENDEDPROP_ROITYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_WHITEBALANCE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_WHITEBALANCE = extern struct {
    ROIInfo: Windows.Win32.CoreAudio.KSCAMERA_EXTENDEDPROP_ROI_INFO,
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_EXPOSURE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_EXPOSURE = extern struct {
    ROIInfo: Windows.Win32.CoreAudio.KSCAMERA_EXTENDEDPROP_ROI_INFO,
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_ROI_FOCUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_ROI_FOCUS = extern struct {
    ROIInfo: Windows.Win32.CoreAudio.KSCAMERA_EXTENDEDPROP_ROI_INFO,
    Reserved: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSPROPERTYSETID_PerFrameSettingControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPERTYSETID_PerFrameSettingControl = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_CAMERACONTROL_PERFRAMESETTING_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_CAMERACONTROL_PERFRAMESETTING_PROPERTY = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_ITEM_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSCAMERA_PERFRAMESETTING_ITEM_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_CAP_ITEM_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PERFRAMESETTING_CAP_ITEM_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    Type: {"kind":"UInt32"},
    Flags: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_CAP_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PERFRAMESETTING_CAP_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    ItemCount: {"kind":"UInt32"},
    Flags: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_CUSTOM_ITEM
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PERFRAMESETTING_CUSTOM_ITEM = extern struct {
    Size: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
    Id: Guid,
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_ITEM_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PERFRAMESETTING_ITEM_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    Type: {"kind":"UInt32"},
    Flags: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_FRAME_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PERFRAMESETTING_FRAME_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    Id: {"kind":"UInt32"},
    ItemCount: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_PERFRAMESETTING_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PERFRAMESETTING_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    FrameCount: {"kind":"UInt32"},
    Id: Guid,
    Flags: {"kind":"UInt64"},
    LoopCount: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERA_EXTENDEDPROP_PROFILE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_EXTENDEDPROP_PROFILE = extern struct {
    ProfileId: Guid,
    Index: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_Legacy
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_Legacy = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_VideoRecording
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_VideoRecording = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_HighQualityPhoto
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_HighQualityPhoto = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_BalancedVideoAndPhoto
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_BalancedVideoAndPhoto = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_VideoConferencing
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_VideoConferencing = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_PhotoSequence
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_PhotoSequence = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_FaceAuth_Mode
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_FaceAuth_Mode = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_HighFrameRate
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_HighFrameRate = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_HDRWithWCGVideo
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_HDRWithWCGVideo = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_HDRWithWCGPhoto
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_HDRWithWCGPhoto = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_VariablePhotoSequence
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_VariablePhotoSequence = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERAPROFILE_VideoHDR8
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCAMERAPROFILE_VideoHDR8 = opaque {
};
// --------------------------------------------------------
// Type: KSCAMERA_PROFILE_MEDIAINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PROFILE_MEDIAINFO = extern struct {
    Resolution: Windows.Win32.CoreAudio.KSCAMERA_PROFILE_MEDIAINFO+_Resolution_e__Struct,
    MaxFrameRate: Windows.Win32.CoreAudio.KSCAMERA_PROFILE_MEDIAINFO+_MaxFrameRate_e__Struct,
    Flags: {"kind":"UInt64"},
    Data0: {"kind":"UInt32"},
    Data1: {"kind":"UInt32"},
    Data2: {"kind":"UInt32"},
    Data3: {"kind":"UInt32"},
    // --------------------------------------------------------
    // Type: _Resolution_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _Resolution_e__Struct = extern struct {
        X: {"kind":"UInt32"},
        Y: {"kind":"UInt32"},
    };
    // --------------------------------------------------------
    // Type: _MaxFrameRate_e__Struct
    // TypeLayoutAttr: sequential
    // TODO: I think this is a struct, but not sure at this point, assuming it is for now
    pub const _MaxFrameRate_e__Struct = extern struct {
        Numerator: {"kind":"UInt32"},
        Denominator: {"kind":"UInt32"},
    };
};
// --------------------------------------------------------
// Type: KSCAMERA_PROFILE_PININFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PROFILE_PININFO = extern struct {
    PinCategory: Guid,
    Anonymous: Windows.Win32.CoreAudio.KSCAMERA_PROFILE_PININFO+_Anonymous_e__Union,
    MediaInfoCount: {"kind":"UInt32"},
    MediaInfos: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSCAMERA_PROFILE_MEDIAINFO},
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Anonymous_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Anonymous_e__Struct = extern struct {
            PinIndex: {"kind":"UInt16"},
            ProfileSensorType: {"kind":"UInt16"},
        };
    };
};
// --------------------------------------------------------
// Type: KSCAMERA_PROFILE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PROFILE_INFO = extern struct {
    ProfileId: Guid,
    Index: {"kind":"UInt32"},
    PinCount: {"kind":"UInt32"},
    Pins: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSCAMERA_PROFILE_PININFO},
};
// --------------------------------------------------------
// Type: KSCAMERA_PROFILE_CONCURRENCYINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSCAMERA_PROFILE_CONCURRENCYINFO = extern struct {
    ReferenceGuid: Guid,
    Reserved: {"kind":"UInt32"},
    ProfileCount: {"kind":"UInt32"},
    Profiles: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSCAMERA_PROFILE_INFO},
};
// --------------------------------------------------------
// Type: KSDEVICE_PROFILE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDEVICE_PROFILE_INFO = extern struct {
    Type: {"kind":"UInt32"},
    Size: {"kind":"UInt32"},
    Anonymous: Windows.Win32.CoreAudio.KSDEVICE_PROFILE_INFO+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _Camera_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Camera_e__Struct = extern struct {
            Info: Windows.Win32.CoreAudio.KSCAMERA_PROFILE_INFO,
            Reserved: {"kind":"UInt32"},
            ConcurrencyCount: {"kind":"UInt32"},
            Concurrency: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSCAMERA_PROFILE_CONCURRENCYINFO},
        };
    };
};
// --------------------------------------------------------
// Type: WNF_KSCAMERA_STREAMSTATE_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const WNF_KSCAMERA_STREAMSTATE_INFO = extern struct {
    ProcessId: {"kind":"UInt32"},
    SessionId: {"kind":"UInt32"},
    StreamState: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_NETWORKCAMERACONTROL_NTPINFO_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_NETWORKCAMERACONTROL_NTPINFO_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_NETWORKCAMERACONTROL_NTPINFO_HEADER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_NETWORKCAMERACONTROL_NTPINFO_HEADER = extern struct {
    Size: {"kind":"UInt32"},
    Type: Windows.Win32.CoreAudio.KSPROPERTY_NETWORKCAMERACONTROL_NTPINFO_TYPE,
};
// --------------------------------------------------------
// Type: KSPROPERTYSETID_NetworkCameraControl
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPERTYSETID_NetworkCameraControl = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_NETWORKCAMERACONTROL_PROPERTY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_NETWORKCAMERACONTROL_PROPERTY = *opaque{
};
// --------------------------------------------------------
// Type: PROPSETID_EXT_DEVICE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_EXT_DEVICE = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_EXTDEVICE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_EXTDEVICE = *opaque{
};
// --------------------------------------------------------
// Type: DEVCAPS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DEVCAPS = extern struct {
    CanRecord: {"kind":"Int32"},
    CanRecordStrobe: {"kind":"Int32"},
    HasAudio: {"kind":"Int32"},
    HasVideo: {"kind":"Int32"},
    UsesFiles: {"kind":"Int32"},
    CanSave: {"kind":"Int32"},
    DeviceType: {"kind":"Int32"},
    TCRead: {"kind":"Int32"},
    TCWrite: {"kind":"Int32"},
    CTLRead: {"kind":"Int32"},
    IndexRead: {"kind":"Int32"},
    Preroll: {"kind":"Int32"},
    Postroll: {"kind":"Int32"},
    SyncAcc: {"kind":"Int32"},
    NormRate: {"kind":"Int32"},
    CanPreview: {"kind":"Int32"},
    CanMonitorSrc: {"kind":"Int32"},
    CanTest: {"kind":"Int32"},
    VideoIn: {"kind":"Int32"},
    AudioIn: {"kind":"Int32"},
    Calibrate: {"kind":"Int32"},
    SeekType: {"kind":"Int32"},
    SimulatedHardware: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_EXTDEVICE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_EXTDEVICE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    u: Windows.Win32.CoreAudio.KSPROPERTY_EXTDEVICE_S+_u_e__Union,
    // --------------------------------------------------------
    // Type: _u_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _u_e__Union = *opaque{
    };
};
// --------------------------------------------------------
// Type: PROPSETID_EXT_TRANSPORT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_EXT_TRANSPORT = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_EXTXPORT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_EXTXPORT = *opaque{
};
// --------------------------------------------------------
// Type: TRANSPORTSTATUS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORTSTATUS = extern struct {
    Mode: {"kind":"Int32"},
    LastError: {"kind":"Int32"},
    RecordInhibit: {"kind":"Int32"},
    ServoLock: {"kind":"Int32"},
    MediaPresent: {"kind":"Int32"},
    MediaLength: {"kind":"Int32"},
    MediaSize: {"kind":"Int32"},
    MediaTrackCount: {"kind":"Int32"},
    MediaTrackLength: {"kind":"Int32"},
    MediaTrackSide: {"kind":"Int32"},
    MediaType: {"kind":"Int32"},
    LinkMode: {"kind":"Int32"},
    NotifyOn: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: TRANSPORTBASICPARMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORTBASICPARMS = extern struct {
    TimeFormat: {"kind":"Int32"},
    TimeReference: {"kind":"Int32"},
    Superimpose: {"kind":"Int32"},
    EndStopAction: {"kind":"Int32"},
    RecordFormat: {"kind":"Int32"},
    StepFrames: {"kind":"Int32"},
    SetpField: {"kind":"Int32"},
    Preroll: {"kind":"Int32"},
    RecPreroll: {"kind":"Int32"},
    Postroll: {"kind":"Int32"},
    EditDelay: {"kind":"Int32"},
    PlayTCDelay: {"kind":"Int32"},
    RecTCDelay: {"kind":"Int32"},
    EditField: {"kind":"Int32"},
    FrameServo: {"kind":"Int32"},
    ColorFrameServo: {"kind":"Int32"},
    ServoRef: {"kind":"Int32"},
    WarnGenlock: {"kind":"Int32"},
    SetTracking: {"kind":"Int32"},
    VolumeName: {"kind":"Array","child": {"kind":"SByte"}},
    Ballistic: {"kind":"Array","child": {"kind":"Int32"}},
    Speed: {"kind":"Int32"},
    CounterFormat: {"kind":"Int32"},
    TunerChannel: {"kind":"Int32"},
    TunerNumber: {"kind":"Int32"},
    TimerEvent: {"kind":"Int32"},
    TimerStartDay: {"kind":"Int32"},
    TimerStartTime: {"kind":"Int32"},
    TimerStopDay: {"kind":"Int32"},
    TimerStopTime: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: TRANSPORTVIDEOPARMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORTVIDEOPARMS = extern struct {
    OutputMode: {"kind":"Int32"},
    Input: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: TRANSPORTAUDIOPARMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORTAUDIOPARMS = extern struct {
    EnableOutput: {"kind":"Int32"},
    EnableRecord: {"kind":"Int32"},
    EnableSelsync: {"kind":"Int32"},
    Input: {"kind":"Int32"},
    MonitorSource: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: MEDIUM_INFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const MEDIUM_INFO = extern struct {
    MediaPresent: Windows.Win32.SystemServices.BOOL,
    MediaType: {"kind":"UInt32"},
    RecordInhibit: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: TRANSPORT_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const TRANSPORT_STATE = extern struct {
    Mode: {"kind":"UInt32"},
    State: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_EXTXPORT_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_EXTXPORT_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    u: Windows.Win32.CoreAudio.KSPROPERTY_EXTXPORT_S+_u_e__Union,
    // --------------------------------------------------------
    // Type: _u_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _u_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _RawAVC_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _RawAVC_e__Struct = extern struct {
            PayloadSize: {"kind":"UInt32"},
            Payload: {"kind":"Array","child": {"kind":"Byte"}},
        };
        // --------------------------------------------------------
        // Type: _Timecode_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Timecode_e__Struct = extern struct {
            frame: {"kind":"Byte"},
            second: {"kind":"Byte"},
            minute: {"kind":"Byte"},
            hour: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: KSPROPERTY_EXTXPORT_NODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_EXTXPORT_NODE_S = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    u: Windows.Win32.CoreAudio.KSPROPERTY_EXTXPORT_NODE_S+_u_e__Union,
    // --------------------------------------------------------
    // Type: _u_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _u_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _RawAVC_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _RawAVC_e__Struct = extern struct {
            PayloadSize: {"kind":"UInt32"},
            Payload: {"kind":"Array","child": {"kind":"Byte"}},
        };
        // --------------------------------------------------------
        // Type: _Timecode_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _Timecode_e__Struct = extern struct {
            frame: {"kind":"Byte"},
            second: {"kind":"Byte"},
            minute: {"kind":"Byte"},
            hour: {"kind":"Byte"},
        };
    };
};
// --------------------------------------------------------
// Type: PROPSETID_TIMECODE_READER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_TIMECODE_READER = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_TIMECODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_TIMECODE = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_TIMECODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TIMECODE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    TimecodeSamp: Windows.Win32.DirectShow.TIMECODE_SAMPLE,
};
// --------------------------------------------------------
// Type: KSPROPERTY_TIMECODE_NODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TIMECODE_NODE_S = extern struct {
    NodeProperty: Windows.Win32.CoreAudio.KSP_NODE,
    TimecodeSamp: Windows.Win32.DirectShow.TIMECODE_SAMPLE,
};
// --------------------------------------------------------
// Type: KSEVENTSETID_EXTDEV_Command
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_EXTDEV_Command = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_DEVCMD
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_DEVCMD = *opaque{
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_CROSSBAR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_CROSSBAR = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_CROSSBAR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_CROSSBAR = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_CROSSBAR_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CROSSBAR_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    NumberOfInputs: {"kind":"UInt32"},
    NumberOfOutputs: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CROSSBAR_PININFO_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CROSSBAR_PININFO_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Direction: Windows.Win32.CoreAudio.KSPIN_DATAFLOW,
    Index: {"kind":"UInt32"},
    PinType: {"kind":"UInt32"},
    RelatedPinIndex: {"kind":"UInt32"},
    Medium: Windows.Win32.CoreAudio.KSIDENTIFIER,
};
// --------------------------------------------------------
// Type: KSPROPERTY_CROSSBAR_ROUTE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CROSSBAR_ROUTE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    IndexInputPin: {"kind":"UInt32"},
    IndexOutputPin: {"kind":"UInt32"},
    CanRoute: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_CROSSBAR_ACTIVE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_CROSSBAR_ACTIVE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    IndexInputPin: {"kind":"UInt32"},
    Active: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: EVENTSETID_CROSSBAR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const EVENTSETID_CROSSBAR = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_CROSSBAR
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_CROSSBAR = *opaque{
};
// --------------------------------------------------------
// Type: KS_PhysicalConnectorType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_PhysicalConnectorType = *opaque{
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_TVAUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_TVAUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_TVAUDIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_TVAUDIO = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_TVAUDIO_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TVAUDIO_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Capabilities: {"kind":"UInt32"},
    InputMedium: Windows.Win32.CoreAudio.KSIDENTIFIER,
    OutputMedium: Windows.Win32.CoreAudio.KSIDENTIFIER,
};
// --------------------------------------------------------
// Type: KSPROPERTY_TVAUDIO_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_TVAUDIO_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Mode: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSEVENTSETID_VIDCAP_TVAUDIO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_VIDCAP_TVAUDIO = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_TVAUDIO
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_TVAUDIO = *opaque{
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_VIDEOCOMPRESSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_VIDEOCOMPRESSION = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_VIDEOCOMPRESSION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_VIDEOCOMPRESSION = *opaque{
};
// --------------------------------------------------------
// Type: KS_CompressionCaps
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_CompressionCaps = *opaque{
};
// --------------------------------------------------------
// Type: KS_VideoStreamingHints
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_VideoStreamingHints = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCOMPRESSION_GETINFO_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCOMPRESSION_GETINFO_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    DefaultKeyFrameRate: {"kind":"Int32"},
    DefaultPFrameRate: {"kind":"Int32"},
    DefaultQuality: {"kind":"Int32"},
    NumberOfQualitySettings: {"kind":"Int32"},
    Capabilities: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCOMPRESSION_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCOMPRESSION_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    Value: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCOMPRESSION_S1
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCOMPRESSION_S1 = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    Value: {"kind":"Int32"},
    Flags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_OVERLAY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_OVERLAY = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_OverlayUpdate
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_OverlayUpdate = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_OVERLAYUPDATE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_OVERLAYUPDATE = *opaque{
};
// --------------------------------------------------------
// Type: KSDISPLAYCHANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSDISPLAYCHANGE = extern struct {
    PelsWidth: {"kind":"UInt32"},
    PelsHeight: {"kind":"UInt32"},
    BitsPerPel: {"kind":"UInt32"},
    DeviceID: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_VIDEOCONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_VIDEOCONTROL = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_VIDEOCONTROL
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_VIDEOCONTROL = *opaque{
};
// --------------------------------------------------------
// Type: KS_VideoControlFlags
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_VideoControlFlags = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCONTROL_CAPS_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCONTROL_CAPS_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    VideoControlCaps: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCONTROL_MODE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCONTROL_MODE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    Mode: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    RangeIndex: {"kind":"UInt32"},
    Dimensions: Windows.Win32.DisplayDevices.SIZE,
    CurrentActualFrameRate: {"kind":"Int64"},
    CurrentMaxAvailableFrameRate: {"kind":"Int64"},
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDEOCONTROL_FRAME_RATES_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_VIDEOCONTROL_FRAME_RATES_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    StreamIndex: {"kind":"UInt32"},
    RangeIndex: {"kind":"UInt32"},
    Dimensions: Windows.Win32.DisplayDevices.SIZE,
};
// --------------------------------------------------------
// Type: PROPSETID_VIDCAP_DROPPEDFRAMES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const PROPSETID_VIDCAP_DROPPEDFRAMES = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VIDCAP_DROPPEDFRAMES
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VIDCAP_DROPPEDFRAMES = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_DROPPEDFRAMES_CURRENT_S
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSPROPERTY_DROPPEDFRAMES_CURRENT_S = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    PictureNumber: {"kind":"Int64"},
    DropCount: {"kind":"Int64"},
    AverageFrameSize: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_VPConfig
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_VPConfig = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_VPVBIConfig
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_VPVBIConfig = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_VPCONFIG
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_VPCONFIG = *opaque{
};
// --------------------------------------------------------
// Type: CLSID_KsIBasicAudioInterfaceHandler
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CLSID_KsIBasicAudioInterfaceHandler = opaque {
};
// --------------------------------------------------------
// Type: DDVIDEOPORTCONNECT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DDVIDEOPORTCONNECT = extern struct {
    dwSize: {"kind":"UInt32"},
    dwPortWidth: {"kind":"UInt32"},
    guidTypeID: Guid,
    dwFlags: {"kind":"UInt32"},
    dwReserved1: {"kind":"UIntPtr"},
};
// --------------------------------------------------------
// Type: KS_AMPixAspectRatio
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_AMPixAspectRatio = *opaque{
};
// --------------------------------------------------------
// Type: KS_AMVP_SELECTFORMATBY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_AMVP_SELECTFORMATBY = *opaque{
};
// --------------------------------------------------------
// Type: KS_AMVP_MODE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_AMVP_MODE = *opaque{
};
// --------------------------------------------------------
// Type: KS_AMVPDIMINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_AMVPDIMINFO = extern struct {
    dwFieldWidth: {"kind":"UInt32"},
    dwFieldHeight: {"kind":"UInt32"},
    dwVBIWidth: {"kind":"UInt32"},
    dwVBIHeight: {"kind":"UInt32"},
    rcValidRegion: Windows.Win32.DisplayDevices.RECT,
};
// --------------------------------------------------------
// Type: KS_AMVPDATAINFO
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_AMVPDATAINFO = extern struct {
    dwSize: {"kind":"UInt32"},
    dwMicrosecondsPerField: {"kind":"UInt32"},
    amvpDimInfo: Windows.Win32.CoreAudio.KS_AMVPDIMINFO,
    dwPictAspectRatioX: {"kind":"UInt32"},
    dwPictAspectRatioY: {"kind":"UInt32"},
    bEnableDoubleClock: Windows.Win32.SystemServices.BOOL,
    bEnableVACT: Windows.Win32.SystemServices.BOOL,
    bDataIsInterlaced: Windows.Win32.SystemServices.BOOL,
    lHalfLinesOdd: {"kind":"Int32"},
    bFieldPolarityInverted: Windows.Win32.SystemServices.BOOL,
    dwNumLinesInVREF: {"kind":"UInt32"},
    lHalfLinesEven: {"kind":"Int32"},
    dwReserved1: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KS_AMVPSIZE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_AMVPSIZE = extern struct {
    dwWidth: {"kind":"UInt32"},
    dwHeight: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSVPMAXPIXELRATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSVPMAXPIXELRATE = extern struct {
    Size: Windows.Win32.CoreAudio.KS_AMVPSIZE,
    MaxPixelsPerSecond: {"kind":"UInt32"},
    Reserved: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSVPSIZE_PROP
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSVPSIZE_PROP = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    Size: Windows.Win32.CoreAudio.KS_AMVPSIZE,
};
// --------------------------------------------------------
// Type: KSVPSURFACEPARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSVPSURFACEPARAMS = extern struct {
    dwPitch: {"kind":"UInt32"},
    dwXOrigin: {"kind":"UInt32"},
    dwYOrigin: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSEVENTSETID_VPNotify
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_VPNotify = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_VPNOTIFY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_VPNOTIFY = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_VIDCAPTOSTI
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_VIDCAPTOSTI = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_VIDCAPTOSTI
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_VIDCAPTOSTI = *opaque{
};
// --------------------------------------------------------
// Type: KSPROPERTY_EXTENSION_UNIT
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_EXTENSION_UNIT = *opaque{
};
// --------------------------------------------------------
// Type: KSEVENTSETID_VPVBINotify
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSEVENTSETID_VPVBINotify = opaque {
};
// --------------------------------------------------------
// Type: KSEVENT_VPVBINOTIFY
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSEVENT_VPVBINOTIFY = *opaque{
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_AUXLine21Data
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_AUXLine21Data = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_Line21_BytePair
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_Line21_BytePair = opaque {
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_SUBTYPE_Line21_GOPPacket
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_SUBTYPE_Line21_GOPPacket = opaque {
};
// --------------------------------------------------------
// Type: KSGOP_USERDATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSGOP_USERDATA = extern struct {
    sc: {"kind":"UInt32"},
    reserved1: {"kind":"UInt32"},
    cFields: {"kind":"Byte"},
    l21Data: {"kind":"Array","child": {"kind":"SByte"}},
};
// --------------------------------------------------------
// Type: KSDATAFORMAT_TYPE_DVD_ENCRYPTED_PACK
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSDATAFORMAT_TYPE_DVD_ENCRYPTED_PACK = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_TSRateChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_TSRateChange = opaque {
};
// --------------------------------------------------------
// Type: KS_AM_PROPERTY_TS_RATE_CHANGE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KS_AM_PROPERTY_TS_RATE_CHANGE = *opaque{
};
// --------------------------------------------------------
// Type: KS_AM_SimpleRateChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_AM_SimpleRateChange = extern struct {
    StartTime: {"kind":"Int64"},
    Rate: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KS_AM_ExactRateChange
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KS_AM_ExactRateChange = extern struct {
    OutputZeroTime: {"kind":"Int64"},
    Rate: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: KSCATEGORY_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: KSCATEGORY_MULTIPLEXER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSCATEGORY_MULTIPLEXER = opaque {
};
// --------------------------------------------------------
// Type: ENCAPIPARAM_BITRATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ENCAPIPARAM_BITRATE = opaque {
};
// --------------------------------------------------------
// Type: ENCAPIPARAM_PEAK_BITRATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ENCAPIPARAM_PEAK_BITRATE = opaque {
};
// --------------------------------------------------------
// Type: ENCAPIPARAM_BITRATE_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const ENCAPIPARAM_BITRATE_MODE = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_CHANGELISTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_CHANGELISTS = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_VIDEO_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_VIDEO_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_AUDIO_ENCODER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_AUDIO_ENCODER = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_SETALLDEFAULTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_SETALLDEFAULTS = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_ALLSETTINGS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_ALLSETTINGS = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_SUPPORTSEVENTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_SUPPORTSEVENTS = opaque {
};
// --------------------------------------------------------
// Type: CODECAPI_CURRENTCHANGELIST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const CODECAPI_CURRENTCHANGELIST = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_Jack
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_Jack = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_JACK
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_JACK = *opaque{
};
// --------------------------------------------------------
// Type: EPcxConnectionType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EPcxConnectionType = *opaque{
};
// --------------------------------------------------------
// Type: EPcxGeoLocation
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EPcxGeoLocation = *opaque{
};
// --------------------------------------------------------
// Type: EPcxGenLocation
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EPcxGenLocation = *opaque{
};
// --------------------------------------------------------
// Type: EPxcPortConnection
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EPxcPortConnection = *opaque{
};
// --------------------------------------------------------
// Type: KSJACK_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSJACK_DESCRIPTION = extern struct {
    ChannelMapping: {"kind":"UInt32"},
    Color: {"kind":"UInt32"},
    ConnectionType: Windows.Win32.CoreAudio.EPcxConnectionType,
    GeoLocation: Windows.Win32.CoreAudio.EPcxGeoLocation,
    GenLocation: Windows.Win32.CoreAudio.EPcxGenLocation,
    PortConnection: Windows.Win32.CoreAudio.EPxcPortConnection,
    IsConnected: Windows.Win32.SystemServices.BOOL,
};
// --------------------------------------------------------
// Type: KSJACK_SINK_CONNECTIONTYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSJACK_SINK_CONNECTIONTYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSJACK_SINK_INFORMATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSJACK_SINK_INFORMATION = extern struct {
    ConnType: Windows.Win32.CoreAudio.KSJACK_SINK_CONNECTIONTYPE,
    ManufacturerId: {"kind":"UInt16"},
    ProductId: {"kind":"UInt16"},
    AudioLatency: {"kind":"UInt16"},
    HDCPCapable: Windows.Win32.SystemServices.BOOL,
    AICapable: Windows.Win32.SystemServices.BOOL,
    SinkDescriptionLength: {"kind":"Byte"},
    SinkDescription: {"kind":"Array","child": {"kind":"UInt16"}},
    PortId: Windows.Win32.Kernel.LUID,
};
// --------------------------------------------------------
// Type: KSJACK_DESCRIPTION2
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSJACK_DESCRIPTION2 = extern struct {
    DeviceStateInfo: {"kind":"UInt32"},
    JackCapabilities: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_AudioPosture
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AudioPosture = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AUDIOPOSTURE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AUDIOPOSTURE = *opaque{
};
// --------------------------------------------------------
// Type: AUDIOPOSTURE_PANEL_ORIENTATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDIOPOSTURE_PANEL_ORIENTATION = *opaque{
};
// --------------------------------------------------------
// Type: AUDIOPOSTURE_PANEL_POWER
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDIOPOSTURE_PANEL_POWER = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIOPOSTURE_PANEL_STATE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOPOSTURE_PANEL_STATE = extern struct {
    Power: Windows.Win32.CoreAudio.AUDIOPOSTURE_PANEL_POWER,
    Orientation: Windows.Win32.CoreAudio.AUDIOPOSTURE_PANEL_ORIENTATION,
};
// --------------------------------------------------------
// Type: AUDIOPOSTURE_MEMBER_FLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDIOPOSTURE_MEMBER_FLAGS = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIOPOSTURE_DESCRIPTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOPOSTURE_DESCRIPTION = extern struct {
    CbSize: {"kind":"UInt32"},
    MembersListCount: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_AudioBufferDuration
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AudioBufferDuration = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_AudioEngine
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AudioEngine = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AUDIOENGINE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AUDIOENGINE = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIOENGINE_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOENGINE_DESCRIPTOR = extern struct {
    nHostPinId: {"kind":"UInt32"},
    nOffloadPinId: {"kind":"UInt32"},
    nLoopbackPinId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSAUDIOENGINE_BUFFER_SIZE_RANGE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOENGINE_BUFFER_SIZE_RANGE = extern struct {
    MinBufferBytes: {"kind":"UInt32"},
    MaxBufferBytes: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: AUDIO_CURVE_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDIO_CURVE_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIOENGINE_VOLUMELEVEL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOENGINE_VOLUMELEVEL = extern struct {
    TargetVolume: {"kind":"Int32"},
    CurveType: Windows.Win32.CoreAudio.AUDIO_CURVE_TYPE,
    CurveDuration: {"kind":"UInt64"},
};
// --------------------------------------------------------
// Type: KSPROPSETID_AudioSignalProcessing
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AudioSignalProcessing = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AUDIOSIGNALPROCESSING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AUDIOSIGNALPROCESSING = *opaque{
};
// --------------------------------------------------------
// Type: KSATTRIBUTEID_AUDIOSIGNALPROCESSING_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSATTRIBUTEID_AUDIOSIGNALPROCESSING_MODE = opaque {
};
// --------------------------------------------------------
// Type: KSATTRIBUTE_AUDIOSIGNALPROCESSING_MODE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSATTRIBUTE_AUDIOSIGNALPROCESSING_MODE = extern struct {
    AttributeHeader: Windows.Win32.CoreAudio.KSATTRIBUTE,
    SignalProcessingMode: Guid,
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_DEFAULT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_DEFAULT = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_RAW
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_RAW = opaque {
};
// --------------------------------------------------------
// Type: BLUETOOTHLE_MIDI_SERVICE_UUID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const BLUETOOTHLE_MIDI_SERVICE_UUID = opaque {
};
// --------------------------------------------------------
// Type: BLUETOOTH_MIDI_DATAIO_CHARACTERISTIC
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const BLUETOOTH_MIDI_DATAIO_CHARACTERISTIC = opaque {
};
// --------------------------------------------------------
// Type: APO_CLASS_UUID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const APO_CLASS_UUID = opaque {
};
// --------------------------------------------------------
// Type: AUDIOENDPOINT_CLASS_UUID
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIOENDPOINT_CLASS_UUID = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_COMMUNICATIONS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_COMMUNICATIONS = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_SPEECH
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_SPEECH = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_NOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_NOTIFICATION = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_MEDIA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_MEDIA = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_SIGNALPROCESSINGMODE_MOVIE
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_SIGNALPROCESSINGMODE_MOVIE = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_ACOUSTIC_ECHO_CANCELLATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_ACOUSTIC_ECHO_CANCELLATION = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_NOISE_SUPPRESSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_NOISE_SUPPRESSION = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_AUTOMATIC_GAIN_CONTROL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_AUTOMATIC_GAIN_CONTROL = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_BEAMFORMING
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_BEAMFORMING = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_CONSTANT_TONE_REMOVAL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_CONSTANT_TONE_REMOVAL = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_EQUALIZER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_EQUALIZER = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_LOUDNESS_EQUALIZER
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_LOUDNESS_EQUALIZER = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_BASS_BOOST
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_BASS_BOOST = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_VIRTUAL_SURROUND
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_VIRTUAL_SURROUND = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_VIRTUAL_HEADPHONES
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_VIRTUAL_HEADPHONES = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_SPEAKER_FILL
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_SPEAKER_FILL = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_ROOM_CORRECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_ROOM_CORRECTION = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_BASS_MANAGEMENT
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_BASS_MANAGEMENT = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_ENVIRONMENTAL_EFFECTS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_ENVIRONMENTAL_EFFECTS = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_SPEAKER_PROTECTION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_SPEAKER_PROTECTION = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_SPEAKER_COMPENSATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_SPEAKER_COMPENSATION = opaque {
};
// --------------------------------------------------------
// Type: AUDIO_EFFECT_TYPE_DYNAMIC_RANGE_COMPRESSION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const AUDIO_EFFECT_TYPE_DYNAMIC_RANGE_COMPRESSION = opaque {
};
// --------------------------------------------------------
// Type: KSPROPSETID_AudioModule
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSPROPSETID_AudioModule = opaque {
};
// --------------------------------------------------------
// Type: KSPROPERTY_AUDIOMODULE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const KSPROPERTY_AUDIOMODULE = *opaque{
};
// --------------------------------------------------------
// Type: KSAUDIOMODULE_DESCRIPTOR
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOMODULE_DESCRIPTOR = extern struct {
    ClassId: Guid,
    InstanceId: {"kind":"UInt32"},
    VersionMajor: {"kind":"UInt32"},
    VersionMinor: {"kind":"UInt32"},
    Name: {"kind":"Array","child": {"kind":"UInt16"}},
};
// --------------------------------------------------------
// Type: KSAUDIOMODULE_PROPERTY
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOMODULE_PROPERTY = extern struct {
    Property: Windows.Win32.CoreAudio.KSIDENTIFIER,
    ClassId: Guid,
    InstanceId: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: KSNOTIFICATIONID_AudioModule
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const KSNOTIFICATIONID_AudioModule = opaque {
};
// --------------------------------------------------------
// Type: KSAUDIOMODULE_NOTIFICATION
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const KSAUDIOMODULE_NOTIFICATION = extern struct {
    Anonymous: Windows.Win32.CoreAudio.KSAUDIOMODULE_NOTIFICATION+_Anonymous_e__Union,
    // --------------------------------------------------------
    // Type: _Anonymous_e__Union
    // TypeLayoutAttr: explicit
    // not generating the actual code for this type because it has an explicit layout
    pub const _Anonymous_e__Union = *opaque{
        // --------------------------------------------------------
        // Type: _ProviderId_e__Struct
        // TypeLayoutAttr: sequential
        // TODO: I think this is a struct, but not sure at this point, assuming it is for now
        pub const _ProviderId_e__Struct = extern struct {
            DeviceId: Guid,
            ClassId: Guid,
            InstanceId: {"kind":"UInt32"},
            Reserved: {"kind":"UInt32"},
        };
    };
};
// --------------------------------------------------------
// Type: _AUDCLNT_BUFFERFLAGS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const _AUDCLNT_BUFFERFLAGS = *opaque{
};
// --------------------------------------------------------
// Type: AUDCLNT_STREAMOPTIONS
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AUDCLNT_STREAMOPTIONS = *opaque{
};
// --------------------------------------------------------
// Type: AudioClientProperties
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AudioClientProperties = extern struct {
    cbSize: {"kind":"UInt32"},
    bIsOffload: Windows.Win32.SystemServices.BOOL,
    eCategory: Windows.Win32.CoreAudio.AUDIO_STREAM_CATEGORY,
    Options: Windows.Win32.CoreAudio.AUDCLNT_STREAMOPTIONS,
};
// --------------------------------------------------------
// Type: IAudioClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioClient = *opaque{
    // TODO: Method 'Initialize'
    // TODO: Method 'GetBufferSize'
    // TODO: Method 'GetStreamLatency'
    // TODO: Method 'GetCurrentPadding'
    // TODO: Method 'IsFormatSupported'
    // TODO: Method 'GetMixFormat'
    // TODO: Method 'GetDevicePeriod'
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
    // TODO: Method 'Reset'
    // TODO: Method 'SetEventHandle'
    // TODO: Method 'GetService'
};
// --------------------------------------------------------
// Type: IAudioClient2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioClient2 = *opaque{
    // TODO: Method 'IsOffloadCapable'
    // TODO: Method 'SetClientProperties'
    // TODO: Method 'GetBufferSizeLimits'
};
// --------------------------------------------------------
// Type: AudioClient3ActivationParams
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AudioClient3ActivationParams = extern struct {
    tracingContextId: Guid,
};
// --------------------------------------------------------
// Type: IAudioClient3
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioClient3 = *opaque{
    // TODO: Method 'GetSharedModeEnginePeriod'
    // TODO: Method 'GetCurrentSharedModeEnginePeriod'
    // TODO: Method 'InitializeSharedAudioStream'
};
// --------------------------------------------------------
// Type: IAudioRenderClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioRenderClient = *opaque{
    // TODO: Method 'GetBuffer'
    // TODO: Method 'ReleaseBuffer'
};
// --------------------------------------------------------
// Type: IAudioCaptureClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioCaptureClient = *opaque{
    // TODO: Method 'GetBuffer'
    // TODO: Method 'ReleaseBuffer'
    // TODO: Method 'GetNextPacketSize'
};
// --------------------------------------------------------
// Type: IAudioClock
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioClock = *opaque{
    // TODO: Method 'GetFrequency'
    // TODO: Method 'GetPosition'
    // TODO: Method 'GetCharacteristics'
};
// --------------------------------------------------------
// Type: IAudioClock2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioClock2 = *opaque{
    // TODO: Method 'GetDevicePosition'
};
// --------------------------------------------------------
// Type: IAudioClockAdjustment
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioClockAdjustment = *opaque{
    // TODO: Method 'SetSampleRate'
};
// --------------------------------------------------------
// Type: ISimpleAudioVolume
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISimpleAudioVolume = *opaque{
    // TODO: Method 'SetMasterVolume'
    // TODO: Method 'GetMasterVolume'
    // TODO: Method 'SetMute'
    // TODO: Method 'GetMute'
};
// --------------------------------------------------------
// Type: IAudioStreamVolume
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioStreamVolume = *opaque{
    // TODO: Method 'GetChannelCount'
    // TODO: Method 'SetChannelVolume'
    // TODO: Method 'GetChannelVolume'
    // TODO: Method 'SetAllVolumes'
    // TODO: Method 'GetAllVolumes'
};
// --------------------------------------------------------
// Type: AMBISONICS_TYPE
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMBISONICS_TYPE = *opaque{
};
// --------------------------------------------------------
// Type: AMBISONICS_CHANNEL_ORDERING
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMBISONICS_CHANNEL_ORDERING = *opaque{
};
// --------------------------------------------------------
// Type: AMBISONICS_NORMALIZATION
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AMBISONICS_NORMALIZATION = *opaque{
};
// --------------------------------------------------------
// Type: AMBISONICS_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AMBISONICS_PARAMS = extern struct {
    u32Size: {"kind":"UInt32"},
    u32Version: {"kind":"UInt32"},
    u32Type: Windows.Win32.CoreAudio.AMBISONICS_TYPE,
    u32ChannelOrdering: Windows.Win32.CoreAudio.AMBISONICS_CHANNEL_ORDERING,
    u32Normalization: Windows.Win32.CoreAudio.AMBISONICS_NORMALIZATION,
    u32Order: {"kind":"UInt32"},
    u32NumChannels: {"kind":"UInt32"},
    pu32ChannelMap: {"kind""Ptr","child":{"kind":"UInt32"}},
};
// --------------------------------------------------------
// Type: IAudioAmbisonicsControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioAmbisonicsControl = *opaque{
    // TODO: Method 'SetData'
    // TODO: Method 'SetHeadTracking'
    // TODO: Method 'GetHeadTracking'
    // TODO: Method 'SetRotation'
};
// --------------------------------------------------------
// Type: IChannelAudioVolume
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IChannelAudioVolume = *opaque{
    // TODO: Method 'GetChannelCount'
    // TODO: Method 'SetChannelVolume'
    // TODO: Method 'GetChannelVolume'
    // TODO: Method 'SetAllVolumes'
    // TODO: Method 'GetAllVolumes'
};
// --------------------------------------------------------
// Type: AudioObjectType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AudioObjectType = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioObjectRenderStreamActivationParams
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioObjectRenderStreamActivationParams = *opaque{
};
// --------------------------------------------------------
// Type: IAudioFormatEnumerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioFormatEnumerator = *opaque{
    // TODO: Method 'GetCount'
    // TODO: Method 'GetFormat'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectBase
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectBase = *opaque{
    // TODO: Method 'GetBuffer'
    // TODO: Method 'SetEndOfStream'
    // TODO: Method 'IsActive'
    // TODO: Method 'GetAudioObjectType'
};
// --------------------------------------------------------
// Type: ISpatialAudioObject
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObject = *opaque{
    // TODO: Method 'SetPosition'
    // TODO: Method 'SetVolume'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectRenderStreamBase
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectRenderStreamBase = *opaque{
    // TODO: Method 'GetAvailableDynamicObjectCount'
    // TODO: Method 'GetService'
    // TODO: Method 'Start'
    // TODO: Method 'Stop'
    // TODO: Method 'Reset'
    // TODO: Method 'BeginUpdatingAudioObjects'
    // TODO: Method 'EndUpdatingAudioObjects'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectRenderStream
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectRenderStream = *opaque{
    // TODO: Method 'ActivateSpatialAudioObject'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectRenderStreamNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectRenderStreamNotify = *opaque{
    // TODO: Method 'OnAvailableDynamicObjectCountChange'
};
// --------------------------------------------------------
// Type: ISpatialAudioClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioClient = *opaque{
    // TODO: Method 'GetStaticObjectPosition'
    // TODO: Method 'GetNativeStaticObjectTypeMask'
    // TODO: Method 'GetMaxDynamicObjectCount'
    // TODO: Method 'GetSupportedAudioObjectFormatEnumerator'
    // TODO: Method 'GetMaxFrameCount'
    // TODO: Method 'IsAudioObjectFormatSupported'
    // TODO: Method 'IsSpatialAudioStreamAvailable'
    // TODO: Method 'ActivateSpatialAudioStream'
};
// --------------------------------------------------------
// Type: SpatialAudioClientActivationParams
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const SpatialAudioClientActivationParams = extern struct {
    tracingContextId: Guid,
    appId: Guid,
    majorVersion: {"kind":"Int32"},
    minorVersion1: {"kind":"Int32"},
    minorVersion2: {"kind":"Int32"},
    minorVersion3: {"kind":"Int32"},
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDirectivityType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SpatialAudioHrtfDirectivityType = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfEnvironmentType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SpatialAudioHrtfEnvironmentType = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDistanceDecayType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SpatialAudioHrtfDistanceDecayType = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDirectivity
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioHrtfDirectivity = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDirectivityCardioid
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioHrtfDirectivityCardioid = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDirectivityCone
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioHrtfDirectivityCone = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDirectivityUnion
// TypeLayoutAttr: explicit
// not generating the actual code for this type because it has an explicit layout
pub const SpatialAudioHrtfDirectivityUnion = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfDistanceDecay
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioHrtfDistanceDecay = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioHrtfActivationParams
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioHrtfActivationParams = *opaque{
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectForHrtf
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectForHrtf = *opaque{
    // TODO: Method 'SetPosition'
    // TODO: Method 'SetGain'
    // TODO: Method 'SetOrientation'
    // TODO: Method 'SetEnvironment'
    // TODO: Method 'SetDistanceDecay'
    // TODO: Method 'SetDirectivity'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectRenderStreamForHrtf
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectRenderStreamForHrtf = *opaque{
    // TODO: Method 'ActivateSpatialAudioObjectForHrtf'
};
// --------------------------------------------------------
// Type: IAudioEndpointFormatControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointFormatControl = *opaque{
    // TODO: Method 'ResetToDefault'
};
// --------------------------------------------------------
// Type: MMDeviceEnumerator
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const MMDeviceEnumerator = opaque {
};
// --------------------------------------------------------
// Type: DIRECTX_AUDIO_ACTIVATION_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const DIRECTX_AUDIO_ACTIVATION_PARAMS = extern struct {
    cbDirectXAudioActivationParams: {"kind":"UInt32"},
    guidAudioSession: Guid,
    dwAudioStreamFlags: {"kind":"UInt32"},
};
// --------------------------------------------------------
// Type: EDataFlow
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EDataFlow = *opaque{
};
// --------------------------------------------------------
// Type: ERole
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ERole = *opaque{
};
// --------------------------------------------------------
// Type: EndpointFormFactor
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const EndpointFormFactor = *opaque{
};
// --------------------------------------------------------
// Type: IMMNotificationClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMNotificationClient = *opaque{
    // TODO: Method 'OnDeviceStateChanged'
    // TODO: Method 'OnDeviceAdded'
    // TODO: Method 'OnDeviceRemoved'
    // TODO: Method 'OnDefaultDeviceChanged'
    // TODO: Method 'OnPropertyValueChanged'
};
// --------------------------------------------------------
// Type: IMMDevice
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMDevice = *opaque{
    // TODO: Method 'Activate'
    // TODO: Method 'OpenPropertyStore'
    // TODO: Method 'GetId'
    // TODO: Method 'GetState'
};
// --------------------------------------------------------
// Type: IMMDeviceCollection
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMDeviceCollection = *opaque{
    // TODO: Method 'GetCount'
    // TODO: Method 'Item'
};
// --------------------------------------------------------
// Type: IMMEndpoint
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMEndpoint = *opaque{
    // TODO: Method 'GetDataFlow'
};
// --------------------------------------------------------
// Type: IMMDeviceEnumerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMDeviceEnumerator = *opaque{
    // TODO: Method 'EnumAudioEndpoints'
    // TODO: Method 'GetDefaultAudioEndpoint'
    // TODO: Method 'GetDevice'
    // TODO: Method 'RegisterEndpointNotificationCallback'
    // TODO: Method 'UnregisterEndpointNotificationCallback'
};
// --------------------------------------------------------
// Type: IMMDeviceActivator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IMMDeviceActivator = *opaque{
    // TODO: Method 'Activate'
};
// --------------------------------------------------------
// Type: IActivateAudioInterfaceCompletionHandler
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IActivateAudioInterfaceCompletionHandler = *opaque{
    // TODO: Method 'ActivateCompleted'
};
// --------------------------------------------------------
// Type: IActivateAudioInterfaceAsyncOperation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IActivateAudioInterfaceAsyncOperation = *opaque{
    // TODO: Method 'GetActivateResult'
};
// --------------------------------------------------------
// Type: AudioExtensionParams
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AudioExtensionParams = extern struct {
    AddPageParam: Windows.Win32.WindowsAndMessaging.LPARAM,
    pEndpoint: Windows.Win32.CoreAudio.IMMDevice,
    pPnpInterface: Windows.Win32.CoreAudio.IMMDevice,
    pPnpDevnode: Windows.Win32.CoreAudio.IMMDevice,
};
// --------------------------------------------------------
// Type: __MIDL___MIDL_itf_audioengineendpoint_0000_0000_0001
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const __MIDL___MIDL_itf_audioengineendpoint_0000_0000_0001 = *opaque{
};
// --------------------------------------------------------
// Type: AUDIO_ENDPOINT_SHARED_CREATE_PARAMS
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AUDIO_ENDPOINT_SHARED_CREATE_PARAMS = extern struct {
    u32Size: {"kind":"UInt32"},
    u32TSSessionId: {"kind":"UInt32"},
    targetEndpointConnectorType: Windows.Win32.CoreAudio.__MIDL___MIDL_itf_audioengineendpoint_0000_0000_0001,
    wfxDeviceFormat: Windows.Win32.Multimedia.WAVEFORMATEX,
};
// --------------------------------------------------------
// Type: IAudioEndpointOffloadStreamVolume
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointOffloadStreamVolume = *opaque{
    // TODO: Method 'GetVolumeChannelCount'
    // TODO: Method 'SetChannelVolumes'
    // TODO: Method 'GetChannelVolumes'
};
// --------------------------------------------------------
// Type: IAudioEndpointOffloadStreamMute
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointOffloadStreamMute = *opaque{
    // TODO: Method 'SetMute'
    // TODO: Method 'GetMute'
};
// --------------------------------------------------------
// Type: IAudioEndpointOffloadStreamMeter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointOffloadStreamMeter = *opaque{
    // TODO: Method 'GetMeterChannelCount'
    // TODO: Method 'GetMeteringData'
};
// --------------------------------------------------------
// Type: IAudioEndpointLastBufferControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointLastBufferControl = *opaque{
    // TODO: Method 'IsLastBufferControlSupported'
    // TODO: Method 'ReleaseOutputDataPointerForLastBuffer'
};
// --------------------------------------------------------
// Type: IAudioLfxControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioLfxControl = *opaque{
    // TODO: Method 'SetLocalEffectsState'
    // TODO: Method 'GetLocalEffectsState'
};
// --------------------------------------------------------
// Type: IHardwareAudioEngineBase
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IHardwareAudioEngineBase = *opaque{
    // TODO: Method 'GetAvailableOffloadConnectorCount'
    // TODO: Method 'GetEngineFormat'
    // TODO: Method 'SetEngineDeviceFormat'
    // TODO: Method 'SetGfxState'
    // TODO: Method 'GetGfxState'
};
// --------------------------------------------------------
// Type: DEVINTERFACE_AUDIOENDPOINTPLUGIN
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DEVINTERFACE_AUDIOENDPOINTPLUGIN = opaque {
};
// --------------------------------------------------------
// Type: DeviceTopology
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
// a struct with no fields? this means Zig can't use it in extern structs, so we're making it opaque
pub const DeviceTopology = opaque {
};
// --------------------------------------------------------
// Type: DataFlow
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const DataFlow = *opaque{
};
// --------------------------------------------------------
// Type: PartType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const PartType = *opaque{
};
// --------------------------------------------------------
// Type: ConnectorType
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const ConnectorType = *opaque{
};
// --------------------------------------------------------
// Type: IPerChannelDbLevel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPerChannelDbLevel = *opaque{
    // TODO: Method 'GetChannelCount'
    // TODO: Method 'GetLevelRange'
    // TODO: Method 'GetLevel'
    // TODO: Method 'SetLevel'
    // TODO: Method 'SetLevelUniform'
    // TODO: Method 'SetLevelAllChannels'
};
// --------------------------------------------------------
// Type: IAudioVolumeLevel
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioVolumeLevel = *opaque{
};
// --------------------------------------------------------
// Type: IAudioChannelConfig
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioChannelConfig = *opaque{
    // TODO: Method 'SetChannelConfig'
    // TODO: Method 'GetChannelConfig'
};
// --------------------------------------------------------
// Type: IAudioLoudness
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioLoudness = *opaque{
    // TODO: Method 'GetEnabled'
    // TODO: Method 'SetEnabled'
};
// --------------------------------------------------------
// Type: IAudioInputSelector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioInputSelector = *opaque{
    // TODO: Method 'GetSelection'
    // TODO: Method 'SetSelection'
};
// --------------------------------------------------------
// Type: IAudioOutputSelector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioOutputSelector = *opaque{
    // TODO: Method 'GetSelection'
    // TODO: Method 'SetSelection'
};
// --------------------------------------------------------
// Type: IAudioMute
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioMute = *opaque{
    // TODO: Method 'SetMute'
    // TODO: Method 'GetMute'
};
// --------------------------------------------------------
// Type: IAudioBass
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioBass = *opaque{
};
// --------------------------------------------------------
// Type: IAudioMidrange
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioMidrange = *opaque{
};
// --------------------------------------------------------
// Type: IAudioTreble
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioTreble = *opaque{
};
// --------------------------------------------------------
// Type: IAudioAutoGainControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioAutoGainControl = *opaque{
    // TODO: Method 'GetEnabled'
    // TODO: Method 'SetEnabled'
};
// --------------------------------------------------------
// Type: IAudioPeakMeter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioPeakMeter = *opaque{
    // TODO: Method 'GetChannelCount'
    // TODO: Method 'GetLevel'
};
// --------------------------------------------------------
// Type: IDeviceSpecificProperty
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDeviceSpecificProperty = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'GetValue'
    // TODO: Method 'SetValue'
    // TODO: Method 'Get4BRange'
};
// --------------------------------------------------------
// Type: IKsFormatSupport
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsFormatSupport = *opaque{
    // TODO: Method 'IsFormatSupported'
    // TODO: Method 'GetDevicePreferredFormat'
};
// --------------------------------------------------------
// Type: IKsJackDescription
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsJackDescription = *opaque{
    // TODO: Method 'GetJackCount'
    // TODO: Method 'GetJackDescription'
};
// --------------------------------------------------------
// Type: IKsJackDescription2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsJackDescription2 = *opaque{
    // TODO: Method 'GetJackCount'
    // TODO: Method 'GetJackDescription2'
};
// --------------------------------------------------------
// Type: IKsJackSinkInformation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsJackSinkInformation = *opaque{
    // TODO: Method 'GetJackSinkInformation'
};
// --------------------------------------------------------
// Type: IKsJackContainerId
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IKsJackContainerId = *opaque{
    // TODO: Method 'GetJackContainerId'
};
// --------------------------------------------------------
// Type: IPartsList
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPartsList = *opaque{
    // TODO: Method 'GetCount'
    // TODO: Method 'GetPart'
};
// --------------------------------------------------------
// Type: IPart
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IPart = *opaque{
    // TODO: Method 'GetName'
    // TODO: Method 'GetLocalId'
    // TODO: Method 'GetGlobalId'
    // TODO: Method 'GetPartType'
    // TODO: Method 'GetSubType'
    // TODO: Method 'GetControlInterfaceCount'
    // TODO: Method 'GetControlInterface'
    // TODO: Method 'EnumPartsIncoming'
    // TODO: Method 'EnumPartsOutgoing'
    // TODO: Method 'GetTopologyObject'
    // TODO: Method 'Activate'
    // TODO: Method 'RegisterControlChangeCallback'
    // TODO: Method 'UnregisterControlChangeCallback'
};
// --------------------------------------------------------
// Type: IConnector
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IConnector = *opaque{
    // TODO: Method 'GetType'
    // TODO: Method 'GetDataFlow'
    // TODO: Method 'ConnectTo'
    // TODO: Method 'Disconnect'
    // TODO: Method 'IsConnected'
    // TODO: Method 'GetConnectedTo'
    // TODO: Method 'GetConnectorIdConnectedTo'
    // TODO: Method 'GetDeviceIdConnectedTo'
};
// --------------------------------------------------------
// Type: ISubunit
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISubunit = *opaque{
};
// --------------------------------------------------------
// Type: IControlInterface
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IControlInterface = *opaque{
    // TODO: Method 'GetName'
    // TODO: Method 'GetIID'
};
// --------------------------------------------------------
// Type: IControlChangeNotify
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IControlChangeNotify = *opaque{
    // TODO: Method 'OnNotify'
};
// --------------------------------------------------------
// Type: IDeviceTopology
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IDeviceTopology = *opaque{
    // TODO: Method 'GetConnectorCount'
    // TODO: Method 'GetConnector'
    // TODO: Method 'GetSubunitCount'
    // TODO: Method 'GetSubunit'
    // TODO: Method 'GetPartById'
    // TODO: Method 'GetDeviceId'
    // TODO: Method 'GetSignalPath'
};
// --------------------------------------------------------
// Type: AUDIO_VOLUME_NOTIFICATION_DATA
// TypeLayoutAttr: sequential
// TODO: I think this is a struct, but not sure at this point, assuming it is for now
pub const AUDIO_VOLUME_NOTIFICATION_DATA = extern struct {
    guidEventContext: Guid,
    bMuted: Windows.Win32.SystemServices.BOOL,
    fMasterVolume: {"kind":"Single"},
    nChannels: {"kind":"UInt32"},
    afChannelVolumes: {"kind":"Array","child": {"kind":"Single"}},
};
// --------------------------------------------------------
// Type: IAudioEndpointVolumeCallback
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointVolumeCallback = *opaque{
    // TODO: Method 'OnNotify'
};
// --------------------------------------------------------
// Type: IAudioEndpointVolume
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointVolume = *opaque{
    // TODO: Method 'RegisterControlChangeNotify'
    // TODO: Method 'UnregisterControlChangeNotify'
    // TODO: Method 'GetChannelCount'
    // TODO: Method 'SetMasterVolumeLevel'
    // TODO: Method 'SetMasterVolumeLevelScalar'
    // TODO: Method 'GetMasterVolumeLevel'
    // TODO: Method 'GetMasterVolumeLevelScalar'
    // TODO: Method 'SetChannelVolumeLevel'
    // TODO: Method 'SetChannelVolumeLevelScalar'
    // TODO: Method 'GetChannelVolumeLevel'
    // TODO: Method 'GetChannelVolumeLevelScalar'
    // TODO: Method 'SetMute'
    // TODO: Method 'GetMute'
    // TODO: Method 'GetVolumeStepInfo'
    // TODO: Method 'VolumeStepUp'
    // TODO: Method 'VolumeStepDown'
    // TODO: Method 'QueryHardwareSupport'
    // TODO: Method 'GetVolumeRange'
};
// --------------------------------------------------------
// Type: IAudioEndpointVolumeEx
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioEndpointVolumeEx = *opaque{
    // TODO: Method 'GetVolumeRangeChannel'
};
// --------------------------------------------------------
// Type: IAudioMeterInformation
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioMeterInformation = *opaque{
    // TODO: Method 'GetPeakValue'
    // TODO: Method 'GetMeteringChannelCount'
    // TODO: Method 'GetChannelsPeakValues'
    // TODO: Method 'QueryHardwareSupport'
};
// --------------------------------------------------------
// Type: AudioSessionDisconnectReason
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const AudioSessionDisconnectReason = *opaque{
};
// --------------------------------------------------------
// Type: IAudioSessionEvents
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionEvents = *opaque{
    // TODO: Method 'OnDisplayNameChanged'
    // TODO: Method 'OnIconPathChanged'
    // TODO: Method 'OnSimpleVolumeChanged'
    // TODO: Method 'OnChannelVolumeChanged'
    // TODO: Method 'OnGroupingParamChanged'
    // TODO: Method 'OnStateChanged'
    // TODO: Method 'OnSessionDisconnected'
};
// --------------------------------------------------------
// Type: IAudioSessionControl
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionControl = *opaque{
    // TODO: Method 'GetState'
    // TODO: Method 'GetDisplayName'
    // TODO: Method 'SetDisplayName'
    // TODO: Method 'GetIconPath'
    // TODO: Method 'SetIconPath'
    // TODO: Method 'GetGroupingParam'
    // TODO: Method 'SetGroupingParam'
    // TODO: Method 'RegisterAudioSessionNotification'
    // TODO: Method 'UnregisterAudioSessionNotification'
};
// --------------------------------------------------------
// Type: IAudioSessionControl2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionControl2 = *opaque{
    // TODO: Method 'GetSessionIdentifier'
    // TODO: Method 'GetSessionInstanceIdentifier'
    // TODO: Method 'GetProcessId'
    // TODO: Method 'IsSystemSoundsSession'
    // TODO: Method 'SetDuckingPreference'
};
// --------------------------------------------------------
// Type: IAudioSessionManager
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionManager = *opaque{
    // TODO: Method 'GetAudioSessionControl'
    // TODO: Method 'GetSimpleAudioVolume'
};
// --------------------------------------------------------
// Type: IAudioVolumeDuckNotification
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioVolumeDuckNotification = *opaque{
    // TODO: Method 'OnVolumeDuckNotification'
    // TODO: Method 'OnVolumeUnduckNotification'
};
// --------------------------------------------------------
// Type: IAudioSessionNotification
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionNotification = *opaque{
    // TODO: Method 'OnSessionCreated'
};
// --------------------------------------------------------
// Type: IAudioSessionEnumerator
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionEnumerator = *opaque{
    // TODO: Method 'GetCount'
    // TODO: Method 'GetSession'
};
// --------------------------------------------------------
// Type: IAudioSessionManager2
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const IAudioSessionManager2 = *opaque{
    // TODO: Method 'GetSessionEnumerator'
    // TODO: Method 'RegisterSessionNotification'
    // TODO: Method 'UnregisterSessionNotification'
    // TODO: Method 'RegisterDuckNotification'
    // TODO: Method 'UnregisterDuckNotification'
};
// --------------------------------------------------------
// Type: SpatialAudioMetadataWriterOverflowMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SpatialAudioMetadataWriterOverflowMode = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioMetadataCopyMode
// TypeLayoutAttr: auto
// not generating the actual code for this type because it has an 'auto' layout (follow up on https://github.com/microsoft/win32metadata/issues/188)
pub const SpatialAudioMetadataCopyMode = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioMetadataItemsInfo
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioMetadataItemsInfo = *opaque{
};
// --------------------------------------------------------
// Type: SpatialAudioObjectRenderStreamForMetadataActivationParams
// TypeLayoutAttr: sequential
// not generating the actual code for this type because it has a non-default layout IsDefault=False PackingSize=1 Size=0
pub const SpatialAudioObjectRenderStreamForMetadataActivationParams = *opaque{
};
// --------------------------------------------------------
// Type: ISpatialAudioMetadataItems
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioMetadataItems = *opaque{
    // TODO: Method 'GetFrameCount'
    // TODO: Method 'GetItemCount'
    // TODO: Method 'GetMaxItemCount'
    // TODO: Method 'GetMaxValueBufferLength'
    // TODO: Method 'GetInfo'
};
// --------------------------------------------------------
// Type: ISpatialAudioMetadataWriter
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioMetadataWriter = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'WriteNextItem'
    // TODO: Method 'WriteNextItemCommand'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ISpatialAudioMetadataReader
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioMetadataReader = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'ReadNextItem'
    // TODO: Method 'ReadNextItemCommand'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ISpatialAudioMetadataCopier
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioMetadataCopier = *opaque{
    // TODO: Method 'Open'
    // TODO: Method 'CopyMetadataForFrames'
    // TODO: Method 'Close'
};
// --------------------------------------------------------
// Type: ISpatialAudioMetadataItemsBuffer
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioMetadataItemsBuffer = *opaque{
    // TODO: Method 'AttachToBuffer'
    // TODO: Method 'AttachToPopulatedBuffer'
    // TODO: Method 'DetachBuffer'
};
// --------------------------------------------------------
// Type: ISpatialAudioMetadataClient
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioMetadataClient = *opaque{
    // TODO: Method 'ActivateSpatialAudioMetadataItems'
    // TODO: Method 'GetSpatialAudioMetadataItemsBufferLength'
    // TODO: Method 'ActivateSpatialAudioMetadataWriter'
    // TODO: Method 'ActivateSpatialAudioMetadataCopier'
    // TODO: Method 'ActivateSpatialAudioMetadataReader'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectForMetadataCommands
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectForMetadataCommands = *opaque{
    // TODO: Method 'WriteNextMetadataCommand'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectForMetadataItems
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectForMetadataItems = *opaque{
    // TODO: Method 'GetSpatialAudioMetadataItems'
};
// --------------------------------------------------------
// Type: ISpatialAudioObjectRenderStreamForMetadata
// TypeLayoutAttr: auto
// not generating the actual code for this type because its an abstract type (probably a COM type?)
pub const ISpatialAudioObjectRenderStreamForMetadata = *opaque{
    // TODO: Method 'ActivateSpatialAudioObjectForMetadataCommands'
    // TODO: Method 'ActivateSpatialAudioObjectForMetadataItems'
};
],

"func_definitions": [

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciSendCommandA(
    mciId: {"kind":"UInt32"},
    uMsg: {"kind":"UInt32"},
    dwParam1: {"kind":"UIntPtr"},
    dwParam2: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciSendCommandW(
    mciId: {"kind":"UInt32"},
    uMsg: {"kind":"UInt32"},
    dwParam1: {"kind":"UIntPtr"},
    dwParam2: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciSendStringA(
    lpstrCommand: {"kind""Ptr","child":{"kind":"SByte"}},
    lpstrReturnString: {"kind""Ptr","child":{"kind":"SByte"}},
    uReturnLength: {"kind":"UInt32"},
    hwndCallback: Windows.Win32.WindowsAndMessaging.HWND,

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciSendStringW(
    lpstrCommand: {"kind""Ptr","child":{"kind":"UInt16"}},
    lpstrReturnString: {"kind""Ptr","child":{"kind":"UInt16"}},
    uReturnLength: {"kind":"UInt32"},
    hwndCallback: Windows.Win32.WindowsAndMessaging.HWND,

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetDeviceIDA(
    pszDevice: {"kind""Ptr","child":{"kind":"SByte"}},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetDeviceIDW(
    pszDevice: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetDeviceIDFromElementIDA(
    dwElementID: {"kind":"UInt32"},
    lpstrType: {"kind""Ptr","child":{"kind":"SByte"}},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetDeviceIDFromElementIDW(
    dwElementID: {"kind":"UInt32"},
    lpstrType: {"kind""Ptr","child":{"kind":"UInt16"}},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetErrorStringA(
    mcierr: {"kind":"UInt32"},
    pszText: {"kind""Ptr","child":{"kind":"SByte"}},
    cchText: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetErrorStringW(
    mcierr: {"kind":"UInt32"},
    pszText: {"kind""Ptr","child":{"kind":"UInt16"}},
    cchText: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciSetYieldProc(
    mciId: {"kind":"UInt32"},
    fpYieldProc: Windows.Win32.CoreAudio.YIELDPROC,
    dwYieldData: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetCreatorTask(
    mciId: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetYieldProc(
    mciId: {"kind":"UInt32"},
    pdwYieldData: {"kind""Ptr","child":{"kind":"UInt32"}},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciGetDriverData(
    wDeviceID: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciLoadCommandResource(
    hInstance: Windows.Win32.SystemServices.HANDLE,
    lpResName: {"kind""Ptr","child":{"kind":"UInt16"}},
    wType: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciSetDriverData(
    wDeviceID: {"kind":"UInt32"},
    dwData: {"kind":"UIntPtr"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciDriverYield(
    wDeviceID: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciDriverNotify(
    hwndCallback: Windows.Win32.SystemServices.HANDLE,
    wDeviceID: {"kind":"UInt32"},
    uStatus: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "WINMM" fn mciFreeCommandResource(
    wTable: {"kind":"UInt32"},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreateAllocator(
    ConnectionHandle: Windows.Win32.SystemServices.HANDLE,
    AllocatorFraming: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSALLOCATOR_FRAMING},
    AllocatorHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreateClock(
    ConnectionHandle: Windows.Win32.SystemServices.HANDLE,
    ClockCreate: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSCLOCK_CREATE},
    ClockHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreatePin(
    FilterHandle: Windows.Win32.SystemServices.HANDLE,
    Connect: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSPIN_CONNECT},
    DesiredAccess: {"kind":"UInt32"},
    ConnectionHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreateTopologyNode(
    ParentHandle: Windows.Win32.SystemServices.HANDLE,
    NodeCreate: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSNODE_CREATE},
    DesiredAccess: {"kind":"UInt32"},
    NodeHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreateAllocator2(
    ConnectionHandle: Windows.Win32.SystemServices.HANDLE,
    AllocatorFraming: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSALLOCATOR_FRAMING},
    AllocatorHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreateClock2(
    ConnectionHandle: Windows.Win32.SystemServices.HANDLE,
    ClockCreate: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSCLOCK_CREATE},
    ClockHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreatePin2(
    FilterHandle: Windows.Win32.SystemServices.HANDLE,
    Connect: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSPIN_CONNECT},
    DesiredAccess: {"kind":"UInt32"},
    ConnectionHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "ksuser" fn KsCreateTopologyNode2(
    ParentHandle: Windows.Win32.SystemServices.HANDLE,
    NodeCreate: {"kind""Ptr","child":Windows.Win32.CoreAudio.KSNODE_CREATE},
    DesiredAccess: {"kind":"UInt32"},
    NodeHandle: {"kind""Ptr","child":{"kind":"IntPtr"}},

// set_last_errror=False (can and should we use this?)
pub extern "MMDevAPI" fn ActivateAudioInterfaceAsync(
    deviceInterfacePath: {"kind""Ptr","child":{"kind":"UInt16"}},
    riid: {"kind""Ptr","child":Guid},
    activationParams: {"kind""Ptr","child":Windows.Win32.StructuredStorage.PROPVARIANT},
    completionHandler: Windows.Win32.CoreAudio.IActivateAudioInterfaceCompletionHandler,
    activationOperation: {"kind""Ptr","child":Windows.Win32.CoreAudio.IActivateAudioInterfaceAsyncOperation},
],

"unicode_aliases": [
     "MCI_OPEN_PARMS"
     "MCI_INFO_PARMS"
     "MCI_SYSINFO_PARMS"
     "MCI_SAVE_PARMS"
     "MCI_LOAD_PARMS"
     "MCI_VD_ESCAPE_PARMS"
     "MCI_WAVE_OPEN_PARMS"
     "MCI_ANIM_OPEN_PARMS"
     "MCI_ANIM_WINDOW_PARMS"
     "MCI_OVLY_OPEN_PARMS"
     "MCI_OVLY_WINDOW_PARMS"
     "MCI_OVLY_SAVE_PARMS"
     "MCI_OVLY_LOAD_PARMS"
     "mciSendCommand"
     "mciSendString"
     "mciGetDeviceID"
     "mciGetDeviceIDFromElementID"
     "mciGetErrorString"
]}
